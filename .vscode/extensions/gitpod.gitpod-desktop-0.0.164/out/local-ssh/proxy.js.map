{"version":3,"file":"local-ssh/proxy.js","mappings":"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","sources":[".././node_modules/@grpc/grpc-js/build/src/admin.js",".././node_modules/@grpc/grpc-js/build/src/backoff-timeout.js",".././node_modules/@grpc/grpc-js/build/src/call-credentials.js",".././node_modules/@grpc/grpc-js/build/src/call-interface.js",".././node_modules/@grpc/grpc-js/build/src/call-number.js",".././node_modules/@grpc/grpc-js/build/src/call.js",".././node_modules/@grpc/grpc-js/build/src/channel-credentials.js",".././node_modules/@grpc/grpc-js/build/src/channel-options.js",".././node_modules/@grpc/grpc-js/build/src/channel.js",".././node_modules/@grpc/grpc-js/build/src/channelz.js",".././node_modules/@grpc/grpc-js/build/src/client-interceptors.js",".././node_modules/@grpc/grpc-js/build/src/client.js",".././node_modules/@grpc/grpc-js/build/src/compression-algorithms.js",".././node_modules/@grpc/grpc-js/build/src/compression-filter.js",".././node_modules/@grpc/grpc-js/build/src/connectivity-state.js",".././node_modules/@grpc/grpc-js/build/src/constants.js",".././node_modules/@grpc/grpc-js/build/src/control-plane-status.js",".././node_modules/@grpc/grpc-js/build/src/deadline.js",".././node_modules/@grpc/grpc-js/build/src/duration.js",".././node_modules/@grpc/grpc-js/build/src/error.js",".././node_modules/@grpc/grpc-js/build/src/experimental.js",".././node_modules/@grpc/grpc-js/build/src/filter-stack.js",".././node_modules/@grpc/grpc-js/build/src/filter.js",".././node_modules/@grpc/grpc-js/build/src/http_proxy.js",".././node_modules/@grpc/grpc-js/build/src/index.js",".././node_modules/@grpc/grpc-js/build/src/internal-channel.js",".././node_modules/@grpc/grpc-js/build/src/load-balancer-child-handler.js",".././node_modules/@grpc/grpc-js/build/src/load-balancer-outlier-detection.js",".././node_modules/@grpc/grpc-js/build/src/load-balancer-pick-first.js",".././node_modules/@grpc/grpc-js/build/src/load-balancer-round-robin.js",".././node_modules/@grpc/grpc-js/build/src/load-balancer.js",".././node_modules/@grpc/grpc-js/build/src/load-balancing-call.js",".././node_modules/@grpc/grpc-js/build/src/logging.js",".././node_modules/@grpc/grpc-js/build/src/make-client.js",".././node_modules/@grpc/grpc-js/build/src/max-message-size-filter.js",".././node_modules/@grpc/grpc-js/build/src/metadata.js",".././node_modules/@grpc/grpc-js/build/src/picker.js",".././node_modules/@grpc/grpc-js/build/src/resolver-dns.js",".././node_modules/@grpc/grpc-js/build/src/resolver-ip.js",".././node_modules/@grpc/grpc-js/build/src/resolver-uds.js",".././node_modules/@grpc/grpc-js/build/src/resolver.js",".././node_modules/@grpc/grpc-js/build/src/resolving-call.js",".././node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js",".././node_modules/@grpc/grpc-js/build/src/retrying-call.js",".././node_modules/@grpc/grpc-js/build/src/server-call.js",".././node_modules/@grpc/grpc-js/build/src/server-credentials.js",".././node_modules/@grpc/grpc-js/build/src/server.js",".././node_modules/@grpc/grpc-js/build/src/service-config.js",".././node_modules/@grpc/grpc-js/build/src/status-builder.js",".././node_modules/@grpc/grpc-js/build/src/stream-decoder.js",".././node_modules/@grpc/grpc-js/build/src/subchannel-address.js",".././node_modules/@grpc/grpc-js/build/src/subchannel-call.js",".././node_modules/@grpc/grpc-js/build/src/subchannel-interface.js",".././node_modules/@grpc/grpc-js/build/src/subchannel-pool.js",".././node_modules/@grpc/grpc-js/build/src/subchannel.js",".././node_modules/@grpc/grpc-js/build/src/tls-helpers.js",".././node_modules/@grpc/grpc-js/build/src/transport.js",".././node_modules/@grpc/grpc-js/build/src/uri-parser.js",".././node_modules/@grpc/proto-loader/build/src/index.js",".././node_modules/@grpc/proto-loader/build/src/util.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/ext/descriptor/index.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/index.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/common.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/converter.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/decoder.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/encoder.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/enum.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/field.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/index-light.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/index-minimal.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/index.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/mapfield.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/message.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/method.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/namespace.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/object.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/oneof.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/parse.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/reader.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/reader_buffer.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/root.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/roots.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/rpc.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/rpc/service.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/service.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/tokenize.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/type.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/types.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/util.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/util/longbits.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/util/minimal.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/verifier.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/wrappers.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/writer.js",".././node_modules/@grpc/proto-loader/node_modules/protobufjs/src/writer_buffer.js",".././node_modules/@lukeed/uuid/dist/index.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/defaultKeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/importExport.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/index.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/jsonWebKeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/keyData.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/keyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/pkcs1KeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/pkcs8KeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/publicKeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-keys/sec1KeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/events/forwardedPort.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/events/forwardedPortEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/events/forwardedPortsCollection.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/index.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/ipAddressConversions.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/messages/portForwardChannelOpenMessage.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/messages/portForwardRequestMessage.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/messages/portForwardSuccessMessage.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/portForwardMessageFactory.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/localPortForwarder.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/portForwardingService.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/remotePortConnector.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/remotePortForwarder.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/remotePortStreamer.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/services/streamForwarder.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/sshClient.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/sshServer.js",".././node_modules/@microsoft/dev-tunnels-ssh-tcp/tcpListenerFactory.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/ecdsaCurves.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/encryptionAlgorithm.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/hmacAlgorithm.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/keyExchangeAlgorithm.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/keyFormatters.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeECDsa.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeEncryption.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeHmac.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeKeyExchange.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeRandom.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/node/nodeRsa.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/publicKeyAlgorithm.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/sshAlgorithms.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/jsonWebKeyFormatter.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webECDsa.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webEncryption.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webHmac.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webKeyExchange.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webRandom.js",".././node_modules/@microsoft/dev-tunnels-ssh/algorithms/web/webRsa.js",".././node_modules/@microsoft/dev-tunnels-ssh/errors.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshAuthenticatingEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshChannelClosedEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshChannelOpeningEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshExtendedDataEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshRequestEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/events/sshSessionClosedEventArgs.js",".././node_modules/@microsoft/dev-tunnels-ssh/index.js",".././node_modules/@microsoft/dev-tunnels-ssh/io/bigInt.js",".././node_modules/@microsoft/dev-tunnels-ssh/io/derData.js",".././node_modules/@microsoft/dev-tunnels-ssh/io/sshData.js",".././node_modules/@microsoft/dev-tunnels-ssh/io/sshProtocol.js",".././node_modules/@microsoft/dev-tunnels-ssh/messages/authenticationMessages.js",".././node_modules/@microsoft/dev-tunnels-ssh/messages/connectionMessages.js",".././node_modules/@microsoft/dev-tunnels-ssh/messages/kexMessages.js",".././node_modules/@microsoft/dev-tunnels-ssh/messages/sshMessage.js",".././node_modules/@microsoft/dev-tunnels-ssh/messages/transportMessages.js",".././node_modules/@microsoft/dev-tunnels-ssh/metrics/channelMetrics.js",".././node_modules/@microsoft/dev-tunnels-ssh/metrics/sessionContour.js",".././node_modules/@microsoft/dev-tunnels-ssh/metrics/sessionMetrics.js",".././node_modules/@microsoft/dev-tunnels-ssh/multiChannelStream.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/cancellation.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/events.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/is.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/linkedMap.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/main.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/messageReader.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/messageWriter.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/messages.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/pipeSupport.js",".././node_modules/@microsoft/dev-tunnels-ssh/node_modules/vscode-jsonrpc/lib/socketSupport.js",".././node_modules/@microsoft/dev-tunnels-ssh/pipeExtensions.js",".././node_modules/@microsoft/dev-tunnels-ssh/secureStream.js",".././node_modules/@microsoft/dev-tunnels-ssh/services/authenticationService.js",".././node_modules/@microsoft/dev-tunnels-ssh/services/connectionService.js",".././node_modules/@microsoft/dev-tunnels-ssh/services/keyExchangeService.js",".././node_modules/@microsoft/dev-tunnels-ssh/services/serviceActivation.js",".././node_modules/@microsoft/dev-tunnels-ssh/services/sshService.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshChannel.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshClientSession.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshRpcMessageStream.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshServerSession.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshSession.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshSessionAlgorithms.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshSessionConfiguration.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshStream.js",".././node_modules/@microsoft/dev-tunnels-ssh/sshVersionInfo.js",".././node_modules/@microsoft/dev-tunnels-ssh/streams.js",".././node_modules/@microsoft/dev-tunnels-ssh/trace.js",".././node_modules/@microsoft/dev-tunnels-ssh/util/cancellation.js",".././node_modules/@microsoft/dev-tunnels-ssh/util/promiseCompletionSource.js",".././node_modules/@microsoft/dev-tunnels-ssh/util/queue.js",".././node_modules/@microsoft/dev-tunnels-ssh/util/semaphore.js",".././node_modules/@protobufjs/aspromise/index.js",".././node_modules/@protobufjs/base64/index.js",".././node_modules/@protobufjs/codegen/index.js",".././node_modules/@protobufjs/eventemitter/index.js",".././node_modules/@protobufjs/fetch/index.js",".././node_modules/@protobufjs/float/index.js",".././node_modules/@protobufjs/inquire/index.js",".././node_modules/@protobufjs/path/index.js",".././node_modules/@protobufjs/pool/index.js",".././node_modules/@protobufjs/utf8/index.js",".././node_modules/@segment/analytics-core/dist/cjs/analytics/dispatch.js",".././node_modules/@segment/analytics-core/dist/cjs/analytics/index.js",".././node_modules/@segment/analytics-core/dist/cjs/callback/index.js",".././node_modules/@segment/analytics-core/dist/cjs/connection/index.js",".././node_modules/@segment/analytics-core/dist/cjs/context/index.js",".././node_modules/@segment/analytics-core/dist/cjs/emitter/index.js",".././node_modules/@segment/analytics-core/dist/cjs/emitter/interface.js",".././node_modules/@segment/analytics-core/dist/cjs/events/index.js",".././node_modules/@segment/analytics-core/dist/cjs/events/interfaces.js",".././node_modules/@segment/analytics-core/dist/cjs/index.js",".././node_modules/@segment/analytics-core/dist/cjs/logger/index.js",".././node_modules/@segment/analytics-core/dist/cjs/plugins/index.js",".././node_modules/@segment/analytics-core/dist/cjs/priority-queue/backoff.js",".././node_modules/@segment/analytics-core/dist/cjs/priority-queue/index.js",".././node_modules/@segment/analytics-core/dist/cjs/queue/delivery.js",".././node_modules/@segment/analytics-core/dist/cjs/queue/event-queue.js",".././node_modules/@segment/analytics-core/dist/cjs/stats/index.js",".././node_modules/@segment/analytics-core/dist/cjs/task/task-group.js",".././node_modules/@segment/analytics-core/dist/cjs/utils/bind-all.js",".././node_modules/@segment/analytics-core/dist/cjs/utils/environment.js",".././node_modules/@segment/analytics-core/dist/cjs/utils/group-by.js",".././node_modules/@segment/analytics-core/dist/cjs/utils/is-thenable.js",".././node_modules/@segment/analytics-core/dist/cjs/utils/pick.js",".././node_modules/@segment/analytics-core/dist/cjs/validation/assertions.js",".././node_modules/@segment/analytics-core/dist/cjs/validation/helpers.js",".././node_modules/@segment/analytics-node/dist/cjs/app/analytics-node.js",".././node_modules/@segment/analytics-node/dist/cjs/app/context.js",".././node_modules/@segment/analytics-node/dist/cjs/app/dispatch-emit.js",".././node_modules/@segment/analytics-node/dist/cjs/app/emitter.js",".././node_modules/@segment/analytics-node/dist/cjs/app/event-factory.js",".././node_modules/@segment/analytics-node/dist/cjs/app/event-queue.js",".././node_modules/@segment/analytics-node/dist/cjs/app/settings.js",".././node_modules/@segment/analytics-node/dist/cjs/generated/version.js",".././node_modules/@segment/analytics-node/dist/cjs/index.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/abort.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/base-64-encode.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/create-url.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/env.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/extract-promise-parts.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/fetch.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/get-message-id.js",".././node_modules/@segment/analytics-node/dist/cjs/lib/uuid.js",".././node_modules/@segment/analytics-node/dist/cjs/plugins/segmentio/context-batch.js",".././node_modules/@segment/analytics-node/dist/cjs/plugins/segmentio/index.js",".././node_modules/@segment/analytics-node/dist/cjs/plugins/segmentio/publisher.js",".././node_modules/abort-controller-x/lib/AbortError.js",".././node_modules/abort-controller-x/lib/abortable.js",".././node_modules/abort-controller-x/lib/all.js",".././node_modules/abort-controller-x/lib/delay.js",".././node_modules/abort-controller-x/lib/execute.js",".././node_modules/abort-controller-x/lib/forever.js",".././node_modules/abort-controller-x/lib/index.js",".././node_modules/abort-controller-x/lib/race.js",".././node_modules/abort-controller-x/lib/retry.js",".././node_modules/abort-controller-x/lib/run.js",".././node_modules/abort-controller-x/lib/spawn.js",".././node_modules/abort-controller-x/lib/waitForEvent.js",".././node_modules/diffie-hellman/index.js",".././node_modules/dset/dist/index.js",".././node_modules/lodash.camelcase/index.js",".././node_modules/nice-grpc-common/lib/Metadata.js",".././node_modules/nice-grpc-common/lib/MethodDescriptor.js",".././node_modules/nice-grpc-common/lib/Status.js",".././node_modules/nice-grpc-common/lib/client/CallOptions.js",".././node_modules/nice-grpc-common/lib/client/ClientError.js",".././node_modules/nice-grpc-common/lib/client/ClientMiddleware.js",".././node_modules/nice-grpc-common/lib/client/composeClientMiddleware.js",".././node_modules/nice-grpc-common/lib/index.js",".././node_modules/nice-grpc-common/lib/server/CallContext.js",".././node_modules/nice-grpc-common/lib/server/ServerError.js",".././node_modules/nice-grpc-common/lib/server/ServerMiddleware.js",".././node_modules/nice-grpc-common/lib/server/composeServerMiddleware.js",".././node_modules/nice-grpc/lib/client/Client.js",".././node_modules/nice-grpc/lib/client/ClientFactory.js",".././node_modules/nice-grpc/lib/client/channel.js",".././node_modules/nice-grpc/lib/client/createBidiStreamingMethod.js",".././node_modules/nice-grpc/lib/client/createClientStreamingMethod.js",".././node_modules/nice-grpc/lib/client/createServerStreamingMethod.js",".././node_modules/nice-grpc/lib/client/createUnaryMethod.js",".././node_modules/nice-grpc/lib/client/wrapClientError.js",".././node_modules/nice-grpc/lib/index.js",".././node_modules/nice-grpc/lib/server/Server.js",".././node_modules/nice-grpc/lib/server/ServiceImplementation.js",".././node_modules/nice-grpc/lib/server/createCallContext.js",".././node_modules/nice-grpc/lib/server/createErrorStatusObject.js",".././node_modules/nice-grpc/lib/server/handleBidiStreamingCall.js",".././node_modules/nice-grpc/lib/server/handleClientStreamingCall.js",".././node_modules/nice-grpc/lib/server/handleServerStreamingCall.js",".././node_modules/nice-grpc/lib/server/handleUnaryCall.js",".././node_modules/nice-grpc/lib/service-definitions/grpc-js.js",".././node_modules/nice-grpc/lib/service-definitions/index.js",".././node_modules/nice-grpc/lib/service-definitions/ts-proto.js",".././node_modules/nice-grpc/lib/utils/convertMetadata.js",".././node_modules/nice-grpc/lib/utils/isAsyncIterable.js",".././node_modules/nice-grpc/lib/utils/patchClientWritableStream.js",".././node_modules/nice-grpc/lib/utils/readableToAsyncIterable.js",".././node_modules/node-domexception/index.js",".././node_modules/node-fetch-commonjs/index.js",".././node_modules/node-fetch-commonjs/multipart-parser-ea55d8f4.js",".././node_modules/node-fetch/lib/index.js",".././node_modules/protobufjs/minimal.js",".././node_modules/protobufjs/src/index-minimal.js",".././node_modules/protobufjs/src/reader.js",".././node_modules/protobufjs/src/reader_buffer.js",".././node_modules/protobufjs/src/roots.js",".././node_modules/protobufjs/src/rpc.js",".././node_modules/protobufjs/src/rpc/service.js",".././node_modules/protobufjs/src/util/longbits.js",".././node_modules/protobufjs/src/util/minimal.js",".././node_modules/protobufjs/src/writer.js",".././node_modules/protobufjs/src/writer_buffer.js",".././node_modules/tr46/index.js",".././node_modules/ts-error/lib/cjs.js",".././node_modules/ts-error/lib/helpers.js",".././src/common/async.ts",".././src/common/metrics.ts",".././src/common/telemetry.ts",".././src/common/utils.ts",".././src/local-ssh/logger.ts",".././src/local-ssh/proxy.ts",".././src/local-ssh/telemetryService.ts",".././src/proto/typescript/ipc/v1/ipc.ts",".././src/services/localSSHMetrics.ts",".././node_modules/tslib/tslib.es6.js",".././node_modules/vscode-jsonrpc/lib/cancellation.js",".././node_modules/vscode-jsonrpc/lib/events.js",".././node_modules/vscode-jsonrpc/lib/is.js",".././node_modules/vscode-jsonrpc/lib/linkedMap.js",".././node_modules/vscode-jsonrpc/lib/main.js",".././node_modules/vscode-jsonrpc/lib/messageReader.js",".././node_modules/vscode-jsonrpc/lib/messageWriter.js",".././node_modules/vscode-jsonrpc/lib/messages.js",".././node_modules/vscode-jsonrpc/lib/pipeSupport.js",".././node_modules/vscode-jsonrpc/lib/socketSupport.js",".././node_modules/web-streams-polyfill/dist/ponyfill.es2018.js",".././node_modules/webidl-conversions/lib/index.js",".././node_modules/whatwg-url/lib/URL-impl.js",".././node_modules/whatwg-url/lib/URL.js",".././node_modules/whatwg-url/lib/public-api.js",".././node_modules/whatwg-url/lib/url-state-machine.js",".././node_modules/whatwg-url/lib/utils.js",".././node_modules/ws/index.js",".././node_modules/ws/lib/buffer-util.js",".././node_modules/ws/lib/constants.js",".././node_modules/ws/lib/event-target.js",".././node_modules/ws/lib/extension.js",".././node_modules/ws/lib/limiter.js",".././node_modules/ws/lib/permessage-deflate.js",".././node_modules/ws/lib/receiver.js",".././node_modules/ws/lib/sender.js",".././node_modules/ws/lib/stream.js",".././node_modules/ws/lib/subprotocol.js",".././node_modules/ws/lib/validation.js",".././node_modules/ws/lib/websocket-server.js",".././node_modules/ws/lib/websocket.js","../external commonjs2 \"bufferutil\"","../external commonjs2 \"node-rsa\"","../external commonjs2 \"utf-8-validate\"","../external node-commonjs \"buffer\"","../external node-commonjs \"crypto\"","../external node-commonjs \"dns\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"http\"","../external node-commonjs \"http2\"","../external node-commonjs \"https\"","../external node-commonjs \"net\"","../external node-commonjs \"node:process\"","../external node-commonjs \"node:stream/web\"","../external node-commonjs \"os\"","../external node-commonjs \"path\"","../external node-commonjs \"punycode\"","../external node-commonjs \"stream\"","../external node-commonjs \"tls\"","../external node-commonjs \"url\"","../external node-commonjs \"util\"","../external node-commonjs \"worker_threads\"","../external node-commonjs \"zlib\"",".././node_modules/long/umd/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addAdminServicesToServer = exports.registerAdminService = void 0;\nconst registeredAdminServices = [];\nfunction registerAdminService(getServiceDefinition, getHandlers) {\n    registeredAdminServices.push({ getServiceDefinition, getHandlers });\n}\nexports.registerAdminService = registerAdminService;\nfunction addAdminServicesToServer(server) {\n    for (const { getServiceDefinition, getHandlers } of registeredAdminServices) {\n        server.addService(getServiceDefinition(), getHandlers());\n    }\n}\nexports.addAdminServicesToServer = addAdminServicesToServer;\n//# sourceMappingURL=admin.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackoffTimeout = void 0;\nconst INITIAL_BACKOFF_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.6;\nconst MAX_BACKOFF_MS = 120000;\nconst BACKOFF_JITTER = 0.2;\n/**\n * Get a number uniformly at random in the range [min, max)\n * @param min\n * @param max\n */\nfunction uniformRandom(min, max) {\n    return Math.random() * (max - min) + min;\n}\nclass BackoffTimeout {\n    constructor(callback, options) {\n        this.callback = callback;\n        /**\n         * The delay time at the start, and after each reset.\n         */\n        this.initialDelay = INITIAL_BACKOFF_MS;\n        /**\n         * The exponential backoff multiplier.\n         */\n        this.multiplier = BACKOFF_MULTIPLIER;\n        /**\n         * The maximum delay time\n         */\n        this.maxDelay = MAX_BACKOFF_MS;\n        /**\n         * The maximum fraction by which the delay time can randomly vary after\n         * applying the multiplier.\n         */\n        this.jitter = BACKOFF_JITTER;\n        /**\n         * Indicates whether the timer is currently running.\n         */\n        this.running = false;\n        /**\n         * Indicates whether the timer should keep the Node process running if no\n         * other async operation is doing so.\n         */\n        this.hasRef = true;\n        /**\n         * The time that the currently running timer was started. Only valid if\n         * running is true.\n         */\n        this.startTime = new Date();\n        if (options) {\n            if (options.initialDelay) {\n                this.initialDelay = options.initialDelay;\n            }\n            if (options.multiplier) {\n                this.multiplier = options.multiplier;\n            }\n            if (options.jitter) {\n                this.jitter = options.jitter;\n            }\n            if (options.maxDelay) {\n                this.maxDelay = options.maxDelay;\n            }\n        }\n        this.nextDelay = this.initialDelay;\n        this.timerId = setTimeout(() => { }, 0);\n        clearTimeout(this.timerId);\n    }\n    runTimer(delay) {\n        var _a, _b;\n        clearTimeout(this.timerId);\n        this.timerId = setTimeout(() => {\n            this.callback();\n            this.running = false;\n        }, delay);\n        if (!this.hasRef) {\n            (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Call the callback after the current amount of delay time\n     */\n    runOnce() {\n        this.running = true;\n        this.startTime = new Date();\n        this.runTimer(this.nextDelay);\n        const nextBackoff = Math.min(this.nextDelay * this.multiplier, this.maxDelay);\n        const jitterMagnitude = nextBackoff * this.jitter;\n        this.nextDelay =\n            nextBackoff + uniformRandom(-jitterMagnitude, jitterMagnitude);\n    }\n    /**\n     * Stop the timer. The callback will not be called until `runOnce` is called\n     * again.\n     */\n    stop() {\n        clearTimeout(this.timerId);\n        this.running = false;\n    }\n    /**\n     * Reset the delay time to its initial value. If the timer is still running,\n     * retroactively apply that reset to the current timer.\n     */\n    reset() {\n        this.nextDelay = this.initialDelay;\n        if (this.running) {\n            const now = new Date();\n            const newEndTime = this.startTime;\n            newEndTime.setMilliseconds(newEndTime.getMilliseconds() + this.nextDelay);\n            clearTimeout(this.timerId);\n            if (now < newEndTime) {\n                this.runTimer(newEndTime.getTime() - now.getTime());\n            }\n            else {\n                this.running = false;\n            }\n        }\n    }\n    /**\n     * Check whether the timer is currently running.\n     */\n    isRunning() {\n        return this.running;\n    }\n    /**\n     * Set that while the timer is running, it should keep the Node process\n     * running.\n     */\n    ref() {\n        var _a, _b;\n        this.hasRef = true;\n        (_b = (_a = this.timerId).ref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Set that while the timer is running, it should not keep the Node process\n     * running.\n     */\n    unref() {\n        var _a, _b;\n        this.hasRef = false;\n        (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n}\nexports.BackoffTimeout = BackoffTimeout;\n//# sourceMappingURL=backoff-timeout.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallCredentials = void 0;\nconst metadata_1 = require(\"./metadata\");\nfunction isCurrentOauth2Client(client) {\n    return ('getRequestHeaders' in client &&\n        typeof client.getRequestHeaders === 'function');\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nclass CallCredentials {\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    static createFromMetadataGenerator(metadataGenerator) {\n        return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    static createFromGoogleCredential(googleCredentials) {\n        return CallCredentials.createFromMetadataGenerator((options, callback) => {\n            let getHeaders;\n            if (isCurrentOauth2Client(googleCredentials)) {\n                getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n            }\n            else {\n                getHeaders = new Promise((resolve, reject) => {\n                    googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        if (!headers) {\n                            reject(new Error('Headers not set by metadata plugin'));\n                            return;\n                        }\n                        resolve(headers);\n                    });\n                });\n            }\n            getHeaders.then(headers => {\n                const metadata = new metadata_1.Metadata();\n                for (const key of Object.keys(headers)) {\n                    metadata.add(key, headers[key]);\n                }\n                callback(null, metadata);\n            }, err => {\n                callback(err);\n            });\n        });\n    }\n    static createEmpty() {\n        return new EmptyCallCredentials();\n    }\n}\nexports.CallCredentials = CallCredentials;\nclass ComposedCallCredentials extends CallCredentials {\n    constructor(creds) {\n        super();\n        this.creds = creds;\n    }\n    async generateMetadata(options) {\n        const base = new metadata_1.Metadata();\n        const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n        for (const gen of generated) {\n            base.merge(gen);\n        }\n        return base;\n    }\n    compose(other) {\n        return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedCallCredentials) {\n            return this.creds.every((value, index) => value._equals(other.creds[index]));\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass SingleCallCredentials extends CallCredentials {\n    constructor(metadataGenerator) {\n        super();\n        this.metadataGenerator = metadataGenerator;\n    }\n    generateMetadata(options) {\n        return new Promise((resolve, reject) => {\n            this.metadataGenerator(options, (err, metadata) => {\n                if (metadata !== undefined) {\n                    resolve(metadata);\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    compose(other) {\n        return new ComposedCallCredentials([this, other]);\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SingleCallCredentials) {\n            return this.metadataGenerator === other.metadataGenerator;\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass EmptyCallCredentials extends CallCredentials {\n    generateMetadata(options) {\n        return Promise.resolve(new metadata_1.Metadata());\n    }\n    compose(other) {\n        return other;\n    }\n    _equals(other) {\n        return other instanceof EmptyCallCredentials;\n    }\n}\n//# sourceMappingURL=call-credentials.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterceptingListenerImpl = exports.isInterceptingListener = void 0;\nfunction isInterceptingListener(listener) {\n    return (listener.onReceiveMetadata !== undefined &&\n        listener.onReceiveMetadata.length === 1);\n}\nexports.isInterceptingListener = isInterceptingListener;\nclass InterceptingListenerImpl {\n    constructor(listener, nextListener) {\n        this.listener = listener;\n        this.nextListener = nextListener;\n        this.processingMetadata = false;\n        this.hasPendingMessage = false;\n        this.processingMessage = false;\n        this.pendingStatus = null;\n    }\n    processPendingMessage() {\n        if (this.hasPendingMessage) {\n            this.nextListener.onReceiveMessage(this.pendingMessage);\n            this.pendingMessage = null;\n            this.hasPendingMessage = false;\n        }\n    }\n    processPendingStatus() {\n        if (this.pendingStatus) {\n            this.nextListener.onReceiveStatus(this.pendingStatus);\n        }\n    }\n    onReceiveMetadata(metadata) {\n        this.processingMetadata = true;\n        this.listener.onReceiveMetadata(metadata, metadata => {\n            this.processingMetadata = false;\n            this.nextListener.onReceiveMetadata(metadata);\n            this.processPendingMessage();\n            this.processPendingStatus();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onReceiveMessage(message) {\n        /* If this listener processes messages asynchronously, the last message may\n         * be reordered with respect to the status */\n        this.processingMessage = true;\n        this.listener.onReceiveMessage(message, msg => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessage = msg;\n                this.hasPendingMessage = true;\n            }\n            else {\n                this.nextListener.onReceiveMessage(msg);\n                this.processPendingStatus();\n            }\n        });\n    }\n    onReceiveStatus(status) {\n        this.listener.onReceiveStatus(status, processedStatus => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingStatus = processedStatus;\n            }\n            else {\n                this.nextListener.onReceiveStatus(processedStatus);\n            }\n        });\n    }\n}\nexports.InterceptingListenerImpl = InterceptingListenerImpl;\n//# sourceMappingURL=call-interface.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNextCallNumber = void 0;\nlet nextCallNumber = 0;\nfunction getNextCallNumber() {\n    return nextCallNumber++;\n}\nexports.getNextCallNumber = getNextCallNumber;\n//# sourceMappingURL=call-number.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, { stack });\n}\nexports.callErrorFromStatus = callErrorFromStatus;\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n        super();\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n        super({ objectMode: true });\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n//# sourceMappingURL=call.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelCredentials = void 0;\nconst tls_1 = require(\"tls\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst tls_helpers_1 = require(\"./tls-helpers\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction verifyIsBufferOrNull(obj, friendlyName) {\n    if (obj && !(obj instanceof Buffer)) {\n        throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n    }\n}\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\nclass ChannelCredentials {\n    constructor(callCredentials) {\n        this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n    }\n    /**\n     * Gets the set of per-call credentials associated with this instance.\n     */\n    _getCallCredentials() {\n        return this.callCredentials;\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n        var _a;\n        verifyIsBufferOrNull(rootCerts, 'Root certificate');\n        verifyIsBufferOrNull(privateKey, 'Private key');\n        verifyIsBufferOrNull(certChain, 'Certificate chain');\n        if (privateKey && !certChain) {\n            throw new Error('Private key must be given with accompanying certificate chain');\n        }\n        if (!privateKey && certChain) {\n            throw new Error('Certificate chain must be given with accompanying private key');\n        }\n        const secureContext = (0, tls_1.createSecureContext)({\n            ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n            key: privateKey !== null && privateKey !== void 0 ? privateKey : undefined,\n            cert: certChain !== null && certChain !== void 0 ? certChain : undefined,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with credentials created using\n     * the provided secureContext. The resulting instances can be used to\n     * construct a Channel that communicates over TLS. gRPC will not override\n     * anything in the provided secureContext, so the environment variables\n     * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n     * not be applied.\n     * @param secureContext The return value of tls.createSecureContext()\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createFromSecureContext(secureContext, verifyOptions) {\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n    static createInsecure() {\n        return new InsecureChannelCredentialsImpl();\n    }\n}\nexports.ChannelCredentials = ChannelCredentials;\nclass InsecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(callCredentials) {\n        super(callCredentials);\n    }\n    compose(callCredentials) {\n        throw new Error('Cannot compose insecure credentials');\n    }\n    _getConnectionOptions() {\n        return null;\n    }\n    _isSecure() {\n        return false;\n    }\n    _equals(other) {\n        return other instanceof InsecureChannelCredentialsImpl;\n    }\n}\nclass SecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(secureContext, verifyOptions) {\n        super();\n        this.secureContext = secureContext;\n        this.verifyOptions = verifyOptions;\n        this.connectionOptions = {\n            secureContext,\n        };\n        // Node asserts that this option is a function, so we cannot pass undefined\n        if (verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.checkServerIdentity) {\n            this.connectionOptions.checkServerIdentity =\n                verifyOptions.checkServerIdentity;\n        }\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        // Copy to prevent callers from mutating this.connectionOptions\n        return Object.assign({}, this.connectionOptions);\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SecureChannelCredentialsImpl) {\n            return (this.secureContext === other.secureContext &&\n                this.verifyOptions.checkServerIdentity ===\n                    other.verifyOptions.checkServerIdentity);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass ComposedChannelCredentialsImpl extends ChannelCredentials {\n    constructor(channelCredentials, callCreds) {\n        super(callCreds);\n        this.channelCredentials = channelCredentials;\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        return this.channelCredentials._getConnectionOptions();\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedChannelCredentialsImpl) {\n            return (this.channelCredentials._equals(other.channelCredentials) &&\n                this.callCredentials._equals(other.callCredentials));\n        }\n        else {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=channel-credentials.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.channelOptionsEqual = exports.recognizedOptions = void 0;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n    'grpc.ssl_target_name_override': true,\n    'grpc.primary_user_agent': true,\n    'grpc.secondary_user_agent': true,\n    'grpc.default_authority': true,\n    'grpc.keepalive_time_ms': true,\n    'grpc.keepalive_timeout_ms': true,\n    'grpc.keepalive_permit_without_calls': true,\n    'grpc.service_config': true,\n    'grpc.max_concurrent_streams': true,\n    'grpc.initial_reconnect_backoff_ms': true,\n    'grpc.max_reconnect_backoff_ms': true,\n    'grpc.use_local_subchannel_pool': true,\n    'grpc.max_send_message_length': true,\n    'grpc.max_receive_message_length': true,\n    'grpc.enable_http_proxy': true,\n    'grpc.enable_channelz': true,\n    'grpc.dns_min_time_between_resolutions_ms': true,\n    'grpc.enable_retries': true,\n    'grpc.per_rpc_retry_buffer_size': true,\n    'grpc.retry_buffer_size': true,\n    'grpc.max_connection_age_ms': true,\n    'grpc.max_connection_age_grace_ms': true,\n    'grpc-node.max_session_memory': true,\n    'grpc.service_config_disable_resolution': true,\n    'grpc.client_idle_timeout_ms': true,\n    'grpc-node.tls_enable_trace': true,\n};\nfunction channelOptionsEqual(options1, options2) {\n    const keys1 = Object.keys(options1).sort();\n    const keys2 = Object.keys(options2).sort();\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i += 1) {\n        if (keys1[i] !== keys2[i]) {\n            return false;\n        }\n        if (options1[keys1[i]] !== options2[keys2[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.channelOptionsEqual = channelOptionsEqual;\n//# sourceMappingURL=channel-options.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelImplementation = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst internal_channel_1 = require(\"./internal-channel\");\nclass ChannelImplementation {\n    constructor(target, credentials, options) {\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.internalChannel = new internal_channel_1.InternalChannel(target, credentials, options);\n    }\n    close() {\n        this.internalChannel.close();\n    }\n    getTarget() {\n        return this.internalChannel.getTarget();\n    }\n    getConnectivityState(tryToConnect) {\n        return this.internalChannel.getConnectivityState(tryToConnect);\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        this.internalChannel.watchConnectivityState(currentState, deadline, callback);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.internalChannel.getChannelzRef();\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        return this.internalChannel.createCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.ChannelImplementation = ChannelImplementation;\n//# sourceMappingURL=channel.js.map","\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.getChannelzServiceDefinition = exports.getChannelzHandlers = exports.unregisterChannelzRef = exports.registerChannelzSocket = exports.registerChannelzServer = exports.registerChannelzSubchannel = exports.registerChannelzChannel = exports.ChannelzCallTracker = exports.ChannelzChildrenTracker = exports.ChannelzTrace = void 0;\nconst net_1 = require(\"net\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst admin_1 = require(\"./admin\");\nconst make_client_1 = require(\"./make-client\");\nfunction channelRefToMessage(ref) {\n    return {\n        channel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction subchannelRefToMessage(ref) {\n    return {\n        subchannel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction serverRefToMessage(ref) {\n    return {\n        server_id: ref.id,\n    };\n}\nfunction socketRefToMessage(ref) {\n    return {\n        socket_id: ref.id,\n        name: ref.name,\n    };\n}\n/**\n * The loose upper bound on the number of events that should be retained in a\n * trace. This may be exceeded by up to a factor of 2. Arbitrarily chosen as a\n * number that should be large enough to contain the recent relevant\n * information, but small enough to not use excessive memory.\n */\nconst TARGET_RETAINED_TRACES = 32;\nclass ChannelzTrace {\n    constructor() {\n        this.events = [];\n        this.eventsLogged = 0;\n        this.creationTimestamp = new Date();\n    }\n    addTrace(severity, description, child) {\n        const timestamp = new Date();\n        this.events.push({\n            description: description,\n            severity: severity,\n            timestamp: timestamp,\n            childChannel: (child === null || child === void 0 ? void 0 : child.kind) === 'channel' ? child : undefined,\n            childSubchannel: (child === null || child === void 0 ? void 0 : child.kind) === 'subchannel' ? child : undefined,\n        });\n        // Whenever the trace array gets too large, discard the first half\n        if (this.events.length >= TARGET_RETAINED_TRACES * 2) {\n            this.events = this.events.slice(TARGET_RETAINED_TRACES);\n        }\n        this.eventsLogged += 1;\n    }\n    getTraceMessage() {\n        return {\n            creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n            num_events_logged: this.eventsLogged,\n            events: this.events.map(event => {\n                return {\n                    description: event.description,\n                    severity: event.severity,\n                    timestamp: dateToProtoTimestamp(event.timestamp),\n                    channel_ref: event.childChannel\n                        ? channelRefToMessage(event.childChannel)\n                        : null,\n                    subchannel_ref: event.childSubchannel\n                        ? subchannelRefToMessage(event.childSubchannel)\n                        : null,\n                };\n            }),\n        };\n    }\n}\nexports.ChannelzTrace = ChannelzTrace;\nclass ChannelzChildrenTracker {\n    constructor() {\n        this.channelChildren = new Map();\n        this.subchannelChildren = new Map();\n        this.socketChildren = new Map();\n    }\n    refChild(child) {\n        var _a, _b, _c;\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = (_a = this.channelChildren.get(child.id)) !== null && _a !== void 0 ? _a : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.channelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = (_b = this.subchannelChildren.get(child.id)) !== null && _b !== void 0 ? _b : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.subchannelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'socket': {\n                const trackedChild = (_c = this.socketChildren.get(child.id)) !== null && _c !== void 0 ? _c : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.socketChildren.set(child.id, trackedChild);\n                break;\n            }\n        }\n    }\n    unrefChild(child) {\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = this.channelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.channelChildren.delete(child.id);\n                    }\n                    else {\n                        this.channelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = this.subchannelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.subchannelChildren.delete(child.id);\n                    }\n                    else {\n                        this.subchannelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'socket': {\n                const trackedChild = this.socketChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.socketChildren.delete(child.id);\n                    }\n                    else {\n                        this.socketChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n        }\n    }\n    getChildLists() {\n        const channels = [];\n        for (const { ref } of this.channelChildren.values()) {\n            channels.push(ref);\n        }\n        const subchannels = [];\n        for (const { ref } of this.subchannelChildren.values()) {\n            subchannels.push(ref);\n        }\n        const sockets = [];\n        for (const { ref } of this.socketChildren.values()) {\n            sockets.push(ref);\n        }\n        return { channels, subchannels, sockets };\n    }\n}\nexports.ChannelzChildrenTracker = ChannelzChildrenTracker;\nclass ChannelzCallTracker {\n    constructor() {\n        this.callsStarted = 0;\n        this.callsSucceeded = 0;\n        this.callsFailed = 0;\n        this.lastCallStartedTimestamp = null;\n    }\n    addCallStarted() {\n        this.callsStarted += 1;\n        this.lastCallStartedTimestamp = new Date();\n    }\n    addCallSucceeded() {\n        this.callsSucceeded += 1;\n    }\n    addCallFailed() {\n        this.callsFailed += 1;\n    }\n}\nexports.ChannelzCallTracker = ChannelzCallTracker;\nlet nextId = 1;\nfunction getNextId() {\n    return nextId++;\n}\nconst channels = [];\nconst subchannels = [];\nconst servers = [];\nconst sockets = [];\nfunction registerChannelzChannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'channel' };\n    if (channelzEnabled) {\n        channels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzChannel = registerChannelzChannel;\nfunction registerChannelzSubchannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'subchannel' };\n    if (channelzEnabled) {\n        subchannels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSubchannel = registerChannelzSubchannel;\nfunction registerChannelzServer(getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, kind: 'server' };\n    if (channelzEnabled) {\n        servers[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzServer = registerChannelzServer;\nfunction registerChannelzSocket(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'socket' };\n    if (channelzEnabled) {\n        sockets[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSocket = registerChannelzSocket;\nfunction unregisterChannelzRef(ref) {\n    switch (ref.kind) {\n        case 'channel':\n            delete channels[ref.id];\n            return;\n        case 'subchannel':\n            delete subchannels[ref.id];\n            return;\n        case 'server':\n            delete servers[ref.id];\n            return;\n        case 'socket':\n            delete sockets[ref.id];\n            return;\n    }\n}\nexports.unregisterChannelzRef = unregisterChannelzRef;\n/**\n * Parse a single section of an IPv6 address as two bytes\n * @param addressSection A hexadecimal string of length up to 4\n * @returns The pair of bytes representing this address section\n */\nfunction parseIPv6Section(addressSection) {\n    const numberValue = Number.parseInt(addressSection, 16);\n    return [(numberValue / 256) | 0, numberValue % 256];\n}\n/**\n * Parse a chunk of an IPv6 address string to some number of bytes\n * @param addressChunk Some number of segments of up to 4 hexadecimal\n *   characters each, joined by colons.\n * @returns The list of bytes representing this address chunk\n */\nfunction parseIPv6Chunk(addressChunk) {\n    if (addressChunk === '') {\n        return [];\n    }\n    const bytePairs = addressChunk\n        .split(':')\n        .map(section => parseIPv6Section(section));\n    const result = [];\n    return result.concat(...bytePairs);\n}\n/**\n * Converts an IPv4 or IPv6 address from string representation to binary\n * representation\n * @param ipAddress an IP address in standard IPv4 or IPv6 text format\n * @returns\n */\nfunction ipAddressStringToBuffer(ipAddress) {\n    if ((0, net_1.isIPv4)(ipAddress)) {\n        return Buffer.from(Uint8Array.from(ipAddress.split('.').map(segment => Number.parseInt(segment))));\n    }\n    else if ((0, net_1.isIPv6)(ipAddress)) {\n        let leftSection;\n        let rightSection;\n        const doubleColonIndex = ipAddress.indexOf('::');\n        if (doubleColonIndex === -1) {\n            leftSection = ipAddress;\n            rightSection = '';\n        }\n        else {\n            leftSection = ipAddress.substring(0, doubleColonIndex);\n            rightSection = ipAddress.substring(doubleColonIndex + 2);\n        }\n        const leftBuffer = Buffer.from(parseIPv6Chunk(leftSection));\n        const rightBuffer = Buffer.from(parseIPv6Chunk(rightSection));\n        const middleBuffer = Buffer.alloc(16 - leftBuffer.length - rightBuffer.length, 0);\n        return Buffer.concat([leftBuffer, middleBuffer, rightBuffer]);\n    }\n    else {\n        return null;\n    }\n}\nfunction connectivityStateToMessage(state) {\n    switch (state) {\n        case connectivity_state_1.ConnectivityState.CONNECTING:\n            return {\n                state: 'CONNECTING',\n            };\n        case connectivity_state_1.ConnectivityState.IDLE:\n            return {\n                state: 'IDLE',\n            };\n        case connectivity_state_1.ConnectivityState.READY:\n            return {\n                state: 'READY',\n            };\n        case connectivity_state_1.ConnectivityState.SHUTDOWN:\n            return {\n                state: 'SHUTDOWN',\n            };\n        case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n            return {\n                state: 'TRANSIENT_FAILURE',\n            };\n        default:\n            return {\n                state: 'UNKNOWN',\n            };\n    }\n}\nfunction dateToProtoTimestamp(date) {\n    if (!date) {\n        return null;\n    }\n    const millisSinceEpoch = date.getTime();\n    return {\n        seconds: (millisSinceEpoch / 1000) | 0,\n        nanos: (millisSinceEpoch % 1000) * 1000000,\n    };\n}\nfunction getChannelMessage(channelEntry) {\n    const resolvedInfo = channelEntry.getInfo();\n    return {\n        ref: channelRefToMessage(channelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        channel_ref: resolvedInfo.children.channels.map(ref => channelRefToMessage(ref)),\n        subchannel_ref: resolvedInfo.children.subchannels.map(ref => subchannelRefToMessage(ref)),\n    };\n}\nfunction GetChannel(call, callback) {\n    const channelId = Number.parseInt(call.request.channel_id);\n    const channelEntry = channels[channelId];\n    if (channelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No channel data found for id ' + channelId,\n        });\n        return;\n    }\n    callback(null, { channel: getChannelMessage(channelEntry) });\n}\nfunction GetTopChannels(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_channel_id);\n    for (; i < channels.length; i++) {\n        const channelEntry = channels[i];\n        if (channelEntry === undefined) {\n            continue;\n        }\n        resultList.push(getChannelMessage(channelEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        channel: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction getServerMessage(serverEntry) {\n    const resolvedInfo = serverEntry.getInfo();\n    return {\n        ref: serverRefToMessage(serverEntry.ref),\n        data: {\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        listen_socket: resolvedInfo.listenerChildren.sockets.map(ref => socketRefToMessage(ref)),\n    };\n}\nfunction GetServer(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    callback(null, { server: getServerMessage(serverEntry) });\n}\nfunction GetServers(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_server_id);\n    for (; i < servers.length; i++) {\n        const serverEntry = servers[i];\n        if (serverEntry === undefined) {\n            continue;\n        }\n        resultList.push(getServerMessage(serverEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        server: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction GetSubchannel(call, callback) {\n    const subchannelId = Number.parseInt(call.request.subchannel_id);\n    const subchannelEntry = subchannels[subchannelId];\n    if (subchannelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No subchannel data found for id ' + subchannelId,\n        });\n        return;\n    }\n    const resolvedInfo = subchannelEntry.getInfo();\n    const subchannelMessage = {\n        ref: subchannelRefToMessage(subchannelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        socket_ref: resolvedInfo.children.sockets.map(ref => socketRefToMessage(ref)),\n    };\n    callback(null, { subchannel: subchannelMessage });\n}\nfunction subchannelAddressToAddressMessage(subchannelAddress) {\n    var _a;\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(subchannelAddress)) {\n        return {\n            address: 'tcpip_address',\n            tcpip_address: {\n                ip_address: (_a = ipAddressStringToBuffer(subchannelAddress.host)) !== null && _a !== void 0 ? _a : undefined,\n                port: subchannelAddress.port,\n            },\n        };\n    }\n    else {\n        return {\n            address: 'uds_address',\n            uds_address: {\n                filename: subchannelAddress.path,\n            },\n        };\n    }\n}\nfunction GetSocket(call, callback) {\n    var _a, _b, _c, _d, _e;\n    const socketId = Number.parseInt(call.request.socket_id);\n    const socketEntry = sockets[socketId];\n    if (socketEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No socket data found for id ' + socketId,\n        });\n        return;\n    }\n    const resolvedInfo = socketEntry.getInfo();\n    const securityMessage = resolvedInfo.security\n        ? {\n            model: 'tls',\n            tls: {\n                cipher_suite: resolvedInfo.security.cipherSuiteStandardName\n                    ? 'standard_name'\n                    : 'other_name',\n                standard_name: (_a = resolvedInfo.security.cipherSuiteStandardName) !== null && _a !== void 0 ? _a : undefined,\n                other_name: (_b = resolvedInfo.security.cipherSuiteOtherName) !== null && _b !== void 0 ? _b : undefined,\n                local_certificate: (_c = resolvedInfo.security.localCertificate) !== null && _c !== void 0 ? _c : undefined,\n                remote_certificate: (_d = resolvedInfo.security.remoteCertificate) !== null && _d !== void 0 ? _d : undefined,\n            },\n        }\n        : null;\n    const socketMessage = {\n        ref: socketRefToMessage(socketEntry.ref),\n        local: resolvedInfo.localAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.localAddress)\n            : null,\n        remote: resolvedInfo.remoteAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.remoteAddress)\n            : null,\n        remote_name: (_e = resolvedInfo.remoteName) !== null && _e !== void 0 ? _e : undefined,\n        security: securityMessage,\n        data: {\n            keep_alives_sent: resolvedInfo.keepAlivesSent,\n            streams_started: resolvedInfo.streamsStarted,\n            streams_succeeded: resolvedInfo.streamsSucceeded,\n            streams_failed: resolvedInfo.streamsFailed,\n            last_local_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastLocalStreamCreatedTimestamp),\n            last_remote_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastRemoteStreamCreatedTimestamp),\n            messages_received: resolvedInfo.messagesReceived,\n            messages_sent: resolvedInfo.messagesSent,\n            last_message_received_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageReceivedTimestamp),\n            last_message_sent_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageSentTimestamp),\n            local_flow_control_window: resolvedInfo.localFlowControlWindow\n                ? { value: resolvedInfo.localFlowControlWindow }\n                : null,\n            remote_flow_control_window: resolvedInfo.remoteFlowControlWindow\n                ? { value: resolvedInfo.remoteFlowControlWindow }\n                : null,\n        },\n    };\n    callback(null, { socket: socketMessage });\n}\nfunction GetServerSockets(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    const startId = Number.parseInt(call.request.start_socket_id);\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resolvedInfo = serverEntry.getInfo();\n    // If we wanted to include listener sockets in the result, this line would\n    // instead say\n    // const allSockets = resolvedInfo.listenerChildren.sockets.concat(resolvedInfo.sessionChildren.sockets).sort((ref1, ref2) => ref1.id - ref2.id);\n    const allSockets = resolvedInfo.sessionChildren.sockets.sort((ref1, ref2) => ref1.id - ref2.id);\n    const resultList = [];\n    let i = 0;\n    for (; i < allSockets.length; i++) {\n        if (allSockets[i].id >= startId) {\n            resultList.push(socketRefToMessage(allSockets[i]));\n            if (resultList.length >= maxResults) {\n                break;\n            }\n        }\n    }\n    callback(null, {\n        socket_ref: resultList,\n        end: i >= allSockets.length,\n    });\n}\nfunction getChannelzHandlers() {\n    return {\n        GetChannel,\n        GetTopChannels,\n        GetServer,\n        GetServers,\n        GetSubchannel,\n        GetSocket,\n        GetServerSockets,\n    };\n}\nexports.getChannelzHandlers = getChannelzHandlers;\nlet loadedChannelzDefinition = null;\nfunction getChannelzServiceDefinition() {\n    if (loadedChannelzDefinition) {\n        return loadedChannelzDefinition;\n    }\n    /* The purpose of this complexity is to avoid loading @grpc/proto-loader at\n     * runtime for users who will not use/enable channelz. */\n    const loaderLoadSync = require('@grpc/proto-loader')\n        .loadSync;\n    const loadedProto = loaderLoadSync('channelz.proto', {\n        keepCase: true,\n        longs: String,\n        enums: String,\n        defaults: true,\n        oneofs: true,\n        includeDirs: [`${__dirname}/../../proto`],\n    });\n    const channelzGrpcObject = (0, make_client_1.loadPackageDefinition)(loadedProto);\n    loadedChannelzDefinition =\n        channelzGrpcObject.grpc.channelz.v1.Channelz.service;\n    return loadedChannelzDefinition;\n}\nexports.getChannelzServiceDefinition = getChannelzServiceDefinition;\nfunction setup() {\n    (0, admin_1.registerAdminService)(getChannelzServiceDefinition, getChannelzHandlers);\n}\nexports.setup = setup;\n//# sourceMappingURL=channelz.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInterceptingCall = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.InterceptorConfigurationError = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst call_interface_1 = require(\"./call-interface\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\n/**\n * Error class associated with passing both interceptors and interceptor\n * providers to a client constructor or as call options.\n */\nclass InterceptorConfigurationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InterceptorConfigurationError';\n        Error.captureStackTrace(this, InterceptorConfigurationError);\n    }\n}\nexports.InterceptorConfigurationError = InterceptorConfigurationError;\nclass ListenerBuilder {\n    constructor() {\n        this.metadata = undefined;\n        this.message = undefined;\n        this.status = undefined;\n    }\n    withOnReceiveMetadata(onReceiveMetadata) {\n        this.metadata = onReceiveMetadata;\n        return this;\n    }\n    withOnReceiveMessage(onReceiveMessage) {\n        this.message = onReceiveMessage;\n        return this;\n    }\n    withOnReceiveStatus(onReceiveStatus) {\n        this.status = onReceiveStatus;\n        return this;\n    }\n    build() {\n        return {\n            onReceiveMetadata: this.metadata,\n            onReceiveMessage: this.message,\n            onReceiveStatus: this.status,\n        };\n    }\n}\nexports.ListenerBuilder = ListenerBuilder;\nclass RequesterBuilder {\n    constructor() {\n        this.start = undefined;\n        this.message = undefined;\n        this.halfClose = undefined;\n        this.cancel = undefined;\n    }\n    withStart(start) {\n        this.start = start;\n        return this;\n    }\n    withSendMessage(sendMessage) {\n        this.message = sendMessage;\n        return this;\n    }\n    withHalfClose(halfClose) {\n        this.halfClose = halfClose;\n        return this;\n    }\n    withCancel(cancel) {\n        this.cancel = cancel;\n        return this;\n    }\n    build() {\n        return {\n            start: this.start,\n            sendMessage: this.message,\n            halfClose: this.halfClose,\n            cancel: this.cancel,\n        };\n    }\n}\nexports.RequesterBuilder = RequesterBuilder;\n/**\n * A Listener with a default pass-through implementation of each method. Used\n * for filling out Listeners with some methods omitted.\n */\nconst defaultListener = {\n    onReceiveMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    onReceiveMessage: (message, next) => {\n        next(message);\n    },\n    onReceiveStatus: (status, next) => {\n        next(status);\n    },\n};\n/**\n * A Requester with a default pass-through implementation of each method. Used\n * for filling out Requesters with some methods omitted.\n */\nconst defaultRequester = {\n    start: (metadata, listener, next) => {\n        next(metadata, listener);\n    },\n    sendMessage: (message, next) => {\n        next(message);\n    },\n    halfClose: next => {\n        next();\n    },\n    cancel: next => {\n        next();\n    },\n};\nclass InterceptingCall {\n    constructor(nextCall, requester) {\n        var _a, _b, _c, _d;\n        this.nextCall = nextCall;\n        /**\n         * Indicates that metadata has been passed to the requester's start\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMetadata = false;\n        /**\n         * Message context for a pending message that is waiting for\n         */\n        this.pendingMessageContext = null;\n        /**\n         * Indicates that a message has been passed to the requester's sendMessage\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMessage = false;\n        /**\n         * Indicates that a status was received but could not be propagated because\n         * a message was still being processed.\n         */\n        this.pendingHalfClose = false;\n        if (requester) {\n            this.requester = {\n                start: (_a = requester.start) !== null && _a !== void 0 ? _a : defaultRequester.start,\n                sendMessage: (_b = requester.sendMessage) !== null && _b !== void 0 ? _b : defaultRequester.sendMessage,\n                halfClose: (_c = requester.halfClose) !== null && _c !== void 0 ? _c : defaultRequester.halfClose,\n                cancel: (_d = requester.cancel) !== null && _d !== void 0 ? _d : defaultRequester.cancel,\n            };\n        }\n        else {\n            this.requester = defaultRequester;\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.requester.cancel(() => {\n            this.nextCall.cancelWithStatus(status, details);\n        });\n    }\n    getPeer() {\n        return this.nextCall.getPeer();\n    }\n    processPendingMessage() {\n        if (this.pendingMessageContext) {\n            this.nextCall.sendMessageWithContext(this.pendingMessageContext, this.pendingMessage);\n            this.pendingMessageContext = null;\n            this.pendingMessage = null;\n        }\n    }\n    processPendingHalfClose() {\n        if (this.pendingHalfClose) {\n            this.nextCall.halfClose();\n        }\n    }\n    start(metadata, interceptingListener) {\n        var _a, _b, _c, _d, _e, _f;\n        const fullInterceptingListener = {\n            onReceiveMetadata: (_b = (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(interceptingListener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            onReceiveMessage: (_d = (_c = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _c === void 0 ? void 0 : _c.bind(interceptingListener)) !== null && _d !== void 0 ? _d : (message => { }),\n            onReceiveStatus: (_f = (_e = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _e === void 0 ? void 0 : _e.bind(interceptingListener)) !== null && _f !== void 0 ? _f : (status => { }),\n        };\n        this.processingMetadata = true;\n        this.requester.start(metadata, fullInterceptingListener, (md, listener) => {\n            var _a, _b, _c;\n            this.processingMetadata = false;\n            let finalInterceptingListener;\n            if ((0, call_interface_1.isInterceptingListener)(listener)) {\n                finalInterceptingListener = listener;\n            }\n            else {\n                const fullListener = {\n                    onReceiveMetadata: (_a = listener.onReceiveMetadata) !== null && _a !== void 0 ? _a : defaultListener.onReceiveMetadata,\n                    onReceiveMessage: (_b = listener.onReceiveMessage) !== null && _b !== void 0 ? _b : defaultListener.onReceiveMessage,\n                    onReceiveStatus: (_c = listener.onReceiveStatus) !== null && _c !== void 0 ? _c : defaultListener.onReceiveStatus,\n                };\n                finalInterceptingListener = new call_interface_1.InterceptingListenerImpl(fullListener, fullInterceptingListener);\n            }\n            this.nextCall.start(md, finalInterceptingListener);\n            this.processPendingMessage();\n            this.processPendingHalfClose();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        this.processingMessage = true;\n        this.requester.sendMessage(message, finalMessage => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessageContext = context;\n                this.pendingMessage = message;\n            }\n            else {\n                this.nextCall.sendMessageWithContext(context, finalMessage);\n                this.processPendingHalfClose();\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    startRead() {\n        this.nextCall.startRead();\n    }\n    halfClose() {\n        this.requester.halfClose(() => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingHalfClose = true;\n            }\n            else {\n                this.nextCall.halfClose();\n            }\n        });\n    }\n}\nexports.InterceptingCall = InterceptingCall;\nfunction getCall(channel, path, options) {\n    var _a, _b;\n    const deadline = (_a = options.deadline) !== null && _a !== void 0 ? _a : Infinity;\n    const host = options.host;\n    const parent = (_b = options.parent) !== null && _b !== void 0 ? _b : null;\n    const propagateFlags = options.propagate_flags;\n    const credentials = options.credentials;\n    const call = channel.createCall(path, deadline, host, parent, propagateFlags);\n    if (credentials) {\n        call.setCredentials(credentials);\n    }\n    return call;\n}\n/**\n * InterceptingCall implementation that directly owns the underlying Call\n * object and handles serialization and deseraizliation.\n */\nclass BaseInterceptingCall {\n    constructor(call, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    methodDefinition) {\n        this.call = call;\n        this.methodDefinition = methodDefinition;\n    }\n    cancelWithStatus(status, details) {\n        this.call.cancelWithStatus(status, details);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        let serialized;\n        try {\n            serialized = this.methodDefinition.requestSerialize(message);\n        }\n        catch (e) {\n            this.call.cancelWithStatus(constants_1.Status.INTERNAL, `Request message serialization failure: ${(0, error_1.getErrorMessage)(e)}`);\n            return;\n        }\n        this.call.sendMessageWithContext(context, serialized);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    start(metadata, interceptingListener) {\n        let readError = null;\n        this.call.start(metadata, {\n            onReceiveMetadata: metadata => {\n                var _a;\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, metadata);\n            },\n            onReceiveMessage: message => {\n                var _a;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let deserialized;\n                try {\n                    deserialized = this.methodDefinition.responseDeserialize(message);\n                }\n                catch (e) {\n                    readError = {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Response message parsing error: ${(0, error_1.getErrorMessage)(e)}`,\n                        metadata: new metadata_1.Metadata(),\n                    };\n                    this.call.cancelWithStatus(readError.code, readError.details);\n                    return;\n                }\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, deserialized);\n            },\n            onReceiveStatus: status => {\n                var _a, _b;\n                if (readError) {\n                    (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, readError);\n                }\n                else {\n                    (_b = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(interceptingListener, status);\n                }\n            },\n        });\n    }\n    startRead() {\n        this.call.startRead();\n    }\n    halfClose() {\n        this.call.halfClose();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with unary\n * responses.\n */\nclass BaseUnaryInterceptingCall extends BaseInterceptingCall {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(call, methodDefinition) {\n        super(call, methodDefinition);\n    }\n    start(metadata, listener) {\n        var _a, _b;\n        let receivedMessage = false;\n        const wrapperListener = {\n            onReceiveMetadata: (_b = (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(listener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage: (message) => {\n                var _a;\n                receivedMessage = true;\n                (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, message);\n            },\n            onReceiveStatus: (status) => {\n                var _a, _b;\n                if (!receivedMessage) {\n                    (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, null);\n                }\n                (_b = listener === null || listener === void 0 ? void 0 : listener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(listener, status);\n            },\n        };\n        super.start(metadata, wrapperListener);\n        this.call.startRead();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with streaming\n * responses.\n */\nclass BaseStreamingInterceptingCall extends BaseInterceptingCall {\n}\nfunction getBottomInterceptingCall(channel, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition) {\n    const call = getCall(channel, methodDefinition.path, options);\n    if (methodDefinition.responseStream) {\n        return new BaseStreamingInterceptingCall(call, methodDefinition);\n    }\n    else {\n        return new BaseUnaryInterceptingCall(call, methodDefinition);\n    }\n}\nfunction getInterceptingCall(interceptorArgs, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition, options, channel) {\n    if (interceptorArgs.clientInterceptors.length > 0 &&\n        interceptorArgs.clientInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as options ' +\n            'to the client constructor. Only one of these is allowed.');\n    }\n    if (interceptorArgs.callInterceptors.length > 0 &&\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as call ' +\n            'options. Only one of these is allowed.');\n    }\n    let interceptors = [];\n    // Interceptors passed to the call override interceptors passed to the client constructor\n    if (interceptorArgs.callInterceptors.length > 0 ||\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        interceptors = []\n            .concat(interceptorArgs.callInterceptors, interceptorArgs.callInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    else {\n        interceptors = []\n            .concat(interceptorArgs.clientInterceptors, interceptorArgs.clientInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    const interceptorOptions = Object.assign({}, options, {\n        method_definition: methodDefinition,\n    });\n    /* For each interceptor in the list, the nextCall function passed to it is\n     * based on the next interceptor in the list, using a nextCall function\n     * constructed with the following interceptor in the list, and so on. The\n     * initialValue, which is effectively at the end of the list, is a nextCall\n     * function that invokes getBottomInterceptingCall, the result of which\n     * handles (de)serialization and also gets the underlying call from the\n     * channel. */\n    const getCall = interceptors.reduceRight((nextCall, nextInterceptor) => {\n        return currentOptions => nextInterceptor(currentOptions, nextCall);\n    }, (finalOptions) => getBottomInterceptingCall(channel, finalOptions, methodDefinition));\n    return getCall(interceptorOptions);\n}\nexports.getInterceptingCall = getInterceptingCall;\n//# sourceMappingURL=client-interceptors.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst call_1 = require(\"./call\");\nconst channel_1 = require(\"./channel\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst client_interceptors_1 = require(\"./client-interceptors\");\nconst CHANNEL_SYMBOL = Symbol();\nconst INTERCEPTOR_SYMBOL = Symbol();\nconst INTERCEPTOR_PROVIDER_SYMBOL = Symbol();\nconst CALL_INVOCATION_TRANSFORMER_SYMBOL = Symbol();\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\nfunction getErrorStackString(error) {\n    return error.stack.split('\\n').slice(1).join('\\n');\n}\n/**\n * A generic gRPC client. Primarily useful as a base class for all generated\n * clients.\n */\nclass Client {\n    constructor(address, credentials, options = {}) {\n        var _a, _b;\n        options = Object.assign({}, options);\n        this[INTERCEPTOR_SYMBOL] = (_a = options.interceptors) !== null && _a !== void 0 ? _a : [];\n        delete options.interceptors;\n        this[INTERCEPTOR_PROVIDER_SYMBOL] = (_b = options.interceptor_providers) !== null && _b !== void 0 ? _b : [];\n        delete options.interceptor_providers;\n        if (this[INTERCEPTOR_SYMBOL].length > 0 &&\n            this[INTERCEPTOR_PROVIDER_SYMBOL].length > 0) {\n            throw new Error('Both interceptors and interceptor_providers were passed as options ' +\n                'to the client constructor. Only one of these is allowed.');\n        }\n        this[CALL_INVOCATION_TRANSFORMER_SYMBOL] =\n            options.callInvocationTransformer;\n        delete options.callInvocationTransformer;\n        if (options.channelOverride) {\n            this[CHANNEL_SYMBOL] = options.channelOverride;\n        }\n        else if (options.channelFactoryOverride) {\n            const channelFactoryOverride = options.channelFactoryOverride;\n            delete options.channelFactoryOverride;\n            this[CHANNEL_SYMBOL] = channelFactoryOverride(address, credentials, options);\n        }\n        else {\n            this[CHANNEL_SYMBOL] = new channel_1.ChannelImplementation(address, credentials, options);\n        }\n    }\n    close() {\n        this[CHANNEL_SYMBOL].close();\n    }\n    getChannel() {\n        return this[CHANNEL_SYMBOL];\n    }\n    waitForReady(deadline, callback) {\n        const checkState = (err) => {\n            if (err) {\n                callback(new Error('Failed to connect before the deadline'));\n                return;\n            }\n            let newState;\n            try {\n                newState = this[CHANNEL_SYMBOL].getConnectivityState(true);\n            }\n            catch (e) {\n                callback(new Error('The channel has been closed'));\n                return;\n            }\n            if (newState === connectivity_state_1.ConnectivityState.READY) {\n                callback();\n            }\n            else {\n                try {\n                    this[CHANNEL_SYMBOL].watchConnectivityState(newState, deadline, checkState);\n                }\n                catch (e) {\n                    callback(new Error('The channel has been closed'));\n                }\n            }\n        };\n        setImmediate(checkState);\n    }\n    checkOptionalUnaryResponseArguments(arg1, arg2, arg3) {\n        if (isFunction(arg1)) {\n            return { metadata: new metadata_1.Metadata(), options: {}, callback: arg1 };\n        }\n        else if (isFunction(arg2)) {\n            if (arg1 instanceof metadata_1.Metadata) {\n                return { metadata: arg1, options: {}, callback: arg2 };\n            }\n            else {\n                return { metadata: new metadata_1.Metadata(), options: arg1, callback: arg2 };\n            }\n        }\n        else {\n            if (!(arg1 instanceof metadata_1.Metadata &&\n                arg2 instanceof Object &&\n                isFunction(arg3))) {\n                throw new Error('Incorrect arguments passed');\n            }\n            return { metadata: arg1, options: arg2, callback: arg3 };\n        }\n    }\n    makeUnaryRequest(method, serialize, deserialize, argument, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientUnaryCallImpl(),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return emitter;\n    }\n    makeClientStreamRequest(method, serialize, deserialize, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientWritableStreamImpl(serialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        return emitter;\n    }\n    checkMetadataAndOptions(arg1, arg2) {\n        let metadata;\n        let options;\n        if (arg1 instanceof metadata_1.Metadata) {\n            metadata = arg1;\n            if (arg2) {\n                options = arg2;\n            }\n            else {\n                options = {};\n            }\n        }\n        else {\n            if (arg1) {\n                options = arg1;\n            }\n            else {\n                options = {};\n            }\n            metadata = new metadata_1.Metadata();\n        }\n        return { metadata, options };\n    }\n    makeServerStreamRequest(method, serialize, deserialize, argument, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientReadableStreamImpl(deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return stream;\n    }\n    makeBidiStreamRequest(method, serialize, deserialize, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientDuplexStreamImpl(serialize, deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        return stream;\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=client.js.map","\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionAlgorithms = void 0;\nvar CompressionAlgorithms;\n(function (CompressionAlgorithms) {\n    CompressionAlgorithms[CompressionAlgorithms[\"identity\"] = 0] = \"identity\";\n    CompressionAlgorithms[CompressionAlgorithms[\"deflate\"] = 1] = \"deflate\";\n    CompressionAlgorithms[CompressionAlgorithms[\"gzip\"] = 2] = \"gzip\";\n})(CompressionAlgorithms || (exports.CompressionAlgorithms = CompressionAlgorithms = {}));\n//# sourceMappingURL=compression-algorithms.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionFilterFactory = exports.CompressionFilter = void 0;\nconst zlib = require(\"zlib\");\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nconst constants_1 = require(\"./constants\");\nconst filter_1 = require(\"./filter\");\nconst logging = require(\"./logging\");\nconst isCompressionAlgorithmKey = (key) => {\n    return (typeof key === 'number' && typeof compression_algorithms_1.CompressionAlgorithms[key] === 'string');\n};\nclass CompressionHandler {\n    /**\n     * @param message Raw uncompressed message bytes\n     * @param compress Indicates whether the message should be compressed\n     * @return Framed message, compressed if applicable\n     */\n    async writeMessage(message, compress) {\n        let messageBuffer = message;\n        if (compress) {\n            messageBuffer = await this.compressMessage(messageBuffer);\n        }\n        const output = Buffer.allocUnsafe(messageBuffer.length + 5);\n        output.writeUInt8(compress ? 1 : 0, 0);\n        output.writeUInt32BE(messageBuffer.length, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    /**\n     * @param data Framed message, possibly compressed\n     * @return Uncompressed message\n     */\n    async readMessage(data) {\n        const compressed = data.readUInt8(0) === 1;\n        let messageBuffer = data.slice(5);\n        if (compressed) {\n            messageBuffer = await this.decompressMessage(messageBuffer);\n        }\n        return messageBuffer;\n    }\n}\nclass IdentityHandler extends CompressionHandler {\n    async compressMessage(message) {\n        return message;\n    }\n    async writeMessage(message, compress) {\n        const output = Buffer.allocUnsafe(message.length + 5);\n        /* With \"identity\" compression, messages should always be marked as\n         * uncompressed */\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(message.length, 1);\n        message.copy(output, 5);\n        return output;\n    }\n    decompressMessage(message) {\n        return Promise.reject(new Error('Received compressed message but \"grpc-encoding\" header was identity'));\n    }\n}\nclass DeflateHandler extends CompressionHandler {\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.deflate(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.inflate(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n}\nclass GzipHandler extends CompressionHandler {\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.gzip(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.unzip(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n}\nclass UnknownHandler extends CompressionHandler {\n    constructor(compressionName) {\n        super();\n        this.compressionName = compressionName;\n    }\n    compressMessage(message) {\n        return Promise.reject(new Error(`Received message compressed with unsupported compression method ${this.compressionName}`));\n    }\n    decompressMessage(message) {\n        // This should be unreachable\n        return Promise.reject(new Error(`Compression method not supported: ${this.compressionName}`));\n    }\n}\nfunction getCompressionHandler(compressionName) {\n    switch (compressionName) {\n        case 'identity':\n            return new IdentityHandler();\n        case 'deflate':\n            return new DeflateHandler();\n        case 'gzip':\n            return new GzipHandler();\n        default:\n            return new UnknownHandler(compressionName);\n    }\n}\nclass CompressionFilter extends filter_1.BaseFilter {\n    constructor(channelOptions, sharedFilterConfig) {\n        var _a;\n        super();\n        this.sharedFilterConfig = sharedFilterConfig;\n        this.sendCompression = new IdentityHandler();\n        this.receiveCompression = new IdentityHandler();\n        this.currentCompressionAlgorithm = 'identity';\n        const compressionAlgorithmKey = channelOptions['grpc.default_compression_algorithm'];\n        if (compressionAlgorithmKey !== undefined) {\n            if (isCompressionAlgorithmKey(compressionAlgorithmKey)) {\n                const clientSelectedEncoding = compression_algorithms_1.CompressionAlgorithms[compressionAlgorithmKey];\n                const serverSupportedEncodings = (_a = sharedFilterConfig.serverSupportedEncodingHeader) === null || _a === void 0 ? void 0 : _a.split(',');\n                /**\n                 * There are two possible situations here:\n                 * 1) We don't have any info yet from the server about what compression it supports\n                 *    In that case we should just use what the client tells us to use\n                 * 2) We've previously received a response from the server including a grpc-accept-encoding header\n                 *    In that case we only want to use the encoding chosen by the client if the server supports it\n                 */\n                if (!serverSupportedEncodings ||\n                    serverSupportedEncodings.includes(clientSelectedEncoding)) {\n                    this.currentCompressionAlgorithm = clientSelectedEncoding;\n                    this.sendCompression = getCompressionHandler(this.currentCompressionAlgorithm);\n                }\n            }\n            else {\n                logging.log(constants_1.LogVerbosity.ERROR, `Invalid value provided for grpc.default_compression_algorithm option: ${compressionAlgorithmKey}`);\n            }\n        }\n    }\n    async sendMetadata(metadata) {\n        const headers = await metadata;\n        headers.set('grpc-accept-encoding', 'identity,deflate,gzip');\n        headers.set('accept-encoding', 'identity');\n        // No need to send the header if it's \"identity\" -  behavior is identical; save the bandwidth\n        if (this.currentCompressionAlgorithm === 'identity') {\n            headers.remove('grpc-encoding');\n        }\n        else {\n            headers.set('grpc-encoding', this.currentCompressionAlgorithm);\n        }\n        return headers;\n    }\n    receiveMetadata(metadata) {\n        const receiveEncoding = metadata.get('grpc-encoding');\n        if (receiveEncoding.length > 0) {\n            const encoding = receiveEncoding[0];\n            if (typeof encoding === 'string') {\n                this.receiveCompression = getCompressionHandler(encoding);\n            }\n        }\n        metadata.remove('grpc-encoding');\n        /* Check to see if the compression we're using to send messages is supported by the server\n         * If not, reset the sendCompression filter and have it use the default IdentityHandler */\n        const serverSupportedEncodingsHeader = metadata.get('grpc-accept-encoding')[0];\n        if (serverSupportedEncodingsHeader) {\n            this.sharedFilterConfig.serverSupportedEncodingHeader =\n                serverSupportedEncodingsHeader;\n            const serverSupportedEncodings = serverSupportedEncodingsHeader.split(',');\n            if (!serverSupportedEncodings.includes(this.currentCompressionAlgorithm)) {\n                this.sendCompression = new IdentityHandler();\n                this.currentCompressionAlgorithm = 'identity';\n            }\n        }\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    async sendMessage(message) {\n        var _a;\n        /* This filter is special. The input message is the bare message bytes,\n         * and the output is a framed and possibly compressed message. For this\n         * reason, this filter should be at the bottom of the filter stack */\n        const resolvedMessage = await message;\n        let compress;\n        if (this.sendCompression instanceof IdentityHandler) {\n            compress = false;\n        }\n        else {\n            compress = (((_a = resolvedMessage.flags) !== null && _a !== void 0 ? _a : 0) & 2 /* WriteFlags.NoCompress */) === 0;\n        }\n        return {\n            message: await this.sendCompression.writeMessage(resolvedMessage.message, compress),\n            flags: resolvedMessage.flags,\n        };\n    }\n    async receiveMessage(message) {\n        /* This filter is also special. The input message is framed and possibly\n         * compressed, and the output message is deframed and uncompressed. So\n         * this is another reason that this filter should be at the bottom of the\n         * filter stack. */\n        return this.receiveCompression.readMessage(await message);\n    }\n}\nexports.CompressionFilter = CompressionFilter;\nclass CompressionFilterFactory {\n    constructor(channel, options) {\n        this.options = options;\n        this.sharedFilterConfig = {};\n    }\n    createFilter() {\n        return new CompressionFilter(this.options, this.sharedFilterConfig);\n    }\n}\nexports.CompressionFilterFactory = CompressionFilterFactory;\n//# sourceMappingURL=compression-filter.js.map","\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectivityState = void 0;\nvar ConnectivityState;\n(function (ConnectivityState) {\n    ConnectivityState[ConnectivityState[\"IDLE\"] = 0] = \"IDLE\";\n    ConnectivityState[ConnectivityState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectivityState[ConnectivityState[\"READY\"] = 2] = \"READY\";\n    ConnectivityState[ConnectivityState[\"TRANSIENT_FAILURE\"] = 3] = \"TRANSIENT_FAILURE\";\n    ConnectivityState[ConnectivityState[\"SHUTDOWN\"] = 4] = \"SHUTDOWN\";\n})(ConnectivityState || (exports.ConnectivityState = ConnectivityState = {}));\n//# sourceMappingURL=connectivity-state.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = exports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = exports.Propagate = exports.LogVerbosity = exports.Status = void 0;\nvar Status;\n(function (Status) {\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n    Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status || (exports.Status = Status = {}));\nvar LogVerbosity;\n(function (LogVerbosity) {\n    LogVerbosity[LogVerbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogVerbosity[LogVerbosity[\"INFO\"] = 1] = \"INFO\";\n    LogVerbosity[LogVerbosity[\"ERROR\"] = 2] = \"ERROR\";\n    LogVerbosity[LogVerbosity[\"NONE\"] = 3] = \"NONE\";\n})(LogVerbosity || (exports.LogVerbosity = LogVerbosity = {}));\n/**\n * NOTE: This enum is not currently used in any implemented API in this\n * library. It is included only for type parity with the other implementation.\n */\nvar Propagate;\n(function (Propagate) {\n    Propagate[Propagate[\"DEADLINE\"] = 1] = \"DEADLINE\";\n    Propagate[Propagate[\"CENSUS_STATS_CONTEXT\"] = 2] = \"CENSUS_STATS_CONTEXT\";\n    Propagate[Propagate[\"CENSUS_TRACING_CONTEXT\"] = 4] = \"CENSUS_TRACING_CONTEXT\";\n    Propagate[Propagate[\"CANCELLATION\"] = 8] = \"CANCELLATION\";\n    // https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/propagation_bits.h#L43\n    Propagate[Propagate[\"DEFAULTS\"] = 65535] = \"DEFAULTS\";\n})(Propagate || (exports.Propagate = Propagate = {}));\n// -1 means unlimited\nexports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;\n// 4 MB default\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4 * 1024 * 1024;\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.restrictControlPlaneStatusCode = void 0;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [\n    constants_1.Status.OK,\n    constants_1.Status.INVALID_ARGUMENT,\n    constants_1.Status.NOT_FOUND,\n    constants_1.Status.ALREADY_EXISTS,\n    constants_1.Status.FAILED_PRECONDITION,\n    constants_1.Status.ABORTED,\n    constants_1.Status.OUT_OF_RANGE,\n    constants_1.Status.DATA_LOSS,\n];\nfunction restrictControlPlaneStatusCode(code, details) {\n    if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n        return {\n            code: constants_1.Status.INTERNAL,\n            details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`,\n        };\n    }\n    else {\n        return { code, details };\n    }\n}\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;\n//# sourceMappingURL=control-plane-status.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deadlineToString = exports.getRelativeTimeout = exports.getDeadlineTimeoutString = exports.minDeadline = void 0;\nfunction minDeadline(...deadlineList) {\n    let minValue = Infinity;\n    for (const deadline of deadlineList) {\n        const deadlineMsecs = deadline instanceof Date ? deadline.getTime() : deadline;\n        if (deadlineMsecs < minValue) {\n            minValue = deadlineMsecs;\n        }\n    }\n    return minValue;\n}\nexports.minDeadline = minDeadline;\nconst units = [\n    ['m', 1],\n    ['S', 1000],\n    ['M', 60 * 1000],\n    ['H', 60 * 60 * 1000],\n];\nfunction getDeadlineTimeoutString(deadline) {\n    const now = new Date().getTime();\n    if (deadline instanceof Date) {\n        deadline = deadline.getTime();\n    }\n    const timeoutMs = Math.max(deadline - now, 0);\n    for (const [unit, factor] of units) {\n        const amount = timeoutMs / factor;\n        if (amount < 1e8) {\n            return String(Math.ceil(amount)) + unit;\n        }\n    }\n    throw new Error('Deadline is too far in the future');\n}\nexports.getDeadlineTimeoutString = getDeadlineTimeoutString;\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nfunction getRelativeTimeout(deadline) {\n    const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n    const now = new Date().getTime();\n    const timeout = deadlineMs - now;\n    if (timeout < 0) {\n        return 0;\n    }\n    else if (timeout > MAX_TIMEOUT_TIME) {\n        return Infinity;\n    }\n    else {\n        return timeout;\n    }\n}\nexports.getRelativeTimeout = getRelativeTimeout;\nfunction deadlineToString(deadline) {\n    if (deadline instanceof Date) {\n        return deadline.toISOString();\n    }\n    else {\n        const dateDeadline = new Date(deadline);\n        if (Number.isNaN(dateDeadline.getTime())) {\n            return '' + deadline;\n        }\n        else {\n            return dateDeadline.toISOString();\n        }\n    }\n}\nexports.deadlineToString = deadlineToString;\n//# sourceMappingURL=deadline.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDuration = exports.durationToMs = exports.msToDuration = void 0;\nfunction msToDuration(millis) {\n    return {\n        seconds: (millis / 1000) | 0,\n        nanos: ((millis % 1000) * 1000000) | 0,\n    };\n}\nexports.msToDuration = msToDuration;\nfunction durationToMs(duration) {\n    return (duration.seconds * 1000 + duration.nanos / 1000000) | 0;\n}\nexports.durationToMs = durationToMs;\nfunction isDuration(value) {\n    return typeof value.seconds === 'number' && typeof value.nanos === 'number';\n}\nexports.isDuration = isDuration;\n//# sourceMappingURL=duration.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorCode = exports.getErrorMessage = void 0;\nfunction getErrorMessage(error) {\n    if (error instanceof Error) {\n        return error.message;\n    }\n    else {\n        return String(error);\n    }\n}\nexports.getErrorMessage = getErrorMessage;\nfunction getErrorCode(error) {\n    if (typeof error === 'object' &&\n        error !== null &&\n        'code' in error &&\n        typeof error.code === 'number') {\n        return error.code;\n    }\n    else {\n        return null;\n    }\n}\nexports.getErrorCode = getErrorCode;\n//# sourceMappingURL=error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutlierDetectionLoadBalancingConfig = exports.BaseSubchannelWrapper = exports.registerAdminService = exports.FilterStackFactory = exports.BaseFilter = exports.PickResultType = exports.QueuePicker = exports.UnavailablePicker = exports.ChildLoadBalancerHandler = exports.subchannelAddressToString = exports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = exports.BackoffTimeout = exports.durationToMs = exports.uriToString = exports.createResolver = exports.registerResolver = exports.log = exports.trace = void 0;\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"trace\", { enumerable: true, get: function () { return logging_1.trace; } });\nObject.defineProperty(exports, \"log\", { enumerable: true, get: function () { return logging_1.log; } });\nvar resolver_1 = require(\"./resolver\");\nObject.defineProperty(exports, \"registerResolver\", { enumerable: true, get: function () { return resolver_1.registerResolver; } });\nObject.defineProperty(exports, \"createResolver\", { enumerable: true, get: function () { return resolver_1.createResolver; } });\nvar uri_parser_1 = require(\"./uri-parser\");\nObject.defineProperty(exports, \"uriToString\", { enumerable: true, get: function () { return uri_parser_1.uriToString; } });\nvar duration_1 = require(\"./duration\");\nObject.defineProperty(exports, \"durationToMs\", { enumerable: true, get: function () { return duration_1.durationToMs; } });\nvar backoff_timeout_1 = require(\"./backoff-timeout\");\nObject.defineProperty(exports, \"BackoffTimeout\", { enumerable: true, get: function () { return backoff_timeout_1.BackoffTimeout; } });\nvar load_balancer_1 = require(\"./load-balancer\");\nObject.defineProperty(exports, \"createChildChannelControlHelper\", { enumerable: true, get: function () { return load_balancer_1.createChildChannelControlHelper; } });\nObject.defineProperty(exports, \"registerLoadBalancerType\", { enumerable: true, get: function () { return load_balancer_1.registerLoadBalancerType; } });\nObject.defineProperty(exports, \"getFirstUsableConfig\", { enumerable: true, get: function () { return load_balancer_1.getFirstUsableConfig; } });\nObject.defineProperty(exports, \"validateLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_1.validateLoadBalancingConfig; } });\nvar subchannel_address_1 = require(\"./subchannel-address\");\nObject.defineProperty(exports, \"subchannelAddressToString\", { enumerable: true, get: function () { return subchannel_address_1.subchannelAddressToString; } });\nvar load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nObject.defineProperty(exports, \"ChildLoadBalancerHandler\", { enumerable: true, get: function () { return load_balancer_child_handler_1.ChildLoadBalancerHandler; } });\nvar picker_1 = require(\"./picker\");\nObject.defineProperty(exports, \"UnavailablePicker\", { enumerable: true, get: function () { return picker_1.UnavailablePicker; } });\nObject.defineProperty(exports, \"QueuePicker\", { enumerable: true, get: function () { return picker_1.QueuePicker; } });\nObject.defineProperty(exports, \"PickResultType\", { enumerable: true, get: function () { return picker_1.PickResultType; } });\nvar filter_1 = require(\"./filter\");\nObject.defineProperty(exports, \"BaseFilter\", { enumerable: true, get: function () { return filter_1.BaseFilter; } });\nvar filter_stack_1 = require(\"./filter-stack\");\nObject.defineProperty(exports, \"FilterStackFactory\", { enumerable: true, get: function () { return filter_stack_1.FilterStackFactory; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"registerAdminService\", { enumerable: true, get: function () { return admin_1.registerAdminService; } });\nvar subchannel_interface_1 = require(\"./subchannel-interface\");\nObject.defineProperty(exports, \"BaseSubchannelWrapper\", { enumerable: true, get: function () { return subchannel_interface_1.BaseSubchannelWrapper; } });\nvar load_balancer_outlier_detection_1 = require(\"./load-balancer-outlier-detection\");\nObject.defineProperty(exports, \"OutlierDetectionLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_outlier_detection_1.OutlierDetectionLoadBalancingConfig; } });\n//# sourceMappingURL=experimental.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n    constructor(filters) {\n        this.filters = filters;\n    }\n    sendMetadata(metadata) {\n        let result = metadata;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMetadata(result);\n        }\n        return result;\n    }\n    receiveMetadata(metadata) {\n        let result = metadata;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMetadata(result);\n        }\n        return result;\n    }\n    sendMessage(message) {\n        let result = message;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMessage(result);\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        let result = message;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMessage(result);\n        }\n        return result;\n    }\n    receiveTrailers(status) {\n        let result = status;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveTrailers(result);\n        }\n        return result;\n    }\n    push(filters) {\n        this.filters.unshift(...filters);\n    }\n    getFilters() {\n        return this.filters;\n    }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    push(filterFactories) {\n        this.factories.unshift(...filterFactories);\n    }\n    clone() {\n        return new FilterStackFactory([...this.factories]);\n    }\n    createFilter() {\n        return new FilterStack(this.factories.map(factory => factory.createFilter()));\n    }\n}\nexports.FilterStackFactory = FilterStackFactory;\n//# sourceMappingURL=filter-stack.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseFilter = void 0;\nclass BaseFilter {\n    async sendMetadata(metadata) {\n        return metadata;\n    }\n    receiveMetadata(metadata) {\n        return metadata;\n    }\n    async sendMessage(message) {\n        return message;\n    }\n    async receiveMessage(message) {\n        return message;\n    }\n    receiveTrailers(status) {\n        return status;\n    }\n}\nexports.BaseFilter = BaseFilter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxiedConnection = exports.mapProxyName = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst resolver_1 = require(\"./resolver\");\nconst http = require(\"http\");\nconst tls = require(\"tls\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst url_1 = require(\"url\");\nconst TRACER_NAME = 'proxy';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nfunction getProxyInfo() {\n    let proxyEnv = '';\n    let envVar = '';\n    /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n     * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n     * fallback behavior can be removed if there's a demand for it.\n     */\n    if (process.env.grpc_proxy) {\n        envVar = 'grpc_proxy';\n        proxyEnv = process.env.grpc_proxy;\n    }\n    else if (process.env.https_proxy) {\n        envVar = 'https_proxy';\n        proxyEnv = process.env.https_proxy;\n    }\n    else if (process.env.http_proxy) {\n        envVar = 'http_proxy';\n        proxyEnv = process.env.http_proxy;\n    }\n    else {\n        return {};\n    }\n    let proxyUrl;\n    try {\n        proxyUrl = new url_1.URL(proxyEnv);\n    }\n    catch (e) {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n        return {};\n    }\n    if (proxyUrl.protocol !== 'http:') {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`);\n        return {};\n    }\n    let userCred = null;\n    if (proxyUrl.username) {\n        if (proxyUrl.password) {\n            (0, logging_1.log)(constants_1.LogVerbosity.INFO, 'userinfo found in proxy URI');\n            userCred = `${proxyUrl.username}:${proxyUrl.password}`;\n        }\n        else {\n            userCred = proxyUrl.username;\n        }\n    }\n    const hostname = proxyUrl.hostname;\n    let port = proxyUrl.port;\n    /* The proxy URL uses the scheme \"http:\", which has a default port number of\n     * 80. We need to set that explicitly here if it is omitted because otherwise\n     * it will use gRPC's default port 443. */\n    if (port === '') {\n        port = '80';\n    }\n    const result = {\n        address: `${hostname}:${port}`,\n    };\n    if (userCred) {\n        result.creds = userCred;\n    }\n    trace('Proxy server ' + result.address + ' set by environment variable ' + envVar);\n    return result;\n}\nfunction getNoProxyHostList() {\n    /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n    let noProxyStr = process.env.no_grpc_proxy;\n    let envVar = 'no_grpc_proxy';\n    if (!noProxyStr) {\n        noProxyStr = process.env.no_proxy;\n        envVar = 'no_proxy';\n    }\n    if (noProxyStr) {\n        trace('No proxy server list set by environment variable ' + envVar);\n        return noProxyStr.split(',');\n    }\n    else {\n        return [];\n    }\n}\nfunction mapProxyName(target, options) {\n    var _a;\n    const noProxyResult = {\n        target: target,\n        extraOptions: {},\n    };\n    if (((_a = options['grpc.enable_http_proxy']) !== null && _a !== void 0 ? _a : 1) === 0) {\n        return noProxyResult;\n    }\n    if (target.scheme === 'unix') {\n        return noProxyResult;\n    }\n    const proxyInfo = getProxyInfo();\n    if (!proxyInfo.address) {\n        return noProxyResult;\n    }\n    const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n    if (!hostPort) {\n        return noProxyResult;\n    }\n    const serverHost = hostPort.host;\n    for (const host of getNoProxyHostList()) {\n        if (host === serverHost) {\n            trace('Not using proxy for target in no_proxy list: ' + (0, uri_parser_1.uriToString)(target));\n            return noProxyResult;\n        }\n    }\n    const extraOptions = {\n        'grpc.http_connect_target': (0, uri_parser_1.uriToString)(target),\n    };\n    if (proxyInfo.creds) {\n        extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n    }\n    return {\n        target: {\n            scheme: 'dns',\n            path: proxyInfo.address,\n        },\n        extraOptions: extraOptions,\n    };\n}\nexports.mapProxyName = mapProxyName;\nfunction getProxiedConnection(address, channelOptions, connectionOptions) {\n    if (!('grpc.http_connect_target' in channelOptions)) {\n        return Promise.resolve({});\n    }\n    const realTarget = channelOptions['grpc.http_connect_target'];\n    const parsedTarget = (0, uri_parser_1.parseUri)(realTarget);\n    if (parsedTarget === null) {\n        return Promise.resolve({});\n    }\n    const options = {\n        method: 'CONNECT',\n        path: parsedTarget.path,\n    };\n    const headers = {\n        Host: parsedTarget.path,\n    };\n    // Connect to the subchannel address as a proxy\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n        options.host = address.host;\n        options.port = address.port;\n    }\n    else {\n        options.socketPath = address.path;\n    }\n    if ('grpc.http_connect_creds' in channelOptions) {\n        headers['Proxy-Authorization'] =\n            'Basic ' +\n                Buffer.from(channelOptions['grpc.http_connect_creds']).toString('base64');\n    }\n    options.headers = headers;\n    const proxyAddressString = (0, subchannel_address_1.subchannelAddressToString)(address);\n    trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n    return new Promise((resolve, reject) => {\n        const request = http.request(options);\n        request.once('connect', (res, socket, head) => {\n            var _a;\n            request.removeAllListeners();\n            socket.removeAllListeners();\n            if (res.statusCode === 200) {\n                trace('Successfully connected to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString);\n                if ('secureContext' in connectionOptions) {\n                    /* The proxy is connecting to a TLS server, so upgrade this socket\n                     * connection to a TLS connection.\n                     * This is a workaround for https://github.com/nodejs/node/issues/32922\n                     * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)(parsedTarget);\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    const remoteHost = (_a = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _a !== void 0 ? _a : targetPath;\n                    const cts = tls.connect(Object.assign({ host: remoteHost, servername: remoteHost, socket: socket }, connectionOptions), () => {\n                        trace('Successfully established a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString);\n                        resolve({ socket: cts, realTarget: parsedTarget });\n                    });\n                    cts.on('error', (error) => {\n                        trace('Failed to establish a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString +\n                            ' with error ' +\n                            error.message);\n                        reject();\n                    });\n                }\n                else {\n                    trace('Successfully established a plaintext connection to ' +\n                        options.path +\n                        ' through proxy ' +\n                        proxyAddressString);\n                    resolve({\n                        socket,\n                        realTarget: parsedTarget,\n                    });\n                }\n            }\n            else {\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString +\n                    ' with status ' +\n                    res.statusCode);\n                reject();\n            }\n        });\n        request.once('error', err => {\n            request.removeAllListeners();\n            (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to proxy ' +\n                proxyAddressString +\n                ' with error ' +\n                err.message);\n            reject();\n        });\n        request.end();\n    });\n}\nexports.getProxiedConnection = getProxiedConnection;\n//# sourceMappingURL=http_proxy.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.experimental = exports.addAdminServicesToServer = exports.getChannelzHandlers = exports.getChannelzServiceDefinition = exports.InterceptorConfigurationError = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.StatusBuilder = exports.getClientChannel = exports.ServerCredentials = exports.Server = exports.setLogVerbosity = exports.setLogger = exports.load = exports.loadObject = exports.CallCredentials = exports.ChannelCredentials = exports.waitForClientReady = exports.closeClient = exports.Channel = exports.makeGenericClientConstructor = exports.makeClientConstructor = exports.loadPackageDefinition = exports.Client = exports.compressionAlgorithms = exports.propagate = exports.connectivityState = exports.status = exports.logVerbosity = exports.Metadata = exports.credentials = void 0;\nconst call_credentials_1 = require(\"./call-credentials\");\nObject.defineProperty(exports, \"CallCredentials\", { enumerable: true, get: function () { return call_credentials_1.CallCredentials; } });\nconst channel_1 = require(\"./channel\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function () { return channel_1.ChannelImplementation; } });\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nObject.defineProperty(exports, \"compressionAlgorithms\", { enumerable: true, get: function () { return compression_algorithms_1.CompressionAlgorithms; } });\nconst connectivity_state_1 = require(\"./connectivity-state\");\nObject.defineProperty(exports, \"connectivityState\", { enumerable: true, get: function () { return connectivity_state_1.ConnectivityState; } });\nconst channel_credentials_1 = require(\"./channel-credentials\");\nObject.defineProperty(exports, \"ChannelCredentials\", { enumerable: true, get: function () { return channel_credentials_1.ChannelCredentials; } });\nconst client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\nconst constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"logVerbosity\", { enumerable: true, get: function () { return constants_1.LogVerbosity; } });\nObject.defineProperty(exports, \"status\", { enumerable: true, get: function () { return constants_1.Status; } });\nObject.defineProperty(exports, \"propagate\", { enumerable: true, get: function () { return constants_1.Propagate; } });\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nObject.defineProperty(exports, \"loadPackageDefinition\", { enumerable: true, get: function () { return make_client_1.loadPackageDefinition; } });\nObject.defineProperty(exports, \"makeClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nObject.defineProperty(exports, \"makeGenericClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nconst metadata_1 = require(\"./metadata\");\nObject.defineProperty(exports, \"Metadata\", { enumerable: true, get: function () { return metadata_1.Metadata; } });\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst server_credentials_1 = require(\"./server-credentials\");\nObject.defineProperty(exports, \"ServerCredentials\", { enumerable: true, get: function () { return server_credentials_1.ServerCredentials; } });\nconst status_builder_1 = require(\"./status-builder\");\nObject.defineProperty(exports, \"StatusBuilder\", { enumerable: true, get: function () { return status_builder_1.StatusBuilder; } });\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = {\n    /**\n     * Combine a ChannelCredentials with any number of CallCredentials into a\n     * single ChannelCredentials object.\n     * @param channelCredentials The ChannelCredentials object.\n     * @param callCredentials Any number of CallCredentials objects.\n     * @return The resulting ChannelCredentials object.\n     */\n    combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n        return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n    },\n    /**\n     * Combine any number of CallCredentials into a single CallCredentials\n     * object.\n     * @param first The first CallCredentials object.\n     * @param additional Any number of additional CallCredentials objects.\n     * @return The resulting CallCredentials object.\n     */\n    combineCallCredentials: (first, ...additional) => {\n        return additional.reduce((acc, other) => acc.compose(other), first);\n    },\n    // from channel-credentials.ts\n    createInsecure: channel_credentials_1.ChannelCredentials.createInsecure,\n    createSsl: channel_credentials_1.ChannelCredentials.createSsl,\n    createFromSecureContext: channel_credentials_1.ChannelCredentials.createFromSecureContext,\n    // from call-credentials.ts\n    createFromMetadataGenerator: call_credentials_1.CallCredentials.createFromMetadataGenerator,\n    createFromGoogleCredential: call_credentials_1.CallCredentials.createFromGoogleCredential,\n    createEmpty: call_credentials_1.CallCredentials.createEmpty,\n};\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nconst closeClient = (client) => client.close();\nexports.closeClient = closeClient;\nconst waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\nexports.waitForClientReady = waitForClientReady;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n/**** Unimplemented function stubs ****/\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst loadObject = (value, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.loadObject = loadObject;\nconst load = (filename, format, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = load;\nconst setLogger = (logger) => {\n    logging.setLogger(logger);\n};\nexports.setLogger = setLogger;\nconst setLogVerbosity = (verbosity) => {\n    logging.setLoggerVerbosity(verbosity);\n};\nexports.setLogVerbosity = setLogVerbosity;\nconst getClientChannel = (client) => {\n    return client_1.Client.prototype.getChannel.call(client);\n};\nexports.getClientChannel = getClientChannel;\nvar client_interceptors_1 = require(\"./client-interceptors\");\nObject.defineProperty(exports, \"ListenerBuilder\", { enumerable: true, get: function () { return client_interceptors_1.ListenerBuilder; } });\nObject.defineProperty(exports, \"RequesterBuilder\", { enumerable: true, get: function () { return client_interceptors_1.RequesterBuilder; } });\nObject.defineProperty(exports, \"InterceptingCall\", { enumerable: true, get: function () { return client_interceptors_1.InterceptingCall; } });\nObject.defineProperty(exports, \"InterceptorConfigurationError\", { enumerable: true, get: function () { return client_interceptors_1.InterceptorConfigurationError; } });\nvar channelz_1 = require(\"./channelz\");\nObject.defineProperty(exports, \"getChannelzServiceDefinition\", { enumerable: true, get: function () { return channelz_1.getChannelzServiceDefinition; } });\nObject.defineProperty(exports, \"getChannelzHandlers\", { enumerable: true, get: function () { return channelz_1.getChannelzHandlers; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"addAdminServicesToServer\", { enumerable: true, get: function () { return admin_1.addAdminServicesToServer; } });\nconst experimental = require(\"./experimental\");\nexports.experimental = experimental;\nconst resolver_dns = require(\"./resolver-dns\");\nconst resolver_uds = require(\"./resolver-uds\");\nconst resolver_ip = require(\"./resolver-ip\");\nconst load_balancer_pick_first = require(\"./load-balancer-pick-first\");\nconst load_balancer_round_robin = require(\"./load-balancer-round-robin\");\nconst load_balancer_outlier_detection = require(\"./load-balancer-outlier-detection\");\nconst channelz = require(\"./channelz\");\nconst clientVersion = require('../../package.json').version;\n(() => {\n    logging.trace(constants_1.LogVerbosity.DEBUG, 'index', 'Loading @grpc/grpc-js version ' + clientVersion);\n    resolver_dns.setup();\n    resolver_uds.setup();\n    resolver_ip.setup();\n    load_balancer_pick_first.setup();\n    load_balancer_round_robin.setup();\n    load_balancer_outlier_detection.setup();\n    channelz.setup();\n})();\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalChannel = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst resolving_load_balancer_1 = require(\"./resolving-load-balancer\");\nconst subchannel_pool_1 = require(\"./subchannel-pool\");\nconst picker_1 = require(\"./picker\");\nconst constants_1 = require(\"./constants\");\nconst filter_stack_1 = require(\"./filter-stack\");\nconst compression_filter_1 = require(\"./compression-filter\");\nconst resolver_1 = require(\"./resolver\");\nconst logging_1 = require(\"./logging\");\nconst max_message_size_filter_1 = require(\"./max-message-size-filter\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst channelz_1 = require(\"./channelz\");\nconst load_balancing_call_1 = require(\"./load-balancing-call\");\nconst deadline_1 = require(\"./deadline\");\nconst resolving_call_1 = require(\"./resolving-call\");\nconst call_number_1 = require(\"./call-number\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst retrying_call_1 = require(\"./retrying-call\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\n/**\n * See https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_args\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\nconst MIN_IDLE_TIMEOUT_MS = 1000;\n// 30 minutes\nconst DEFAULT_IDLE_TIMEOUT_MS = 30 * 60 * 1000;\nconst RETRY_THROTTLER_MAP = new Map();\nconst DEFAULT_RETRY_BUFFER_SIZE_BYTES = 1 << 24; // 16 MB\nconst DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES = 1 << 20; // 1 MB\nclass ChannelSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, channel) {\n        super(childSubchannel);\n        this.channel = channel;\n        this.refCount = 0;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime) => {\n            channel.throttleKeepalive(keepaliveTime);\n        };\n        childSubchannel.addConnectivityStateListener(this.subchannelStateListener);\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            this.child.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channel.removeWrappedSubchannel(this);\n        }\n    }\n}\nclass InternalChannel {\n    constructor(target, credentials, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.credentials = credentials;\n        this.options = options;\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentPicker = new picker_1.UnavailablePicker();\n        /**\n         * Calls queued up to get a call config. Should only be populated before the\n         * first time the resolver returns a result, which includes the ConfigSelector.\n         */\n        this.configSelectionQueue = [];\n        this.pickQueue = [];\n        this.connectivityStateWatchers = [];\n        this.configSelector = null;\n        /**\n         * This is the error from the name resolver if it failed most recently. It\n         * is only used to end calls that start while there is no config selector\n         * and the name resolver is in backoff, so it should be nulled if\n         * configSelector becomes set or the channel state becomes anything other\n         * than TRANSIENT_FAILURE.\n         */\n        this.currentResolutionError = null;\n        this.wrappedSubchannels = new Set();\n        this.callCount = 0;\n        this.idleTimer = null;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.originalTarget = target;\n        const originalTargetUri = (0, uri_parser_1.parseUri)(target);\n        if (originalTargetUri === null) {\n            throw new Error(`Could not parse target name \"${target}\"`);\n        }\n        /* This ensures that the target has a scheme that is registered with the\n         * resolver */\n        const defaultSchemeMapResult = (0, resolver_1.mapUriDefaultScheme)(originalTargetUri);\n        if (defaultSchemeMapResult === null) {\n            throw new Error(`Could not find a default scheme for target name \"${target}\"`);\n        }\n        this.callRefTimer = setInterval(() => { }, MAX_TIMEOUT_TIME);\n        (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzChannel)(target, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Channel created');\n        }\n        if (this.options['grpc.default_authority']) {\n            this.defaultAuthority = this.options['grpc.default_authority'];\n        }\n        else {\n            this.defaultAuthority = (0, resolver_1.getDefaultAuthority)(defaultSchemeMapResult);\n        }\n        const proxyMapResult = (0, http_proxy_1.mapProxyName)(defaultSchemeMapResult, options);\n        this.target = proxyMapResult.target;\n        this.options = Object.assign({}, this.options, proxyMapResult.extraOptions);\n        /* The global boolean parameter to getSubchannelPool has the inverse meaning to what\n         * the grpc.use_local_subchannel_pool channel option means. */\n        this.subchannelPool = (0, subchannel_pool_1.getSubchannelPool)(((_c = options['grpc.use_local_subchannel_pool']) !== null && _c !== void 0 ? _c : 0) === 0);\n        this.retryBufferTracker = new retrying_call_1.MessageBufferTracker((_d = options['grpc.retry_buffer_size']) !== null && _d !== void 0 ? _d : DEFAULT_RETRY_BUFFER_SIZE_BYTES, (_e = options['grpc.per_rpc_retry_buffer_size']) !== null && _e !== void 0 ? _e : DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES);\n        this.keepaliveTime = (_f = options['grpc.keepalive_time_ms']) !== null && _f !== void 0 ? _f : -1;\n        this.idleTimeoutMs = Math.max((_g = options['grpc.client_idle_timeout_ms']) !== null && _g !== void 0 ? _g : DEFAULT_IDLE_TIMEOUT_MS, MIN_IDLE_TIMEOUT_MS);\n        const channelControlHelper = {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const subchannel = this.subchannelPool.getOrCreateSubchannel(this.target, subchannelAddress, Object.assign({}, this.options, subchannelArgs), this.credentials);\n                subchannel.throttleKeepalive(this.keepaliveTime);\n                if (this.channelzEnabled) {\n                    this.channelzTrace.addTrace('CT_INFO', 'Created subchannel or used existing subchannel', subchannel.getChannelzRef());\n                }\n                const wrappedSubchannel = new ChannelSubchannelWrapper(subchannel, this);\n                this.wrappedSubchannels.add(wrappedSubchannel);\n                return wrappedSubchannel;\n            },\n            updateState: (connectivityState, picker) => {\n                this.currentPicker = picker;\n                const queueCopy = this.pickQueue.slice();\n                this.pickQueue = [];\n                this.callRefTimerUnref();\n                for (const call of queueCopy) {\n                    call.doPick();\n                }\n                this.updateState(connectivityState);\n            },\n            requestReresolution: () => {\n                // This should never be called.\n                throw new Error('Resolving load balancer should never call requestReresolution');\n            },\n            addChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(child);\n                }\n            },\n            removeChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.unrefChild(child);\n                }\n            },\n        };\n        this.resolvingLoadBalancer = new resolving_load_balancer_1.ResolvingLoadBalancer(this.target, channelControlHelper, options, (serviceConfig, configSelector) => {\n            if (serviceConfig.retryThrottling) {\n                RETRY_THROTTLER_MAP.set(this.getTarget(), new retrying_call_1.RetryThrottler(serviceConfig.retryThrottling.maxTokens, serviceConfig.retryThrottling.tokenRatio, RETRY_THROTTLER_MAP.get(this.getTarget())));\n            }\n            else {\n                RETRY_THROTTLER_MAP.delete(this.getTarget());\n            }\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Address resolution succeeded');\n            }\n            this.configSelector = configSelector;\n            this.currentResolutionError = null;\n            /* We process the queue asynchronously to ensure that the corresponding\n             * load balancer update has completed. */\n            process.nextTick(() => {\n                const localQueue = this.configSelectionQueue;\n                this.configSelectionQueue = [];\n                this.callRefTimerUnref();\n                for (const call of localQueue) {\n                    call.getConfig();\n                }\n                this.configSelectionQueue = [];\n            });\n        }, status => {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_WARNING', 'Address resolution failed with code ' +\n                    status.code +\n                    ' and details \"' +\n                    status.details +\n                    '\"');\n            }\n            if (this.configSelectionQueue.length > 0) {\n                this.trace('Name resolution failed with calls queued for config selection');\n            }\n            if (this.configSelector === null) {\n                this.currentResolutionError = Object.assign(Object.assign({}, (0, control_plane_status_1.restrictControlPlaneStatusCode)(status.code, status.details)), { metadata: status.metadata });\n            }\n            const localQueue = this.configSelectionQueue;\n            this.configSelectionQueue = [];\n            this.callRefTimerUnref();\n            for (const call of localQueue) {\n                call.reportResolverError(status);\n            }\n        });\n        this.filterStackFactory = new filter_stack_1.FilterStackFactory([\n            new max_message_size_filter_1.MaxMessageSizeFilterFactory(this.options),\n            new compression_filter_1.CompressionFilterFactory(this, this.options),\n        ]);\n        this.trace('Channel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n        const error = new Error();\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'channel_stacktrace', '(' +\n            this.channelzRef.id +\n            ') ' +\n            'Channel constructed \\n' +\n            ((_h = error.stack) === null || _h === void 0 ? void 0 : _h.substring(error.stack.indexOf('\\n') + 1)));\n    }\n    getChannelzInfo() {\n        return {\n            target: this.originalTarget,\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n        };\n    }\n    trace(text, verbosityOverride) {\n        (0, logging_1.trace)(verbosityOverride !== null && verbosityOverride !== void 0 ? verbosityOverride : constants_1.LogVerbosity.DEBUG, 'channel', '(' + this.channelzRef.id + ') ' + (0, uri_parser_1.uriToString)(this.target) + ' ' + text);\n    }\n    callRefTimerRef() {\n        var _a, _b, _c, _d;\n        // If the hasRef function does not exist, always run the code\n        if (!((_b = (_a = this.callRefTimer).hasRef) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n            this.trace('callRefTimer.ref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_d = (_c = this.callRefTimer).ref) === null || _d === void 0 ? void 0 : _d.call(_c);\n        }\n    }\n    callRefTimerUnref() {\n        var _a, _b;\n        // If the hasRef function does not exist, always run the code\n        if (!this.callRefTimer.hasRef || this.callRefTimer.hasRef()) {\n            this.trace('callRefTimer.unref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    removeConnectivityStateWatcher(watcherObject) {\n        const watcherIndex = this.connectivityStateWatchers.findIndex(value => value === watcherObject);\n        if (watcherIndex >= 0) {\n            this.connectivityStateWatchers.splice(watcherIndex, 1);\n        }\n    }\n    updateState(newState) {\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'connectivity_state', '(' +\n            this.channelzRef.id +\n            ') ' +\n            (0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        this.connectivityState = newState;\n        const watchersCopy = this.connectivityStateWatchers.slice();\n        for (const watcherObject of watchersCopy) {\n            if (newState !== watcherObject.currentState) {\n                if (watcherObject.timer) {\n                    clearTimeout(watcherObject.timer);\n                }\n                this.removeConnectivityStateWatcher(watcherObject);\n                watcherObject.callback();\n            }\n        }\n        if (newState !== connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            this.currentResolutionError = null;\n        }\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n            for (const wrappedSubchannel of this.wrappedSubchannels) {\n                wrappedSubchannel.throttleKeepalive(newKeepaliveTime);\n            }\n        }\n    }\n    removeWrappedSubchannel(wrappedSubchannel) {\n        this.wrappedSubchannels.delete(wrappedSubchannel);\n    }\n    doPick(metadata, extraPickInfo) {\n        return this.currentPicker.pick({\n            metadata: metadata,\n            extraPickInfo: extraPickInfo,\n        });\n    }\n    queueCallForPick(call) {\n        this.pickQueue.push(call);\n        this.callRefTimerRef();\n    }\n    getConfig(method, metadata) {\n        this.resolvingLoadBalancer.exitIdle();\n        if (this.configSelector) {\n            return {\n                type: 'SUCCESS',\n                config: this.configSelector(method, metadata),\n            };\n        }\n        else {\n            if (this.currentResolutionError) {\n                return {\n                    type: 'ERROR',\n                    error: this.currentResolutionError,\n                };\n            }\n            else {\n                return {\n                    type: 'NONE',\n                };\n            }\n        }\n    }\n    queueCallForConfig(call) {\n        this.configSelectionQueue.push(call);\n        this.callRefTimerRef();\n    }\n    enterIdle() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE);\n        this.currentPicker = new picker_1.QueuePicker(this.resolvingLoadBalancer);\n    }\n    maybeStartIdleTimer() {\n        var _a, _b;\n        if (this.callCount === 0) {\n            this.idleTimer = setTimeout(() => {\n                this.trace('Idle timer triggered after ' +\n                    this.idleTimeoutMs +\n                    'ms of inactivity');\n                this.enterIdle();\n            }, this.idleTimeoutMs);\n            (_b = (_a = this.idleTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    onCallStart() {\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n        }\n        this.callCount += 1;\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n    }\n    onCallEnd(status) {\n        if (this.channelzEnabled) {\n            if (status.code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        }\n        this.callCount -= 1;\n        this.maybeStartIdleTimer();\n    }\n    createLoadBalancingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createLoadBalancingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new load_balancing_call_1.LoadBalancingCall(this, callConfig, method, host, credentials, deadline, callNumber);\n    }\n    createRetryingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createRetryingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new retrying_call_1.RetryingCall(this, callConfig, method, host, credentials, deadline, callNumber, this.retryBufferTracker, RETRY_THROTTLER_MAP.get(this.getTarget()));\n    }\n    createInnerCall(callConfig, method, host, credentials, deadline) {\n        // Create a RetryingCall if retries are enabled\n        if (this.options['grpc.enable_retries'] === 0) {\n            return this.createLoadBalancingCall(callConfig, method, host, credentials, deadline);\n        }\n        else {\n            return this.createRetryingCall(callConfig, method, host, credentials, deadline);\n        }\n    }\n    createResolvingCall(method, deadline, host, parentCall, propagateFlags) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createResolvingCall [' +\n            callNumber +\n            '] method=\"' +\n            method +\n            '\", deadline=' +\n            (0, deadline_1.deadlineToString)(deadline));\n        const finalOptions = {\n            deadline: deadline,\n            flags: propagateFlags !== null && propagateFlags !== void 0 ? propagateFlags : constants_1.Propagate.DEFAULTS,\n            host: host !== null && host !== void 0 ? host : this.defaultAuthority,\n            parentCall: parentCall,\n        };\n        const call = new resolving_call_1.ResolvingCall(this, method, finalOptions, this.filterStackFactory.clone(), this.credentials._getCallCredentials(), callNumber);\n        this.onCallStart();\n        call.addStatusWatcher(status => {\n            this.onCallEnd(status);\n        });\n        return call;\n    }\n    close() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.SHUTDOWN);\n        clearInterval(this.callRefTimer);\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n        this.subchannelPool.unrefUnusedSubchannels();\n    }\n    getTarget() {\n        return (0, uri_parser_1.uriToString)(this.target);\n    }\n    getConnectivityState(tryToConnect) {\n        const connectivityState = this.connectivityState;\n        if (tryToConnect) {\n            this.resolvingLoadBalancer.exitIdle();\n            this.maybeStartIdleTimer();\n        }\n        return connectivityState;\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        let timer = null;\n        if (deadline !== Infinity) {\n            const deadlineDate = deadline instanceof Date ? deadline : new Date(deadline);\n            const now = new Date();\n            if (deadline === -Infinity || deadlineDate <= now) {\n                process.nextTick(callback, new Error('Deadline passed without connectivity state change'));\n                return;\n            }\n            timer = setTimeout(() => {\n                this.removeConnectivityStateWatcher(watcherObject);\n                callback(new Error('Deadline passed without connectivity state change'));\n            }, deadlineDate.getTime() - now.getTime());\n        }\n        const watcherObject = {\n            currentState,\n            callback,\n            timer,\n        };\n        this.connectivityStateWatchers.push(watcherObject);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        return this.createResolvingCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.InternalChannel = InternalChannel;\n//# sourceMappingURL=internal-channel.js.map","\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.currentChild = null;\n        this.pendingChild = null;\n        this.latestConfig = null;\n        this.ChildPolicyHelper = class {\n            constructor(parent) {\n                this.parent = parent;\n                this.child = null;\n            }\n            createSubchannel(subchannelAddress, subchannelArgs) {\n                return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n            }\n            updateState(connectivityState, picker) {\n                var _a;\n                if (this.calledByPendingChild()) {\n                    if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                        return;\n                    }\n                    (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.parent.currentChild = this.parent.pendingChild;\n                    this.parent.pendingChild = null;\n                }\n                else if (!this.calledByCurrentChild()) {\n                    return;\n                }\n                this.parent.channelControlHelper.updateState(connectivityState, picker);\n            }\n            requestReresolution() {\n                var _a;\n                const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n                if (this.child === latestChild) {\n                    this.parent.channelControlHelper.requestReresolution();\n                }\n            }\n            setChild(newChild) {\n                this.child = newChild;\n            }\n            addChannelzChild(child) {\n                this.parent.channelControlHelper.addChannelzChild(child);\n            }\n            removeChannelzChild(child) {\n                this.parent.channelControlHelper.removeChannelzChild(child);\n            }\n            calledByPendingChild() {\n                return this.child === this.parent.pendingChild;\n            }\n            calledByCurrentChild() {\n                return this.child === this.parent.currentChild;\n            }\n        };\n    }\n    configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n        return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n    }\n    /**\n     * Prerequisites: lbConfig !== null and lbConfig.name is registered\n     * @param addressList\n     * @param lbConfig\n     * @param attributes\n     */\n    updateAddressList(addressList, lbConfig, attributes) {\n        let childToUpdate;\n        if (this.currentChild === null ||\n            this.latestConfig === null ||\n            this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n            const newHelper = new this.ChildPolicyHelper(this);\n            const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper);\n            newHelper.setChild(newChild);\n            if (this.currentChild === null) {\n                this.currentChild = newChild;\n                childToUpdate = this.currentChild;\n            }\n            else {\n                if (this.pendingChild) {\n                    this.pendingChild.destroy();\n                }\n                this.pendingChild = newChild;\n                childToUpdate = this.pendingChild;\n            }\n        }\n        else {\n            if (this.pendingChild === null) {\n                childToUpdate = this.currentChild;\n            }\n            else {\n                childToUpdate = this.pendingChild;\n            }\n        }\n        this.latestConfig = lbConfig;\n        childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n    }\n    exitIdle() {\n        if (this.currentChild) {\n            this.currentChild.exitIdle();\n            if (this.pendingChild) {\n                this.pendingChild.exitIdle();\n            }\n        }\n    }\n    resetBackoff() {\n        if (this.currentChild) {\n            this.currentChild.resetBackoff();\n            if (this.pendingChild) {\n                this.pendingChild.resetBackoff();\n            }\n        }\n    }\n    destroy() {\n        /* Note: state updates are only propagated from the child balancer if that\n         * object is equal to this.currentChild or this.pendingChild. Since this\n         * function sets both of those to null, no further state updates will\n         * occur after this function returns. */\n        if (this.currentChild) {\n            this.currentChild.destroy();\n            this.currentChild = null;\n        }\n        if (this.pendingChild) {\n            this.pendingChild.destroy();\n            this.pendingChild = null;\n        }\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;\n//# sourceMappingURL=load-balancer-child-handler.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.OutlierDetectionLoadBalancer = exports.OutlierDetectionLoadBalancingConfig = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst duration_1 = require(\"./duration\");\nconst experimental_1 = require(\"./experimental\");\nconst load_balancer_1 = require(\"./load-balancer\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'outlier_detection';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'outlier_detection';\nconst OUTLIER_DETECTION_ENABLED = ((_a = process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION) !== null && _a !== void 0 ? _a : 'true') === 'true';\nconst defaultSuccessRateEjectionConfig = {\n    stdev_factor: 1900,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 100,\n};\nconst defaultFailurePercentageEjectionConfig = {\n    threshold: 85,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 50,\n};\nfunction validateFieldType(obj, fieldName, expectedType, objectName) {\n    if (fieldName in obj && typeof obj[fieldName] !== expectedType) {\n        const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n        throw new Error(`outlier detection config ${fullFieldName} parse error: expected ${expectedType}, got ${typeof obj[fieldName]}`);\n    }\n}\nfunction validatePositiveDuration(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    if (fieldName in obj) {\n        if (!(0, duration_1.isDuration)(obj[fieldName])) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: expected Duration, got ${typeof obj[fieldName]}`);\n        }\n        if (!(obj[fieldName].seconds >= 0 &&\n            obj[fieldName].seconds <= 315576000000 &&\n            obj[fieldName].nanos >= 0 &&\n            obj[fieldName].nanos <= 999999999)) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: values out of range for non-negative Duaration`);\n        }\n    }\n}\nfunction validatePercentage(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    validateFieldType(obj, fieldName, 'number', objectName);\n    if (fieldName in obj && !(obj[fieldName] >= 0 && obj[fieldName] <= 100)) {\n        throw new Error(`outlier detection config ${fullFieldName} parse error: value out of range for percentage (0-100)`);\n    }\n}\nclass OutlierDetectionLoadBalancingConfig {\n    constructor(intervalMs, baseEjectionTimeMs, maxEjectionTimeMs, maxEjectionPercent, successRateEjection, failurePercentageEjection, childPolicy) {\n        this.childPolicy = childPolicy;\n        if (childPolicy.length > 0 &&\n            childPolicy[0].getLoadBalancerName() === 'pick_first') {\n            throw new Error('outlier_detection LB policy cannot have a pick_first child policy');\n        }\n        this.intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 10000;\n        this.baseEjectionTimeMs = baseEjectionTimeMs !== null && baseEjectionTimeMs !== void 0 ? baseEjectionTimeMs : 30000;\n        this.maxEjectionTimeMs = maxEjectionTimeMs !== null && maxEjectionTimeMs !== void 0 ? maxEjectionTimeMs : 300000;\n        this.maxEjectionPercent = maxEjectionPercent !== null && maxEjectionPercent !== void 0 ? maxEjectionPercent : 10;\n        this.successRateEjection = successRateEjection\n            ? Object.assign(Object.assign({}, defaultSuccessRateEjectionConfig), successRateEjection) : null;\n        this.failurePercentageEjection = failurePercentageEjection\n            ? Object.assign(Object.assign({}, defaultFailurePercentageEjectionConfig), failurePercentageEjection) : null;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            interval: (0, duration_1.msToDuration)(this.intervalMs),\n            base_ejection_time: (0, duration_1.msToDuration)(this.baseEjectionTimeMs),\n            max_ejection_time: (0, duration_1.msToDuration)(this.maxEjectionTimeMs),\n            max_ejection_percent: this.maxEjectionPercent,\n            success_rate_ejection: this.successRateEjection,\n            failure_percentage_ejection: this.failurePercentageEjection,\n            child_policy: this.childPolicy.map(policy => policy.toJsonObject()),\n        };\n    }\n    getIntervalMs() {\n        return this.intervalMs;\n    }\n    getBaseEjectionTimeMs() {\n        return this.baseEjectionTimeMs;\n    }\n    getMaxEjectionTimeMs() {\n        return this.maxEjectionTimeMs;\n    }\n    getMaxEjectionPercent() {\n        return this.maxEjectionPercent;\n    }\n    getSuccessRateEjectionConfig() {\n        return this.successRateEjection;\n    }\n    getFailurePercentageEjectionConfig() {\n        return this.failurePercentageEjection;\n    }\n    getChildPolicy() {\n        return this.childPolicy;\n    }\n    copyWithChildPolicy(childPolicy) {\n        return new OutlierDetectionLoadBalancingConfig(this.intervalMs, this.baseEjectionTimeMs, this.maxEjectionTimeMs, this.maxEjectionPercent, this.successRateEjection, this.failurePercentageEjection, childPolicy);\n    }\n    static createFromJson(obj) {\n        var _a;\n        validatePositiveDuration(obj, 'interval');\n        validatePositiveDuration(obj, 'base_ejection_time');\n        validatePositiveDuration(obj, 'max_ejection_time');\n        validatePercentage(obj, 'max_ejection_percent');\n        if ('success_rate_ejection' in obj) {\n            if (typeof obj.success_rate_ejection !== 'object') {\n                throw new Error('outlier detection config success_rate_ejection must be an object');\n            }\n            validateFieldType(obj.success_rate_ejection, 'stdev_factor', 'number', 'success_rate_ejection');\n            validatePercentage(obj.success_rate_ejection, 'enforcement_percentage', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'minimum_hosts', 'number', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'request_volume', 'number', 'success_rate_ejection');\n        }\n        if ('failure_percentage_ejection' in obj) {\n            if (typeof obj.failure_percentage_ejection !== 'object') {\n                throw new Error('outlier detection config failure_percentage_ejection must be an object');\n            }\n            validatePercentage(obj.failure_percentage_ejection, 'threshold', 'failure_percentage_ejection');\n            validatePercentage(obj.failure_percentage_ejection, 'enforcement_percentage', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'minimum_hosts', 'number', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'request_volume', 'number', 'failure_percentage_ejection');\n        }\n        return new OutlierDetectionLoadBalancingConfig(obj.interval ? (0, duration_1.durationToMs)(obj.interval) : null, obj.base_ejection_time ? (0, duration_1.durationToMs)(obj.base_ejection_time) : null, obj.max_ejection_time ? (0, duration_1.durationToMs)(obj.max_ejection_time) : null, (_a = obj.max_ejection_percent) !== null && _a !== void 0 ? _a : null, obj.success_rate_ejection, obj.failure_percentage_ejection, obj.child_policy.map(load_balancer_1.validateLoadBalancingConfig));\n    }\n}\nexports.OutlierDetectionLoadBalancingConfig = OutlierDetectionLoadBalancingConfig;\nclass OutlierDetectionSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, mapEntry) {\n        super(childSubchannel);\n        this.mapEntry = mapEntry;\n        this.stateListeners = [];\n        this.ejected = false;\n        this.refCount = 0;\n        this.childSubchannelState = childSubchannel.getConnectivityState();\n        childSubchannel.addConnectivityStateListener((subchannel, previousState, newState, keepaliveTime) => {\n            this.childSubchannelState = newState;\n            if (!this.ejected) {\n                for (const listener of this.stateListeners) {\n                    listener(this, previousState, newState, keepaliveTime);\n                }\n            }\n        });\n    }\n    getConnectivityState() {\n        if (this.ejected) {\n            return connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE;\n        }\n        else {\n            return this.childSubchannelState;\n        }\n    }\n    /**\n     * Add a listener function to be called whenever the wrapper's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.push(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        const listenerIndex = this.stateListeners.indexOf(listener);\n        if (listenerIndex > -1) {\n            this.stateListeners.splice(listenerIndex, 1);\n        }\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            if (this.mapEntry) {\n                const index = this.mapEntry.subchannelWrappers.indexOf(this);\n                if (index >= 0) {\n                    this.mapEntry.subchannelWrappers.splice(index, 1);\n                }\n            }\n        }\n    }\n    eject() {\n        this.ejected = true;\n        for (const listener of this.stateListeners) {\n            listener(this, this.childSubchannelState, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, -1);\n        }\n    }\n    uneject() {\n        this.ejected = false;\n        for (const listener of this.stateListeners) {\n            listener(this, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, this.childSubchannelState, -1);\n        }\n    }\n    getMapEntry() {\n        return this.mapEntry;\n    }\n    getWrappedSubchannel() {\n        return this.child;\n    }\n}\nfunction createEmptyBucket() {\n    return {\n        success: 0,\n        failure: 0,\n    };\n}\nclass CallCounter {\n    constructor() {\n        this.activeBucket = createEmptyBucket();\n        this.inactiveBucket = createEmptyBucket();\n    }\n    addSuccess() {\n        this.activeBucket.success += 1;\n    }\n    addFailure() {\n        this.activeBucket.failure += 1;\n    }\n    switchBuckets() {\n        this.inactiveBucket = this.activeBucket;\n        this.activeBucket = createEmptyBucket();\n    }\n    getLastSuccesses() {\n        return this.inactiveBucket.success;\n    }\n    getLastFailures() {\n        return this.inactiveBucket.failure;\n    }\n}\nclass OutlierDetectionPicker {\n    constructor(wrappedPicker, countCalls) {\n        this.wrappedPicker = wrappedPicker;\n        this.countCalls = countCalls;\n    }\n    pick(pickArgs) {\n        const wrappedPick = this.wrappedPicker.pick(pickArgs);\n        if (wrappedPick.pickResultType === picker_1.PickResultType.COMPLETE) {\n            const subchannelWrapper = wrappedPick.subchannel;\n            const mapEntry = subchannelWrapper.getMapEntry();\n            if (mapEntry) {\n                let onCallEnded = wrappedPick.onCallEnded;\n                if (this.countCalls) {\n                    onCallEnded = statusCode => {\n                        var _a;\n                        if (statusCode === constants_1.Status.OK) {\n                            mapEntry.counter.addSuccess();\n                        }\n                        else {\n                            mapEntry.counter.addFailure();\n                        }\n                        (_a = wrappedPick.onCallEnded) === null || _a === void 0 ? void 0 : _a.call(wrappedPick, statusCode);\n                    };\n                }\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel(), onCallEnded: onCallEnded });\n            }\n            else {\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel() });\n            }\n        }\n        else {\n            return wrappedPick;\n        }\n    }\n}\nclass OutlierDetectionLoadBalancer {\n    constructor(channelControlHelper) {\n        this.addressMap = new Map();\n        this.latestConfig = null;\n        this.timerStartTime = null;\n        this.childBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler((0, experimental_1.createChildChannelControlHelper)(channelControlHelper, {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const originalSubchannel = channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n                const mapEntry = this.addressMap.get((0, subchannel_address_1.subchannelAddressToString)(subchannelAddress));\n                const subchannelWrapper = new OutlierDetectionSubchannelWrapper(originalSubchannel, mapEntry);\n                if ((mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.currentEjectionTimestamp) !== null) {\n                    // If the address is ejected, propagate that to the new subchannel wrapper\n                    subchannelWrapper.eject();\n                }\n                mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.subchannelWrappers.push(subchannelWrapper);\n                return subchannelWrapper;\n            },\n            updateState: (connectivityState, picker) => {\n                if (connectivityState === connectivity_state_1.ConnectivityState.READY) {\n                    channelControlHelper.updateState(connectivityState, new OutlierDetectionPicker(picker, this.isCountingEnabled()));\n                }\n                else {\n                    channelControlHelper.updateState(connectivityState, picker);\n                }\n            },\n        }));\n        this.ejectionTimer = setInterval(() => { }, 0);\n        clearInterval(this.ejectionTimer);\n    }\n    isCountingEnabled() {\n        return (this.latestConfig !== null &&\n            (this.latestConfig.getSuccessRateEjectionConfig() !== null ||\n                this.latestConfig.getFailurePercentageEjectionConfig() !== null));\n    }\n    getCurrentEjectionPercent() {\n        let ejectionCount = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            if (mapEntry.currentEjectionTimestamp !== null) {\n                ejectionCount += 1;\n            }\n        }\n        return (ejectionCount * 100) / this.addressMap.size;\n    }\n    runSuccessRateCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const successRateConfig = this.latestConfig.getSuccessRateEjectionConfig();\n        if (!successRateConfig) {\n            return;\n        }\n        trace('Running success rate check');\n        // Step 1\n        const targetRequestVolume = successRateConfig.request_volume;\n        let addresesWithTargetVolume = 0;\n        const successRates = [];\n        for (const [address, mapEntry] of this.addressMap) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Stats for ' +\n                address +\n                ': successes=' +\n                successes +\n                ' failures=' +\n                failures +\n                ' targetRequestVolume=' +\n                targetRequestVolume);\n            if (successes + failures >= targetRequestVolume) {\n                addresesWithTargetVolume += 1;\n                successRates.push(successes / (successes + failures));\n            }\n        }\n        trace('Found ' +\n            addresesWithTargetVolume +\n            ' success rate candidates; currentEjectionPercent=' +\n            this.getCurrentEjectionPercent() +\n            ' successRates=[' +\n            successRates +\n            ']');\n        if (addresesWithTargetVolume < successRateConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        const successRateMean = successRates.reduce((a, b) => a + b) / successRates.length;\n        let successRateDeviationSum = 0;\n        for (const rate of successRates) {\n            const deviation = rate - successRateMean;\n            successRateDeviationSum += deviation * deviation;\n        }\n        const successRateVariance = successRateDeviationSum / successRates.length;\n        const successRateStdev = Math.sqrt(successRateVariance);\n        const ejectionThreshold = successRateMean -\n            successRateStdev * (successRateConfig.stdev_factor / 1000);\n        trace('stdev=' + successRateStdev + ' ejectionThreshold=' + ejectionThreshold);\n        // Step 3\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 3.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 3.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures < targetRequestVolume) {\n                continue;\n            }\n            // Step 3.iii\n            const successRate = successes / (successes + failures);\n            trace('Checking candidate ' + address + ' successRate=' + successRate);\n            if (successRate < ejectionThreshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    successRateConfig.enforcement_percentage);\n                if (randomNumber < successRateConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    runFailurePercentageCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const failurePercentageConfig = this.latestConfig.getFailurePercentageEjectionConfig();\n        if (!failurePercentageConfig) {\n            return;\n        }\n        trace('Running failure percentage check. threshold=' +\n            failurePercentageConfig.threshold +\n            ' request volume threshold=' +\n            failurePercentageConfig.request_volume);\n        // Step 1\n        let addressesWithTargetVolume = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures >= failurePercentageConfig.request_volume) {\n                addressesWithTargetVolume += 1;\n            }\n        }\n        if (addressesWithTargetVolume < failurePercentageConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 2.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 2.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Candidate successes=' + successes + ' failures=' + failures);\n            if (successes + failures < failurePercentageConfig.request_volume) {\n                continue;\n            }\n            // Step 2.iii\n            const failurePercentage = (failures * 100) / (failures + successes);\n            if (failurePercentage > failurePercentageConfig.threshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    failurePercentageConfig.enforcement_percentage);\n                if (randomNumber < failurePercentageConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    eject(mapEntry, ejectionTimestamp) {\n        mapEntry.currentEjectionTimestamp = new Date();\n        mapEntry.ejectionTimeMultiplier += 1;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.eject();\n        }\n    }\n    uneject(mapEntry) {\n        mapEntry.currentEjectionTimestamp = null;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.uneject();\n        }\n    }\n    switchAllBuckets() {\n        for (const mapEntry of this.addressMap.values()) {\n            mapEntry.counter.switchBuckets();\n        }\n    }\n    startTimer(delayMs) {\n        var _a, _b;\n        this.ejectionTimer = setTimeout(() => this.runChecks(), delayMs);\n        (_b = (_a = this.ejectionTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    runChecks() {\n        const ejectionTimestamp = new Date();\n        trace('Ejection timer running');\n        this.switchAllBuckets();\n        if (!this.latestConfig) {\n            return;\n        }\n        this.timerStartTime = ejectionTimestamp;\n        this.startTimer(this.latestConfig.getIntervalMs());\n        this.runSuccessRateCheck(ejectionTimestamp);\n        this.runFailurePercentageCheck(ejectionTimestamp);\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            if (mapEntry.currentEjectionTimestamp === null) {\n                if (mapEntry.ejectionTimeMultiplier > 0) {\n                    mapEntry.ejectionTimeMultiplier -= 1;\n                }\n            }\n            else {\n                const baseEjectionTimeMs = this.latestConfig.getBaseEjectionTimeMs();\n                const maxEjectionTimeMs = this.latestConfig.getMaxEjectionTimeMs();\n                const returnTime = new Date(mapEntry.currentEjectionTimestamp.getTime());\n                returnTime.setMilliseconds(returnTime.getMilliseconds() +\n                    Math.min(baseEjectionTimeMs * mapEntry.ejectionTimeMultiplier, Math.max(baseEjectionTimeMs, maxEjectionTimeMs)));\n                if (returnTime < new Date()) {\n                    trace('Unejecting ' + address);\n                    this.uneject(mapEntry);\n                }\n            }\n        }\n    }\n    updateAddressList(addressList, lbConfig, attributes) {\n        if (!(lbConfig instanceof OutlierDetectionLoadBalancingConfig)) {\n            return;\n        }\n        const subchannelAddresses = new Set();\n        for (const address of addressList) {\n            subchannelAddresses.add((0, subchannel_address_1.subchannelAddressToString)(address));\n        }\n        for (const address of subchannelAddresses) {\n            if (!this.addressMap.has(address)) {\n                trace('Adding map entry for ' + address);\n                this.addressMap.set(address, {\n                    counter: new CallCounter(),\n                    currentEjectionTimestamp: null,\n                    ejectionTimeMultiplier: 0,\n                    subchannelWrappers: [],\n                });\n            }\n        }\n        for (const key of this.addressMap.keys()) {\n            if (!subchannelAddresses.has(key)) {\n                trace('Removing map entry for ' + key);\n                this.addressMap.delete(key);\n            }\n        }\n        const childPolicy = (0, load_balancer_1.getFirstUsableConfig)(lbConfig.getChildPolicy(), true);\n        this.childBalancer.updateAddressList(addressList, childPolicy, attributes);\n        if (lbConfig.getSuccessRateEjectionConfig() ||\n            lbConfig.getFailurePercentageEjectionConfig()) {\n            if (this.timerStartTime) {\n                trace('Previous timer existed. Replacing timer');\n                clearTimeout(this.ejectionTimer);\n                const remainingDelay = lbConfig.getIntervalMs() -\n                    (new Date().getTime() - this.timerStartTime.getTime());\n                this.startTimer(remainingDelay);\n            }\n            else {\n                trace('Starting new timer');\n                this.timerStartTime = new Date();\n                this.startTimer(lbConfig.getIntervalMs());\n                this.switchAllBuckets();\n            }\n        }\n        else {\n            trace('Counting disabled. Cancelling timer.');\n            this.timerStartTime = null;\n            clearTimeout(this.ejectionTimer);\n            for (const mapEntry of this.addressMap.values()) {\n                this.uneject(mapEntry);\n                mapEntry.ejectionTimeMultiplier = 0;\n            }\n        }\n        this.latestConfig = lbConfig;\n    }\n    exitIdle() {\n        this.childBalancer.exitIdle();\n    }\n    resetBackoff() {\n        this.childBalancer.resetBackoff();\n    }\n    destroy() {\n        clearTimeout(this.ejectionTimer);\n        this.childBalancer.destroy();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.OutlierDetectionLoadBalancer = OutlierDetectionLoadBalancer;\nfunction setup() {\n    if (OUTLIER_DETECTION_ENABLED) {\n        (0, experimental_1.registerLoadBalancerType)(TYPE_NAME, OutlierDetectionLoadBalancer, OutlierDetectionLoadBalancingConfig);\n    }\n}\nexports.setup = setup;\n//# sourceMappingURL=load-balancer-outlier-detection.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.PickFirstLoadBalancer = exports.shuffled = exports.PickFirstLoadBalancingConfig = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'pick_first';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'pick_first';\n/**\n * Delay after starting a connection on a subchannel before starting a\n * connection on the next subchannel in the list, for Happy Eyeballs algorithm.\n */\nconst CONNECTION_DELAY_INTERVAL_MS = 250;\nclass PickFirstLoadBalancingConfig {\n    constructor(shuffleAddressList) {\n        this.shuffleAddressList = shuffleAddressList;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {\n                shuffleAddressList: this.shuffleAddressList,\n            },\n        };\n    }\n    getShuffleAddressList() {\n        return this.shuffleAddressList;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        if ('shuffleAddressList' in obj &&\n            !(typeof obj.shuffleAddressList === 'boolean')) {\n            throw new Error('pick_first config field shuffleAddressList must be a boolean if provided');\n        }\n        return new PickFirstLoadBalancingConfig(obj.shuffleAddressList === true);\n    }\n}\nexports.PickFirstLoadBalancingConfig = PickFirstLoadBalancingConfig;\n/**\n * Picker for a `PickFirstLoadBalancer` in the READY state. Always returns the\n * picked subchannel.\n */\nclass PickFirstPicker {\n    constructor(subchannel) {\n        this.subchannel = subchannel;\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: this.subchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\n/**\n * Return a new array with the elements of the input array in a random order\n * @param list The input array\n * @returns A shuffled array of the elements of list\n */\nfunction shuffled(list) {\n    const result = list.slice();\n    for (let i = result.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = result[i];\n        result[i] = result[j];\n        result[j] = temp;\n    }\n    return result;\n}\nexports.shuffled = shuffled;\nclass PickFirstLoadBalancer {\n    /**\n     * Load balancer that attempts to connect to each backend in the address list\n     * in order, and picks the first one that connects, using it for every\n     * request.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     */\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        /**\n         * The list of subchannels this load balancer is currently attempting to\n         * connect to.\n         */\n        this.children = [];\n        /**\n         * The current connectivity state of the load balancer.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The index within the `subchannels` array of the subchannel with the most\n         * recently started connection attempt.\n         */\n        this.currentSubchannelIndex = 0;\n        /**\n         * The currently picked subchannel used for making calls. Populated if\n         * and only if the load balancer's current state is READY. In that case,\n         * the subchannel's current state is also READY.\n         */\n        this.currentPick = null;\n        /**\n         * Listener callback attached to each subchannel in the `subchannels` list\n         * while establishing a connection.\n         */\n        this.subchannelStateListener = (subchannel, previousState, newState) => {\n            this.onSubchannelStateUpdate(subchannel, previousState, newState);\n        };\n        this.triedAllSubchannels = false;\n        /**\n         * The LB policy enters sticky TRANSIENT_FAILURE mode when all\n         * subchannels have failed to connect at least once, and it stays in that\n         * mode until a connection attempt is successful. While in sticky TF mode,\n         * the LB policy continuously attempts to connect to all of its subchannels.\n         */\n        this.stickyTransientFailureMode = false;\n        this.connectionDelayTimeout = setTimeout(() => { }, 0);\n        clearTimeout(this.connectionDelayTimeout);\n    }\n    allChildrenHaveReportedTF() {\n        return this.children.every(child => child.hasReportedTransientFailure);\n    }\n    calculateAndReportNewState() {\n        if (this.currentPick) {\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new PickFirstPicker(this.currentPick));\n        }\n        else if (this.children.length === 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n        else {\n            if (this.stickyTransientFailureMode) {\n                this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker());\n            }\n            else {\n                this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n            }\n        }\n    }\n    maybeEnterStickyTransientFailureMode() {\n        if (this.stickyTransientFailureMode) {\n            return;\n        }\n        if (!this.allChildrenHaveReportedTF()) {\n            return;\n        }\n        this.stickyTransientFailureMode = true;\n        this.channelControlHelper.requestReresolution();\n        for (const { subchannel } of this.children) {\n            subchannel.startConnecting();\n        }\n        this.calculateAndReportNewState();\n    }\n    removeCurrentPick() {\n        if (this.currentPick !== null) {\n            /* Unref can cause a state change, which can cause a change in the value\n             * of this.currentPick, so we hold a local reference to make sure that\n             * does not impact this function. */\n            const currentPick = this.currentPick;\n            this.currentPick = null;\n            currentPick.unref();\n            currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.removeChannelzChild(currentPick.getChannelzRef());\n        }\n    }\n    onSubchannelStateUpdate(subchannel, previousState, newState) {\n        var _a;\n        if ((_a = this.currentPick) === null || _a === void 0 ? void 0 : _a.realSubchannelEquals(subchannel)) {\n            if (newState !== connectivity_state_1.ConnectivityState.READY) {\n                this.removeCurrentPick();\n                this.calculateAndReportNewState();\n                this.channelControlHelper.requestReresolution();\n            }\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (subchannel.realSubchannelEquals(child.subchannel)) {\n                if (newState === connectivity_state_1.ConnectivityState.READY) {\n                    this.pickSubchannel(child.subchannel);\n                }\n                if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    child.hasReportedTransientFailure = true;\n                    this.maybeEnterStickyTransientFailureMode();\n                    if (index === this.currentSubchannelIndex) {\n                        this.startNextSubchannelConnecting(index + 1);\n                    }\n                }\n                child.subchannel.startConnecting();\n                return;\n            }\n        }\n    }\n    startNextSubchannelConnecting(startIndex) {\n        clearTimeout(this.connectionDelayTimeout);\n        if (this.triedAllSubchannels || this.stickyTransientFailureMode) {\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (index >= startIndex) {\n                const subchannelState = child.subchannel.getConnectivityState();\n                if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                    subchannelState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                    this.startConnecting(index);\n                    return;\n                }\n            }\n        }\n        this.triedAllSubchannels = true;\n        this.maybeEnterStickyTransientFailureMode();\n    }\n    /**\n     * Have a single subchannel in the `subchannels` list start connecting.\n     * @param subchannelIndex The index into the `subchannels` list.\n     */\n    startConnecting(subchannelIndex) {\n        var _a, _b;\n        clearTimeout(this.connectionDelayTimeout);\n        this.currentSubchannelIndex = subchannelIndex;\n        if (this.children[subchannelIndex].subchannel.getConnectivityState() ===\n            connectivity_state_1.ConnectivityState.IDLE) {\n            trace('Start connecting to subchannel with address ' +\n                this.children[subchannelIndex].subchannel.getAddress());\n            process.nextTick(() => {\n                var _a;\n                (_a = this.children[subchannelIndex]) === null || _a === void 0 ? void 0 : _a.subchannel.startConnecting();\n            });\n        }\n        this.connectionDelayTimeout = (_b = (_a = setTimeout(() => {\n            this.startNextSubchannelConnecting(subchannelIndex + 1);\n        }, CONNECTION_DELAY_INTERVAL_MS)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    pickSubchannel(subchannel) {\n        if (subchannel === this.currentPick) {\n            return;\n        }\n        trace('Pick subchannel with address ' + subchannel.getAddress());\n        this.stickyTransientFailureMode = false;\n        if (this.currentPick !== null) {\n            this.currentPick.unref();\n            this.channelControlHelper.removeChannelzChild(this.currentPick.getChannelzRef());\n            this.currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n        }\n        this.currentPick = subchannel;\n        subchannel.ref();\n        this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        this.resetSubchannelList();\n        clearTimeout(this.connectionDelayTimeout);\n        this.calculateAndReportNewState();\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const child of this.children) {\n            if (child.subchannel !== this.currentPick) {\n                /* The connectivity state listener is the same whether the subchannel\n                 * is in the list of children or it is the currentPick, so if it is in\n                 * both, removing it here would cause problems. In particular, that\n                 * always happens immediately after the subchannel is picked. */\n                child.subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            }\n            /* Refs are counted independently for the children list and the\n             * currentPick, so we call unref whether or not the child is the\n             * currentPick. Channelz child references are also refcounted, so\n             * removeChannelzChild can be handled the same way. */\n            child.subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(child.subchannel.getChannelzRef());\n        }\n        this.currentSubchannelIndex = 0;\n        this.children = [];\n        this.triedAllSubchannels = false;\n    }\n    updateAddressList(addressList, lbConfig) {\n        if (!(lbConfig instanceof PickFirstLoadBalancingConfig)) {\n            return;\n        }\n        /* Previously, an update would be discarded if it was identical to the\n         * previous update, to minimize churn. Now the DNS resolver is\n         * rate-limited, so that is less of a concern. */\n        if (lbConfig.getShuffleAddressList()) {\n            addressList = shuffled(addressList);\n        }\n        const newChildrenList = addressList.map(address => ({\n            subchannel: this.channelControlHelper.createSubchannel(address, {}),\n            hasReportedTransientFailure: false,\n        }));\n        /* Ref each subchannel before resetting the list, to ensure that\n         * subchannels shared between the list don't drop to 0 refs during the\n         * transition. */\n        for (const { subchannel } of newChildrenList) {\n            subchannel.ref();\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        }\n        this.resetSubchannelList();\n        this.children = newChildrenList;\n        for (const { subchannel } of this.children) {\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            if (subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY) {\n                this.pickSubchannel(subchannel);\n                return;\n            }\n        }\n        for (const child of this.children) {\n            if (child.subchannel.getConnectivityState() ===\n                connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                child.hasReportedTransientFailure = true;\n            }\n        }\n        this.startNextSubchannelConnecting(0);\n        this.calculateAndReportNewState();\n    }\n    exitIdle() {\n        /* The pick_first LB policy is only in the IDLE state if it has no\n         * addresses to try to connect to and it has no picked subchannel.\n         * In that case, there is no meaningful action that can be taken here. */\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n        this.removeCurrentPick();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.PickFirstLoadBalancer = PickFirstLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, PickFirstLoadBalancer, PickFirstLoadBalancingConfig);\n    (0, load_balancer_1.registerDefaultLoadBalancerType)(TYPE_NAME);\n}\nexports.setup = setup;\n//# sourceMappingURL=load-balancer-pick-first.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.RoundRobinLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'round_robin';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'round_robin';\nclass RoundRobinLoadBalancingConfig {\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    constructor() { }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {},\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        return new RoundRobinLoadBalancingConfig();\n    }\n}\nclass RoundRobinPicker {\n    constructor(subchannelList, nextIndex = 0) {\n        this.subchannelList = subchannelList;\n        this.nextIndex = nextIndex;\n    }\n    pick(pickArgs) {\n        const pickedSubchannel = this.subchannelList[this.nextIndex];\n        this.nextIndex = (this.nextIndex + 1) % this.subchannelList.length;\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: pickedSubchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n    /**\n     * Check what the next subchannel returned would be. Used by the load\n     * balancer implementation to preserve this part of the picker state if\n     * possible when a subchannel connects or disconnects.\n     */\n    peekNextSubchannel() {\n        return this.subchannelList[this.nextIndex];\n    }\n}\nclass RoundRobinLoadBalancer {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.subchannels = [];\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentReadyPicker = null;\n        this.subchannelStateListener = (subchannel, previousState, newState) => {\n            this.calculateAndUpdateState();\n            if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE ||\n                newState === connectivity_state_1.ConnectivityState.IDLE) {\n                this.channelControlHelper.requestReresolution();\n                subchannel.startConnecting();\n            }\n        };\n    }\n    countSubchannelsWithState(state) {\n        return this.subchannels.filter(subchannel => subchannel.getConnectivityState() === state).length;\n    }\n    calculateAndUpdateState() {\n        if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.READY) > 0) {\n            const readySubchannels = this.subchannels.filter(subchannel => subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY);\n            let index = 0;\n            if (this.currentReadyPicker !== null) {\n                index = readySubchannels.indexOf(this.currentReadyPicker.peekNextSubchannel());\n                if (index < 0) {\n                    index = 0;\n                }\n            }\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new RoundRobinPicker(readySubchannels, index));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.CONNECTING) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker());\n        }\n        else {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (newState === connectivity_state_1.ConnectivityState.READY) {\n            this.currentReadyPicker = picker;\n        }\n        else {\n            this.currentReadyPicker = null;\n        }\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const subchannel of this.subchannels) {\n            subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(subchannel.getChannelzRef());\n        }\n        this.subchannels = [];\n    }\n    updateAddressList(addressList, lbConfig) {\n        this.resetSubchannelList();\n        trace('Connect to address list ' +\n            addressList.map(address => (0, subchannel_address_1.subchannelAddressToString)(address)));\n        this.subchannels = addressList.map(address => this.channelControlHelper.createSubchannel(address, {}));\n        for (const subchannel of this.subchannels) {\n            subchannel.ref();\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n            const subchannelState = subchannel.getConnectivityState();\n            if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                subchannelState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                subchannel.startConnecting();\n            }\n        }\n        this.calculateAndUpdateState();\n    }\n    exitIdle() {\n        for (const subchannel of this.subchannels) {\n            subchannel.startConnecting();\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.RoundRobinLoadBalancer = RoundRobinLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, RoundRobinLoadBalancer, RoundRobinLoadBalancingConfig);\n}\nexports.setup = setup;\n//# sourceMappingURL=load-balancer-round-robin.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.isLoadBalancerNameRegistered = exports.createLoadBalancer = exports.registerDefaultLoadBalancerType = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = void 0;\n/**\n * Create a child ChannelControlHelper that overrides some methods of the\n * parent while letting others pass through to the parent unmodified. This\n * allows other code to create these children without needing to know about\n * all of the methods to be passed through.\n * @param parent\n * @param overrides\n */\nfunction createChildChannelControlHelper(parent, overrides) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    return {\n        createSubchannel: (_b = (_a = overrides.createSubchannel) === null || _a === void 0 ? void 0 : _a.bind(overrides)) !== null && _b !== void 0 ? _b : parent.createSubchannel.bind(parent),\n        updateState: (_d = (_c = overrides.updateState) === null || _c === void 0 ? void 0 : _c.bind(overrides)) !== null && _d !== void 0 ? _d : parent.updateState.bind(parent),\n        requestReresolution: (_f = (_e = overrides.requestReresolution) === null || _e === void 0 ? void 0 : _e.bind(overrides)) !== null && _f !== void 0 ? _f : parent.requestReresolution.bind(parent),\n        addChannelzChild: (_h = (_g = overrides.addChannelzChild) === null || _g === void 0 ? void 0 : _g.bind(overrides)) !== null && _h !== void 0 ? _h : parent.addChannelzChild.bind(parent),\n        removeChannelzChild: (_k = (_j = overrides.removeChannelzChild) === null || _j === void 0 ? void 0 : _j.bind(overrides)) !== null && _k !== void 0 ? _k : parent.removeChannelzChild.bind(parent),\n    };\n}\nexports.createChildChannelControlHelper = createChildChannelControlHelper;\nconst registeredLoadBalancerTypes = {};\nlet defaultLoadBalancerType = null;\nfunction registerLoadBalancerType(typeName, loadBalancerType, loadBalancingConfigType) {\n    registeredLoadBalancerTypes[typeName] = {\n        LoadBalancer: loadBalancerType,\n        LoadBalancingConfig: loadBalancingConfigType,\n    };\n}\nexports.registerLoadBalancerType = registerLoadBalancerType;\nfunction registerDefaultLoadBalancerType(typeName) {\n    defaultLoadBalancerType = typeName;\n}\nexports.registerDefaultLoadBalancerType = registerDefaultLoadBalancerType;\nfunction createLoadBalancer(config, channelControlHelper) {\n    const typeName = config.getLoadBalancerName();\n    if (typeName in registeredLoadBalancerTypes) {\n        return new registeredLoadBalancerTypes[typeName].LoadBalancer(channelControlHelper);\n    }\n    else {\n        return null;\n    }\n}\nexports.createLoadBalancer = createLoadBalancer;\nfunction isLoadBalancerNameRegistered(typeName) {\n    return typeName in registeredLoadBalancerTypes;\n}\nexports.isLoadBalancerNameRegistered = isLoadBalancerNameRegistered;\nfunction getFirstUsableConfig(configs, fallbackTodefault = false) {\n    for (const config of configs) {\n        if (config.getLoadBalancerName() in registeredLoadBalancerTypes) {\n            return config;\n        }\n    }\n    if (fallbackTodefault) {\n        if (defaultLoadBalancerType) {\n            return new registeredLoadBalancerTypes[defaultLoadBalancerType].LoadBalancingConfig();\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n}\nexports.getFirstUsableConfig = getFirstUsableConfig;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validateLoadBalancingConfig(obj) {\n    if (!(obj !== null && typeof obj === 'object')) {\n        throw new Error('Load balancing config must be an object');\n    }\n    const keys = Object.keys(obj);\n    if (keys.length !== 1) {\n        throw new Error('Provided load balancing config has multiple conflicting entries');\n    }\n    const typeName = keys[0];\n    if (typeName in registeredLoadBalancerTypes) {\n        return registeredLoadBalancerTypes[typeName].LoadBalancingConfig.createFromJson(obj[typeName]);\n    }\n    else {\n        throw new Error(`Unrecognized load balancing config name ${typeName}`);\n    }\n}\nexports.validateLoadBalancingConfig = validateLoadBalancingConfig;\n//# sourceMappingURL=load-balancer.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoadBalancingCall = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst picker_1 = require(\"./picker\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst http2 = require(\"http2\");\nconst TRACER_NAME = 'load_balancing_call';\nclass LoadBalancingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber) {\n        var _a, _b;\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.metadata = null;\n        this.listener = null;\n        this.onCallEnded = null;\n        const splitPath = this.methodName.split('/');\n        let serviceName = '';\n        /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n         * by '/', the first item should be empty and the second should be the\n         * service name */\n        if (splitPath.length >= 2) {\n            serviceName = splitPath[1];\n        }\n        const hostname = (_b = (_a = (0, uri_parser_1.splitHostPort)(this.host)) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : 'localhost';\n        /* Currently, call credentials are only allowed on HTTPS connections, so we\n         * can assume that the scheme is \"https\" */\n        this.serviceUrl = `https://${hostname}/${serviceName}`;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    outputStatus(status, progress) {\n        var _a, _b;\n        if (!this.ended) {\n            this.ended = true;\n            this.trace('ended with status: code=' +\n                status.code +\n                ' details=\"' +\n                status.details +\n                '\"');\n            const finalStatus = Object.assign(Object.assign({}, status), { progress });\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(finalStatus);\n            (_b = this.onCallEnded) === null || _b === void 0 ? void 0 : _b.call(this, finalStatus.code);\n        }\n    }\n    doPick() {\n        var _a, _b;\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata) {\n            throw new Error('doPick called before start');\n        }\n        this.trace('Pick called');\n        const pickResult = this.channel.doPick(this.metadata, this.callConfig.pickInformation);\n        const subchannelString = pickResult.subchannel\n            ? '(' +\n                pickResult.subchannel.getChannelzRef().id +\n                ') ' +\n                pickResult.subchannel.getAddress()\n            : '' + pickResult.subchannel;\n        this.trace('Pick result: ' +\n            picker_1.PickResultType[pickResult.pickResultType] +\n            ' subchannel: ' +\n            subchannelString +\n            ' status: ' +\n            ((_a = pickResult.status) === null || _a === void 0 ? void 0 : _a.code) +\n            ' ' +\n            ((_b = pickResult.status) === null || _b === void 0 ? void 0 : _b.details));\n        switch (pickResult.pickResultType) {\n            case picker_1.PickResultType.COMPLETE:\n                this.credentials\n                    .generateMetadata({ service_url: this.serviceUrl })\n                    .then(credsMetadata => {\n                    var _a, _b, _c;\n                    /* If this call was cancelled (e.g. by the deadline) before\n                     * metadata generation finished, we shouldn't do anything with\n                     * it. */\n                    if (this.ended) {\n                        this.trace('Credentials metadata generation finished after call ended');\n                        return;\n                    }\n                    const finalMetadata = this.metadata.clone();\n                    finalMetadata.merge(credsMetadata);\n                    if (finalMetadata.get('authorization').length > 1) {\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: '\"authorization\" metadata cannot have multiple values',\n                            metadata: new metadata_1.Metadata(),\n                        }, 'PROCESSED');\n                    }\n                    if (pickResult.subchannel.getConnectivityState() !==\n                        connectivity_state_1.ConnectivityState.READY) {\n                        this.trace('Picked subchannel ' +\n                            subchannelString +\n                            ' has state ' +\n                            connectivity_state_1.ConnectivityState[pickResult.subchannel.getConnectivityState()] +\n                            ' after getting credentials metadata. Retrying pick');\n                        this.doPick();\n                        return;\n                    }\n                    if (this.deadline !== Infinity) {\n                        finalMetadata.set('grpc-timeout', (0, deadline_1.getDeadlineTimeoutString)(this.deadline));\n                    }\n                    try {\n                        this.child = pickResult\n                            .subchannel.getRealSubchannel()\n                            .createCall(finalMetadata, this.host, this.methodName, {\n                            onReceiveMetadata: metadata => {\n                                this.trace('Received metadata');\n                                this.listener.onReceiveMetadata(metadata);\n                            },\n                            onReceiveMessage: message => {\n                                this.trace('Received message');\n                                this.listener.onReceiveMessage(message);\n                            },\n                            onReceiveStatus: status => {\n                                this.trace('Received status');\n                                if (status.rstCode ===\n                                    http2.constants.NGHTTP2_REFUSED_STREAM) {\n                                    this.outputStatus(status, 'REFUSED');\n                                }\n                                else {\n                                    this.outputStatus(status, 'PROCESSED');\n                                }\n                            },\n                        });\n                    }\n                    catch (error) {\n                        this.trace('Failed to start call on picked subchannel ' +\n                            subchannelString +\n                            ' with error ' +\n                            error.message);\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'Failed to start HTTP/2 stream with error ' +\n                                error.message,\n                            metadata: new metadata_1.Metadata(),\n                        }, 'NOT_STARTED');\n                        return;\n                    }\n                    (_b = (_a = this.callConfig).onCommitted) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    (_c = pickResult.onCallStarted) === null || _c === void 0 ? void 0 : _c.call(pickResult);\n                    this.onCallEnded = pickResult.onCallEnded;\n                    this.trace('Created child call [' + this.child.getCallNumber() + ']');\n                    if (this.readPending) {\n                        this.child.startRead();\n                    }\n                    if (this.pendingMessage) {\n                        this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);\n                    }\n                    if (this.pendingHalfClose) {\n                        this.child.halfClose();\n                    }\n                }, (error) => {\n                    // We assume the error code isn't 0 (Status.OK)\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(typeof error.code === 'number' ? error.code : constants_1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${error.message}`);\n                    this.outputStatus({\n                        code: code,\n                        details: details,\n                        metadata: new metadata_1.Metadata(),\n                    }, 'PROCESSED');\n                });\n                break;\n            case picker_1.PickResultType.DROP:\n                const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                setImmediate(() => {\n                    this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'DROP');\n                });\n                break;\n            case picker_1.PickResultType.TRANSIENT_FAILURE:\n                if (this.metadata.getOptions().waitForReady) {\n                    this.channel.queueCallForPick(this);\n                }\n                else {\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                    setImmediate(() => {\n                        this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'PROCESSED');\n                    });\n                }\n                break;\n            case picker_1.PickResultType.QUEUE:\n                this.channel.queueCallForPick(this);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({ code: status, details: details, metadata: new metadata_1.Metadata() }, 'PROCESSED');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.metadata = metadata;\n        this.doPick();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.child.sendMessageWithContext(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        throw new Error('Method not implemented.');\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.LoadBalancingCall = LoadBalancingCall;\n//# sourceMappingURL=load-balancing-call.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTracerEnabled = exports.trace = exports.log = exports.setLoggerVerbosity = exports.setLogger = exports.getLogger = void 0;\nconst constants_1 = require(\"./constants\");\nconst DEFAULT_LOGGER = {\n    error: (message, ...optionalParams) => {\n        console.error('E ' + message, ...optionalParams);\n    },\n    info: (message, ...optionalParams) => {\n        console.error('I ' + message, ...optionalParams);\n    },\n    debug: (message, ...optionalParams) => {\n        console.error('D ' + message, ...optionalParams);\n    },\n};\nlet _logger = DEFAULT_LOGGER;\nlet _logVerbosity = constants_1.LogVerbosity.ERROR;\nconst verbosityString = (_b = (_a = process.env.GRPC_NODE_VERBOSITY) !== null && _a !== void 0 ? _a : process.env.GRPC_VERBOSITY) !== null && _b !== void 0 ? _b : '';\nswitch (verbosityString.toUpperCase()) {\n    case 'DEBUG':\n        _logVerbosity = constants_1.LogVerbosity.DEBUG;\n        break;\n    case 'INFO':\n        _logVerbosity = constants_1.LogVerbosity.INFO;\n        break;\n    case 'ERROR':\n        _logVerbosity = constants_1.LogVerbosity.ERROR;\n        break;\n    case 'NONE':\n        _logVerbosity = constants_1.LogVerbosity.NONE;\n        break;\n    default:\n    // Ignore any other values\n}\nconst getLogger = () => {\n    return _logger;\n};\nexports.getLogger = getLogger;\nconst setLogger = (logger) => {\n    _logger = logger;\n};\nexports.setLogger = setLogger;\nconst setLoggerVerbosity = (verbosity) => {\n    _logVerbosity = verbosity;\n};\nexports.setLoggerVerbosity = setLoggerVerbosity;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst log = (severity, ...args) => {\n    let logFunction;\n    if (severity >= _logVerbosity) {\n        switch (severity) {\n            case constants_1.LogVerbosity.DEBUG:\n                logFunction = _logger.debug;\n                break;\n            case constants_1.LogVerbosity.INFO:\n                logFunction = _logger.info;\n                break;\n            case constants_1.LogVerbosity.ERROR:\n                logFunction = _logger.error;\n                break;\n        }\n        /* Fall back to _logger.error when other methods are not available for\n         * compatiblity with older behavior that always logged to _logger.error */\n        if (!logFunction) {\n            logFunction = _logger.error;\n        }\n        if (logFunction) {\n            logFunction.bind(_logger)(...args);\n        }\n    }\n};\nexports.log = log;\nconst tracersString = (_d = (_c = process.env.GRPC_NODE_TRACE) !== null && _c !== void 0 ? _c : process.env.GRPC_TRACE) !== null && _d !== void 0 ? _d : '';\nconst enabledTracers = new Set();\nconst disabledTracers = new Set();\nfor (const tracerName of tracersString.split(',')) {\n    if (tracerName.startsWith('-')) {\n        disabledTracers.add(tracerName.substring(1));\n    }\n    else {\n        enabledTracers.add(tracerName);\n    }\n}\nconst allEnabled = enabledTracers.has('all');\nfunction trace(severity, tracer, text) {\n    if (isTracerEnabled(tracer)) {\n        (0, exports.log)(severity, new Date().toISOString() + ' | ' + tracer + ' | ' + text);\n    }\n}\nexports.trace = trace;\nfunction isTracerEnabled(tracer) {\n    return (!disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer)));\n}\nexports.isTracerEnabled = isTracerEnabled;\n//# sourceMappingURL=logging.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadPackageDefinition = exports.makeClientConstructor = void 0;\nconst client_1 = require(\"./client\");\n/**\n * Map with short names for each of the requester maker functions. Used in\n * makeClientConstructor\n * @private\n */\nconst requesterFuncs = {\n    unary: client_1.Client.prototype.makeUnaryRequest,\n    server_stream: client_1.Client.prototype.makeServerStreamRequest,\n    client_stream: client_1.Client.prototype.makeClientStreamRequest,\n    bidi: client_1.Client.prototype.makeBidiStreamRequest,\n};\n/**\n * Returns true, if given key is included in the blacklisted\n * keys.\n * @param key key for check, string.\n */\nfunction isPrototypePolluted(key) {\n    return ['__proto__', 'prototype', 'constructor'].includes(key);\n}\n/**\n * Creates a constructor for a client with the given methods, as specified in\n * the methods argument. The resulting class will have an instance method for\n * each method in the service, which is a partial application of one of the\n * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n * arguments predefined.\n * @param methods An object mapping method names to\n *     method attributes\n * @param serviceName The fully qualified name of the service\n * @param classOptions An options object.\n * @return New client constructor, which is a subclass of\n *     {@link grpc.Client}, and has the same arguments as that constructor.\n */\nfunction makeClientConstructor(methods, serviceName, classOptions) {\n    if (!classOptions) {\n        classOptions = {};\n    }\n    class ServiceClientImpl extends client_1.Client {\n    }\n    Object.keys(methods).forEach(name => {\n        if (isPrototypePolluted(name)) {\n            return;\n        }\n        const attrs = methods[name];\n        let methodType;\n        // TODO(murgatroid99): Verify that we don't need this anymore\n        if (typeof name === 'string' && name.charAt(0) === '$') {\n            throw new Error('Method names cannot start with $');\n        }\n        if (attrs.requestStream) {\n            if (attrs.responseStream) {\n                methodType = 'bidi';\n            }\n            else {\n                methodType = 'client_stream';\n            }\n        }\n        else {\n            if (attrs.responseStream) {\n                methodType = 'server_stream';\n            }\n            else {\n                methodType = 'unary';\n            }\n        }\n        const serialize = attrs.requestSerialize;\n        const deserialize = attrs.responseDeserialize;\n        const methodFunc = partial(requesterFuncs[methodType], attrs.path, serialize, deserialize);\n        ServiceClientImpl.prototype[name] = methodFunc;\n        // Associate all provided attributes with the method\n        Object.assign(ServiceClientImpl.prototype[name], attrs);\n        if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n            ServiceClientImpl.prototype[attrs.originalName] =\n                ServiceClientImpl.prototype[name];\n        }\n    });\n    ServiceClientImpl.service = methods;\n    ServiceClientImpl.serviceName = serviceName;\n    return ServiceClientImpl;\n}\nexports.makeClientConstructor = makeClientConstructor;\nfunction partial(fn, path, serialize, deserialize) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (...args) {\n        return fn.call(this, path, serialize, deserialize, ...args);\n    };\n}\nfunction isProtobufTypeDefinition(obj) {\n    return 'format' in obj;\n}\n/**\n * Load a gRPC package definition as a gRPC object hierarchy.\n * @param packageDef The package definition object.\n * @return The resulting gRPC object.\n */\nfunction loadPackageDefinition(packageDef) {\n    const result = {};\n    for (const serviceFqn in packageDef) {\n        if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n            const service = packageDef[serviceFqn];\n            const nameComponents = serviceFqn.split('.');\n            if (nameComponents.some((comp) => isPrototypePolluted(comp))) {\n                continue;\n            }\n            const serviceName = nameComponents[nameComponents.length - 1];\n            let current = result;\n            for (const packageName of nameComponents.slice(0, -1)) {\n                if (!current[packageName]) {\n                    current[packageName] = {};\n                }\n                current = current[packageName];\n            }\n            if (isProtobufTypeDefinition(service)) {\n                current[serviceName] = service;\n            }\n            else {\n                current[serviceName] = makeClientConstructor(service, serviceName, {});\n            }\n        }\n    }\n    return result;\n}\nexports.loadPackageDefinition = loadPackageDefinition;\n//# sourceMappingURL=make-client.js.map","\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxMessageSizeFilterFactory = exports.MaxMessageSizeFilter = void 0;\nconst filter_1 = require(\"./filter\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nclass MaxMessageSizeFilter extends filter_1.BaseFilter {\n    constructor(options) {\n        super();\n        this.maxSendMessageSize = constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        this.maxReceiveMessageSize = constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        if ('grpc.max_send_message_length' in options) {\n            this.maxSendMessageSize = options['grpc.max_send_message_length'];\n        }\n        if ('grpc.max_receive_message_length' in options) {\n            this.maxReceiveMessageSize = options['grpc.max_receive_message_length'];\n        }\n    }\n    async sendMessage(message) {\n        /* A configured size of -1 means that there is no limit, so skip the check\n         * entirely */\n        if (this.maxSendMessageSize === -1) {\n            return message;\n        }\n        else {\n            const concreteMessage = await message;\n            if (concreteMessage.message.length > this.maxSendMessageSize) {\n                throw {\n                    code: constants_1.Status.RESOURCE_EXHAUSTED,\n                    details: `Sent message larger than max (${concreteMessage.message.length} vs. ${this.maxSendMessageSize})`,\n                    metadata: new metadata_1.Metadata(),\n                };\n            }\n            else {\n                return concreteMessage;\n            }\n        }\n    }\n    async receiveMessage(message) {\n        /* A configured size of -1 means that there is no limit, so skip the check\n         * entirely */\n        if (this.maxReceiveMessageSize === -1) {\n            return message;\n        }\n        else {\n            const concreteMessage = await message;\n            if (concreteMessage.length > this.maxReceiveMessageSize) {\n                throw {\n                    code: constants_1.Status.RESOURCE_EXHAUSTED,\n                    details: `Received message larger than max (${concreteMessage.length} vs. ${this.maxReceiveMessageSize})`,\n                    metadata: new metadata_1.Metadata(),\n                };\n            }\n            else {\n                return concreteMessage;\n            }\n        }\n    }\n}\nexports.MaxMessageSizeFilter = MaxMessageSizeFilter;\nclass MaxMessageSizeFilterFactory {\n    constructor(options) {\n        this.options = options;\n    }\n    createFilter() {\n        return new MaxMessageSizeFilter(this.options);\n    }\n}\nexports.MaxMessageSizeFilterFactory = MaxMessageSizeFilterFactory;\n//# sourceMappingURL=max-message-size-filter.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst LEGAL_KEY_REGEX = /^[0-9a-z_.-]+$/;\nconst LEGAL_NON_BINARY_VALUE_REGEX = /^[ -~]*$/;\nfunction isLegalKey(key) {\n    return LEGAL_KEY_REGEX.test(key);\n}\nfunction isLegalNonBinaryValue(value) {\n    return LEGAL_NON_BINARY_VALUE_REGEX.test(value);\n}\nfunction isBinaryKey(key) {\n    return key.endsWith('-bin');\n}\nfunction isCustomMetadata(key) {\n    return !key.startsWith('grpc-');\n}\nfunction normalizeKey(key) {\n    return key.toLowerCase();\n}\nfunction validate(key, value) {\n    if (!isLegalKey(key)) {\n        throw new Error('Metadata key \"' + key + '\" contains illegal characters');\n    }\n    if (value !== null && value !== undefined) {\n        if (isBinaryKey(key)) {\n            if (!Buffer.isBuffer(value)) {\n                throw new Error(\"keys that end with '-bin' must have Buffer values\");\n            }\n        }\n        else {\n            if (Buffer.isBuffer(value)) {\n                throw new Error(\"keys that don't end with '-bin' must have String values\");\n            }\n            if (!isLegalNonBinaryValue(value)) {\n                throw new Error('Metadata string value \"' + value + '\" contains illegal characters');\n            }\n        }\n    }\n}\n/**\n * A class for storing metadata. Keys are normalized to lowercase ASCII.\n */\nclass Metadata {\n    constructor(options = {}) {\n        this.internalRepr = new Map();\n        this.options = options;\n    }\n    /**\n     * Sets the given value for the given key by replacing any other values\n     * associated with that key. Normalizes the key.\n     * @param key The key to whose value should be set.\n     * @param value The value to set. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    set(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        this.internalRepr.set(key, [value]);\n    }\n    /**\n     * Adds the given value for the given key by appending to a list of previous\n     * values associated with that key. Normalizes the key.\n     * @param key The key for which a new value should be appended.\n     * @param value The value to add. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    add(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        const existingValue = this.internalRepr.get(key);\n        if (existingValue === undefined) {\n            this.internalRepr.set(key, [value]);\n        }\n        else {\n            existingValue.push(value);\n        }\n    }\n    /**\n     * Removes the given key and any associated values. Normalizes the key.\n     * @param key The key whose values should be removed.\n     */\n    remove(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        this.internalRepr.delete(key);\n    }\n    /**\n     * Gets a list of all values associated with the key. Normalizes the key.\n     * @param key The key whose value should be retrieved.\n     * @return A list of values associated with the given key.\n     */\n    get(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        return this.internalRepr.get(key) || [];\n    }\n    /**\n     * Gets a plain object mapping each key to the first value associated with it.\n     * This reflects the most common way that people will want to see metadata.\n     * @return A key/value mapping of the metadata.\n     */\n    getMap() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            if (values.length > 0) {\n                const v = values[0];\n                result[key] = Buffer.isBuffer(v) ? Buffer.from(v) : v;\n            }\n        }\n        return result;\n    }\n    /**\n     * Clones the metadata object.\n     * @return The newly cloned object.\n     */\n    clone() {\n        const newMetadata = new Metadata(this.options);\n        const newInternalRepr = newMetadata.internalRepr;\n        for (const [key, value] of this.internalRepr) {\n            const clonedValue = value.map(v => {\n                if (Buffer.isBuffer(v)) {\n                    return Buffer.from(v);\n                }\n                else {\n                    return v;\n                }\n            });\n            newInternalRepr.set(key, clonedValue);\n        }\n        return newMetadata;\n    }\n    /**\n     * Merges all key-value pairs from a given Metadata object into this one.\n     * If both this object and the given object have values in the same key,\n     * values from the other Metadata object will be appended to this object's\n     * values.\n     * @param other A Metadata object.\n     */\n    merge(other) {\n        for (const [key, values] of other.internalRepr) {\n            const mergedValue = (this.internalRepr.get(key) || []).concat(values);\n            this.internalRepr.set(key, mergedValue);\n        }\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    getOptions() {\n        return this.options;\n    }\n    /**\n     * Creates an OutgoingHttpHeaders object that can be used with the http2 API.\n     */\n    toHttp2Headers() {\n        // NOTE: Node <8.9 formats http2 headers incorrectly.\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            // We assume that the user's interaction with this object is limited to\n            // through its public API (i.e. keys and values are already validated).\n            result[key] = values.map(bufToString);\n        }\n        return result;\n    }\n    /**\n     * This modifies the behavior of JSON.stringify to show an object\n     * representation of the metadata map.\n     */\n    toJSON() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            result[key] = values;\n        }\n        return result;\n    }\n    /**\n     * Returns a new Metadata object based fields in a given IncomingHttpHeaders\n     * object.\n     * @param headers An IncomingHttpHeaders object.\n     */\n    static fromHttp2Headers(headers) {\n        const result = new Metadata();\n        for (const key of Object.keys(headers)) {\n            // Reserved headers (beginning with `:`) are not valid keys.\n            if (key.charAt(0) === ':') {\n                continue;\n            }\n            const values = headers[key];\n            try {\n                if (isBinaryKey(key)) {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, Buffer.from(value, 'base64'));\n                        });\n                    }\n                    else if (values !== undefined) {\n                        if (isCustomMetadata(key)) {\n                            values.split(',').forEach(v => {\n                                result.add(key, Buffer.from(v.trim(), 'base64'));\n                            });\n                        }\n                        else {\n                            result.add(key, Buffer.from(values, 'base64'));\n                        }\n                    }\n                }\n                else {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, value);\n                        });\n                    }\n                    else if (values !== undefined) {\n                        result.add(key, values);\n                    }\n                }\n            }\n            catch (error) {\n                const message = `Failed to add metadata entry ${key}: ${values}. ${(0, error_1.getErrorMessage)(error)}. For more information see https://github.com/grpc/grpc-node/issues/1173`;\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, message);\n            }\n        }\n        return result;\n    }\n}\nexports.Metadata = Metadata;\nconst bufToString = (val) => {\n    return Buffer.isBuffer(val) ? val.toString('base64') : val;\n};\n//# sourceMappingURL=metadata.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueuePicker = exports.UnavailablePicker = exports.PickResultType = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nvar PickResultType;\n(function (PickResultType) {\n    PickResultType[PickResultType[\"COMPLETE\"] = 0] = \"COMPLETE\";\n    PickResultType[PickResultType[\"QUEUE\"] = 1] = \"QUEUE\";\n    PickResultType[PickResultType[\"TRANSIENT_FAILURE\"] = 2] = \"TRANSIENT_FAILURE\";\n    PickResultType[PickResultType[\"DROP\"] = 3] = \"DROP\";\n})(PickResultType || (exports.PickResultType = PickResultType = {}));\n/**\n * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n * state. Always responds to every pick request with an UNAVAILABLE status.\n */\nclass UnavailablePicker {\n    constructor(status) {\n        if (status !== undefined) {\n            this.status = status;\n        }\n        else {\n            this.status = {\n                code: constants_1.Status.UNAVAILABLE,\n                details: 'No connection established',\n                metadata: new metadata_1.Metadata(),\n            };\n        }\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: PickResultType.TRANSIENT_FAILURE,\n            subchannel: null,\n            status: this.status,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.UnavailablePicker = UnavailablePicker;\n/**\n * A standard picker representing a load balancer in the IDLE or CONNECTING\n * state. Always responds to every pick request with a QUEUE pick result\n * indicating that the pick should be tried again with the next `Picker`. Also\n * reports back to the load balancer that a connection should be established\n * once any pick is attempted.\n */\nclass QueuePicker {\n    // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n    constructor(loadBalancer) {\n        this.loadBalancer = loadBalancer;\n        this.calledExitIdle = false;\n    }\n    pick(pickArgs) {\n        if (!this.calledExitIdle) {\n            process.nextTick(() => {\n                this.loadBalancer.exitIdle();\n            });\n            this.calledExitIdle = true;\n        }\n        return {\n            pickResultType: PickResultType.QUEUE,\n            subchannel: null,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.QueuePicker = QueuePicker;\n//# sourceMappingURL=picker.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst resolver_1 = require(\"./resolver\");\nconst dns = require(\"dns\");\nconst util = require(\"util\");\nconst service_config_1 = require(\"./service-config\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net_1 = require(\"net\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst TRACER_NAME = 'dns_resolver';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\nconst DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS = 30000;\nconst resolveTxtPromise = util.promisify(dns.resolveTxt);\nconst dnsLookupPromise = util.promisify(dns.lookup);\n/**\n * Merge any number of arrays into a single alternating array\n * @param arrays\n */\nfunction mergeArrays(...arrays) {\n    const result = [];\n    for (let i = 0; i <\n        Math.max.apply(null, arrays.map(array => array.length)); i++) {\n        for (const array of arrays) {\n            if (i < array.length) {\n                result.push(array[i]);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Resolver implementation that handles DNS names and IP addresses.\n */\nclass DnsResolver {\n    constructor(target, listener, channelOptions) {\n        var _a, _b, _c;\n        this.target = target;\n        this.listener = listener;\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.continueResolving = false;\n        this.isNextResolutionTimerRunning = false;\n        this.isServiceConfigEnabled = true;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n        if (hostPort === null) {\n            this.ipResult = null;\n            this.dnsHostname = null;\n            this.port = null;\n        }\n        else {\n            if ((0, net_1.isIPv4)(hostPort.host) || (0, net_1.isIPv6)(hostPort.host)) {\n                this.ipResult = [\n                    {\n                        host: hostPort.host,\n                        port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT,\n                    },\n                ];\n                this.dnsHostname = null;\n                this.port = null;\n            }\n            else {\n                this.ipResult = null;\n                this.dnsHostname = hostPort.host;\n                this.port = (_b = hostPort.port) !== null && _b !== void 0 ? _b : DEFAULT_PORT;\n            }\n        }\n        this.percentage = Math.random() * 100;\n        if (channelOptions['grpc.service_config_disable_resolution'] === 1) {\n            this.isServiceConfigEnabled = false;\n        }\n        this.defaultResolutionError = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Name resolution failed for target ${(0, uri_parser_1.uriToString)(this.target)}`,\n            metadata: new metadata_1.Metadata(),\n        };\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoff = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, backoffOptions);\n        this.backoff.unref();\n        this.minTimeBetweenResolutionsMs =\n            (_c = channelOptions['grpc.dns_min_time_between_resolutions_ms']) !== null && _c !== void 0 ? _c : DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS;\n        this.nextResolutionTimer = setTimeout(() => { }, 0);\n        clearTimeout(this.nextResolutionTimer);\n    }\n    /**\n     * If the target is an IP address, just provide that address as a result.\n     * Otherwise, initiate A, AAAA, and TXT lookups\n     */\n    startResolution() {\n        if (this.ipResult !== null) {\n            trace('Returning IP address for target ' + (0, uri_parser_1.uriToString)(this.target));\n            setImmediate(() => {\n                this.listener.onSuccessfulResolution(this.ipResult, null, null, null, {});\n            });\n            this.backoff.stop();\n            this.backoff.reset();\n            return;\n        }\n        if (this.dnsHostname === null) {\n            trace('Failed to parse DNS address ' + (0, uri_parser_1.uriToString)(this.target));\n            setImmediate(() => {\n                this.listener.onError({\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse DNS address ${(0, uri_parser_1.uriToString)(this.target)}`,\n                    metadata: new metadata_1.Metadata(),\n                });\n            });\n            this.stopNextResolutionTimer();\n        }\n        else {\n            if (this.pendingLookupPromise !== null) {\n                return;\n            }\n            trace('Looking up DNS hostname ' + this.dnsHostname);\n            /* We clear out latestLookupResult here to ensure that it contains the\n             * latest result since the last time we started resolving. That way, the\n             * TXT resolution handler can use it, but only if it finishes second. We\n             * don't clear out any previous service config results because it's\n             * better to use a service config that's slightly out of date than to\n             * revert to an effectively blank one. */\n            this.latestLookupResult = null;\n            const hostname = this.dnsHostname;\n            /* We lookup both address families here and then split them up later\n             * because when looking up a single family, dns.lookup outputs an error\n             * if the name exists but there are no records for that family, and that\n             * error is indistinguishable from other kinds of errors */\n            this.pendingLookupPromise = dnsLookupPromise(hostname, { all: true });\n            this.pendingLookupPromise.then(addressList => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                this.pendingLookupPromise = null;\n                this.backoff.reset();\n                this.backoff.stop();\n                const ip4Addresses = addressList.filter(addr => addr.family === 4);\n                const ip6Addresses = addressList.filter(addr => addr.family === 6);\n                this.latestLookupResult = mergeArrays(ip6Addresses, ip4Addresses).map(addr => ({ host: addr.address, port: +this.port }));\n                const allAddressesString = '[' +\n                    this.latestLookupResult\n                        .map(addr => addr.host + ':' + addr.port)\n                        .join(',') +\n                    ']';\n                trace('Resolved addresses for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    allAddressesString);\n                if (this.latestLookupResult.length === 0) {\n                    this.listener.onError(this.defaultResolutionError);\n                    return;\n                }\n                /* If the TXT lookup has not yet finished, both of the last two\n                 * arguments will be null, which is the equivalent of getting an\n                 * empty TXT response. When the TXT lookup does finish, its handler\n                 * can update the service config by using the same address list */\n                this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n            }, err => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                trace('Resolution error for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    err.message);\n                this.pendingLookupPromise = null;\n                this.stopNextResolutionTimer();\n                this.listener.onError(this.defaultResolutionError);\n            });\n            /* If there already is a still-pending TXT resolution, we can just use\n             * that result when it comes in */\n            if (this.isServiceConfigEnabled && this.pendingTxtPromise === null) {\n                /* We handle the TXT query promise differently than the others because\n                 * the name resolution attempt as a whole is a success even if the TXT\n                 * lookup fails */\n                this.pendingTxtPromise = resolveTxtPromise(hostname);\n                this.pendingTxtPromise.then(txtRecord => {\n                    if (this.pendingTxtPromise === null) {\n                        return;\n                    }\n                    this.pendingTxtPromise = null;\n                    try {\n                        this.latestServiceConfig = (0, service_config_1.extractAndSelectServiceConfig)(txtRecord, this.percentage);\n                    }\n                    catch (err) {\n                        this.latestServiceConfigError = {\n                            code: constants_1.Status.UNAVAILABLE,\n                            details: `Parsing service config failed with error ${err.message}`,\n                            metadata: new metadata_1.Metadata(),\n                        };\n                    }\n                    if (this.latestLookupResult !== null) {\n                        /* We rely here on the assumption that calling this function with\n                         * identical parameters will be essentialy idempotent, and calling\n                         * it with the same address list and a different service config\n                         * should result in a fast and seamless switchover. */\n                        this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n                    }\n                }, err => {\n                    /* If TXT lookup fails we should do nothing, which means that we\n                     * continue to use the result of the most recent successful lookup,\n                     * or the default null config object if there has never been a\n                     * successful lookup. We do not set the latestServiceConfigError\n                     * here because that is specifically used for response validation\n                     * errors. We still need to handle this error so that it does not\n                     * bubble up as an unhandled promise rejection. */\n                });\n            }\n        }\n    }\n    startNextResolutionTimer() {\n        var _a, _b;\n        clearTimeout(this.nextResolutionTimer);\n        this.nextResolutionTimer = (_b = (_a = setTimeout(() => {\n            this.stopNextResolutionTimer();\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, this.minTimeBetweenResolutionsMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.isNextResolutionTimerRunning = true;\n    }\n    stopNextResolutionTimer() {\n        clearTimeout(this.nextResolutionTimer);\n        this.isNextResolutionTimerRunning = false;\n    }\n    startResolutionWithBackoff() {\n        if (this.pendingLookupPromise === null) {\n            this.continueResolving = false;\n            this.startResolution();\n            this.backoff.runOnce();\n            this.startNextResolutionTimer();\n        }\n    }\n    updateResolution() {\n        /* If there is a pending lookup, just let it finish. Otherwise, if the\n         * nextResolutionTimer or backoff timer is running, set the\n         * continueResolving flag to resolve when whichever of those timers\n         * fires. Otherwise, start resolving immediately. */\n        if (this.pendingLookupPromise === null) {\n            if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {\n                this.continueResolving = true;\n            }\n            else {\n                this.startResolutionWithBackoff();\n            }\n        }\n    }\n    /**\n     * Reset the resolver to the same state it had when it was created. In-flight\n     * DNS requests cannot be cancelled, but they are discarded and their results\n     * will be ignored.\n     */\n    destroy() {\n        this.continueResolving = false;\n        this.backoff.reset();\n        this.backoff.stop();\n        this.stopNextResolutionTimer();\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n    }\n    /**\n     * Get the default authority for the given target. For IP targets, that is\n     * the IP address. For DNS targets, it is the hostname.\n     * @param target\n     */\n    static getDefaultAuthority(target) {\n        return target.path;\n    }\n}\n/**\n * Set up the DNS resolver class by registering it as the handler for the\n * \"dns:\" prefix and as the default resolver.\n */\nfunction setup() {\n    (0, resolver_1.registerResolver)('dns', DnsResolver);\n    (0, resolver_1.registerDefaultScheme)('dns');\n}\nexports.setup = setup;\n//# sourceMappingURL=resolver-dns.js.map","\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst net_1 = require(\"net\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst resolver_1 = require(\"./resolver\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'ip_resolver';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst IPV4_SCHEME = 'ipv4';\nconst IPV6_SCHEME = 'ipv6';\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\nclass IpResolver {\n    constructor(target, listener, channelOptions) {\n        var _a;\n        this.listener = listener;\n        this.addresses = [];\n        this.error = null;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const addresses = [];\n        if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n            this.error = {\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n                metadata: new metadata_1.Metadata(),\n            };\n            return;\n        }\n        const pathList = target.path.split(',');\n        for (const path of pathList) {\n            const hostPort = (0, uri_parser_1.splitHostPort)(path);\n            if (hostPort === null) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            if ((target.scheme === IPV4_SCHEME && !(0, net_1.isIPv4)(hostPort.host)) ||\n                (target.scheme === IPV6_SCHEME && !(0, net_1.isIPv6)(hostPort.host))) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            addresses.push({\n                host: hostPort.host,\n                port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT,\n            });\n        }\n        this.addresses = addresses;\n        trace('Parsed ' + target.scheme + ' address list ' + this.addresses);\n    }\n    updateResolution() {\n        process.nextTick(() => {\n            if (this.error) {\n                this.listener.onError(this.error);\n            }\n            else {\n                this.listener.onSuccessfulResolution(this.addresses, null, null, null, {});\n            }\n        });\n    }\n    destroy() {\n        // This resolver owns no resources, so we do nothing here.\n    }\n    static getDefaultAuthority(target) {\n        return target.path.split(',')[0];\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)(IPV4_SCHEME, IpResolver);\n    (0, resolver_1.registerResolver)(IPV6_SCHEME, IpResolver);\n}\nexports.setup = setup;\n//# sourceMappingURL=resolver-ip.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst resolver_1 = require(\"./resolver\");\nclass UdsResolver {\n    constructor(target, listener, channelOptions) {\n        this.listener = listener;\n        this.addresses = [];\n        let path;\n        if (target.authority === '') {\n            path = '/' + target.path;\n        }\n        else {\n            path = target.path;\n        }\n        this.addresses = [{ path }];\n    }\n    updateResolution() {\n        process.nextTick(this.listener.onSuccessfulResolution, this.addresses, null, null, null, {});\n    }\n    destroy() {\n        // This resolver owns no resources, so we do nothing here.\n    }\n    static getDefaultAuthority(target) {\n        return 'localhost';\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)('unix', UdsResolver);\n}\nexports.setup = setup;\n//# sourceMappingURL=resolver-uds.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n    registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n    defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return new registeredResolvers[target.scheme](target, listener, options);\n    }\n    else {\n        throw new Error(`No resolver could be created for target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return registeredResolvers[target.scheme].getDefaultAuthority(target);\n    }\n    else {\n        throw new Error(`Invalid target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n    if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n        if (defaultScheme !== null) {\n            return {\n                scheme: defaultScheme,\n                authority: undefined,\n                path: (0, uri_parser_1.uriToString)(target),\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;\n//# sourceMappingURL=resolver.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingCall = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst TRACER_NAME = 'resolving_call';\nclass ResolvingCall {\n    constructor(channel, method, options, filterStackFactory, credentials, callNumber) {\n        this.channel = channel;\n        this.method = method;\n        this.filterStackFactory = filterStackFactory;\n        this.credentials = credentials;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.readFilterPending = false;\n        this.writeFilterPending = false;\n        this.pendingChildStatus = null;\n        this.metadata = null;\n        this.listener = null;\n        this.statusWatchers = [];\n        this.deadlineTimer = setTimeout(() => { }, 0);\n        this.filterStack = null;\n        this.deadline = options.deadline;\n        this.host = options.host;\n        if (options.parentCall) {\n            if (options.flags & constants_1.Propagate.CANCELLATION) {\n                options.parentCall.on('cancelled', () => {\n                    this.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled by parent call');\n                });\n            }\n            if (options.flags & constants_1.Propagate.DEADLINE) {\n                this.trace('Propagating deadline from parent: ' +\n                    options.parentCall.getDeadline());\n                this.deadline = (0, deadline_1.minDeadline)(this.deadline, options.parentCall.getDeadline());\n            }\n        }\n        this.trace('Created');\n        this.runDeadlineTimer();\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    runDeadlineTimer() {\n        clearTimeout(this.deadlineTimer);\n        this.trace('Deadline: ' + (0, deadline_1.deadlineToString)(this.deadline));\n        const timeout = (0, deadline_1.getRelativeTimeout)(this.deadline);\n        if (timeout !== Infinity) {\n            this.trace('Deadline will be reached in ' + timeout + 'ms');\n            const handleDeadline = () => {\n                this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n            };\n            if (timeout <= 0) {\n                process.nextTick(handleDeadline);\n            }\n            else {\n                this.deadlineTimer = setTimeout(handleDeadline, timeout);\n            }\n        }\n    }\n    outputStatus(status) {\n        if (!this.ended) {\n            this.ended = true;\n            if (!this.filterStack) {\n                this.filterStack = this.filterStackFactory.createFilter();\n            }\n            clearTimeout(this.deadlineTimer);\n            const filteredStatus = this.filterStack.receiveTrailers(status);\n            this.trace('ended with status: code=' +\n                filteredStatus.code +\n                ' details=\"' +\n                filteredStatus.details +\n                '\"');\n            this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n            process.nextTick(() => {\n                var _a;\n                (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(filteredStatus);\n            });\n        }\n    }\n    sendMessageOnChild(context, message) {\n        if (!this.child) {\n            throw new Error('sendMessageonChild called with child not populated');\n        }\n        const child = this.child;\n        this.writeFilterPending = true;\n        this.filterStack.sendMessage(Promise.resolve({ message: message, flags: context.flags })).then(filteredMessage => {\n            this.writeFilterPending = false;\n            child.sendMessageWithContext(context, filteredMessage.message);\n            if (this.pendingHalfClose) {\n                child.halfClose();\n            }\n        }, (status) => {\n            this.cancelWithStatus(status.code, status.details);\n        });\n    }\n    getConfig() {\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata || !this.listener) {\n            throw new Error('getConfig called before start');\n        }\n        const configResult = this.channel.getConfig(this.method, this.metadata);\n        if (configResult.type === 'NONE') {\n            this.channel.queueCallForConfig(this);\n            return;\n        }\n        else if (configResult.type === 'ERROR') {\n            if (this.metadata.getOptions().waitForReady) {\n                this.channel.queueCallForConfig(this);\n            }\n            else {\n                this.outputStatus(configResult.error);\n            }\n            return;\n        }\n        // configResult.type === 'SUCCESS'\n        const config = configResult.config;\n        if (config.status !== constants_1.Status.OK) {\n            const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(config.status, 'Failed to route call to method ' + this.method);\n            this.outputStatus({\n                code: code,\n                details: details,\n                metadata: new metadata_1.Metadata(),\n            });\n            return;\n        }\n        if (config.methodConfig.timeout) {\n            const configDeadline = new Date();\n            configDeadline.setSeconds(configDeadline.getSeconds() + config.methodConfig.timeout.seconds);\n            configDeadline.setMilliseconds(configDeadline.getMilliseconds() +\n                config.methodConfig.timeout.nanos / 1000000);\n            this.deadline = (0, deadline_1.minDeadline)(this.deadline, configDeadline);\n            this.runDeadlineTimer();\n        }\n        this.filterStackFactory.push(config.dynamicFilterFactories);\n        this.filterStack = this.filterStackFactory.createFilter();\n        this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(filteredMetadata => {\n            this.child = this.channel.createInnerCall(config, this.method, this.host, this.credentials, this.deadline);\n            this.trace('Created child [' + this.child.getCallNumber() + ']');\n            this.child.start(filteredMetadata, {\n                onReceiveMetadata: metadata => {\n                    this.trace('Received metadata');\n                    this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(metadata));\n                },\n                onReceiveMessage: message => {\n                    this.trace('Received message');\n                    this.readFilterPending = true;\n                    this.filterStack.receiveMessage(message).then(filteredMesssage => {\n                        this.trace('Finished filtering received message');\n                        this.readFilterPending = false;\n                        this.listener.onReceiveMessage(filteredMesssage);\n                        if (this.pendingChildStatus) {\n                            this.outputStatus(this.pendingChildStatus);\n                        }\n                    }, (status) => {\n                        this.cancelWithStatus(status.code, status.details);\n                    });\n                },\n                onReceiveStatus: status => {\n                    this.trace('Received status');\n                    if (this.readFilterPending) {\n                        this.pendingChildStatus = status;\n                    }\n                    else {\n                        this.outputStatus(status);\n                    }\n                },\n            });\n            if (this.readPending) {\n                this.child.startRead();\n            }\n            if (this.pendingMessage) {\n                this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);\n            }\n            else if (this.pendingHalfClose) {\n                this.child.halfClose();\n            }\n        }, (status) => {\n            this.outputStatus(status);\n        });\n    }\n    reportResolverError(status) {\n        var _a;\n        if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n            this.channel.queueCallForConfig(this);\n        }\n        else {\n            this.outputStatus(status);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({\n            code: status,\n            details: details,\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.metadata = metadata.clone();\n        this.listener = listener;\n        this.getConfig();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.sendMessageOnChild(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child && !this.writeFilterPending) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        this.credentials = this.credentials.compose(credentials);\n    }\n    addStatusWatcher(watcher) {\n        this.statusWatchers.push(watcher);\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.ResolvingCall = ResolvingCall;\n//# sourceMappingURL=resolving-call.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst service_config_1 = require(\"./service-config\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst resolver_1 = require(\"./resolver\");\nconst picker_1 = require(\"./picker\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst TRACER_NAME = 'resolving_load_balancer';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * Name match levels in order from most to least specific. This is the order in\n * which searches will be performed.\n */\nconst NAME_MATCH_LEVEL_ORDER = [\n    'SERVICE_AND_METHOD',\n    'SERVICE',\n    'EMPTY',\n];\nfunction hasMatchingName(service, method, methodConfig, matchLevel) {\n    for (const name of methodConfig.name) {\n        switch (matchLevel) {\n            case 'EMPTY':\n                if (!name.service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE':\n                if (name.service === service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE_AND_METHOD':\n                if (name.service === service && name.method === method) {\n                    return true;\n                }\n        }\n    }\n    return false;\n}\nfunction findMatchingConfig(service, method, methodConfigs, matchLevel) {\n    for (const config of methodConfigs) {\n        if (hasMatchingName(service, method, config, matchLevel)) {\n            return config;\n        }\n    }\n    return null;\n}\nfunction getDefaultConfigSelector(serviceConfig) {\n    return function defaultConfigSelector(methodName, metadata) {\n        var _a, _b;\n        const splitName = methodName.split('/').filter(x => x.length > 0);\n        const service = (_a = splitName[0]) !== null && _a !== void 0 ? _a : '';\n        const method = (_b = splitName[1]) !== null && _b !== void 0 ? _b : '';\n        if (serviceConfig && serviceConfig.methodConfig) {\n            /* Check for the following in order, and return the first method\n             * config that matches:\n             * 1. A name that exactly matches the service and method\n             * 2. A name with no method set that matches the service\n             * 3. An empty name\n             */\n            for (const matchLevel of NAME_MATCH_LEVEL_ORDER) {\n                const matchingConfig = findMatchingConfig(service, method, serviceConfig.methodConfig, matchLevel);\n                if (matchingConfig) {\n                    return {\n                        methodConfig: matchingConfig,\n                        pickInformation: {},\n                        status: constants_1.Status.OK,\n                        dynamicFilterFactories: [],\n                    };\n                }\n            }\n        }\n        return {\n            methodConfig: { name: [] },\n            pickInformation: {},\n            status: constants_1.Status.OK,\n            dynamicFilterFactories: [],\n        };\n    };\n}\nclass ResolvingLoadBalancer {\n    /**\n     * Wrapper class that behaves like a `LoadBalancer` and also handles name\n     * resolution internally.\n     * @param target The address of the backend to connect to.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     * @param defaultServiceConfig The default service configuration to be used\n     *     if none is provided by the name resolver. A `null` value indicates\n     *     that the default behavior should be the default unconfigured behavior.\n     *     In practice, that means using the \"pick first\" load balancer\n     *     implmentation\n     */\n    constructor(target, channelControlHelper, channelOptions, onSuccessfulResolution, onFailedResolution) {\n        this.target = target;\n        this.channelControlHelper = channelControlHelper;\n        this.onSuccessfulResolution = onSuccessfulResolution;\n        this.onFailedResolution = onFailedResolution;\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        /**\n         * This resolving load balancer's current connectivity state.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The service config object from the last successful resolution, if\n         * available. A value of null indicates that we have not yet received a valid\n         * service config from the resolver.\n         */\n        this.previousServiceConfig = null;\n        /**\n         * Indicates whether we should attempt to resolve again after the backoff\n         * timer runs out.\n         */\n        this.continueResolving = false;\n        if (channelOptions['grpc.service_config']) {\n            this.defaultServiceConfig = (0, service_config_1.validateServiceConfig)(JSON.parse(channelOptions['grpc.service_config']));\n        }\n        else {\n            this.defaultServiceConfig = {\n                loadBalancingConfig: [],\n                methodConfig: [],\n            };\n        }\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        this.childLoadBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler({\n            createSubchannel: channelControlHelper.createSubchannel.bind(channelControlHelper),\n            requestReresolution: () => {\n                /* If the backoffTimeout is running, we're still backing off from\n                 * making resolve requests, so we shouldn't make another one here.\n                 * In that case, the backoff timer callback will call\n                 * updateResolution */\n                if (this.backoffTimeout.isRunning()) {\n                    this.continueResolving = true;\n                }\n                else {\n                    this.updateResolution();\n                }\n            },\n            updateState: (newState, picker) => {\n                this.latestChildState = newState;\n                this.latestChildPicker = picker;\n                this.updateState(newState, picker);\n            },\n            addChannelzChild: channelControlHelper.addChannelzChild.bind(channelControlHelper),\n            removeChannelzChild: channelControlHelper.removeChannelzChild.bind(channelControlHelper),\n        });\n        this.innerResolver = (0, resolver_1.createResolver)(target, {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError, configSelector, attributes) => {\n                var _a;\n                let workingServiceConfig = null;\n                /* This first group of conditionals implements the algorithm described\n                 * in https://github.com/grpc/proposal/blob/master/A21-service-config-error-handling.md\n                 * in the section called \"Behavior on receiving a new gRPC Config\".\n                 */\n                if (serviceConfig === null) {\n                    // Step 4 and 5\n                    if (serviceConfigError === null) {\n                        // Step 5\n                        this.previousServiceConfig = null;\n                        workingServiceConfig = this.defaultServiceConfig;\n                    }\n                    else {\n                        // Step 4\n                        if (this.previousServiceConfig === null) {\n                            // Step 4.ii\n                            this.handleResolutionFailure(serviceConfigError);\n                        }\n                        else {\n                            // Step 4.i\n                            workingServiceConfig = this.previousServiceConfig;\n                        }\n                    }\n                }\n                else {\n                    // Step 3\n                    workingServiceConfig = serviceConfig;\n                    this.previousServiceConfig = serviceConfig;\n                }\n                const workingConfigList = (_a = workingServiceConfig === null || workingServiceConfig === void 0 ? void 0 : workingServiceConfig.loadBalancingConfig) !== null && _a !== void 0 ? _a : [];\n                const loadBalancingConfig = (0, load_balancer_1.getFirstUsableConfig)(workingConfigList, true);\n                if (loadBalancingConfig === null) {\n                    // There were load balancing configs but none are supported. This counts as a resolution failure\n                    this.handleResolutionFailure({\n                        code: constants_1.Status.UNAVAILABLE,\n                        details: 'All load balancer options in service config are not compatible',\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.childLoadBalancer.updateAddressList(addressList, loadBalancingConfig, attributes);\n                const finalServiceConfig = workingServiceConfig !== null && workingServiceConfig !== void 0 ? workingServiceConfig : this.defaultServiceConfig;\n                this.onSuccessfulResolution(finalServiceConfig, configSelector !== null && configSelector !== void 0 ? configSelector : getDefaultConfigSelector(finalServiceConfig));\n            },\n            onError: (error) => {\n                this.handleResolutionFailure(error);\n            },\n        }, channelOptions);\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.updateResolution();\n                this.continueResolving = false;\n            }\n            else {\n                this.updateState(this.latestChildState, this.latestChildPicker);\n            }\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n    }\n    updateResolution() {\n        this.innerResolver.updateResolution();\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        this.backoffTimeout.runOnce();\n    }\n    updateState(connectivityState, picker) {\n        trace((0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[connectivityState]);\n        // Ensure that this.exitIdle() is called by the picker\n        if (connectivityState === connectivity_state_1.ConnectivityState.IDLE) {\n            picker = new picker_1.QueuePicker(this);\n        }\n        this.currentState = connectivityState;\n        this.channelControlHelper.updateState(connectivityState, picker);\n    }\n    handleResolutionFailure(error) {\n        if (this.latestChildState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker(error));\n            this.onFailedResolution(error);\n        }\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE ||\n            this.currentState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            if (this.backoffTimeout.isRunning()) {\n                this.continueResolving = true;\n            }\n            else {\n                this.updateResolution();\n            }\n        }\n        this.childLoadBalancer.exitIdle();\n    }\n    updateAddressList(addressList, lbConfig) {\n        throw new Error('updateAddressList not supported on ResolvingLoadBalancer');\n    }\n    resetBackoff() {\n        this.backoffTimeout.reset();\n        this.childLoadBalancer.resetBackoff();\n    }\n    destroy() {\n        this.childLoadBalancer.destroy();\n        this.innerResolver.destroy();\n        this.backoffTimeout.reset();\n        this.backoffTimeout.stop();\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.previousServiceConfig = null;\n        this.continueResolving = false;\n    }\n    getTypeName() {\n        return 'resolving_load_balancer';\n    }\n}\nexports.ResolvingLoadBalancer = ResolvingLoadBalancer;\n//# sourceMappingURL=resolving-load-balancer.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryingCall = exports.MessageBufferTracker = exports.RetryThrottler = void 0;\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'retrying_call';\nclass RetryThrottler {\n    constructor(maxTokens, tokenRatio, previousRetryThrottler) {\n        this.maxTokens = maxTokens;\n        this.tokenRatio = tokenRatio;\n        if (previousRetryThrottler) {\n            /* When carrying over tokens from a previous config, rescale them to the\n             * new max value */\n            this.tokens =\n                previousRetryThrottler.tokens *\n                    (maxTokens / previousRetryThrottler.maxTokens);\n        }\n        else {\n            this.tokens = maxTokens;\n        }\n    }\n    addCallSucceeded() {\n        this.tokens = Math.max(this.tokens + this.tokenRatio, this.maxTokens);\n    }\n    addCallFailed() {\n        this.tokens = Math.min(this.tokens - 1, 0);\n    }\n    canRetryCall() {\n        return this.tokens > this.maxTokens / 2;\n    }\n}\nexports.RetryThrottler = RetryThrottler;\nclass MessageBufferTracker {\n    constructor(totalLimit, limitPerCall) {\n        this.totalLimit = totalLimit;\n        this.limitPerCall = limitPerCall;\n        this.totalAllocated = 0;\n        this.allocatedPerCall = new Map();\n    }\n    allocate(size, callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.limitPerCall - currentPerCall < size ||\n            this.totalLimit - this.totalAllocated < size) {\n            return false;\n        }\n        this.allocatedPerCall.set(callId, currentPerCall + size);\n        this.totalAllocated += size;\n        return true;\n    }\n    free(size, callId) {\n        var _a;\n        if (this.totalAllocated < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= size;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (currentPerCall < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > allocated for call ${currentPerCall}`);\n        }\n        this.allocatedPerCall.set(callId, currentPerCall - size);\n    }\n    freeAll(callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.totalAllocated < currentPerCall) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} allocated ${currentPerCall} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= currentPerCall;\n        this.allocatedPerCall.delete(callId);\n    }\n}\nexports.MessageBufferTracker = MessageBufferTracker;\nconst PREVIONS_RPC_ATTEMPTS_METADATA_KEY = 'grpc-previous-rpc-attempts';\nclass RetryingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber, bufferTracker, retryThrottler) {\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.bufferTracker = bufferTracker;\n        this.retryThrottler = retryThrottler;\n        this.listener = null;\n        this.initialMetadata = null;\n        this.underlyingCalls = [];\n        this.writeBuffer = [];\n        /**\n         * The offset of message indices in the writeBuffer. For example, if\n         * writeBufferOffset is 10, message 10 is in writeBuffer[0] and message 15\n         * is in writeBuffer[5].\n         */\n        this.writeBufferOffset = 0;\n        /**\n         * Tracks whether a read has been started, so that we know whether to start\n         * reads on new child calls. This only matters for the first read, because\n         * once a message comes in the child call becomes committed and there will\n         * be no new child calls.\n         */\n        this.readStarted = false;\n        this.transparentRetryUsed = false;\n        /**\n         * Number of attempts so far\n         */\n        this.attempts = 0;\n        this.hedgingTimer = null;\n        this.committedCallIndex = null;\n        this.initialRetryBackoffSec = 0;\n        this.nextRetryBackoffSec = 0;\n        if (callConfig.methodConfig.retryPolicy) {\n            this.state = 'RETRY';\n            const retryPolicy = callConfig.methodConfig.retryPolicy;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(retryPolicy.initialBackoff.substring(0, retryPolicy.initialBackoff.length - 1));\n        }\n        else if (callConfig.methodConfig.hedgingPolicy) {\n            this.state = 'HEDGING';\n        }\n        else {\n            this.state = 'TRANSPARENT_ONLY';\n        }\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    reportStatus(statusObject) {\n        this.trace('ended with status: code=' +\n            statusObject.code +\n            ' details=\"' +\n            statusObject.details +\n            '\"');\n        this.bufferTracker.freeAll(this.callNumber);\n        this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length;\n        this.writeBuffer = [];\n        process.nextTick(() => {\n            var _a;\n            // Explicitly construct status object to remove progress field\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus({\n                code: statusObject.code,\n                details: statusObject.details,\n                metadata: statusObject.metadata,\n            });\n        });\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.reportStatus({ code: status, details, metadata: new metadata_1.Metadata() });\n        for (const { call } of this.underlyingCalls) {\n            call.cancelWithStatus(status, details);\n        }\n    }\n    getPeer() {\n        if (this.committedCallIndex !== null) {\n            return this.underlyingCalls[this.committedCallIndex].call.getPeer();\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getBufferEntry(messageIndex) {\n        var _a;\n        return ((_a = this.writeBuffer[messageIndex - this.writeBufferOffset]) !== null && _a !== void 0 ? _a : {\n            entryType: 'FREED',\n            allocated: false,\n        });\n    }\n    getNextBufferIndex() {\n        return this.writeBufferOffset + this.writeBuffer.length;\n    }\n    clearSentMessages() {\n        if (this.state !== 'COMMITTED') {\n            return;\n        }\n        const earliestNeededMessageIndex = this.underlyingCalls[this.committedCallIndex].nextMessageToSend;\n        for (let messageIndex = this.writeBufferOffset; messageIndex < earliestNeededMessageIndex; messageIndex++) {\n            const bufferEntry = this.getBufferEntry(messageIndex);\n            if (bufferEntry.allocated) {\n                this.bufferTracker.free(bufferEntry.message.message.length, this.callNumber);\n            }\n        }\n        this.writeBuffer = this.writeBuffer.slice(earliestNeededMessageIndex - this.writeBufferOffset);\n        this.writeBufferOffset = earliestNeededMessageIndex;\n    }\n    commitCall(index) {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        if (this.underlyingCalls[index].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('Committing call [' +\n            this.underlyingCalls[index].call.getCallNumber() +\n            '] at index ' +\n            index);\n        this.state = 'COMMITTED';\n        this.committedCallIndex = index;\n        for (let i = 0; i < this.underlyingCalls.length; i++) {\n            if (i === index) {\n                continue;\n            }\n            if (this.underlyingCalls[i].state === 'COMPLETED') {\n                continue;\n            }\n            this.underlyingCalls[i].state = 'COMPLETED';\n            this.underlyingCalls[i].call.cancelWithStatus(constants_1.Status.CANCELLED, 'Discarded in favor of other hedged attempt');\n        }\n        this.clearSentMessages();\n    }\n    commitCallWithMostMessages() {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        let mostMessages = -1;\n        let callWithMostMessages = -1;\n        for (const [index, childCall] of this.underlyingCalls.entries()) {\n            if (childCall.state === 'ACTIVE' &&\n                childCall.nextMessageToSend > mostMessages) {\n                mostMessages = childCall.nextMessageToSend;\n                callWithMostMessages = index;\n            }\n        }\n        if (callWithMostMessages === -1) {\n            /* There are no active calls, disable retries to force the next call that\n             * is started to be committed. */\n            this.state = 'TRANSPARENT_ONLY';\n        }\n        else {\n            this.commitCall(callWithMostMessages);\n        }\n    }\n    isStatusCodeInList(list, code) {\n        return list.some(value => value === code ||\n            value.toString().toLowerCase() === constants_1.Status[code].toLowerCase());\n    }\n    getNextRetryBackoffMs() {\n        var _a;\n        const retryPolicy = (_a = this.callConfig) === null || _a === void 0 ? void 0 : _a.methodConfig.retryPolicy;\n        if (!retryPolicy) {\n            return 0;\n        }\n        const nextBackoffMs = Math.random() * this.nextRetryBackoffSec * 1000;\n        const maxBackoffSec = Number(retryPolicy.maxBackoff.substring(0, retryPolicy.maxBackoff.length - 1));\n        this.nextRetryBackoffSec = Math.min(this.nextRetryBackoffSec * retryPolicy.backoffMultiplier, maxBackoffSec);\n        return nextBackoffMs;\n    }\n    maybeRetryCall(pushback, callback) {\n        if (this.state !== 'RETRY') {\n            callback(false);\n            return;\n        }\n        const retryPolicy = this.callConfig.methodConfig.retryPolicy;\n        if (this.attempts >= Math.min(retryPolicy.maxAttempts, 5)) {\n            callback(false);\n            return;\n        }\n        let retryDelayMs;\n        if (pushback === null) {\n            retryDelayMs = this.getNextRetryBackoffMs();\n        }\n        else if (pushback < 0) {\n            this.state = 'TRANSPARENT_ONLY';\n            callback(false);\n            return;\n        }\n        else {\n            retryDelayMs = pushback;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec;\n        }\n        setTimeout(() => {\n            var _a, _b;\n            if (this.state !== 'RETRY') {\n                callback(false);\n                return;\n            }\n            if ((_b = (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.canRetryCall()) !== null && _b !== void 0 ? _b : true) {\n                callback(true);\n                this.attempts += 1;\n                this.startNewAttempt();\n            }\n        }, retryDelayMs);\n    }\n    countActiveCalls() {\n        let count = 0;\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    handleProcessedStatus(status, callIndex, pushback) {\n        var _a, _b, _c;\n        switch (this.state) {\n            case 'COMMITTED':\n            case 'TRANSPARENT_ONLY':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'HEDGING':\n                if (this.isStatusCodeInList((_a = this.callConfig.methodConfig.hedgingPolicy.nonFatalStatusCodes) !== null && _a !== void 0 ? _a : [], status.code)) {\n                    (_b = this.retryThrottler) === null || _b === void 0 ? void 0 : _b.addCallFailed();\n                    let delayMs;\n                    if (pushback === null) {\n                        delayMs = 0;\n                    }\n                    else if (pushback < 0) {\n                        this.state = 'TRANSPARENT_ONLY';\n                        this.commitCall(callIndex);\n                        this.reportStatus(status);\n                        return;\n                    }\n                    else {\n                        delayMs = pushback;\n                    }\n                    setTimeout(() => {\n                        this.maybeStartHedgingAttempt();\n                        // If after trying to start a call there are no active calls, this was the last one\n                        if (this.countActiveCalls() === 0) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    }, delayMs);\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n            case 'RETRY':\n                if (this.isStatusCodeInList(this.callConfig.methodConfig.retryPolicy.retryableStatusCodes, status.code)) {\n                    (_c = this.retryThrottler) === null || _c === void 0 ? void 0 : _c.addCallFailed();\n                    this.maybeRetryCall(pushback, retried => {\n                        if (!retried) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    });\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n        }\n    }\n    getPushback(metadata) {\n        const mdValue = metadata.get('grpc-retry-pushback-ms');\n        if (mdValue.length === 0) {\n            return null;\n        }\n        try {\n            return parseInt(mdValue[0]);\n        }\n        catch (e) {\n            return -1;\n        }\n    }\n    handleChildStatus(status, callIndex) {\n        var _a;\n        if (this.underlyingCalls[callIndex].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('state=' +\n            this.state +\n            ' handling status with progress ' +\n            status.progress +\n            ' from child [' +\n            this.underlyingCalls[callIndex].call.getCallNumber() +\n            '] in state ' +\n            this.underlyingCalls[callIndex].state);\n        this.underlyingCalls[callIndex].state = 'COMPLETED';\n        if (status.code === constants_1.Status.OK) {\n            (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.addCallSucceeded();\n            this.commitCall(callIndex);\n            this.reportStatus(status);\n            return;\n        }\n        if (this.state === 'COMMITTED') {\n            this.reportStatus(status);\n            return;\n        }\n        const pushback = this.getPushback(status.metadata);\n        switch (status.progress) {\n            case 'NOT_STARTED':\n                // RPC never leaves the client, always safe to retry\n                this.startNewAttempt();\n                break;\n            case 'REFUSED':\n                // RPC reaches the server library, but not the server application logic\n                if (this.transparentRetryUsed) {\n                    this.handleProcessedStatus(status, callIndex, pushback);\n                }\n                else {\n                    this.transparentRetryUsed = true;\n                    this.startNewAttempt();\n                }\n                break;\n            case 'DROP':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'PROCESSED':\n                this.handleProcessedStatus(status, callIndex, pushback);\n                break;\n        }\n    }\n    maybeStartHedgingAttempt() {\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    maybeStartHedgingTimer() {\n        var _a, _b, _c;\n        if (this.hedgingTimer) {\n            clearTimeout(this.hedgingTimer);\n        }\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        const hedgingDelayString = (_a = hedgingPolicy.hedgingDelay) !== null && _a !== void 0 ? _a : '0s';\n        const hedgingDelaySec = Number(hedgingDelayString.substring(0, hedgingDelayString.length - 1));\n        this.hedgingTimer = setTimeout(() => {\n            this.maybeStartHedgingAttempt();\n        }, hedgingDelaySec * 1000);\n        (_c = (_b = this.hedgingTimer).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    startNewAttempt() {\n        const child = this.channel.createLoadBalancingCall(this.callConfig, this.methodName, this.host, this.credentials, this.deadline);\n        this.trace('Created child call [' +\n            child.getCallNumber() +\n            '] for attempt ' +\n            this.attempts);\n        const index = this.underlyingCalls.length;\n        this.underlyingCalls.push({\n            state: 'ACTIVE',\n            call: child,\n            nextMessageToSend: 0,\n        });\n        const previousAttempts = this.attempts - 1;\n        const initialMetadata = this.initialMetadata.clone();\n        if (previousAttempts > 0) {\n            initialMetadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n        }\n        let receivedMetadata = false;\n        child.start(initialMetadata, {\n            onReceiveMetadata: metadata => {\n                this.trace('Received metadata from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                receivedMetadata = true;\n                if (previousAttempts > 0) {\n                    metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMetadata(metadata);\n                }\n            },\n            onReceiveMessage: message => {\n                this.trace('Received message from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMessage(message);\n                }\n            },\n            onReceiveStatus: status => {\n                this.trace('Received status from child [' + child.getCallNumber() + ']');\n                if (!receivedMetadata && previousAttempts > 0) {\n                    status.metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                this.handleChildStatus(status, index);\n            },\n        });\n        this.sendNextChildMessage(index);\n        if (this.readStarted) {\n            child.startRead();\n        }\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.initialMetadata = metadata;\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    handleChildWriteCompleted(childIndex) {\n        var _a, _b;\n        const childCall = this.underlyingCalls[childIndex];\n        const messageIndex = childCall.nextMessageToSend;\n        (_b = (_a = this.getBufferEntry(messageIndex)).callback) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.clearSentMessages();\n        childCall.nextMessageToSend += 1;\n        this.sendNextChildMessage(childIndex);\n    }\n    sendNextChildMessage(childIndex) {\n        const childCall = this.underlyingCalls[childIndex];\n        if (childCall.state === 'COMPLETED') {\n            return;\n        }\n        if (this.getBufferEntry(childCall.nextMessageToSend)) {\n            const bufferEntry = this.getBufferEntry(childCall.nextMessageToSend);\n            switch (bufferEntry.entryType) {\n                case 'MESSAGE':\n                    childCall.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(childIndex);\n                        },\n                    }, bufferEntry.message.message);\n                    break;\n                case 'HALF_CLOSE':\n                    childCall.nextMessageToSend += 1;\n                    childCall.call.halfClose();\n                    break;\n                case 'FREED':\n                    // Should not be possible\n                    break;\n            }\n        }\n    }\n    sendMessageWithContext(context, message) {\n        var _a;\n        this.trace('write() called with message of length ' + message.length);\n        const writeObj = {\n            message,\n            flags: context.flags,\n        };\n        const messageIndex = this.getNextBufferIndex();\n        const bufferEntry = {\n            entryType: 'MESSAGE',\n            message: writeObj,\n            allocated: this.bufferTracker.allocate(message.length, this.callNumber),\n        };\n        this.writeBuffer.push(bufferEntry);\n        if (bufferEntry.allocated) {\n            (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            for (const [callIndex, call] of this.underlyingCalls.entries()) {\n                if (call.state === 'ACTIVE' &&\n                    call.nextMessageToSend === messageIndex) {\n                    call.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(callIndex);\n                        },\n                    }, message);\n                }\n            }\n        }\n        else {\n            this.commitCallWithMostMessages();\n            // commitCallWithMostMessages can fail if we are between ping attempts\n            if (this.committedCallIndex === null) {\n                return;\n            }\n            const call = this.underlyingCalls[this.committedCallIndex];\n            bufferEntry.callback = context.callback;\n            if (call.state === 'ACTIVE' && call.nextMessageToSend === messageIndex) {\n                call.call.sendMessageWithContext({\n                    callback: error => {\n                        // Ignore error\n                        this.handleChildWriteCompleted(this.committedCallIndex);\n                    },\n                }, message);\n            }\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        this.readStarted = true;\n        for (const underlyingCall of this.underlyingCalls) {\n            if ((underlyingCall === null || underlyingCall === void 0 ? void 0 : underlyingCall.state) === 'ACTIVE') {\n                underlyingCall.call.startRead();\n            }\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        const halfCloseIndex = this.getNextBufferIndex();\n        this.writeBuffer.push({\n            entryType: 'HALF_CLOSE',\n            allocated: false,\n        });\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE' &&\n                call.nextMessageToSend === halfCloseIndex) {\n                call.nextMessageToSend += 1;\n                call.call.halfClose();\n            }\n        }\n    }\n    setCredentials(newCredentials) {\n        throw new Error('Method not implemented.');\n    }\n    getMethod() {\n        return this.methodName;\n    }\n    getHost() {\n        return this.host;\n    }\n}\nexports.RetryingCall = RetryingCall;\n//# sourceMappingURL=retrying-call.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2ServerCallStream = exports.ServerDuplexStreamImpl = exports.ServerWritableStreamImpl = exports.ServerReadableStreamImpl = exports.ServerUnaryCallImpl = void 0;\nconst events_1 = require(\"events\");\nconst http2 = require(\"http2\");\nconst stream_1 = require(\"stream\");\nconst zlib = require(\"zlib\");\nconst util_1 = require(\"util\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst error_1 = require(\"./error\");\nconst TRACER_NAME = 'server_call';\nconst unzip = (0, util_1.promisify)(zlib.unzip);\nconst inflate = (0, util_1.promisify)(zlib.inflate);\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nconst GRPC_ENCODING_HEADER = 'grpc-encoding';\nconst GRPC_MESSAGE_HEADER = 'grpc-message';\nconst GRPC_STATUS_HEADER = 'grpc-status';\nconst GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nconst DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nconst deadlineUnitsToMs = {\n    H: 3600000,\n    M: 60000,\n    S: 1000,\n    m: 1,\n    u: 0.001,\n    n: 0.000001,\n};\nconst defaultCompressionHeaders = {\n    // TODO(cjihrig): Remove these encoding headers from the default response\n    // once compression is integrated.\n    [GRPC_ACCEPT_ENCODING_HEADER]: 'identity,deflate,gzip',\n    [GRPC_ENCODING_HEADER]: 'identity',\n};\nconst defaultResponseHeaders = {\n    [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n    [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n};\nconst defaultResponseOptions = {\n    waitForTrailers: true,\n};\nclass ServerUnaryCallImpl extends events_1.EventEmitter {\n    constructor(call, metadata, request) {\n        super();\n        this.call = call;\n        this.metadata = metadata;\n        this.request = request;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerUnaryCallImpl = ServerUnaryCallImpl;\nclass ServerReadableStreamImpl extends stream_1.Readable {\n    constructor(call, metadata, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n    }\n    _read(size) {\n        if (!this.call.consumeUnpushedMessages(this)) {\n            return;\n        }\n        this.call.resume();\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerReadableStreamImpl = ServerReadableStreamImpl;\nclass ServerWritableStreamImpl extends stream_1.Writable {\n    constructor(call, metadata, serialize, request) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.request = request;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    _write(chunk, encoding, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            const response = this.call.serializeMessage(chunk);\n            if (!this.call.write(response)) {\n                this.call.once('drain', callback);\n                return;\n            }\n        }\n        catch (err) {\n            this.emit('error', {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n        callback();\n    }\n    _final(callback) {\n        this.call.sendStatus({\n            code: constants_1.Status.OK,\n            details: 'OK',\n            metadata: this.trailingMetadata,\n        });\n        callback(null);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerWritableStreamImpl = ServerWritableStreamImpl;\nclass ServerDuplexStreamImpl extends stream_1.Duplex {\n    constructor(call, metadata, serialize, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerDuplexStreamImpl = ServerDuplexStreamImpl;\nServerDuplexStreamImpl.prototype._read =\n    ServerReadableStreamImpl.prototype._read;\nServerDuplexStreamImpl.prototype._write =\n    ServerWritableStreamImpl.prototype._write;\nServerDuplexStreamImpl.prototype._final =\n    ServerWritableStreamImpl.prototype._final;\n// Internal class that wraps the HTTP2 request.\nclass Http2ServerCallStream extends events_1.EventEmitter {\n    constructor(stream, handler, options) {\n        super();\n        this.stream = stream;\n        this.handler = handler;\n        this.cancelled = false;\n        this.deadlineTimer = null;\n        this.statusSent = false;\n        this.deadline = Infinity;\n        this.wantTrailers = false;\n        this.metadataSent = false;\n        this.canPush = false;\n        this.isPushPending = false;\n        this.bufferedMessages = [];\n        this.messagesToPush = [];\n        this.maxSendMessageSize = constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        this.maxReceiveMessageSize = constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.stream.once('error', (err) => {\n            /* We need an error handler to avoid uncaught error event exceptions, but\n             * there is nothing we can reasonably do here. Any error event should\n             * have a corresponding close event, which handles emitting the cancelled\n             * event. And the stream is now in a bad state, so we can't reasonably\n             * expect to be able to send an error over it. */\n        });\n        this.stream.once('close', () => {\n            var _a;\n            trace('Request to method ' +\n                ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n                ' stream closed with rstCode ' +\n                this.stream.rstCode);\n            if (!this.statusSent) {\n                this.cancelled = true;\n                this.emit('cancelled', 'cancelled');\n                this.emit('streamEnd', false);\n                this.sendStatus({\n                    code: constants_1.Status.CANCELLED,\n                    details: 'Cancelled by client',\n                    metadata: null,\n                });\n                if (this.deadlineTimer)\n                    clearTimeout(this.deadlineTimer);\n            }\n        });\n        this.stream.on('drain', () => {\n            this.emit('drain');\n        });\n        if ('grpc.max_send_message_length' in options) {\n            this.maxSendMessageSize = options['grpc.max_send_message_length'];\n        }\n        if ('grpc.max_receive_message_length' in options) {\n            this.maxReceiveMessageSize = options['grpc.max_receive_message_length'];\n        }\n    }\n    checkCancelled() {\n        /* In some cases the stream can become destroyed before the close event\n         * fires. That creates a race condition that this check works around */\n        if (this.stream.destroyed || this.stream.closed) {\n            this.cancelled = true;\n        }\n        return this.cancelled;\n    }\n    getDecompressedMessage(message, encoding) {\n        if (encoding === 'deflate') {\n            return inflate(message.subarray(5));\n        }\n        else if (encoding === 'gzip') {\n            return unzip(message.subarray(5));\n        }\n        else if (encoding === 'identity') {\n            return message.subarray(5);\n        }\n        return Promise.reject({\n            code: constants_1.Status.UNIMPLEMENTED,\n            details: `Received message compressed with unsupported encoding \"${encoding}\"`,\n        });\n    }\n    sendMetadata(customMetadata) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.metadataSent) {\n            return;\n        }\n        this.metadataSent = true;\n        const custom = customMetadata ? customMetadata.toHttp2Headers() : null;\n        // TODO(cjihrig): Include compression headers.\n        const headers = Object.assign(Object.assign(Object.assign({}, defaultResponseHeaders), defaultCompressionHeaders), custom);\n        this.stream.respond(headers, defaultResponseOptions);\n    }\n    receiveMetadata(headers) {\n        const metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            trace('Request to ' +\n                this.handler.path +\n                ' received headers ' +\n                JSON.stringify(metadata.toJSON()));\n        }\n        // TODO(cjihrig): Receive compression metadata.\n        const timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n        if (timeoutHeader.length > 0) {\n            const match = timeoutHeader[0].toString().match(DEADLINE_REGEX);\n            if (match === null) {\n                const err = new Error('Invalid deadline');\n                err.code = constants_1.Status.OUT_OF_RANGE;\n                this.sendError(err);\n                return metadata;\n            }\n            const timeout = (+match[1] * deadlineUnitsToMs[match[2]]) | 0;\n            const now = new Date();\n            this.deadline = now.setMilliseconds(now.getMilliseconds() + timeout);\n            this.deadlineTimer = setTimeout(handleExpiredDeadline, timeout, this);\n            metadata.remove(GRPC_TIMEOUT_HEADER);\n        }\n        // Remove several headers that should not be propagated to the application\n        metadata.remove(http2.constants.HTTP2_HEADER_ACCEPT_ENCODING);\n        metadata.remove(http2.constants.HTTP2_HEADER_TE);\n        metadata.remove(http2.constants.HTTP2_HEADER_CONTENT_TYPE);\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    receiveUnaryMessage(encoding) {\n        return new Promise((resolve, reject) => {\n            const { stream } = this;\n            let receivedLength = 0;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const call = this;\n            const body = [];\n            const limit = this.maxReceiveMessageSize;\n            this.stream.on('data', onData);\n            this.stream.on('end', onEnd);\n            this.stream.on('error', onEnd);\n            function onData(chunk) {\n                receivedLength += chunk.byteLength;\n                if (limit !== -1 && receivedLength > limit) {\n                    stream.removeListener('data', onData);\n                    stream.removeListener('end', onEnd);\n                    stream.removeListener('error', onEnd);\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message larger than max (${receivedLength} vs. ${limit})`,\n                    });\n                    return;\n                }\n                body.push(chunk);\n            }\n            function onEnd(err) {\n                stream.removeListener('data', onData);\n                stream.removeListener('end', onEnd);\n                stream.removeListener('error', onEnd);\n                if (err !== undefined) {\n                    reject({ code: constants_1.Status.INTERNAL, details: err.message });\n                    return;\n                }\n                if (receivedLength === 0) {\n                    reject({\n                        code: constants_1.Status.INTERNAL,\n                        details: 'received empty unary message',\n                    });\n                    return;\n                }\n                call.emit('receiveMessage');\n                const requestBytes = Buffer.concat(body, receivedLength);\n                const compressed = requestBytes.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                const decompressedMessage = call.getDecompressedMessage(requestBytes, compressedMessageEncoding);\n                if (Buffer.isBuffer(decompressedMessage)) {\n                    resolve(call.deserializeMessageWithInternalError(decompressedMessage));\n                    return;\n                }\n                decompressedMessage.then(decompressed => resolve(call.deserializeMessageWithInternalError(decompressed)), (err) => reject(err.code\n                    ? err\n                    : {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Received \"grpc-encoding\" header \"${encoding}\" but ${encoding} decompression failed`,\n                    }));\n            }\n        });\n    }\n    async deserializeMessageWithInternalError(buffer) {\n        try {\n            return this.deserializeMessage(buffer);\n        }\n        catch (err) {\n            throw {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            };\n        }\n    }\n    serializeMessage(value) {\n        const messageBuffer = this.handler.serialize(value);\n        // TODO(cjihrig): Call compression aware serializeMessage().\n        const byteLength = messageBuffer.byteLength;\n        const output = Buffer.allocUnsafe(byteLength + 5);\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(byteLength, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    deserializeMessage(bytes) {\n        return this.handler.deserialize(bytes);\n    }\n    async sendUnaryMessage(err, value, metadata, flags) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (metadata === undefined) {\n            metadata = null;\n        }\n        if (err) {\n            if (!Object.prototype.hasOwnProperty.call(err, 'metadata') && metadata) {\n                err.metadata = metadata;\n            }\n            this.sendError(err);\n            return;\n        }\n        try {\n            const response = this.serializeMessage(value);\n            this.write(response);\n            this.sendStatus({ code: constants_1.Status.OK, details: 'OK', metadata });\n        }\n        catch (err) {\n            this.sendError({\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n    }\n    sendStatus(statusObj) {\n        var _a, _b;\n        this.emit('callEnd', statusObj.code);\n        this.emit('streamEnd', statusObj.code === constants_1.Status.OK);\n        if (this.checkCancelled()) {\n            return;\n        }\n        trace('Request to method ' +\n            ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n            ' ended with status code: ' +\n            constants_1.Status[statusObj.code] +\n            ' details: ' +\n            statusObj.details);\n        if (this.deadlineTimer)\n            clearTimeout(this.deadlineTimer);\n        if (this.stream.headersSent) {\n            if (!this.wantTrailers) {\n                this.wantTrailers = true;\n                this.stream.once('wantTrailers', () => {\n                    var _a;\n                    const trailersToSend = Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, (_a = statusObj.metadata) === null || _a === void 0 ? void 0 : _a.toHttp2Headers());\n                    this.stream.sendTrailers(trailersToSend);\n                    this.statusSent = true;\n                });\n                this.stream.end();\n            }\n        }\n        else {\n            // Trailers-only response\n            const trailersToSend = Object.assign(Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, defaultResponseHeaders), (_b = statusObj.metadata) === null || _b === void 0 ? void 0 : _b.toHttp2Headers());\n            this.stream.respond(trailersToSend, { endStream: true });\n            this.statusSent = true;\n        }\n    }\n    sendError(error) {\n        const status = {\n            code: constants_1.Status.UNKNOWN,\n            details: 'message' in error ? error.message : 'Unknown Error',\n            metadata: 'metadata' in error && error.metadata !== undefined\n                ? error.metadata\n                : null,\n        };\n        if ('code' in error &&\n            typeof error.code === 'number' &&\n            Number.isInteger(error.code)) {\n            status.code = error.code;\n            if ('details' in error && typeof error.details === 'string') {\n                status.details = error.details;\n            }\n        }\n        this.sendStatus(status);\n    }\n    write(chunk) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.maxSendMessageSize !== -1 &&\n            chunk.length > this.maxSendMessageSize) {\n            this.sendError({\n                code: constants_1.Status.RESOURCE_EXHAUSTED,\n                details: `Sent message larger than max (${chunk.length} vs. ${this.maxSendMessageSize})`,\n            });\n            return;\n        }\n        this.sendMetadata();\n        this.emit('sendMessage');\n        return this.stream.write(chunk);\n    }\n    resume() {\n        this.stream.resume();\n    }\n    setupSurfaceCall(call) {\n        this.once('cancelled', reason => {\n            call.cancelled = true;\n            call.emit('cancelled', reason);\n        });\n        this.once('callEnd', status => call.emit('callEnd', status));\n    }\n    setupReadable(readable, encoding) {\n        const decoder = new stream_decoder_1.StreamDecoder();\n        let readsDone = false;\n        let pendingMessageProcessing = false;\n        let pushedEnd = false;\n        const maybePushEnd = async () => {\n            if (!pushedEnd && readsDone && !pendingMessageProcessing) {\n                pushedEnd = true;\n                await this.pushOrBufferMessage(readable, null);\n            }\n        };\n        this.stream.on('data', async (data) => {\n            const messages = decoder.write(data);\n            pendingMessageProcessing = true;\n            this.stream.pause();\n            for (const message of messages) {\n                if (this.maxReceiveMessageSize !== -1 &&\n                    message.length > this.maxReceiveMessageSize) {\n                    this.sendError({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message larger than max (${message.length} vs. ${this.maxReceiveMessageSize})`,\n                    });\n                    return;\n                }\n                this.emit('receiveMessage');\n                const compressed = message.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                const decompressedMessage = await this.getDecompressedMessage(message, compressedMessageEncoding);\n                // Encountered an error with decompression; it'll already have been propogated back\n                // Just return early\n                if (!decompressedMessage)\n                    return;\n                await this.pushOrBufferMessage(readable, decompressedMessage);\n            }\n            pendingMessageProcessing = false;\n            this.stream.resume();\n            await maybePushEnd();\n        });\n        this.stream.once('end', async () => {\n            readsDone = true;\n            await maybePushEnd();\n        });\n    }\n    consumeUnpushedMessages(readable) {\n        this.canPush = true;\n        while (this.messagesToPush.length > 0) {\n            const nextMessage = this.messagesToPush.shift();\n            const canPush = readable.push(nextMessage);\n            if (nextMessage === null || canPush === false) {\n                this.canPush = false;\n                break;\n            }\n        }\n        return this.canPush;\n    }\n    async pushOrBufferMessage(readable, messageBytes) {\n        if (this.isPushPending) {\n            this.bufferedMessages.push(messageBytes);\n        }\n        else {\n            await this.pushMessage(readable, messageBytes);\n        }\n    }\n    async pushMessage(readable, messageBytes) {\n        if (messageBytes === null) {\n            trace('Received end of stream');\n            if (this.canPush) {\n                readable.push(null);\n            }\n            else {\n                this.messagesToPush.push(null);\n            }\n            return;\n        }\n        trace('Received message of length ' + messageBytes.length);\n        this.isPushPending = true;\n        try {\n            const deserialized = await this.deserializeMessage(messageBytes);\n            if (this.canPush) {\n                if (!readable.push(deserialized)) {\n                    this.canPush = false;\n                    this.stream.pause();\n                }\n            }\n            else {\n                this.messagesToPush.push(deserialized);\n            }\n        }\n        catch (error) {\n            // Ignore any remaining messages when errors occur.\n            this.bufferedMessages.length = 0;\n            let code = (0, error_1.getErrorCode)(error);\n            if (code === null || code < constants_1.Status.OK || code > constants_1.Status.UNAUTHENTICATED) {\n                code = constants_1.Status.INTERNAL;\n            }\n            readable.emit('error', {\n                details: (0, error_1.getErrorMessage)(error),\n                code: code,\n            });\n        }\n        this.isPushPending = false;\n        if (this.bufferedMessages.length > 0) {\n            await this.pushMessage(readable, this.bufferedMessages.shift());\n        }\n    }\n    getPeer() {\n        var _a;\n        const socket = (_a = this.stream.session) === null || _a === void 0 ? void 0 : _a.socket;\n        if (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) {\n            if (socket.remotePort) {\n                return `${socket.remoteAddress}:${socket.remotePort}`;\n            }\n            else {\n                return socket.remoteAddress;\n            }\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getDeadline() {\n        return this.deadline;\n    }\n    getPath() {\n        return this.handler.path;\n    }\n}\nexports.Http2ServerCallStream = Http2ServerCallStream;\nfunction handleExpiredDeadline(call) {\n    const err = new Error('Deadline exceeded');\n    err.code = constants_1.Status.DEADLINE_EXCEEDED;\n    call.sendError(err);\n    call.cancelled = true;\n    call.emit('cancelled', 'deadline');\n}\n//# sourceMappingURL=server-call.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: rootCerts || (0, tls_helpers_1.getDefaultRootsData)() || undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n}\n//# sourceMappingURL=server-credentials.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = void 0;\nconst http2 = require(\"http2\");\nconst constants_1 = require(\"./constants\");\nconst server_call_1 = require(\"./server-call\");\nconst server_credentials_1 = require(\"./server-credentials\");\nconst resolver_1 = require(\"./resolver\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst channelz_1 = require(\"./channelz\");\nconst UNLIMITED_CONNECTION_AGE_MS = ~(1 << 31);\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst { HTTP2_HEADER_PATH } = http2.constants;\nconst TRACER_NAME = 'server';\nfunction noop() { }\nfunction getUnimplementedStatusResponse(methodName) {\n    return {\n        code: constants_1.Status.UNIMPLEMENTED,\n        details: `The server does not implement the method ${methodName}`,\n    };\n}\nfunction getDefaultHandler(handlerType, methodName) {\n    const unimplementedStatusResponse = getUnimplementedStatusResponse(methodName);\n    switch (handlerType) {\n        case 'unary':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'clientStream':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'serverStream':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        case 'bidi':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        default:\n            throw new Error(`Invalid handlerType ${handlerType}`);\n    }\n}\nclass Server {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        this.http2ServerList = [];\n        this.handlers = new Map();\n        this.sessions = new Map();\n        this.started = false;\n        this.serverAddressString = 'null';\n        // Channelz Info\n        this.channelzEnabled = true;\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.listenerChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.sessionChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.options = options !== null && options !== void 0 ? options : {};\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzServer)(() => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Server created');\n        }\n        this.maxConnectionAgeMs =\n            (_a = this.options['grpc.max_connection_age_ms']) !== null && _a !== void 0 ? _a : UNLIMITED_CONNECTION_AGE_MS;\n        this.maxConnectionAgeGraceMs =\n            (_b = this.options['grpc.max_connection_age_grace_ms']) !== null && _b !== void 0 ? _b : UNLIMITED_CONNECTION_AGE_MS;\n        this.keepaliveTimeMs =\n            (_c = this.options['grpc.keepalive_time_ms']) !== null && _c !== void 0 ? _c : KEEPALIVE_MAX_TIME_MS;\n        this.keepaliveTimeoutMs =\n            (_d = this.options['grpc.keepalive_timeout_ms']) !== null && _d !== void 0 ? _d : KEEPALIVE_TIMEOUT_MS;\n        this.trace('Server constructed');\n    }\n    getChannelzInfo() {\n        return {\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            listenerChildren: this.listenerChildrenTracker.getChildLists(),\n            sessionChildren: this.sessionChildrenTracker.getChildLists(),\n        };\n    }\n    getChannelzSessionInfoGetter(session) {\n        return () => {\n            var _a, _b, _c;\n            const sessionInfo = this.sessions.get(session);\n            const sessionSocket = session.socket;\n            const remoteAddress = sessionSocket.remoteAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n                : null;\n            const localAddress = sessionSocket.localAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n                : null;\n            let tlsInfo;\n            if (session.encrypted) {\n                const tlsSocket = sessionSocket;\n                const cipherInfo = tlsSocket.getCipher();\n                const certificate = tlsSocket.getCertificate();\n                const peerCertificate = tlsSocket.getPeerCertificate();\n                tlsInfo = {\n                    cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                    cipherSuiteOtherName: cipherInfo.standardName\n                        ? null\n                        : cipherInfo.name,\n                    localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                    remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                        ? peerCertificate.raw\n                        : null,\n                };\n            }\n            else {\n                tlsInfo = null;\n            }\n            const socketInfo = {\n                remoteAddress: remoteAddress,\n                localAddress: localAddress,\n                security: tlsInfo,\n                remoteName: null,\n                streamsStarted: sessionInfo.streamTracker.callsStarted,\n                streamsSucceeded: sessionInfo.streamTracker.callsSucceeded,\n                streamsFailed: sessionInfo.streamTracker.callsFailed,\n                messagesSent: sessionInfo.messagesSent,\n                messagesReceived: sessionInfo.messagesReceived,\n                keepAlivesSent: 0,\n                lastLocalStreamCreatedTimestamp: null,\n                lastRemoteStreamCreatedTimestamp: sessionInfo.streamTracker.lastCallStartedTimestamp,\n                lastMessageSentTimestamp: sessionInfo.lastMessageSentTimestamp,\n                lastMessageReceivedTimestamp: sessionInfo.lastMessageReceivedTimestamp,\n                localFlowControlWindow: (_b = session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n                remoteFlowControlWindow: (_c = session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n            };\n            return socketInfo;\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' + this.channelzRef.id + ') ' + text);\n    }\n    addProtoService() {\n        throw new Error('Not implemented. Use addService() instead');\n    }\n    addService(service, implementation) {\n        if (service === null ||\n            typeof service !== 'object' ||\n            implementation === null ||\n            typeof implementation !== 'object') {\n            throw new Error('addService() requires two objects as arguments');\n        }\n        const serviceKeys = Object.keys(service);\n        if (serviceKeys.length === 0) {\n            throw new Error('Cannot add an empty service to a server');\n        }\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            let methodType;\n            if (attrs.requestStream) {\n                if (attrs.responseStream) {\n                    methodType = 'bidi';\n                }\n                else {\n                    methodType = 'clientStream';\n                }\n            }\n            else {\n                if (attrs.responseStream) {\n                    methodType = 'serverStream';\n                }\n                else {\n                    methodType = 'unary';\n                }\n            }\n            let implFn = implementation[name];\n            let impl;\n            if (implFn === undefined && typeof attrs.originalName === 'string') {\n                implFn = implementation[attrs.originalName];\n            }\n            if (implFn !== undefined) {\n                impl = implFn.bind(implementation);\n            }\n            else {\n                impl = getDefaultHandler(methodType, name);\n            }\n            const success = this.register(attrs.path, impl, attrs.responseSerialize, attrs.requestDeserialize, methodType);\n            if (success === false) {\n                throw new Error(`Method handler for ${attrs.path} already provided.`);\n            }\n        });\n    }\n    removeService(service) {\n        if (service === null || typeof service !== 'object') {\n            throw new Error('removeService() requires object as argument');\n        }\n        const serviceKeys = Object.keys(service);\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            this.unregister(attrs.path);\n        });\n    }\n    bind(port, creds) {\n        throw new Error('Not implemented. Use bindAsync() instead');\n    }\n    bindAsync(port, creds, callback) {\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (typeof port !== 'string') {\n            throw new TypeError('port must be a string');\n        }\n        if (creds === null || !(creds instanceof server_credentials_1.ServerCredentials)) {\n            throw new TypeError('creds must be a ServerCredentials object');\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError('callback must be a function');\n        }\n        const initialPortUri = (0, uri_parser_1.parseUri)(port);\n        if (initialPortUri === null) {\n            throw new Error(`Could not parse port \"${port}\"`);\n        }\n        const portUri = (0, resolver_1.mapUriDefaultScheme)(initialPortUri);\n        if (portUri === null) {\n            throw new Error(`Could not get a default scheme for port \"${port}\"`);\n        }\n        const serverOptions = {\n            maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER,\n        };\n        if ('grpc-node.max_session_memory' in this.options) {\n            serverOptions.maxSessionMemory =\n                this.options['grpc-node.max_session_memory'];\n        }\n        else {\n            /* By default, set a very large max session memory limit, to effectively\n             * disable enforcement of the limit. Some testing indicates that Node's\n             * behavior degrades badly when this limit is reached, so we solve that\n             * by disabling the check entirely. */\n            serverOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n        }\n        if ('grpc.max_concurrent_streams' in this.options) {\n            serverOptions.settings = {\n                maxConcurrentStreams: this.options['grpc.max_concurrent_streams'],\n            };\n        }\n        const deferredCallback = (error, port) => {\n            process.nextTick(() => callback(error, port));\n        };\n        const setupServer = () => {\n            let http2Server;\n            if (creds._isSecure()) {\n                const secureServerOptions = Object.assign(serverOptions, creds._getSettings());\n                secureServerOptions.enableTrace =\n                    this.options['grpc-node.tls_enable_trace'] === 1;\n                http2Server = http2.createSecureServer(secureServerOptions);\n                http2Server.on('secureConnection', (socket) => {\n                    /* These errors need to be handled by the user of Http2SecureServer,\n                     * according to https://github.com/nodejs/node/issues/35824 */\n                    socket.on('error', (e) => {\n                        this.trace('An incoming TLS connection closed with error: ' + e.message);\n                    });\n                });\n            }\n            else {\n                http2Server = http2.createServer(serverOptions);\n            }\n            http2Server.setTimeout(0, noop);\n            this._setupHandlers(http2Server);\n            return http2Server;\n        };\n        const bindSpecificPort = (addressList, portNum, previousCount) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: portNum, count: previousCount });\n            }\n            return Promise.all(addressList.map(address => {\n                this.trace('Attempting to bind ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n                let addr;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n                    addr = {\n                        host: address.host,\n                        port: portNum,\n                    };\n                }\n                else {\n                    addr = address;\n                }\n                const http2Server = setupServer();\n                return new Promise((resolve, reject) => {\n                    const onError = (err) => {\n                        this.trace('Failed to bind ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(address) +\n                            ' with error ' +\n                            err.message);\n                        resolve(err);\n                    };\n                    http2Server.once('error', onError);\n                    http2Server.listen(addr, () => {\n                        const boundAddress = http2Server.address();\n                        let boundSubchannelAddress;\n                        if (typeof boundAddress === 'string') {\n                            boundSubchannelAddress = {\n                                path: boundAddress,\n                            };\n                        }\n                        else {\n                            boundSubchannelAddress = {\n                                host: boundAddress.address,\n                                port: boundAddress.port,\n                            };\n                        }\n                        const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                            return {\n                                localAddress: boundSubchannelAddress,\n                                remoteAddress: null,\n                                security: null,\n                                remoteName: null,\n                                streamsStarted: 0,\n                                streamsSucceeded: 0,\n                                streamsFailed: 0,\n                                messagesSent: 0,\n                                messagesReceived: 0,\n                                keepAlivesSent: 0,\n                                lastLocalStreamCreatedTimestamp: null,\n                                lastRemoteStreamCreatedTimestamp: null,\n                                lastMessageSentTimestamp: null,\n                                lastMessageReceivedTimestamp: null,\n                                localFlowControlWindow: null,\n                                remoteFlowControlWindow: null,\n                            };\n                        }, this.channelzEnabled);\n                        if (this.channelzEnabled) {\n                            this.listenerChildrenTracker.refChild(channelzRef);\n                        }\n                        this.http2ServerList.push({\n                            server: http2Server,\n                            channelzRef: channelzRef,\n                        });\n                        this.trace('Successfully bound ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                        resolve('port' in boundSubchannelAddress\n                            ? boundSubchannelAddress.port\n                            : portNum);\n                        http2Server.removeListener('error', onError);\n                    });\n                });\n            })).then(results => {\n                let count = 0;\n                for (const result of results) {\n                    if (typeof result === 'number') {\n                        count += 1;\n                        if (result !== portNum) {\n                            throw new Error('Invalid state: multiple port numbers added from single address');\n                        }\n                    }\n                }\n                return {\n                    port: portNum,\n                    count: count + previousCount,\n                };\n            });\n        };\n        const bindWildcardPort = (addressList) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: 0, count: 0 });\n            }\n            const address = addressList[0];\n            const http2Server = setupServer();\n            return new Promise((resolve, reject) => {\n                const onError = (err) => {\n                    this.trace('Failed to bind ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(address) +\n                        ' with error ' +\n                        err.message);\n                    resolve(bindWildcardPort(addressList.slice(1)));\n                };\n                http2Server.once('error', onError);\n                http2Server.listen(address, () => {\n                    const boundAddress = http2Server.address();\n                    const boundSubchannelAddress = {\n                        host: boundAddress.address,\n                        port: boundAddress.port,\n                    };\n                    const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                        return {\n                            localAddress: boundSubchannelAddress,\n                            remoteAddress: null,\n                            security: null,\n                            remoteName: null,\n                            streamsStarted: 0,\n                            streamsSucceeded: 0,\n                            streamsFailed: 0,\n                            messagesSent: 0,\n                            messagesReceived: 0,\n                            keepAlivesSent: 0,\n                            lastLocalStreamCreatedTimestamp: null,\n                            lastRemoteStreamCreatedTimestamp: null,\n                            lastMessageSentTimestamp: null,\n                            lastMessageReceivedTimestamp: null,\n                            localFlowControlWindow: null,\n                            remoteFlowControlWindow: null,\n                        };\n                    }, this.channelzEnabled);\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.refChild(channelzRef);\n                    }\n                    this.http2ServerList.push({\n                        server: http2Server,\n                        channelzRef: channelzRef,\n                    });\n                    this.trace('Successfully bound ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                    resolve(bindSpecificPort(addressList.slice(1), boundAddress.port, 1));\n                    http2Server.removeListener('error', onError);\n                });\n            });\n        };\n        const resolverListener = {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError) => {\n                // We only want one resolution result. Discard all future results\n                resolverListener.onSuccessfulResolution = () => { };\n                if (addressList.length === 0) {\n                    deferredCallback(new Error(`No addresses resolved for port ${port}`), 0);\n                    return;\n                }\n                let bindResultPromise;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(addressList[0])) {\n                    if (addressList[0].port === 0) {\n                        bindResultPromise = bindWildcardPort(addressList);\n                    }\n                    else {\n                        bindResultPromise = bindSpecificPort(addressList, addressList[0].port, 0);\n                    }\n                }\n                else {\n                    // Use an arbitrary non-zero port for non-TCP addresses\n                    bindResultPromise = bindSpecificPort(addressList, 1, 0);\n                }\n                bindResultPromise.then(bindResult => {\n                    if (bindResult.count === 0) {\n                        const errorString = `No address added out of total ${addressList.length} resolved`;\n                        logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                        deferredCallback(new Error(errorString), 0);\n                    }\n                    else {\n                        if (bindResult.count < addressList.length) {\n                            logging.log(constants_1.LogVerbosity.INFO, `WARNING Only ${bindResult.count} addresses added out of total ${addressList.length} resolved`);\n                        }\n                        deferredCallback(null, bindResult.port);\n                    }\n                }, error => {\n                    const errorString = `No address added out of total ${addressList.length} resolved`;\n                    logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                    deferredCallback(new Error(errorString), 0);\n                });\n            },\n            onError: error => {\n                deferredCallback(new Error(error.details), 0);\n            },\n        };\n        const resolver = (0, resolver_1.createResolver)(portUri, resolverListener, this.options);\n        resolver.updateResolution();\n    }\n    forceShutdown() {\n        // Close the server if it is still running.\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                });\n            }\n        }\n        this.started = false;\n        // Always destroy any available sessions. It's possible that one or more\n        // tryShutdown() calls are in progress. Don't wait on them to finish.\n        this.sessions.forEach((channelzInfo, session) => {\n            // Cast NGHTTP2_CANCEL to any because TypeScript doesn't seem to\n            // recognize destroy(code) as a valid signature.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            session.destroy(http2.constants.NGHTTP2_CANCEL);\n        });\n        this.sessions.clear();\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n    }\n    register(name, handler, serialize, deserialize, type) {\n        if (this.handlers.has(name)) {\n            return false;\n        }\n        this.handlers.set(name, {\n            func: handler,\n            serialize,\n            deserialize,\n            type,\n            path: name,\n        });\n        return true;\n    }\n    unregister(name) {\n        return this.handlers.delete(name);\n    }\n    start() {\n        if (this.http2ServerList.length === 0 ||\n            this.http2ServerList.every(({ server: http2Server }) => http2Server.listening !== true)) {\n            throw new Error('server must be bound in order to start');\n        }\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Starting');\n        }\n        this.started = true;\n    }\n    tryShutdown(callback) {\n        const wrappedCallback = (error) => {\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            callback(error);\n        };\n        let pendingChecks = 0;\n        function maybeCallback() {\n            pendingChecks--;\n            if (pendingChecks === 0) {\n                wrappedCallback();\n            }\n        }\n        // Close the server if necessary.\n        this.started = false;\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                pendingChecks++;\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                    maybeCallback();\n                });\n            }\n        }\n        this.sessions.forEach((channelzInfo, session) => {\n            if (!session.closed) {\n                pendingChecks += 1;\n                session.close(maybeCallback);\n            }\n        });\n        if (pendingChecks === 0) {\n            wrappedCallback();\n        }\n    }\n    addHttp2Port() {\n        throw new Error('Not yet implemented');\n    }\n    /**\n     * Get the channelz reference object for this server. The returned value is\n     * garbage if channelz is disabled for this server.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    _verifyContentType(stream, headers) {\n        const contentType = headers[http2.constants.HTTP2_HEADER_CONTENT_TYPE];\n        if (typeof contentType !== 'string' ||\n            !contentType.startsWith('application/grpc')) {\n            stream.respond({\n                [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,\n            }, { endStream: true });\n            return false;\n        }\n        return true;\n    }\n    _retrieveHandler(path) {\n        this.trace('Received call to method ' +\n            path +\n            ' at address ' +\n            this.serverAddressString);\n        const handler = this.handlers.get(path);\n        if (handler === undefined) {\n            this.trace('No handler registered for method ' +\n                path +\n                '. Sending UNIMPLEMENTED status.');\n            return null;\n        }\n        return handler;\n    }\n    _respondWithError(err, stream, channelzSessionInfo = null) {\n        const call = new server_call_1.Http2ServerCallStream(stream, null, this.options);\n        if (err.code === undefined) {\n            err.code = constants_1.Status.INTERNAL;\n        }\n        if (this.channelzEnabled) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n        }\n        call.sendError(err);\n    }\n    _channelzHandler(stream, headers) {\n        const channelzSessionInfo = this.sessions.get(stream.session);\n        this.callTracker.addCallStarted();\n        channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallStarted();\n        if (!this._verifyContentType(stream, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, channelzSessionInfo);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        call.once('callEnd', (code) => {\n            if (code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        });\n        if (channelzSessionInfo) {\n            call.once('streamEnd', (success) => {\n                if (success) {\n                    channelzSessionInfo.streamTracker.addCallSucceeded();\n                }\n                else {\n                    channelzSessionInfo.streamTracker.addCallFailed();\n                }\n            });\n            call.on('sendMessage', () => {\n                channelzSessionInfo.messagesSent += 1;\n                channelzSessionInfo.lastMessageSentTimestamp = new Date();\n            });\n            call.on('receiveMessage', () => {\n                channelzSessionInfo.messagesReceived += 1;\n                channelzSessionInfo.lastMessageReceivedTimestamp = new Date();\n            });\n        }\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _streamHandler(stream, headers) {\n        if (this._verifyContentType(stream, headers) !== true) {\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, null);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _runHandlerForCall(call, handler, headers) {\n        var _a;\n        const metadata = call.receiveMetadata(headers);\n        const encoding = (_a = metadata.get('grpc-encoding')[0]) !== null && _a !== void 0 ? _a : 'identity';\n        metadata.remove('grpc-encoding');\n        const { type } = handler;\n        if (type === 'unary') {\n            handleUnary(call, handler, metadata, encoding);\n        }\n        else if (type === 'clientStream') {\n            handleClientStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'serverStream') {\n            handleServerStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'bidi') {\n            handleBidiStreaming(call, handler, metadata, encoding);\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    _setupHandlers(http2Server) {\n        if (http2Server === null) {\n            return;\n        }\n        const serverAddress = http2Server.address();\n        let serverAddressString = 'null';\n        if (serverAddress) {\n            if (typeof serverAddress === 'string') {\n                serverAddressString = serverAddress;\n            }\n            else {\n                serverAddressString = serverAddress.address + ':' + serverAddress.port;\n            }\n        }\n        this.serverAddressString = serverAddressString;\n        const handler = this.channelzEnabled\n            ? this._channelzHandler\n            : this._streamHandler;\n        http2Server.on('stream', handler.bind(this));\n        http2Server.on('session', session => {\n            var _a, _b, _c, _d, _e;\n            if (!this.started) {\n                session.destroy();\n                return;\n            }\n            const channelzRef = (0, channelz_1.registerChannelzSocket)((_a = session.socket.remoteAddress) !== null && _a !== void 0 ? _a : 'unknown', this.getChannelzSessionInfoGetter(session), this.channelzEnabled);\n            const channelzSessionInfo = {\n                ref: channelzRef,\n                streamTracker: new channelz_1.ChannelzCallTracker(),\n                messagesSent: 0,\n                messagesReceived: 0,\n                lastMessageSentTimestamp: null,\n                lastMessageReceivedTimestamp: null,\n            };\n            this.sessions.set(session, channelzSessionInfo);\n            const clientAddress = session.socket.remoteAddress;\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Connection established by client ' + clientAddress);\n                this.sessionChildrenTracker.refChild(channelzRef);\n            }\n            let connectionAgeTimer = null;\n            let connectionAgeGraceTimer = null;\n            let sessionClosedByServer = false;\n            if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                // Apply a random jitter within a +/-10% range\n                const jitterMagnitude = this.maxConnectionAgeMs / 10;\n                const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n                connectionAgeTimer = (_c = (_b = setTimeout(() => {\n                    var _a, _b;\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by max connection age from ' + clientAddress);\n                    }\n                    try {\n                        session.goaway(http2.constants.NGHTTP2_NO_ERROR, ~(1 << 31), Buffer.from('max_age'));\n                    }\n                    catch (e) {\n                        // The goaway can't be sent because the session is already closed\n                        session.destroy();\n                        return;\n                    }\n                    session.close();\n                    /* Allow a grace period after sending the GOAWAY before forcibly\n                     * closing the connection. */\n                    if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                        connectionAgeGraceTimer = (_b = (_a = setTimeout(() => {\n                            session.destroy();\n                        }, this.maxConnectionAgeGraceMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    }\n                }, this.maxConnectionAgeMs + jitter)).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n            }\n            const keeapliveTimeTimer = (_e = (_d = setInterval(() => {\n                var _a, _b;\n                const timeoutTImer = (_b = (_a = setTimeout(() => {\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by keepalive timeout from ' + clientAddress);\n                    }\n                    session.close();\n                }, this.keepaliveTimeoutMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                try {\n                    session.ping((err, duration, payload) => {\n                        clearTimeout(timeoutTImer);\n                    });\n                }\n                catch (e) {\n                    // The ping can't be sent because the session is already closed\n                    session.destroy();\n                }\n            }, this.keepaliveTimeMs)).unref) === null || _e === void 0 ? void 0 : _e.call(_d);\n            session.on('close', () => {\n                if (this.channelzEnabled) {\n                    if (!sessionClosedByServer) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by client ' + clientAddress);\n                    }\n                    this.sessionChildrenTracker.unrefChild(channelzRef);\n                    (0, channelz_1.unregisterChannelzRef)(channelzRef);\n                }\n                if (connectionAgeTimer) {\n                    clearTimeout(connectionAgeTimer);\n                }\n                if (connectionAgeGraceTimer) {\n                    clearTimeout(connectionAgeGraceTimer);\n                }\n                if (keeapliveTimeTimer) {\n                    clearTimeout(keeapliveTimeTimer);\n                }\n                this.sessions.delete(session);\n            });\n        });\n    }\n}\nexports.Server = Server;\nasync function handleUnary(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const emitter = new server_call_1.ServerUnaryCallImpl(call, metadata, request);\n        handler.func(emitter, (err, value, trailer, flags) => {\n            call.sendUnaryMessage(err, value, trailer, flags);\n        });\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleClientStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerReadableStreamImpl(call, metadata, handler.deserialize, encoding);\n    function respond(err, value, trailer, flags) {\n        stream.destroy();\n        call.sendUnaryMessage(err, value, trailer, flags);\n    }\n    if (call.cancelled) {\n        return;\n    }\n    stream.on('error', respond);\n    handler.func(stream, respond);\n}\nasync function handleServerStreaming(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const stream = new server_call_1.ServerWritableStreamImpl(call, metadata, handler.serialize, request);\n        handler.func(stream);\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleBidiStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerDuplexStreamImpl(call, metadata, handler.serialize, handler.deserialize, encoding);\n    if (call.cancelled) {\n        return;\n    }\n    handler.func(stream);\n}\n//# sourceMappingURL=server.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractAndSelectServiceConfig = exports.validateServiceConfig = exports.validateRetryThrottling = void 0;\n/* This file implements gRFC A2 and the service config spec:\n * https://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\n * https://github.com/grpc/grpc/blob/master/doc/service_config.md. Each\n * function here takes an object with unknown structure and returns its\n * specific object type if the input has the right structure, and throws an\n * error otherwise. */\n/* The any type is purposely used here. All functions validate their input at\n * runtime */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst load_balancer_1 = require(\"./load-balancer\");\n/**\n * Recognizes a number with up to 9 digits after the decimal point, followed by\n * an \"s\", representing a number of seconds.\n */\nconst DURATION_REGEX = /^\\d+(\\.\\d{1,9})?s$/;\n/**\n * Client language name used for determining whether this client matches a\n * `ServiceConfigCanaryConfig`'s `clientLanguage` list.\n */\nconst CLIENT_LANGUAGE_STRING = 'node';\nfunction validateName(obj) {\n    // In this context, and unset field and '' are considered the same\n    if ('service' in obj && obj.service !== '') {\n        if (typeof obj.service !== 'string') {\n            throw new Error(`Invalid method config name: invalid service: expected type string, got ${typeof obj.service}`);\n        }\n        if ('method' in obj && obj.method !== '') {\n            if (typeof obj.method !== 'string') {\n                throw new Error(`Invalid method config name: invalid method: expected type string, got ${typeof obj.service}`);\n            }\n            return {\n                service: obj.service,\n                method: obj.method,\n            };\n        }\n        else {\n            return {\n                service: obj.service,\n            };\n        }\n    }\n    else {\n        if ('method' in obj && obj.method !== undefined) {\n            throw new Error(`Invalid method config name: method set with empty or unset service`);\n        }\n        return {};\n    }\n}\nfunction validateRetryPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config retry policy: maxAttempts must be an integer at least 2');\n    }\n    if (!('initialBackoff' in obj) ||\n        typeof obj.initialBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.initialBackoff)) {\n        throw new Error('Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('maxBackoff' in obj) ||\n        typeof obj.maxBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.maxBackoff)) {\n        throw new Error('Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('backoffMultiplier' in obj) ||\n        typeof obj.backoffMultiplier !== 'number' ||\n        obj.backoffMultiplier <= 0) {\n        throw new Error('Invalid method config retry policy: backoffMultiplier must be a number greater than 0');\n    }\n    if (!('retryableStatusCodes' in obj && Array.isArray(obj.retryableStatusCodes))) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes is required');\n    }\n    if (obj.retryableStatusCodes.length === 0) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes must be non-empty');\n    }\n    for (const value of obj.retryableStatusCodes) {\n        if (typeof value === 'number') {\n            if (!Object.values(constants_1.Status).includes(value)) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not in status code range');\n            }\n        }\n        else if (typeof value === 'string') {\n            if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not a status code name');\n            }\n        }\n        else {\n            throw new Error('Invalid method config retry policy: retryableStatusCodes value must be a string or number');\n        }\n    }\n    return {\n        maxAttempts: obj.maxAttempts,\n        initialBackoff: obj.initialBackoff,\n        maxBackoff: obj.maxBackoff,\n        backoffMultiplier: obj.backoffMultiplier,\n        retryableStatusCodes: obj.retryableStatusCodes,\n    };\n}\nfunction validateHedgingPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config hedging policy: maxAttempts must be an integer at least 2');\n    }\n    if ('hedgingDelay' in obj &&\n        (typeof obj.hedgingDelay !== 'string' ||\n            !DURATION_REGEX.test(obj.hedgingDelay))) {\n        throw new Error('Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s');\n    }\n    if ('nonFatalStatusCodes' in obj && Array.isArray(obj.nonFatalStatusCodes)) {\n        for (const value of obj.nonFatalStatusCodes) {\n            if (typeof value === 'number') {\n                if (!Object.values(constants_1.Status).includes(value)) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not in status code range');\n                }\n            }\n            else if (typeof value === 'string') {\n                if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not a status code name');\n                }\n            }\n            else {\n                throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value must be a string or number');\n            }\n        }\n    }\n    const result = {\n        maxAttempts: obj.maxAttempts,\n    };\n    if (obj.hedgingDelay) {\n        result.hedgingDelay = obj.hedgingDelay;\n    }\n    if (obj.nonFatalStatusCodes) {\n        result.nonFatalStatusCodes = obj.nonFatalStatusCodes;\n    }\n    return result;\n}\nfunction validateMethodConfig(obj) {\n    var _a;\n    const result = {\n        name: [],\n    };\n    if (!('name' in obj) || !Array.isArray(obj.name)) {\n        throw new Error('Invalid method config: invalid name array');\n    }\n    for (const name of obj.name) {\n        result.name.push(validateName(name));\n    }\n    if ('waitForReady' in obj) {\n        if (typeof obj.waitForReady !== 'boolean') {\n            throw new Error('Invalid method config: invalid waitForReady');\n        }\n        result.waitForReady = obj.waitForReady;\n    }\n    if ('timeout' in obj) {\n        if (typeof obj.timeout === 'object') {\n            if (!('seconds' in obj.timeout) ||\n                !(typeof obj.timeout.seconds === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.seconds');\n            }\n            if (!('nanos' in obj.timeout) ||\n                !(typeof obj.timeout.nanos === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.nanos');\n            }\n            result.timeout = obj.timeout;\n        }\n        else if (typeof obj.timeout === 'string' &&\n            DURATION_REGEX.test(obj.timeout)) {\n            const timeoutParts = obj.timeout\n                .substring(0, obj.timeout.length - 1)\n                .split('.');\n            result.timeout = {\n                seconds: timeoutParts[0] | 0,\n                nanos: ((_a = timeoutParts[1]) !== null && _a !== void 0 ? _a : 0) | 0,\n            };\n        }\n        else {\n            throw new Error('Invalid method config: invalid timeout');\n        }\n    }\n    if ('maxRequestBytes' in obj) {\n        if (typeof obj.maxRequestBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxRequestBytes = obj.maxRequestBytes;\n    }\n    if ('maxResponseBytes' in obj) {\n        if (typeof obj.maxResponseBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxResponseBytes = obj.maxResponseBytes;\n    }\n    if ('retryPolicy' in obj) {\n        if ('hedgingPolicy' in obj) {\n            throw new Error('Invalid method config: retryPolicy and hedgingPolicy cannot both be specified');\n        }\n        else {\n            result.retryPolicy = validateRetryPolicy(obj.retryPolicy);\n        }\n    }\n    else if ('hedgingPolicy' in obj) {\n        result.hedgingPolicy = validateHedgingPolicy(obj.hedgingPolicy);\n    }\n    return result;\n}\nfunction validateRetryThrottling(obj) {\n    if (!('maxTokens' in obj) ||\n        typeof obj.maxTokens !== 'number' ||\n        obj.maxTokens <= 0 ||\n        obj.maxTokens > 1000) {\n        throw new Error('Invalid retryThrottling: maxTokens must be a number in (0, 1000]');\n    }\n    if (!('tokenRatio' in obj) ||\n        typeof obj.tokenRatio !== 'number' ||\n        obj.tokenRatio <= 0) {\n        throw new Error('Invalid retryThrottling: tokenRatio must be a number greater than 0');\n    }\n    return {\n        maxTokens: +obj.maxTokens.toFixed(3),\n        tokenRatio: +obj.tokenRatio.toFixed(3),\n    };\n}\nexports.validateRetryThrottling = validateRetryThrottling;\nfunction validateServiceConfig(obj) {\n    const result = {\n        loadBalancingConfig: [],\n        methodConfig: [],\n    };\n    if ('loadBalancingPolicy' in obj) {\n        if (typeof obj.loadBalancingPolicy === 'string') {\n            result.loadBalancingPolicy = obj.loadBalancingPolicy;\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingPolicy');\n        }\n    }\n    if ('loadBalancingConfig' in obj) {\n        if (Array.isArray(obj.loadBalancingConfig)) {\n            for (const config of obj.loadBalancingConfig) {\n                result.loadBalancingConfig.push((0, load_balancer_1.validateLoadBalancingConfig)(config));\n            }\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingConfig');\n        }\n    }\n    if ('methodConfig' in obj) {\n        if (Array.isArray(obj.methodConfig)) {\n            for (const methodConfig of obj.methodConfig) {\n                result.methodConfig.push(validateMethodConfig(methodConfig));\n            }\n        }\n    }\n    if ('retryThrottling' in obj) {\n        result.retryThrottling = validateRetryThrottling(obj.retryThrottling);\n    }\n    // Validate method name uniqueness\n    const seenMethodNames = [];\n    for (const methodConfig of result.methodConfig) {\n        for (const name of methodConfig.name) {\n            for (const seenName of seenMethodNames) {\n                if (name.service === seenName.service &&\n                    name.method === seenName.method) {\n                    throw new Error(`Invalid service config: duplicate name ${name.service}/${name.method}`);\n                }\n            }\n            seenMethodNames.push(name);\n        }\n    }\n    return result;\n}\nexports.validateServiceConfig = validateServiceConfig;\nfunction validateCanaryConfig(obj) {\n    if (!('serviceConfig' in obj)) {\n        throw new Error('Invalid service config choice: missing service config');\n    }\n    const result = {\n        serviceConfig: validateServiceConfig(obj.serviceConfig),\n    };\n    if ('clientLanguage' in obj) {\n        if (Array.isArray(obj.clientLanguage)) {\n            result.clientLanguage = [];\n            for (const lang of obj.clientLanguage) {\n                if (typeof lang === 'string') {\n                    result.clientLanguage.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientLanguage');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientLanguage');\n        }\n    }\n    if ('clientHostname' in obj) {\n        if (Array.isArray(obj.clientHostname)) {\n            result.clientHostname = [];\n            for (const lang of obj.clientHostname) {\n                if (typeof lang === 'string') {\n                    result.clientHostname.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientHostname');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientHostname');\n        }\n    }\n    if ('percentage' in obj) {\n        if (typeof obj.percentage === 'number' &&\n            0 <= obj.percentage &&\n            obj.percentage <= 100) {\n            result.percentage = obj.percentage;\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid percentage');\n        }\n    }\n    // Validate that no unexpected fields are present\n    const allowedFields = [\n        'clientLanguage',\n        'percentage',\n        'clientHostname',\n        'serviceConfig',\n    ];\n    for (const field in obj) {\n        if (!allowedFields.includes(field)) {\n            throw new Error(`Invalid service config choice: unexpected field ${field}`);\n        }\n    }\n    return result;\n}\nfunction validateAndSelectCanaryConfig(obj, percentage) {\n    if (!Array.isArray(obj)) {\n        throw new Error('Invalid service config list');\n    }\n    for (const config of obj) {\n        const validatedConfig = validateCanaryConfig(config);\n        /* For each field, we check if it is present, then only discard the\n         * config if the field value does not match the current client */\n        if (typeof validatedConfig.percentage === 'number' &&\n            percentage > validatedConfig.percentage) {\n            continue;\n        }\n        if (Array.isArray(validatedConfig.clientHostname)) {\n            let hostnameMatched = false;\n            for (const hostname of validatedConfig.clientHostname) {\n                if (hostname === os.hostname()) {\n                    hostnameMatched = true;\n                }\n            }\n            if (!hostnameMatched) {\n                continue;\n            }\n        }\n        if (Array.isArray(validatedConfig.clientLanguage)) {\n            let languageMatched = false;\n            for (const language of validatedConfig.clientLanguage) {\n                if (language === CLIENT_LANGUAGE_STRING) {\n                    languageMatched = true;\n                }\n            }\n            if (!languageMatched) {\n                continue;\n            }\n        }\n        return validatedConfig.serviceConfig;\n    }\n    throw new Error('No matching service config found');\n}\n/**\n * Find the \"grpc_config\" record among the TXT records, parse its value as JSON, validate its contents,\n * and select a service config with selection fields that all match this client. Most of these steps\n * can fail with an error; the caller must handle any errors thrown this way.\n * @param txtRecord The TXT record array that is output from a successful call to dns.resolveTxt\n * @param percentage A number chosen from the range [0, 100) that is used to select which config to use\n * @return The service configuration to use, given the percentage value, or null if the service config\n *     data has a valid format but none of the options match the current client.\n */\nfunction extractAndSelectServiceConfig(txtRecord, percentage) {\n    for (const record of txtRecord) {\n        if (record.length > 0 && record[0].startsWith('grpc_config=')) {\n            /* Treat the list of strings in this record as a single string and remove\n             * \"grpc_config=\" from the beginning. The rest should be a JSON string */\n            const recordString = record.join('').substring('grpc_config='.length);\n            const recordJson = JSON.parse(recordString);\n            return validateAndSelectCanaryConfig(recordJson, percentage);\n        }\n    }\n    return null;\n}\nexports.extractAndSelectServiceConfig = extractAndSelectServiceConfig;\n//# sourceMappingURL=service-config.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusBuilder = void 0;\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n    constructor() {\n        this.code = null;\n        this.details = null;\n        this.metadata = null;\n    }\n    /**\n     * Adds a status code to the builder.\n     */\n    withCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Adds details to the builder.\n     */\n    withDetails(details) {\n        this.details = details;\n        return this;\n    }\n    /**\n     * Adds metadata to the builder.\n     */\n    withMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the status object.\n     */\n    build() {\n        const status = {};\n        if (this.code !== null) {\n            status.code = this.code;\n        }\n        if (this.details !== null) {\n            status.details = this.details;\n        }\n        if (this.metadata !== null) {\n            status.metadata = this.metadata;\n        }\n        return status;\n    }\n}\nexports.StatusBuilder = StatusBuilder;\n//# sourceMappingURL=status-builder.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDecoder = void 0;\nvar ReadState;\n(function (ReadState) {\n    ReadState[ReadState[\"NO_DATA\"] = 0] = \"NO_DATA\";\n    ReadState[ReadState[\"READING_SIZE\"] = 1] = \"READING_SIZE\";\n    ReadState[ReadState[\"READING_MESSAGE\"] = 2] = \"READING_MESSAGE\";\n})(ReadState || (ReadState = {}));\nclass StreamDecoder {\n    constructor() {\n        this.readState = ReadState.NO_DATA;\n        this.readCompressFlag = Buffer.alloc(1);\n        this.readPartialSize = Buffer.alloc(4);\n        this.readSizeRemaining = 4;\n        this.readMessageSize = 0;\n        this.readPartialMessage = [];\n        this.readMessageRemaining = 0;\n    }\n    write(data) {\n        let readHead = 0;\n        let toRead;\n        const result = [];\n        while (readHead < data.length) {\n            switch (this.readState) {\n                case ReadState.NO_DATA:\n                    this.readCompressFlag = data.slice(readHead, readHead + 1);\n                    readHead += 1;\n                    this.readState = ReadState.READING_SIZE;\n                    this.readPartialSize.fill(0);\n                    this.readSizeRemaining = 4;\n                    this.readMessageSize = 0;\n                    this.readMessageRemaining = 0;\n                    this.readPartialMessage = [];\n                    break;\n                case ReadState.READING_SIZE:\n                    toRead = Math.min(data.length - readHead, this.readSizeRemaining);\n                    data.copy(this.readPartialSize, 4 - this.readSizeRemaining, readHead, readHead + toRead);\n                    this.readSizeRemaining -= toRead;\n                    readHead += toRead;\n                    // readSizeRemaining >=0 here\n                    if (this.readSizeRemaining === 0) {\n                        this.readMessageSize = this.readPartialSize.readUInt32BE(0);\n                        this.readMessageRemaining = this.readMessageSize;\n                        if (this.readMessageRemaining > 0) {\n                            this.readState = ReadState.READING_MESSAGE;\n                        }\n                        else {\n                            const message = Buffer.concat([this.readCompressFlag, this.readPartialSize], 5);\n                            this.readState = ReadState.NO_DATA;\n                            result.push(message);\n                        }\n                    }\n                    break;\n                case ReadState.READING_MESSAGE:\n                    toRead = Math.min(data.length - readHead, this.readMessageRemaining);\n                    this.readPartialMessage.push(data.slice(readHead, readHead + toRead));\n                    this.readMessageRemaining -= toRead;\n                    readHead += toRead;\n                    // readMessageRemaining >=0 here\n                    if (this.readMessageRemaining === 0) {\n                        // At this point, we have read a full message\n                        const framedMessageBuffers = [\n                            this.readCompressFlag,\n                            this.readPartialSize,\n                        ].concat(this.readPartialMessage);\n                        const framedMessage = Buffer.concat(framedMessageBuffers, this.readMessageSize + 5);\n                        this.readState = ReadState.NO_DATA;\n                        result.push(framedMessage);\n                    }\n                    break;\n                default:\n                    throw new Error('Unexpected read state');\n            }\n        }\n        return result;\n    }\n}\nexports.StreamDecoder = StreamDecoder;\n//# sourceMappingURL=stream-decoder.js.map","\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringToSubchannelAddress = exports.subchannelAddressToString = exports.subchannelAddressEqual = exports.isTcpSubchannelAddress = void 0;\nconst net_1 = require(\"net\");\nfunction isTcpSubchannelAddress(address) {\n    return 'port' in address;\n}\nexports.isTcpSubchannelAddress = isTcpSubchannelAddress;\nfunction subchannelAddressEqual(address1, address2) {\n    if (!address1 && !address2) {\n        return true;\n    }\n    if (!address1 || !address2) {\n        return false;\n    }\n    if (isTcpSubchannelAddress(address1)) {\n        return (isTcpSubchannelAddress(address2) &&\n            address1.host === address2.host &&\n            address1.port === address2.port);\n    }\n    else {\n        return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n    }\n}\nexports.subchannelAddressEqual = subchannelAddressEqual;\nfunction subchannelAddressToString(address) {\n    if (isTcpSubchannelAddress(address)) {\n        return address.host + ':' + address.port;\n    }\n    else {\n        return address.path;\n    }\n}\nexports.subchannelAddressToString = subchannelAddressToString;\nconst DEFAULT_PORT = 443;\nfunction stringToSubchannelAddress(addressString, port) {\n    if ((0, net_1.isIP)(addressString)) {\n        return {\n            host: addressString,\n            port: port !== null && port !== void 0 ? port : DEFAULT_PORT,\n        };\n    }\n    else {\n        return {\n            path: addressString,\n        };\n    }\n}\nexports.stringToSubchannelAddress = stringToSubchannelAddress;\n//# sourceMappingURL=subchannel-address.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelCall = void 0;\nconst http2 = require(\"http2\");\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst TRACER_NAME = 'subchannel_call';\n/**\n * Should do approximately the same thing as util.getSystemErrorName but the\n * TypeScript types don't have that function for some reason so I just made my\n * own.\n * @param errno\n */\nfunction getSystemErrorName(errno) {\n    for (const [name, num] of Object.entries(os.constants.errno)) {\n        if (num === errno) {\n            return name;\n        }\n    }\n    return 'Unknown system error ' + errno;\n}\nclass Http2SubchannelCall {\n    constructor(http2Stream, callEventTracker, listener, transport, callId) {\n        this.http2Stream = http2Stream;\n        this.callEventTracker = callEventTracker;\n        this.listener = listener;\n        this.transport = transport;\n        this.callId = callId;\n        this.decoder = new stream_decoder_1.StreamDecoder();\n        this.isReadFilterPending = false;\n        this.isPushPending = false;\n        this.canPush = false;\n        /**\n         * Indicates that an 'end' event has come from the http2 stream, so there\n         * will be no more data events.\n         */\n        this.readsClosed = false;\n        this.statusOutput = false;\n        this.unpushedReadMessages = [];\n        // Status code mapped from :status. To be used if grpc-status is not received\n        this.mappedStatusCode = constants_1.Status.UNKNOWN;\n        // This is populated (non-null) if and only if the call has ended\n        this.finalStatus = null;\n        this.internalError = null;\n        http2Stream.on('response', (headers, flags) => {\n            let headersString = '';\n            for (const header of Object.keys(headers)) {\n                headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n            }\n            this.trace('Received server headers:\\n' + headersString);\n            switch (headers[':status']) {\n                // TODO(murgatroid99): handle 100 and 101\n                case 400:\n                    this.mappedStatusCode = constants_1.Status.INTERNAL;\n                    break;\n                case 401:\n                    this.mappedStatusCode = constants_1.Status.UNAUTHENTICATED;\n                    break;\n                case 403:\n                    this.mappedStatusCode = constants_1.Status.PERMISSION_DENIED;\n                    break;\n                case 404:\n                    this.mappedStatusCode = constants_1.Status.UNIMPLEMENTED;\n                    break;\n                case 429:\n                case 502:\n                case 503:\n                case 504:\n                    this.mappedStatusCode = constants_1.Status.UNAVAILABLE;\n                    break;\n                default:\n                    this.mappedStatusCode = constants_1.Status.UNKNOWN;\n            }\n            if (flags & http2.constants.NGHTTP2_FLAG_END_STREAM) {\n                this.handleTrailers(headers);\n            }\n            else {\n                let metadata;\n                try {\n                    metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n                }\n                catch (error) {\n                    this.endCall({\n                        code: constants_1.Status.UNKNOWN,\n                        details: error.message,\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.listener.onReceiveMetadata(metadata);\n            }\n        });\n        http2Stream.on('trailers', (headers) => {\n            this.handleTrailers(headers);\n        });\n        http2Stream.on('data', (data) => {\n            /* If the status has already been output, allow the http2 stream to\n             * drain without processing the data. */\n            if (this.statusOutput) {\n                return;\n            }\n            this.trace('receive HTTP/2 data frame of length ' + data.length);\n            const messages = this.decoder.write(data);\n            for (const message of messages) {\n                this.trace('parsed message of length ' + message.length);\n                this.callEventTracker.addMessageReceived();\n                this.tryPush(message);\n            }\n        });\n        http2Stream.on('end', () => {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n        });\n        http2Stream.on('close', () => {\n            /* Use process.next tick to ensure that this code happens after any\n             * \"error\" event that may be emitted at about the same time, so that\n             * we can bubble up the error message from that event. */\n            process.nextTick(() => {\n                var _a;\n                this.trace('HTTP/2 stream closed with code ' + http2Stream.rstCode);\n                /* If we have a final status with an OK status code, that means that\n                 * we have received all of the messages and we have processed the\n                 * trailers and the call completed successfully, so it doesn't matter\n                 * how the stream ends after that */\n                if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                    return;\n                }\n                let code;\n                let details = '';\n                switch (http2Stream.rstCode) {\n                    case http2.constants.NGHTTP2_NO_ERROR:\n                        /* If we get a NO_ERROR code and we already have a status, the\n                         * stream completed properly and we just haven't fully processed\n                         * it yet */\n                        if (this.finalStatus !== null) {\n                            return;\n                        }\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                        break;\n                    case http2.constants.NGHTTP2_REFUSED_STREAM:\n                        code = constants_1.Status.UNAVAILABLE;\n                        details = 'Stream refused by server';\n                        break;\n                    case http2.constants.NGHTTP2_CANCEL:\n                        code = constants_1.Status.CANCELLED;\n                        details = 'Call cancelled';\n                        break;\n                    case http2.constants.NGHTTP2_ENHANCE_YOUR_CALM:\n                        code = constants_1.Status.RESOURCE_EXHAUSTED;\n                        details = 'Bandwidth exhausted or memory limit exceeded';\n                        break;\n                    case http2.constants.NGHTTP2_INADEQUATE_SECURITY:\n                        code = constants_1.Status.PERMISSION_DENIED;\n                        details = 'Protocol not secure enough';\n                        break;\n                    case http2.constants.NGHTTP2_INTERNAL_ERROR:\n                        code = constants_1.Status.INTERNAL;\n                        if (this.internalError === null) {\n                            /* This error code was previously handled in the default case, and\n                             * there are several instances of it online, so I wanted to\n                             * preserve the original error message so that people find existing\n                             * information in searches, but also include the more recognizable\n                             * \"Internal server error\" message. */\n                            details = `Received RST_STREAM with code ${http2Stream.rstCode} (Internal server error)`;\n                        }\n                        else {\n                            if (this.internalError.code === 'ECONNRESET' ||\n                                this.internalError.code === 'ETIMEDOUT') {\n                                code = constants_1.Status.UNAVAILABLE;\n                                details = this.internalError.message;\n                            }\n                            else {\n                                /* The \"Received RST_STREAM with code ...\" error is preserved\n                                 * here for continuity with errors reported online, but the\n                                 * error message at the end will probably be more relevant in\n                                 * most cases. */\n                                details = `Received RST_STREAM with code ${http2Stream.rstCode} triggered by internal client error: ${this.internalError.message}`;\n                            }\n                        }\n                        break;\n                    default:\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                }\n                // This is a no-op if trailers were received at all.\n                // This is OK, because status codes emitted here correspond to more\n                // catastrophic issues that prevent us from receiving trailers in the\n                // first place.\n                this.endCall({\n                    code,\n                    details,\n                    metadata: new metadata_1.Metadata(),\n                    rstCode: http2Stream.rstCode,\n                });\n            });\n        });\n        http2Stream.on('error', (err) => {\n            /* We need an error handler here to stop \"Uncaught Error\" exceptions\n             * from bubbling up. However, errors here should all correspond to\n             * \"close\" events, where we will handle the error more granularly */\n            /* Specifically looking for stream errors that were *not* constructed\n             * from a RST_STREAM response here:\n             * https://github.com/nodejs/node/blob/8b8620d580314050175983402dfddf2674e8e22a/lib/internal/http2/core.js#L2267\n             */\n            if (err.code !== 'ERR_HTTP2_STREAM_ERROR') {\n                this.trace('Node error event: message=' +\n                    err.message +\n                    ' code=' +\n                    err.code +\n                    ' errno=' +\n                    getSystemErrorName(err.errno) +\n                    ' syscall=' +\n                    err.syscall);\n                this.internalError = err;\n            }\n            this.callEventTracker.onStreamEnd(false);\n        });\n    }\n    onDisconnect() {\n        this.endCall({\n            code: constants_1.Status.UNAVAILABLE,\n            details: 'Connection dropped',\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    outputStatus() {\n        /* Precondition: this.finalStatus !== null */\n        if (!this.statusOutput) {\n            this.statusOutput = true;\n            this.trace('ended with status: code=' +\n                this.finalStatus.code +\n                ' details=\"' +\n                this.finalStatus.details +\n                '\"');\n            this.callEventTracker.onCallEnd(this.finalStatus);\n            /* We delay the actual action of bubbling up the status to insulate the\n             * cleanup code in this class from any errors that may be thrown in the\n             * upper layers as a result of bubbling up the status. In particular,\n             * if the status is not OK, the \"error\" event may be emitted\n             * synchronously at the top level, which will result in a thrown error if\n             * the user does not handle that event. */\n            process.nextTick(() => {\n                this.listener.onReceiveStatus(this.finalStatus);\n            });\n            /* Leave the http2 stream in flowing state to drain incoming messages, to\n             * ensure that the stream closure completes. The call stream already does\n             * not push more messages after the status is output, so the messages go\n             * nowhere either way. */\n            this.http2Stream.resume();\n        }\n    }\n    trace(text) {\n        logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callId + '] ' + text);\n    }\n    /**\n     * On first call, emits a 'status' event with the given StatusObject.\n     * Subsequent calls are no-ops.\n     * @param status The status of the call.\n     */\n    endCall(status) {\n        /* If the status is OK and a new status comes in (e.g. from a\n         * deserialization failure), that new status takes priority */\n        if (this.finalStatus === null || this.finalStatus.code === constants_1.Status.OK) {\n            this.finalStatus = status;\n            this.maybeOutputStatus();\n        }\n        this.destroyHttp2Stream();\n    }\n    maybeOutputStatus() {\n        if (this.finalStatus !== null) {\n            /* The combination check of readsClosed and that the two message buffer\n             * arrays are empty checks that there all incoming data has been fully\n             * processed */\n            if (this.finalStatus.code !== constants_1.Status.OK ||\n                (this.readsClosed &&\n                    this.unpushedReadMessages.length === 0 &&\n                    !this.isReadFilterPending &&\n                    !this.isPushPending)) {\n                this.outputStatus();\n            }\n        }\n    }\n    push(message) {\n        this.trace('pushing to reader message of length ' +\n            (message instanceof Buffer ? message.length : null));\n        this.canPush = false;\n        this.isPushPending = true;\n        process.nextTick(() => {\n            this.isPushPending = false;\n            /* If we have already output the status any later messages should be\n             * ignored, and can cause out-of-order operation errors higher up in the\n             * stack. Checking as late as possible here to avoid any race conditions.\n             */\n            if (this.statusOutput) {\n                return;\n            }\n            this.listener.onReceiveMessage(message);\n            this.maybeOutputStatus();\n        });\n    }\n    tryPush(messageBytes) {\n        if (this.canPush) {\n            this.http2Stream.pause();\n            this.push(messageBytes);\n        }\n        else {\n            this.trace('unpushedReadMessages.push message of length ' + messageBytes.length);\n            this.unpushedReadMessages.push(messageBytes);\n        }\n    }\n    handleTrailers(headers) {\n        this.callEventTracker.onStreamEnd(true);\n        let headersString = '';\n        for (const header of Object.keys(headers)) {\n            headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n        }\n        this.trace('Received server trailers:\\n' + headersString);\n        let metadata;\n        try {\n            metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        }\n        catch (e) {\n            metadata = new metadata_1.Metadata();\n        }\n        const metadataMap = metadata.getMap();\n        let code = this.mappedStatusCode;\n        if (code === constants_1.Status.UNKNOWN &&\n            typeof metadataMap['grpc-status'] === 'string') {\n            const receivedStatus = Number(metadataMap['grpc-status']);\n            if (receivedStatus in constants_1.Status) {\n                code = receivedStatus;\n                this.trace('received status code ' + receivedStatus + ' from server');\n            }\n            metadata.remove('grpc-status');\n        }\n        let details = '';\n        if (typeof metadataMap['grpc-message'] === 'string') {\n            try {\n                details = decodeURI(metadataMap['grpc-message']);\n            }\n            catch (e) {\n                details = metadataMap['grpc-message'];\n            }\n            metadata.remove('grpc-message');\n            this.trace('received status details string \"' + details + '\" from server');\n        }\n        const status = { code, details, metadata };\n        // This is a no-op if the call was already ended when handling headers.\n        this.endCall(status);\n    }\n    destroyHttp2Stream() {\n        var _a;\n        // The http2 stream could already have been destroyed if cancelWithStatus\n        // is called in response to an internal http2 error.\n        if (!this.http2Stream.destroyed) {\n            /* If the call has ended with an OK status, communicate that when closing\n             * the stream, partly to avoid a situation in which we detect an error\n             * RST_STREAM as a result after we have the status */\n            let code;\n            if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                code = http2.constants.NGHTTP2_NO_ERROR;\n            }\n            else {\n                code = http2.constants.NGHTTP2_CANCEL;\n            }\n            this.trace('close http2 stream with code ' + code);\n            this.http2Stream.close(code);\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.endCall({ code: status, details, metadata: new metadata_1.Metadata() });\n    }\n    getStatus() {\n        return this.finalStatus;\n    }\n    getPeer() {\n        return this.transport.getPeerName();\n    }\n    getCallNumber() {\n        return this.callId;\n    }\n    startRead() {\n        /* If the stream has ended with an error, we should not emit any more\n         * messages and we should communicate that the stream has ended */\n        if (this.finalStatus !== null && this.finalStatus.code !== constants_1.Status.OK) {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n            return;\n        }\n        this.canPush = true;\n        if (this.unpushedReadMessages.length > 0) {\n            const nextMessage = this.unpushedReadMessages.shift();\n            this.push(nextMessage);\n            return;\n        }\n        /* Only resume reading from the http2Stream if we don't have any pending\n         * messages to emit */\n        this.http2Stream.resume();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        const cb = (error) => {\n            /* nextTick here ensures that no stream action can be taken in the call\n             * stack of the write callback, in order to hopefully work around\n             * https://github.com/nodejs/node/issues/49147 */\n            process.nextTick(() => {\n                var _a;\n                let code = constants_1.Status.UNAVAILABLE;\n                if ((error === null || error === void 0 ? void 0 : error.code) ===\n                    'ERR_STREAM_WRITE_AFTER_END') {\n                    code = constants_1.Status.INTERNAL;\n                }\n                if (error) {\n                    this.cancelWithStatus(code, `Write error: ${error.message}`);\n                }\n                (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            });\n        };\n        this.trace('sending data chunk of length ' + message.length);\n        this.callEventTracker.addMessageSent();\n        try {\n            this.http2Stream.write(message, cb);\n        }\n        catch (error) {\n            this.endCall({\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Write failed with error ${error.message}`,\n                metadata: new metadata_1.Metadata(),\n            });\n        }\n    }\n    halfClose() {\n        this.trace('end() called');\n        this.trace('calling end() on HTTP/2 stream');\n        this.http2Stream.end();\n    }\n}\nexports.Http2SubchannelCall = Http2SubchannelCall;\n//# sourceMappingURL=subchannel-call.js.map","\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSubchannelWrapper = void 0;\nclass BaseSubchannelWrapper {\n    constructor(child) {\n        this.child = child;\n    }\n    getConnectivityState() {\n        return this.child.getConnectivityState();\n    }\n    addConnectivityStateListener(listener) {\n        this.child.addConnectivityStateListener(listener);\n    }\n    removeConnectivityStateListener(listener) {\n        this.child.removeConnectivityStateListener(listener);\n    }\n    startConnecting() {\n        this.child.startConnecting();\n    }\n    getAddress() {\n        return this.child.getAddress();\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        this.child.throttleKeepalive(newKeepaliveTime);\n    }\n    ref() {\n        this.child.ref();\n    }\n    unref() {\n        this.child.unref();\n    }\n    getChannelzRef() {\n        return this.child.getChannelzRef();\n    }\n    getRealSubchannel() {\n        return this.child.getRealSubchannel();\n    }\n    realSubchannelEquals(other) {\n        return this.getRealSubchannel() === other.getRealSubchannel();\n    }\n}\nexports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n//# sourceMappingURL=subchannel-interface.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSubchannelPool = exports.SubchannelPool = void 0;\nconst channel_options_1 = require(\"./channel-options\");\nconst subchannel_1 = require(\"./subchannel\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst transport_1 = require(\"./transport\");\n// 10 seconds in milliseconds. This value is arbitrary.\n/**\n * The amount of time in between checks for dropping subchannels that have no\n * other references\n */\nconst REF_CHECK_INTERVAL = 10000;\nclass SubchannelPool {\n    /**\n     * A pool of subchannels use for making connections. Subchannels with the\n     * exact same parameters will be reused.\n     */\n    constructor() {\n        this.pool = Object.create(null);\n        /**\n         * A timer of a task performing a periodic subchannel cleanup.\n         */\n        this.cleanupTimer = null;\n    }\n    /**\n     * Unrefs all unused subchannels and cancels the cleanup task if all\n     * subchannels have been unrefed.\n     */\n    unrefUnusedSubchannels() {\n        let allSubchannelsUnrefed = true;\n        /* These objects are created with Object.create(null), so they do not\n         * have a prototype, which means that for (... in ...) loops over them\n         * do not need to be filtered */\n        // eslint-disable-disable-next-line:forin\n        for (const channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            const refedSubchannels = subchannelObjArray.filter(value => !value.subchannel.unrefIfOneRef());\n            if (refedSubchannels.length > 0) {\n                allSubchannelsUnrefed = false;\n            }\n            /* For each subchannel in the pool, try to unref it if it has\n             * exactly one ref (which is the ref from the pool itself). If that\n             * does happen, remove the subchannel from the pool */\n            this.pool[channelTarget] = refedSubchannels;\n        }\n        /* Currently we do not delete keys with empty values. If that results\n         * in significant memory usage we should change it. */\n        // Cancel the cleanup task if all subchannels have been unrefed.\n        if (allSubchannelsUnrefed && this.cleanupTimer !== null) {\n            clearInterval(this.cleanupTimer);\n            this.cleanupTimer = null;\n        }\n    }\n    /**\n     * Ensures that the cleanup task is spawned.\n     */\n    ensureCleanupTask() {\n        var _a, _b;\n        if (this.cleanupTimer === null) {\n            this.cleanupTimer = setInterval(() => {\n                this.unrefUnusedSubchannels();\n            }, REF_CHECK_INTERVAL);\n            // Unref because this timer should not keep the event loop running.\n            // Call unref only if it exists to address electron/electron#21162\n            (_b = (_a = this.cleanupTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Get a subchannel if one already exists with exactly matching parameters.\n     * Otherwise, create and save a subchannel with those parameters.\n     * @param channelTarget\n     * @param subchannelTarget\n     * @param channelArguments\n     * @param channelCredentials\n     */\n    getOrCreateSubchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials) {\n        this.ensureCleanupTask();\n        const channelTarget = (0, uri_parser_1.uriToString)(channelTargetUri);\n        if (channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            for (const subchannelObj of subchannelObjArray) {\n                if ((0, subchannel_address_1.subchannelAddressEqual)(subchannelTarget, subchannelObj.subchannelAddress) &&\n                    (0, channel_options_1.channelOptionsEqual)(channelArguments, subchannelObj.channelArguments) &&\n                    channelCredentials._equals(subchannelObj.channelCredentials)) {\n                    return subchannelObj.subchannel;\n                }\n            }\n        }\n        // If we get here, no matching subchannel was found\n        const subchannel = new subchannel_1.Subchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials, new transport_1.Http2SubchannelConnector(channelTargetUri));\n        if (!(channelTarget in this.pool)) {\n            this.pool[channelTarget] = [];\n        }\n        this.pool[channelTarget].push({\n            subchannelAddress: subchannelTarget,\n            channelArguments,\n            channelCredentials,\n            subchannel,\n        });\n        subchannel.ref();\n        return subchannel;\n    }\n}\nexports.SubchannelPool = SubchannelPool;\nconst globalSubchannelPool = new SubchannelPool();\n/**\n * Get either the global subchannel pool, or a new subchannel pool.\n * @param global\n */\nfunction getSubchannelPool(global) {\n    if (global) {\n        return globalSubchannelPool;\n    }\n    else {\n        return new SubchannelPool();\n    }\n}\nexports.getSubchannelPool = getSubchannelPool;\n//# sourceMappingURL=subchannel-pool.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subchannel = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst channelz_1 = require(\"./channelz\");\nconst TRACER_NAME = 'subchannel';\n/* setInterval and setTimeout only accept signed 32 bit integers. JS doesn't\n * have a constant for the max signed 32 bit integer, so this is a simple way\n * to calculate it */\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nclass Subchannel {\n    /**\n     * A class representing a connection to a single backend.\n     * @param channelTarget The target string for the channel as a whole\n     * @param subchannelAddress The address for the backend that this subchannel\n     *     will connect to\n     * @param options The channel options, plus any specific subchannel options\n     *     for this subchannel\n     * @param credentials The channel credentials used to establish this\n     *     connection\n     */\n    constructor(channelTarget, subchannelAddress, options, credentials, connector) {\n        var _a;\n        this.channelTarget = channelTarget;\n        this.subchannelAddress = subchannelAddress;\n        this.options = options;\n        this.credentials = credentials;\n        this.connector = connector;\n        /**\n         * The subchannel's current connectivity state. Invariant: `session` === `null`\n         * if and only if `connectivityState` is IDLE or TRANSIENT_FAILURE.\n         */\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The underlying http2 session used to make requests.\n         */\n        this.transport = null;\n        /**\n         * Indicates that the subchannel should transition from TRANSIENT_FAILURE to\n         * CONNECTING instead of IDLE when the backoff timeout ends.\n         */\n        this.continueConnecting = false;\n        /**\n         * A list of listener functions that will be called whenever the connectivity\n         * state changes. Will be modified by `addConnectivityStateListener` and\n         * `removeConnectivityStateListener`\n         */\n        this.stateListeners = new Set();\n        /**\n         * Tracks channels and subchannel pools with references to this subchannel\n         */\n        this.refcount = 0;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        // Channelz socket info\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        const backoffOptions = {\n            initialDelay: options['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: options['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            this.handleBackoffTimer();\n        }, backoffOptions);\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        this.keepaliveTime = (_a = options['grpc.keepalive_time_ms']) !== null && _a !== void 0 ? _a : -1;\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzSubchannel)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Subchannel created');\n        }\n        this.trace('Subchannel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n    }\n    getChannelzInfo() {\n        return {\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n            target: this.subchannelAddressString,\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    refTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'subchannel_refcount', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    handleBackoffTimer() {\n        if (this.continueConnecting) {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        }\n        else {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.IDLE);\n        }\n    }\n    /**\n     * Start a backoff timer with the current nextBackoff timeout\n     */\n    startBackoff() {\n        this.backoffTimeout.runOnce();\n    }\n    stopBackoff() {\n        this.backoffTimeout.stop();\n        this.backoffTimeout.reset();\n    }\n    startConnectingInternal() {\n        let options = this.options;\n        if (options['grpc.keepalive_time_ms']) {\n            const adjustedKeepaliveTime = Math.min(this.keepaliveTime, KEEPALIVE_MAX_TIME_MS);\n            options = Object.assign(Object.assign({}, options), { 'grpc.keepalive_time_ms': adjustedKeepaliveTime });\n        }\n        this.connector\n            .connect(this.subchannelAddress, this.credentials, options)\n            .then(transport => {\n            if (this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.READY)) {\n                this.transport = transport;\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(transport.getChannelzRef());\n                }\n                transport.addDisconnectListener(tooManyPings => {\n                    this.transitionToState([connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n                    if (tooManyPings && this.keepaliveTime > 0) {\n                        this.keepaliveTime *= 2;\n                        logging.log(constants_1.LogVerbosity.ERROR, `Connection to ${(0, uri_parser_1.uriToString)(this.channelTarget)} at ${this.subchannelAddressString} rejected by server because of excess pings. Increasing ping interval to ${this.keepaliveTime} ms`);\n                    }\n                });\n            }\n        }, error => {\n            this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE);\n        });\n    }\n    /**\n     * Initiate a state transition from any element of oldStates to the new\n     * state. If the current connectivityState is not in oldStates, do nothing.\n     * @param oldStates The set of states to transition from\n     * @param newState The state to transition to\n     * @returns True if the state changed, false otherwise\n     */\n    transitionToState(oldStates, newState) {\n        var _a, _b;\n        if (oldStates.indexOf(this.connectivityState) === -1) {\n            return false;\n        }\n        this.trace(connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        const previousState = this.connectivityState;\n        this.connectivityState = newState;\n        switch (newState) {\n            case connectivity_state_1.ConnectivityState.READY:\n                this.stopBackoff();\n                break;\n            case connectivity_state_1.ConnectivityState.CONNECTING:\n                this.startBackoff();\n                this.startConnectingInternal();\n                this.continueConnecting = false;\n                break;\n            case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_a = this.transport) === null || _a === void 0 ? void 0 : _a.shutdown();\n                this.transport = null;\n                /* If the backoff timer has already ended by the time we get to the\n                 * TRANSIENT_FAILURE state, we want to immediately transition out of\n                 * TRANSIENT_FAILURE as though the backoff timer is ending right now */\n                if (!this.backoffTimeout.isRunning()) {\n                    process.nextTick(() => {\n                        this.handleBackoffTimer();\n                    });\n                }\n                break;\n            case connectivity_state_1.ConnectivityState.IDLE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_b = this.transport) === null || _b === void 0 ? void 0 : _b.shutdown();\n                this.transport = null;\n                break;\n            default:\n                throw new Error(`Invalid state: unknown ConnectivityState ${newState}`);\n        }\n        for (const listener of this.stateListeners) {\n            listener(this, previousState, newState, this.keepaliveTime);\n        }\n        return true;\n    }\n    ref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount + 1));\n        this.refcount += 1;\n    }\n    unref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount - 1));\n        this.refcount -= 1;\n        if (this.refcount === 0) {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Shutting down');\n            }\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            process.nextTick(() => {\n                this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING, connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n            });\n        }\n    }\n    unrefIfOneRef() {\n        if (this.refcount === 1) {\n            this.unref();\n            return true;\n        }\n        return false;\n    }\n    createCall(metadata, host, method, listener) {\n        if (!this.transport) {\n            throw new Error('Cannot create call, subchannel not READY');\n        }\n        let statsTracker;\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n            this.streamTracker.addCallStarted();\n            statsTracker = {\n                onCallEnd: status => {\n                    if (status.code === constants_1.Status.OK) {\n                        this.callTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.callTracker.addCallFailed();\n                    }\n                },\n            };\n        }\n        else {\n            statsTracker = {};\n        }\n        return this.transport.createCall(metadata, host, method, listener, statsTracker);\n    }\n    /**\n     * If the subchannel is currently IDLE, start connecting and switch to the\n     * CONNECTING state. If the subchannel is current in TRANSIENT_FAILURE,\n     * the next time it would transition to IDLE, start connecting again instead.\n     * Otherwise, do nothing.\n     */\n    startConnecting() {\n        process.nextTick(() => {\n            /* First, try to transition from IDLE to connecting. If that doesn't happen\n             * because the state is not currently IDLE, check if it is\n             * TRANSIENT_FAILURE, and if so indicate that it should go back to\n             * connecting after the backoff timer ends. Otherwise do nothing */\n            if (!this.transitionToState([connectivity_state_1.ConnectivityState.IDLE], connectivity_state_1.ConnectivityState.CONNECTING)) {\n                if (this.connectivityState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    this.continueConnecting = true;\n                }\n            }\n        });\n    }\n    /**\n     * Get the subchannel's current connectivity state.\n     */\n    getConnectivityState() {\n        return this.connectivityState;\n    }\n    /**\n     * Add a listener function to be called whenever the subchannel's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.add(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        this.stateListeners.delete(listener);\n    }\n    /**\n     * Reset the backoff timeout, and immediately start connecting if in backoff.\n     */\n    resetBackoff() {\n        process.nextTick(() => {\n            this.backoffTimeout.reset();\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        });\n    }\n    getAddress() {\n        return this.subchannelAddressString;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getRealSubchannel() {\n        return this;\n    }\n    realSubchannelEquals(other) {\n        return other.getRealSubchannel() === this;\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n        }\n    }\n}\nexports.Subchannel = Subchannel;\n//# sourceMappingURL=subchannel.js.map","\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRootsData = exports.CIPHER_SUITES = void 0;\nconst fs = require(\"fs\");\nexports.CIPHER_SUITES = process.env.GRPC_SSL_CIPHER_SUITES;\nconst DEFAULT_ROOTS_FILE_PATH = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH;\nlet defaultRootsData = null;\nfunction getDefaultRootsData() {\n    if (DEFAULT_ROOTS_FILE_PATH) {\n        if (defaultRootsData === null) {\n            defaultRootsData = fs.readFileSync(DEFAULT_ROOTS_FILE_PATH);\n        }\n        return defaultRootsData;\n    }\n    return null;\n}\nexports.getDefaultRootsData = getDefaultRootsData;\n//# sourceMappingURL=tls-helpers.js.map","\"use strict\";\n/*\n * Copyright 2023 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelConnector = void 0;\nconst http2 = require(\"http2\");\nconst tls_1 = require(\"tls\");\nconst channelz_1 = require(\"./channelz\");\nconst constants_1 = require(\"./constants\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst logging = require(\"./logging\");\nconst resolver_1 = require(\"./resolver\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net = require(\"net\");\nconst subchannel_call_1 = require(\"./subchannel-call\");\nconst call_number_1 = require(\"./call-number\");\nconst TRACER_NAME = 'transport';\nconst FLOW_CONTROL_TRACER_NAME = 'transport_flowctrl';\nconst clientVersion = require('../../package.json').version;\nconst { HTTP2_HEADER_AUTHORITY, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_TE, HTTP2_HEADER_USER_AGENT, } = http2.constants;\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst tooManyPingsData = Buffer.from('too_many_pings', 'ascii');\nclass Http2Transport {\n    constructor(session, subchannelAddress, options, \n    /**\n     * Name of the remote server, if it is not the same as the subchannel\n     * address, i.e. if connecting through an HTTP CONNECT proxy.\n     */\n    remoteName) {\n        this.session = session;\n        this.remoteName = remoteName;\n        /**\n         * The amount of time in between sending pings\n         */\n        this.keepaliveTimeMs = -1;\n        /**\n         * The amount of time to wait for an acknowledgement after sending a ping\n         */\n        this.keepaliveTimeoutMs = KEEPALIVE_TIMEOUT_MS;\n        /**\n         * Timer reference for timeout that indicates when to send the next ping\n         */\n        this.keepaliveTimerId = null;\n        /**\n         * Indicates that the keepalive timer ran out while there were no active\n         * calls, and a ping should be sent the next time a call starts.\n         */\n        this.pendingSendKeepalivePing = false;\n        /**\n         * Timer reference tracking when the most recent ping will be considered lost\n         */\n        this.keepaliveTimeoutId = null;\n        /**\n         * Indicates whether keepalive pings should be sent without any active calls\n         */\n        this.keepaliveWithoutCalls = false;\n        this.activeCalls = new Set();\n        this.disconnectListeners = [];\n        this.disconnectHandled = false;\n        this.channelzEnabled = true;\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        this.keepalivesSent = 0;\n        this.messagesSent = 0;\n        this.messagesReceived = 0;\n        this.lastMessageSentTimestamp = null;\n        this.lastMessageReceivedTimestamp = null;\n        /* Populate subchannelAddressString and channelzRef before doing anything\n         * else, because they are used in the trace methods. */\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzSocket)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        // Build user-agent string.\n        this.userAgent = [\n            options['grpc.primary_user_agent'],\n            `grpc-node-js/${clientVersion}`,\n            options['grpc.secondary_user_agent'],\n        ]\n            .filter(e => e)\n            .join(' '); // remove falsey values first\n        if ('grpc.keepalive_time_ms' in options) {\n            this.keepaliveTimeMs = options['grpc.keepalive_time_ms'];\n        }\n        if ('grpc.keepalive_timeout_ms' in options) {\n            this.keepaliveTimeoutMs = options['grpc.keepalive_timeout_ms'];\n        }\n        if ('grpc.keepalive_permit_without_calls' in options) {\n            this.keepaliveWithoutCalls =\n                options['grpc.keepalive_permit_without_calls'] === 1;\n        }\n        else {\n            this.keepaliveWithoutCalls = false;\n        }\n        session.once('close', () => {\n            this.trace('session closed');\n            this.stopKeepalivePings();\n            this.handleDisconnect();\n        });\n        session.once('goaway', (errorCode, lastStreamID, opaqueData) => {\n            let tooManyPings = false;\n            /* See the last paragraph of\n             * https://github.com/grpc/proposal/blob/master/A8-client-side-keepalive.md#basic-keepalive */\n            if (errorCode === http2.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n                opaqueData.equals(tooManyPingsData)) {\n                tooManyPings = true;\n            }\n            this.trace('connection closed by GOAWAY with code ' + errorCode);\n            this.reportDisconnectToOwner(tooManyPings);\n        });\n        session.once('error', error => {\n            /* Do nothing here. Any error should also trigger a close event, which is\n             * where we want to handle that.  */\n            this.trace('connection closed with error ' + error.message);\n        });\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            session.on('remoteSettings', (settings) => {\n                this.trace('new settings received' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n            session.on('localSettings', (settings) => {\n                this.trace('local settings acknowledged by remote' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n        }\n        /* Start the keepalive timer last, because this can trigger trace logs,\n         * which should only happen after everything else is set up. */\n        if (this.keepaliveWithoutCalls) {\n            this.maybeStartKeepalivePingTimer();\n        }\n    }\n    getChannelzInfo() {\n        var _a, _b, _c;\n        const sessionSocket = this.session.socket;\n        const remoteAddress = sessionSocket.remoteAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n            : null;\n        const localAddress = sessionSocket.localAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n            : null;\n        let tlsInfo;\n        if (this.session.encrypted) {\n            const tlsSocket = sessionSocket;\n            const cipherInfo = tlsSocket.getCipher();\n            const certificate = tlsSocket.getCertificate();\n            const peerCertificate = tlsSocket.getPeerCertificate();\n            tlsInfo = {\n                cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n                localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                    ? peerCertificate.raw\n                    : null,\n            };\n        }\n        else {\n            tlsInfo = null;\n        }\n        const socketInfo = {\n            remoteAddress: remoteAddress,\n            localAddress: localAddress,\n            security: tlsInfo,\n            remoteName: this.remoteName,\n            streamsStarted: this.streamTracker.callsStarted,\n            streamsSucceeded: this.streamTracker.callsSucceeded,\n            streamsFailed: this.streamTracker.callsFailed,\n            messagesSent: this.messagesSent,\n            messagesReceived: this.messagesReceived,\n            keepAlivesSent: this.keepalivesSent,\n            lastLocalStreamCreatedTimestamp: this.streamTracker.lastCallStartedTimestamp,\n            lastRemoteStreamCreatedTimestamp: null,\n            lastMessageSentTimestamp: this.lastMessageSentTimestamp,\n            lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,\n            localFlowControlWindow: (_b = this.session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n            remoteFlowControlWindow: (_c = this.session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n        };\n        return socketInfo;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    keepaliveTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'keepalive', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    flowControlTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, FLOW_CONTROL_TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    internalsTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'transport_internals', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    /**\n     * Indicate to the owner of this object that this transport should no longer\n     * be used. That happens if the connection drops, or if the server sends a\n     * GOAWAY.\n     * @param tooManyPings If true, this was triggered by a GOAWAY with data\n     * indicating that the session was closed becaues the client sent too many\n     * pings.\n     * @returns\n     */\n    reportDisconnectToOwner(tooManyPings) {\n        if (this.disconnectHandled) {\n            return;\n        }\n        this.disconnectHandled = true;\n        this.disconnectListeners.forEach(listener => listener(tooManyPings));\n    }\n    /**\n     * Handle connection drops, but not GOAWAYs.\n     */\n    handleDisconnect() {\n        this.reportDisconnectToOwner(false);\n        /* Give calls an event loop cycle to finish naturally before reporting the\n         * disconnnection to them. */\n        setImmediate(() => {\n            for (const call of this.activeCalls) {\n                call.onDisconnect();\n            }\n        });\n    }\n    addDisconnectListener(listener) {\n        this.disconnectListeners.push(listener);\n    }\n    clearKeepaliveTimer() {\n        if (!this.keepaliveTimerId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimerId);\n        this.keepaliveTimerId = null;\n    }\n    clearKeepaliveTimeout() {\n        if (!this.keepaliveTimeoutId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimeoutId);\n        this.keepaliveTimeoutId = null;\n    }\n    canSendPing() {\n        return (this.keepaliveTimeMs > 0 &&\n            (this.keepaliveWithoutCalls || this.activeCalls.size > 0));\n    }\n    maybeSendPing() {\n        var _a, _b;\n        this.clearKeepaliveTimer();\n        if (!this.canSendPing()) {\n            this.pendingSendKeepalivePing = true;\n            return;\n        }\n        if (this.channelzEnabled) {\n            this.keepalivesSent += 1;\n        }\n        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n        if (!this.keepaliveTimeoutId) {\n            this.keepaliveTimeoutId = setTimeout(() => {\n                this.keepaliveTrace('Ping timeout passed without response');\n                this.handleDisconnect();\n            }, this.keepaliveTimeoutMs);\n            (_b = (_a = this.keepaliveTimeoutId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        try {\n            this.session.ping((err, duration, payload) => {\n                this.keepaliveTrace('Received ping response');\n                this.clearKeepaliveTimeout();\n                this.maybeStartKeepalivePingTimer();\n            });\n        }\n        catch (e) {\n            /* If we fail to send a ping, the connection is no longer functional, so\n             * we should discard it. */\n            this.handleDisconnect();\n        }\n    }\n    /**\n     * Starts the keepalive ping timer if appropriate. If the timer already ran\n     * out while there were no active requests, instead send a ping immediately.\n     * If the ping timer is already running or a ping is currently in flight,\n     * instead do nothing and wait for them to resolve.\n     */\n    maybeStartKeepalivePingTimer() {\n        var _a, _b;\n        if (!this.canSendPing()) {\n            return;\n        }\n        if (this.pendingSendKeepalivePing) {\n            this.pendingSendKeepalivePing = false;\n            this.maybeSendPing();\n        }\n        else if (!this.keepaliveTimerId && !this.keepaliveTimeoutId) {\n            this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n            this.keepaliveTimerId = (_b = (_a = setTimeout(() => {\n                this.maybeSendPing();\n            }, this.keepaliveTimeMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        /* Otherwise, there is already either a keepalive timer or a ping pending,\n         * wait for those to resolve. */\n    }\n    stopKeepalivePings() {\n        if (this.keepaliveTimerId) {\n            clearTimeout(this.keepaliveTimerId);\n            this.keepaliveTimerId = null;\n        }\n        this.clearKeepaliveTimeout();\n    }\n    removeActiveCall(call) {\n        this.activeCalls.delete(call);\n        if (this.activeCalls.size === 0) {\n            this.session.unref();\n        }\n    }\n    addActiveCall(call) {\n        this.activeCalls.add(call);\n        if (this.activeCalls.size === 1) {\n            this.session.ref();\n            if (!this.keepaliveWithoutCalls) {\n                this.maybeStartKeepalivePingTimer();\n            }\n        }\n    }\n    createCall(metadata, host, method, listener, subchannelCallStatsTracker) {\n        const headers = metadata.toHttp2Headers();\n        headers[HTTP2_HEADER_AUTHORITY] = host;\n        headers[HTTP2_HEADER_USER_AGENT] = this.userAgent;\n        headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/grpc';\n        headers[HTTP2_HEADER_METHOD] = 'POST';\n        headers[HTTP2_HEADER_PATH] = method;\n        headers[HTTP2_HEADER_TE] = 'trailers';\n        let http2Stream;\n        /* In theory, if an error is thrown by session.request because session has\n         * become unusable (e.g. because it has received a goaway), this subchannel\n         * should soon see the corresponding close or goaway event anyway and leave\n         * READY. But we have seen reports that this does not happen\n         * (https://github.com/googleapis/nodejs-firestore/issues/1023#issuecomment-653204096)\n         * so for defense in depth, we just discard the session when we see an\n         * error here.\n         */\n        try {\n            http2Stream = this.session.request(headers);\n        }\n        catch (e) {\n            this.handleDisconnect();\n            throw e;\n        }\n        this.flowControlTrace('local window size: ' +\n            this.session.state.localWindowSize +\n            ' remote window size: ' +\n            this.session.state.remoteWindowSize);\n        this.internalsTrace('session.closed=' +\n            this.session.closed +\n            ' session.destroyed=' +\n            this.session.destroyed +\n            ' session.socket.destroyed=' +\n            this.session.socket.destroyed);\n        let eventTracker;\n        // eslint-disable-next-line prefer-const\n        let call;\n        if (this.channelzEnabled) {\n            this.streamTracker.addCallStarted();\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    this.messagesSent += 1;\n                    this.lastMessageSentTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    this.messagesReceived += 1;\n                    this.lastMessageReceivedTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    if (success) {\n                        this.streamTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.streamTracker.addCallFailed();\n                    }\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        else {\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        call = new subchannel_call_1.Http2SubchannelCall(http2Stream, eventTracker, listener, this, (0, call_number_1.getNextCallNumber)());\n        this.addActiveCall(call);\n        return call;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getPeerName() {\n        return this.subchannelAddressString;\n    }\n    shutdown() {\n        this.session.close();\n        (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n    }\n}\nclass Http2SubchannelConnector {\n    constructor(channelTarget) {\n        this.channelTarget = channelTarget;\n        this.session = null;\n        this.isShutdown = false;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, (0, uri_parser_1.uriToString)(this.channelTarget) + ' ' + text);\n    }\n    createSession(address, credentials, options, proxyConnectionResult) {\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c;\n            let remoteName;\n            if (proxyConnectionResult.realTarget) {\n                remoteName = (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget);\n                this.trace('creating HTTP/2 session through proxy to ' +\n                    (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget));\n            }\n            else {\n                remoteName = null;\n                this.trace('creating HTTP/2 session to ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n            }\n            const targetAuthority = (0, resolver_1.getDefaultAuthority)((_a = proxyConnectionResult.realTarget) !== null && _a !== void 0 ? _a : this.channelTarget);\n            let connectionOptions = credentials._getConnectionOptions() || {};\n            connectionOptions.maxSendHeaderBlockLength = Number.MAX_SAFE_INTEGER;\n            if ('grpc-node.max_session_memory' in options) {\n                connectionOptions.maxSessionMemory =\n                    options['grpc-node.max_session_memory'];\n            }\n            else {\n                /* By default, set a very large max session memory limit, to effectively\n                 * disable enforcement of the limit. Some testing indicates that Node's\n                 * behavior degrades badly when this limit is reached, so we solve that\n                 * by disabling the check entirely. */\n                connectionOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n            }\n            let addressScheme = 'http://';\n            if ('secureContext' in connectionOptions) {\n                addressScheme = 'https://';\n                // If provided, the value of grpc.ssl_target_name_override should be used\n                // to override the target hostname when checking server identity.\n                // This option is used for testing only.\n                if (options['grpc.ssl_target_name_override']) {\n                    const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                    connectionOptions.checkServerIdentity = (host, cert) => {\n                        return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                    };\n                    connectionOptions.servername = sslTargetNameOverride;\n                }\n                else {\n                    const authorityHostname = (_c = (_b = (0, uri_parser_1.splitHostPort)(targetAuthority)) === null || _b === void 0 ? void 0 : _b.host) !== null && _c !== void 0 ? _c : 'localhost';\n                    // We want to always set servername to support SNI\n                    connectionOptions.servername = authorityHostname;\n                }\n                if (proxyConnectionResult.socket) {\n                    /* This is part of the workaround for\n                     * https://github.com/nodejs/node/issues/32922. Without that bug,\n                     * proxyConnectionResult.socket would always be a plaintext socket and\n                     * this would say\n                     * connectionOptions.socket = proxyConnectionResult.socket; */\n                    connectionOptions.createConnection = (authority, option) => {\n                        return proxyConnectionResult.socket;\n                    };\n                }\n            }\n            else {\n                /* In all but the most recent versions of Node, http2.connect does not use\n                 * the options when establishing plaintext connections, so we need to\n                 * establish that connection explicitly. */\n                connectionOptions.createConnection = (authority, option) => {\n                    if (proxyConnectionResult.socket) {\n                        return proxyConnectionResult.socket;\n                    }\n                    else {\n                        /* net.NetConnectOpts is declared in a way that is more restrictive\n                         * than what net.connect will actually accept, so we use the type\n                         * assertion to work around that. */\n                        return net.connect(address);\n                    }\n                };\n            }\n            connectionOptions = Object.assign(Object.assign(Object.assign({}, connectionOptions), address), { enableTrace: options['grpc-node.tls_enable_trace'] === 1 });\n            /* http2.connect uses the options here:\n             * https://github.com/nodejs/node/blob/70c32a6d190e2b5d7b9ff9d5b6a459d14e8b7d59/lib/internal/http2/core.js#L3028-L3036\n             * The spread operator overides earlier values with later ones, so any port\n             * or host values in the options will be used rather than any values extracted\n             * from the first argument. In addition, the path overrides the host and port,\n             * as documented for plaintext connections here:\n             * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener\n             * and for TLS connections here:\n             * https://nodejs.org/api/tls.html#tls_tls_connect_options_callback. In\n             * earlier versions of Node, http2.connect passes these options to\n             * tls.connect but not net.connect, so in the insecure case we still need\n             * to set the createConnection option above to create the connection\n             * explicitly. We cannot do that in the TLS case because http2.connect\n             * passes necessary additional options to tls.connect.\n             * The first argument just needs to be parseable as a URL and the scheme\n             * determines whether the connection will be established over TLS or not.\n             */\n            const session = http2.connect(addressScheme + targetAuthority, connectionOptions);\n            this.session = session;\n            session.unref();\n            session.once('connect', () => {\n                session.removeAllListeners();\n                resolve(new Http2Transport(session, address, options, remoteName));\n                this.session = null;\n            });\n            session.once('close', () => {\n                this.session = null;\n                reject();\n            });\n            session.once('error', error => {\n                this.trace('connection failed with error ' + error.message);\n            });\n        });\n    }\n    connect(address, credentials, options) {\n        var _a, _b;\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        /* Pass connection options through to the proxy so that it's able to\n         * upgrade it's connection to support tls if needed.\n         * This is a workaround for https://github.com/nodejs/node/issues/32922\n         * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n        const connectionOptions = credentials._getConnectionOptions() || {};\n        if ('secureContext' in connectionOptions) {\n            connectionOptions.ALPNProtocols = ['h2'];\n            // If provided, the value of grpc.ssl_target_name_override should be used\n            // to override the target hostname when checking server identity.\n            // This option is used for testing only.\n            if (options['grpc.ssl_target_name_override']) {\n                const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                connectionOptions.checkServerIdentity = (host, cert) => {\n                    return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                };\n                connectionOptions.servername = sslTargetNameOverride;\n            }\n            else {\n                if ('grpc.http_connect_target' in options) {\n                    /* This is more or less how servername will be set in createSession\n                     * if a connection is successfully established through the proxy.\n                     * If the proxy is not used, these connectionOptions are discarded\n                     * anyway */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)((_a = (0, uri_parser_1.parseUri)(options['grpc.http_connect_target'])) !== null && _a !== void 0 ? _a : {\n                        path: 'localhost',\n                    });\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    connectionOptions.servername = (_b = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _b !== void 0 ? _b : targetPath;\n                }\n            }\n            if (options['grpc-node.tls_enable_trace']) {\n                connectionOptions.enableTrace = true;\n            }\n        }\n        return (0, http_proxy_1.getProxiedConnection)(address, options, connectionOptions).then(result => this.createSession(address, credentials, options, result));\n    }\n    shutdown() {\n        var _a;\n        this.isShutdown = true;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.close();\n        this.session = null;\n    }\n}\nexports.Http2SubchannelConnector = Http2SubchannelConnector;\n//# sourceMappingURL=transport.js.map","\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uriToString = exports.splitHostPort = exports.parseUri = void 0;\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\nconst URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\nfunction parseUri(uriString) {\n    const parsedUri = URI_REGEX.exec(uriString);\n    if (parsedUri === null) {\n        return null;\n    }\n    return {\n        scheme: parsedUri[1],\n        authority: parsedUri[2],\n        path: parsedUri[3],\n    };\n}\nexports.parseUri = parseUri;\nconst NUMBER_REGEX = /^\\d+$/;\nfunction splitHostPort(path) {\n    if (path.startsWith('[')) {\n        const hostEnd = path.indexOf(']');\n        if (hostEnd === -1) {\n            return null;\n        }\n        const host = path.substring(1, hostEnd);\n        /* Only an IPv6 address should be in bracketed notation, and an IPv6\n         * address should have at least one colon */\n        if (host.indexOf(':') === -1) {\n            return null;\n        }\n        if (path.length > hostEnd + 1) {\n            if (path[hostEnd + 1] === ':') {\n                const portString = path.substring(hostEnd + 2);\n                if (NUMBER_REGEX.test(portString)) {\n                    return {\n                        host: host,\n                        port: +portString,\n                    };\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host,\n            };\n        }\n    }\n    else {\n        const splitPath = path.split(':');\n        /* Exactly one colon means that this is host:port. Zero colons means that\n         * there is no port. And multiple colons means that this is a bare IPv6\n         * address with no port */\n        if (splitPath.length === 2) {\n            if (NUMBER_REGEX.test(splitPath[1])) {\n                return {\n                    host: splitPath[0],\n                    port: +splitPath[1],\n                };\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host: path,\n            };\n        }\n    }\n}\nexports.splitHostPort = splitHostPort;\nfunction uriToString(uri) {\n    let result = '';\n    if (uri.scheme !== undefined) {\n        result += uri.scheme + ':';\n    }\n    if (uri.authority !== undefined) {\n        result += '//' + uri.authority + '/';\n    }\n    result += uri.path;\n    return result;\n}\nexports.uriToString = uriToString;\n//# sourceMappingURL=uri-parser.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadFileDescriptorSetFromObject = exports.loadFileDescriptorSetFromBuffer = exports.fromJSON = exports.loadSync = exports.load = exports.isAnyExtension = exports.Long = void 0;\nconst camelCase = require(\"lodash.camelcase\");\nconst Protobuf = require(\"protobufjs\");\nconst descriptor = require(\"protobufjs/ext/descriptor\");\nconst util_1 = require(\"./util\");\nconst Long = require(\"long\");\nexports.Long = Long;\nfunction isAnyExtension(obj) {\n    return ('@type' in obj) && (typeof obj['@type'] === 'string');\n}\nexports.isAnyExtension = isAnyExtension;\nconst descriptorOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    defaults: true,\n    oneofs: true,\n    json: true,\n};\nfunction joinName(baseName, name) {\n    if (baseName === '') {\n        return name;\n    }\n    else {\n        return baseName + '.' + name;\n    }\n}\nfunction isHandledReflectionObject(obj) {\n    return (obj instanceof Protobuf.Service ||\n        obj instanceof Protobuf.Type ||\n        obj instanceof Protobuf.Enum);\n}\nfunction isNamespaceBase(obj) {\n    return obj instanceof Protobuf.Namespace || obj instanceof Protobuf.Root;\n}\nfunction getAllHandledReflectionObjects(obj, parentName) {\n    const objName = joinName(parentName, obj.name);\n    if (isHandledReflectionObject(obj)) {\n        return [[objName, obj]];\n    }\n    else {\n        if (isNamespaceBase(obj) && typeof obj.nested !== 'undefined') {\n            return Object.keys(obj.nested)\n                .map(name => {\n                return getAllHandledReflectionObjects(obj.nested[name], objName);\n            })\n                .reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n        }\n    }\n    return [];\n}\nfunction createDeserializer(cls, options) {\n    return function deserialize(argBuf) {\n        return cls.toObject(cls.decode(argBuf), options);\n    };\n}\nfunction createSerializer(cls) {\n    return function serialize(arg) {\n        if (Array.isArray(arg)) {\n            throw new Error(`Failed to serialize message: expected object with ${cls.name} structure, got array instead`);\n        }\n        const message = cls.fromObject(arg);\n        return cls.encode(message).finish();\n    };\n}\nfunction createMethodDefinition(method, serviceName, options, fileDescriptors) {\n    /* This is only ever called after the corresponding root.resolveAll(), so we\n     * can assume that the resolved request and response types are non-null */\n    const requestType = method.resolvedRequestType;\n    const responseType = method.resolvedResponseType;\n    return {\n        path: '/' + serviceName + '/' + method.name,\n        requestStream: !!method.requestStream,\n        responseStream: !!method.responseStream,\n        requestSerialize: createSerializer(requestType),\n        requestDeserialize: createDeserializer(requestType, options),\n        responseSerialize: createSerializer(responseType),\n        responseDeserialize: createDeserializer(responseType, options),\n        // TODO(murgatroid99): Find a better way to handle this\n        originalName: camelCase(method.name),\n        requestType: createMessageDefinition(requestType, fileDescriptors),\n        responseType: createMessageDefinition(responseType, fileDescriptors),\n    };\n}\nfunction createServiceDefinition(service, name, options, fileDescriptors) {\n    const def = {};\n    for (const method of service.methodsArray) {\n        def[method.name] = createMethodDefinition(method, name, options, fileDescriptors);\n    }\n    return def;\n}\nfunction createMessageDefinition(message, fileDescriptors) {\n    const messageDescriptor = message.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 DescriptorProto',\n        type: messageDescriptor.$type.toObject(messageDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\nfunction createEnumDefinition(enumType, fileDescriptors) {\n    const enumDescriptor = enumType.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 EnumDescriptorProto',\n        type: enumDescriptor.$type.toObject(enumDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\n/**\n * function createDefinition(obj: Protobuf.Service, name: string, options:\n * Options): ServiceDefinition; function createDefinition(obj: Protobuf.Type,\n * name: string, options: Options): MessageTypeDefinition; function\n * createDefinition(obj: Protobuf.Enum, name: string, options: Options):\n * EnumTypeDefinition;\n */\nfunction createDefinition(obj, name, options, fileDescriptors) {\n    if (obj instanceof Protobuf.Service) {\n        return createServiceDefinition(obj, name, options, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Type) {\n        return createMessageDefinition(obj, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Enum) {\n        return createEnumDefinition(obj, fileDescriptors);\n    }\n    else {\n        throw new Error('Type mismatch in reflection object handling');\n    }\n}\nfunction createPackageDefinition(root, options) {\n    const def = {};\n    root.resolveAll();\n    const descriptorList = root.toDescriptor('proto3').file;\n    const bufferList = descriptorList.map(value => Buffer.from(descriptor.FileDescriptorProto.encode(value).finish()));\n    for (const [name, obj] of getAllHandledReflectionObjects(root, '')) {\n        def[name] = createDefinition(obj, name, options, bufferList);\n    }\n    return def;\n}\nfunction createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options) {\n    options = options || {};\n    const root = Protobuf.Root.fromDescriptor(decodedDescriptorSet);\n    root.resolveAll();\n    return createPackageDefinition(root, options);\n}\n/**\n * Load a .proto file with the specified options.\n * @param filename One or multiple file paths to load. Can be an absolute path\n *     or relative to an include path.\n * @param options.keepCase Preserve field names. The default is to change them\n *     to camel case.\n * @param options.longs The type that should be used to represent `long` values.\n *     Valid options are `Number` and `String`. Defaults to a `Long` object type\n *     from a library.\n * @param options.enums The type that should be used to represent `enum` values.\n *     The only valid option is `String`. Defaults to the numeric value.\n * @param options.bytes The type that should be used to represent `bytes`\n *     values. Valid options are `Array` and `String`. The default is to use\n *     `Buffer`.\n * @param options.defaults Set default values on output objects. Defaults to\n *     `false`.\n * @param options.arrays Set empty arrays for missing array values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.objects Set empty objects for missing object values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.oneofs Set virtual oneof properties to the present field's\n *     name\n * @param options.json Represent Infinity and NaN as strings in float fields,\n *     and automatically decode google.protobuf.Any values.\n * @param options.includeDirs Paths to search for imported `.proto` files.\n */\nfunction load(filename, options) {\n    return (0, util_1.loadProtosWithOptions)(filename, options).then(loadedRoot => {\n        return createPackageDefinition(loadedRoot, options);\n    });\n}\nexports.load = load;\nfunction loadSync(filename, options) {\n    const loadedRoot = (0, util_1.loadProtosWithOptionsSync)(filename, options);\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.loadSync = loadSync;\nfunction fromJSON(json, options) {\n    options = options || {};\n    const loadedRoot = Protobuf.Root.fromJSON(json);\n    loadedRoot.resolveAll();\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.fromJSON = fromJSON;\nfunction loadFileDescriptorSetFromBuffer(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.decode(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromBuffer = loadFileDescriptorSetFromBuffer;\nfunction loadFileDescriptorSetFromObject(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.fromObject(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromObject = loadFileDescriptorSetFromObject;\n(0, util_1.addCommonProtos)();\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root;\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, syntax);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    if (syntax)\n        file.syntax = syntax;\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nType.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\n            field.setOption(\"packed\", false);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nField.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        switch (this.rule) {\n            case \"repeated\": descriptor.label = 3; break;\n            case \"required\": descriptor.label = 2; break;\n            default: descriptor.label = 1; break;\n        }\n\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n    }\n\n    if (syntax === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if (this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    return new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return resolvedType.group ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\n                val = options[key];\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\n                    val = field.resolvedType.valuesById[val];\n                out.push(underScore(key), val);\n            }\n    return out.length ? $protobuf.util.toObject(out) : undefined;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\n        val = options[key = ks[i]];\n        if (key === \"default\")\n            continue;\n        var field = type.fields[key];\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\n            continue;\n        out.push(key, val);\n    }\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","var IDX=256, HEX=[], BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nfunction v4() {\n\tvar i=0, num, out='';\n\n\tif (!BUFFER || ((IDX + 16) > 256)) {\n\t\tBUFFER = Array(i=256);\n\t\twhile (i--) BUFFER[i] = 256 * Math.random() | 0;\n\t\ti = IDX = 0;\n\t}\n\n\tfor (; i < 16; i++) {\n\t\tnum = BUFFER[IDX + i];\n\t\tif (i==6) out += HEX[num & 15 | 64];\n\t\telse if (i==8) out += HEX[num & 63 | 128];\n\t\telse out += HEX[num];\n\n\t\tif (i & 1 && i > 1 && i < 11) out += '-';\n\t}\n\n\tIDX++;\n\treturn out;\n}\n\nexports.v4 = v4;","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultKeyFormatter = void 0;\r\nconst importExport_1 = require(\"./importExport\");\r\n/**\r\n * Auto-detects the format of a key when importing, by trying all the available formatters.\r\n */\r\nclass DefaultKeyFormatter {\r\n    export(keyPair, includePrivate) {\r\n        throw new Error('DefaultKeyFormatter should not be used for exporting.');\r\n    }\r\n    encrypt(keyData, passphrase) {\r\n        throw new Error('DefaultKeyFormatter should not be used for encrypting.');\r\n    }\r\n    async import(keyData) {\r\n        for (const [keyFormat, keyFormatter] of importExport_1.keyFormatters) {\r\n            if (keyFormat !== 0 /* KeyFormat.Default */ &&\r\n                keyFormat !== 1 /* KeyFormat.Ssh */ &&\r\n                keyFormat !== 7 /* KeyFormat.Jwk */) {\r\n                const keyPair = await keyFormatter.import(keyData);\r\n                if (keyPair) {\r\n                    return keyPair;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        for (const [keyFormat, keyFormatter] of importExport_1.keyFormatters) {\r\n            if (keyFormat !== 0 /* KeyFormat.Default */ &&\r\n                keyFormat !== 1 /* KeyFormat.Ssh */ &&\r\n                keyFormat !== 7 /* KeyFormat.Jwk */) {\r\n                const decryptedKeyData = await keyFormatter.decrypt(keyData, passphrase);\r\n                if (decryptedKeyData) {\r\n                    return decryptedKeyData;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexports.DefaultKeyFormatter = DefaultKeyFormatter;\r\n//# sourceMappingURL=defaultKeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.importKeyBytes = exports.importKeyFile = exports.importKey = exports.exportPrivateKeyBytes = exports.exportPrivateKeyFile = exports.exportPrivateKey = exports.exportPublicKeyBytes = exports.exportPublicKeyFile = exports.exportPublicKey = exports.keyFormatters = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst defaultKeyFormatter_1 = require(\"./defaultKeyFormatter\");\r\nconst publicKeyFormatter_1 = require(\"./publicKeyFormatter\");\r\nconst pkcs1KeyFormatter_1 = require(\"./pkcs1KeyFormatter\");\r\nconst sec1KeyFormatter_1 = require(\"./sec1KeyFormatter\");\r\nconst pkcs8KeyFormatter_1 = require(\"./pkcs8KeyFormatter\");\r\nconst jsonWebKeyFormatter_1 = require(\"./jsonWebKeyFormatter\");\r\nconst keyData_1 = require(\"./keyData\");\r\n/**\r\n * Mapping to formatters for each supported key format.\r\n */\r\nexports.keyFormatters = new Map();\r\nexports.keyFormatters.set(0 /* KeyFormat.Default */, new defaultKeyFormatter_1.DefaultKeyFormatter());\r\nexports.keyFormatters.set(1 /* KeyFormat.Ssh */, new publicKeyFormatter_1.PublicKeyFormatter());\r\nexports.keyFormatters.set(3 /* KeyFormat.Pkcs1 */, new pkcs1KeyFormatter_1.Pkcs1KeyFormatter());\r\nexports.keyFormatters.set(4 /* KeyFormat.Sec1 */, new sec1KeyFormatter_1.Sec1KeyFormatter());\r\nexports.keyFormatters.set(5 /* KeyFormat.Pkcs8 */, new pkcs8KeyFormatter_1.Pkcs8KeyFormatter());\r\nexports.keyFormatters.set(7 /* KeyFormat.Jwk */, new jsonWebKeyFormatter_1.JsonWebKeyFormatter());\r\nconst enableFileIO = !!((_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node);\r\n/** Exports the public key from a key pair, as a string. */\r\nfunction exportPublicKey(keyPair, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (keyEncoding === 1 /* KeyEncoding.Binary */) {\r\n        throw new Error('Cannot represent binary-encoded key as a string.');\r\n    }\r\n    return exportPublicKeyBytes(keyPair, keyFormat, keyEncoding).then((keyBytes) => keyBytes.toString('utf8'));\r\n}\r\nexports.exportPublicKey = exportPublicKey;\r\n/** Exports the public key from a key pair, to a file. */\r\nfunction exportPublicKeyFile(keyPair, keyFile, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (!enableFileIO)\r\n        throw new Error('File I/O is not supported in a browser environment.');\r\n    return exportPublicKeyBytes(keyPair, keyFormat, keyEncoding).then((keyBytes) => require('fs').promises.writeFile(keyFile, keyBytes));\r\n}\r\nexports.exportPublicKeyFile = exportPublicKeyFile;\r\n/** Exports the public key from a key pair, to a byte buffer. */\r\nfunction exportPublicKeyBytes(keyPair, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    return exportKeyBytes(keyPair, null, keyFormat, keyEncoding, false);\r\n}\r\nexports.exportPublicKeyBytes = exportPublicKeyBytes;\r\n/** Exports the private key from a key pair, as a string. */\r\nfunction exportPrivateKey(keyPair, passphrase = null, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (keyEncoding === 1 /* KeyEncoding.Binary */) {\r\n        throw new Error('Cannot represent binary-encoded key as a string.');\r\n    }\r\n    return exportPrivateKeyBytes(keyPair, passphrase, keyFormat, keyEncoding).then((keyBytes) => keyBytes.toString('utf8'));\r\n}\r\nexports.exportPrivateKey = exportPrivateKey;\r\n/** Exports the private key from a key pair, to a file. */\r\nfunction exportPrivateKeyFile(keyPair, passphrase = null, keyFile, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (!enableFileIO)\r\n        throw new Error('File I/O is not supported in a browser environment.');\r\n    return exportPrivateKeyBytes(keyPair, passphrase, keyFormat, keyEncoding).then((keyBytes) => require('fs').promises.writeFile(keyFile, keyBytes));\r\n}\r\nexports.exportPrivateKeyFile = exportPrivateKeyFile;\r\n/** Exports the private key from a key pair, to a byte buffer. */\r\nfunction exportPrivateKeyBytes(keyPair, passphrase = null, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    return exportKeyBytes(keyPair, passphrase, keyFormat, keyEncoding, true);\r\n}\r\nexports.exportPrivateKeyBytes = exportPrivateKeyBytes;\r\n/** Imports a public key or public/private key pair from a string. */\r\nfunction importKey(keyString, passphrase = null, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (keyEncoding === 1 /* KeyEncoding.Binary */) {\r\n        throw new Error('Cannot represent binary-encoded key as a string.');\r\n    }\r\n    return importKeyBytes(buffer_1.Buffer.from(keyString, 'utf8'), passphrase, keyFormat, keyEncoding);\r\n}\r\nexports.importKey = importKey;\r\n/** Imports a public key or public/private key pair from a file. */\r\nfunction importKeyFile(keyFile, passphrase = null, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (keyEncoding === 1 /* KeyEncoding.Binary */) {\r\n        throw new Error('Cannot represent binary-encoded key as a string.');\r\n    }\r\n    return require('fs')\r\n        .promises.readFile(keyFile)\r\n        .then((keyBytes) => importKeyBytes(keyBytes, passphrase, keyFormat, keyEncoding));\r\n}\r\nexports.importKeyFile = importKeyFile;\r\n/** Imports a public key or public/private key pair from a byte array. */\r\nasync function importKeyBytes(keyBytes, passphrase = null, keyFormat = 0 /* KeyFormat.Default */, keyEncoding = 0 /* KeyEncoding.Default */) {\r\n    if (!(keyBytes instanceof buffer_1.Buffer))\r\n        throw new TypeError('Buffer expected.');\r\n    let keyData = null;\r\n    if (keyEncoding === 0 /* KeyEncoding.Default */ || keyEncoding === 3 /* KeyEncoding.Pem */) {\r\n        keyData = keyData_1.KeyData.tryDecodePemBytes(keyBytes);\r\n        if (!keyData && keyEncoding === 3 /* KeyEncoding.Pem */) {\r\n            throw new Error('Key is not PEM-encoded.');\r\n        }\r\n    }\r\n    let keyType = null;\r\n    let comment = null;\r\n    if (!keyData && (keyEncoding === 0 /* KeyEncoding.Default */ || keyEncoding === 5 /* KeyEncoding.Json */)) {\r\n        try {\r\n            JSON.parse(keyBytes.toString('utf8'));\r\n            keyData = new keyData_1.KeyData();\r\n            keyData.data = keyBytes;\r\n            keyEncoding = 5 /* KeyEncoding.Json */;\r\n            keyFormat = 7 /* KeyFormat.Jwk */;\r\n        }\r\n        catch (e) {\r\n            if (keyEncoding === 5 /* KeyEncoding.Json */) {\r\n                throw new Error('Key is not JSON-formatted.');\r\n            }\r\n        }\r\n    }\r\n    if (!keyData &&\r\n        (keyFormat === 0 /* KeyFormat.Default */ || keyFormat === 1 /* KeyFormat.Ssh */) &&\r\n        (keyEncoding === 0 /* KeyEncoding.Default */ || keyEncoding === 4 /* KeyEncoding.SshBase64 */)) {\r\n        try {\r\n            let keyString = keyBytes.toString('utf8');\r\n            const lines = keyString.split('\\n').filter((line) => !!line);\r\n            if (lines.length === 1) {\r\n                keyString = lines[0];\r\n                const parts = keyString.split(' ', 3);\r\n                if (parts.length >= 2 && parts[0].length < 40) {\r\n                    keyType = parts[0];\r\n                    keyBytes = buffer_1.Buffer.from(parts[1], 'utf8');\r\n                    comment = parts.length === 3 ? parts[2].trimRight() : null;\r\n                    keyEncoding = 2 /* KeyEncoding.Base64 */;\r\n                    keyFormat = 1 /* KeyFormat.Ssh */;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n        if (!keyType && keyEncoding === 4 /* KeyEncoding.SshBase64 */) {\r\n            throw new Error('Key does not have SSH algorithm prefix.');\r\n        }\r\n    }\r\n    if (!keyData && (keyEncoding === 0 /* KeyEncoding.Default */ || keyEncoding === 2 /* KeyEncoding.Base64 */)) {\r\n        try {\r\n            const keyString = keyBytes.toString('utf8');\r\n            // Node doesn't throw when parsing invalid base64. To check if the parse was successful,\r\n            // compare the resulting decoded bytes to the expected length, which is 3/4 of the input.\r\n            if (keyString.length % 4 === 0) {\r\n                const encodedLengthWithoutPadding = keyString.length - (keyString.endsWith('==') ? 2 : keyString.endsWith('=') ? 1 : 0);\r\n                const decodedLength = Math.floor((encodedLengthWithoutPadding / 4) * 3);\r\n                const decoded = buffer_1.Buffer.from(keyString, 'base64');\r\n                if (decoded.length === decodedLength) {\r\n                    keyBytes = decoded;\r\n                    keyEncoding = 1 /* KeyEncoding.Binary */;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (keyEncoding === 2 /* KeyEncoding.Base64 */) {\r\n                throw new Error('Key is not base64-encoded.');\r\n            }\r\n        }\r\n    }\r\n    if (keyData === null &&\r\n        (keyEncoding === 0 /* KeyEncoding.Default */ ||\r\n            keyEncoding === 1 /* KeyEncoding.Binary */ ||\r\n            keyEncoding === 5 /* KeyEncoding.Json */)) {\r\n        keyData = new keyData_1.KeyData();\r\n        keyData.data = keyBytes;\r\n        if (keyType) {\r\n            keyData.keyType = keyType;\r\n        }\r\n        if (comment) {\r\n            keyData.headers.set('Comment', comment);\r\n        }\r\n    }\r\n    if (!keyData) {\r\n        throw new Error('Failed to decode key.');\r\n    }\r\n    if (keyFormat === 0 /* KeyFormat.Default */ && !keyData.keyType) {\r\n        throw new Error('Specify a key format when importing binary data.');\r\n    }\r\n    const formatter = exports.keyFormatters.get(keyFormat);\r\n    if (!formatter) {\r\n        throw new Error(`Unimplemented or invalid or key format: ${keyFormat}`);\r\n    }\r\n    keyData = await formatter.decrypt(keyData, passphrase);\r\n    if (!keyData) {\r\n        throw new Error('Failed to decrypt key.');\r\n    }\r\n    const keyPair = await formatter.import(keyData);\r\n    if (!keyPair) {\r\n        throw new Error('Failed to import key.');\r\n    }\r\n    return keyPair;\r\n}\r\nexports.importKeyBytes = importKeyBytes;\r\nasync function exportKeyBytes(keyPair, passphrase, keyFormat, keyEncoding, includePrivate) {\r\n    if (typeof keyPair !== 'object')\r\n        throw new TypeError('KeyPair object expected.');\r\n    if (includePrivate && !keyPair.hasPrivateKey) {\r\n        throw new Error('The KeyPair object does not contain a private key.');\r\n    }\r\n    if (keyFormat === 0 /* KeyFormat.Default */) {\r\n        keyFormat = includePrivate ? 5 /* KeyFormat.Pkcs8 */ : 1 /* KeyFormat.Ssh */;\r\n    }\r\n    if (keyEncoding === 0 /* KeyEncoding.Default */) {\r\n        switch (keyFormat) {\r\n            case 1 /* KeyFormat.Ssh */:\r\n                keyEncoding = 4 /* KeyEncoding.SshBase64 */;\r\n                break;\r\n            case 7 /* KeyFormat.Jwk */:\r\n                keyEncoding = 5 /* KeyEncoding.Json */;\r\n                break;\r\n            default:\r\n                keyEncoding = 3 /* KeyEncoding.Pem */;\r\n                break;\r\n        }\r\n    }\r\n    // Automatically switch between PKCS#1/SEC1 based on key algorithm.\r\n    if (keyFormat === 3 /* KeyFormat.Pkcs1 */ && keyPair instanceof dev_tunnels_ssh_1.ECDsa.KeyPair) {\r\n        keyFormat = 4 /* KeyFormat.Sec1 */;\r\n    }\r\n    else if (keyFormat === 4 /* KeyFormat.Sec1 */ && keyPair instanceof dev_tunnels_ssh_1.Rsa.KeyPair) {\r\n        keyFormat = 3 /* KeyFormat.Pkcs1 */;\r\n    }\r\n    const formatter = exports.keyFormatters.get(keyFormat);\r\n    if (!formatter) {\r\n        throw new Error(`Unimplemented or invalid or key format: ${keyFormat}`);\r\n    }\r\n    let keyData = await formatter.export(keyPair, includePrivate);\r\n    if (passphrase) {\r\n        keyData = await formatter.encrypt(keyData, passphrase);\r\n    }\r\n    switch (keyEncoding) {\r\n        case 1 /* KeyEncoding.Binary */:\r\n        case 5 /* KeyEncoding.Json */:\r\n            return keyData.data;\r\n        case 2 /* KeyEncoding.Base64 */:\r\n            return buffer_1.Buffer.from(keyData.data.toString('base64'), 'utf8');\r\n        case 4 /* KeyEncoding.SshBase64 */:\r\n            return keyData.encodeSshPublicKeyBytes();\r\n        case 3 /* KeyEncoding.Pem */:\r\n            return keyData.encodePemBytes();\r\n        default:\r\n            throw new Error('Invalid key encoding.');\r\n    }\r\n}\r\n//# sourceMappingURL=importExport.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyData = exports.JsonWebKeyFormatter = exports.Pkcs8KeyFormatter = exports.Pkcs1KeyFormatter = exports.PublicKeyFormatter = exports.exportPrivateKeyBytes = exports.exportPrivateKeyFile = exports.exportPrivateKey = exports.exportPublicKeyBytes = exports.exportPublicKeyFile = exports.exportPublicKey = exports.importKeyBytes = exports.importKeyFile = exports.importKey = exports.keyFormatters = void 0;\r\nvar importExport_1 = require(\"./importExport\");\r\nObject.defineProperty(exports, \"keyFormatters\", { enumerable: true, get: function () { return importExport_1.keyFormatters; } });\r\nObject.defineProperty(exports, \"importKey\", { enumerable: true, get: function () { return importExport_1.importKey; } });\r\nObject.defineProperty(exports, \"importKeyFile\", { enumerable: true, get: function () { return importExport_1.importKeyFile; } });\r\nObject.defineProperty(exports, \"importKeyBytes\", { enumerable: true, get: function () { return importExport_1.importKeyBytes; } });\r\nObject.defineProperty(exports, \"exportPublicKey\", { enumerable: true, get: function () { return importExport_1.exportPublicKey; } });\r\nObject.defineProperty(exports, \"exportPublicKeyFile\", { enumerable: true, get: function () { return importExport_1.exportPublicKeyFile; } });\r\nObject.defineProperty(exports, \"exportPublicKeyBytes\", { enumerable: true, get: function () { return importExport_1.exportPublicKeyBytes; } });\r\nObject.defineProperty(exports, \"exportPrivateKey\", { enumerable: true, get: function () { return importExport_1.exportPrivateKey; } });\r\nObject.defineProperty(exports, \"exportPrivateKeyFile\", { enumerable: true, get: function () { return importExport_1.exportPrivateKeyFile; } });\r\nObject.defineProperty(exports, \"exportPrivateKeyBytes\", { enumerable: true, get: function () { return importExport_1.exportPrivateKeyBytes; } });\r\nvar publicKeyFormatter_1 = require(\"./publicKeyFormatter\");\r\nObject.defineProperty(exports, \"PublicKeyFormatter\", { enumerable: true, get: function () { return publicKeyFormatter_1.PublicKeyFormatter; } });\r\nvar pkcs1KeyFormatter_1 = require(\"./pkcs1KeyFormatter\");\r\nObject.defineProperty(exports, \"Pkcs1KeyFormatter\", { enumerable: true, get: function () { return pkcs1KeyFormatter_1.Pkcs1KeyFormatter; } });\r\nvar pkcs8KeyFormatter_1 = require(\"./pkcs8KeyFormatter\");\r\nObject.defineProperty(exports, \"Pkcs8KeyFormatter\", { enumerable: true, get: function () { return pkcs8KeyFormatter_1.Pkcs8KeyFormatter; } });\r\nvar jsonWebKeyFormatter_1 = require(\"./jsonWebKeyFormatter\");\r\nObject.defineProperty(exports, \"JsonWebKeyFormatter\", { enumerable: true, get: function () { return jsonWebKeyFormatter_1.JsonWebKeyFormatter; } });\r\nvar keyData_1 = require(\"./keyData\");\r\nObject.defineProperty(exports, \"KeyData\", { enumerable: true, get: function () { return keyData_1.KeyData; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.JsonWebKeyFormatter = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst keyData_1 = require(\"./keyData\");\r\n/** Provides import/export of the JSON Web Key format. */\r\nclass JsonWebKeyFormatter {\r\n    async import(keyData) {\r\n        var _a, _b;\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        let keyJson;\r\n        try {\r\n            keyJson = JSON.parse(keyData.data.toString('utf8'));\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        const jwk = keyJson;\r\n        if (!jwk) {\r\n            return null;\r\n        }\r\n        if (jwk.kty === 'RSA') {\r\n            const parameters = JsonWebKeyFormatter.parseRsa(jwk);\r\n            const keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.rsaWithSha512.createKeyPair();\r\n            await keyPair.importParameters(parameters);\r\n            keyPair.comment = (_a = jwk.comment) !== null && _a !== void 0 ? _a : null;\r\n            return keyPair;\r\n        }\r\n        else if (jwk.kty === 'EC') {\r\n            const parameters = JsonWebKeyFormatter.parseEC(jwk);\r\n            const keyPair = new dev_tunnels_ssh_1.ECDsa.KeyPair();\r\n            await keyPair.importParameters(parameters);\r\n            keyPair.comment = (_b = jwk.comment) !== null && _b !== void 0 ? _b : null;\r\n            return keyPair;\r\n        }\r\n        else {\r\n            throw new Error(`Key type not supported: ${jwk.kty}`);\r\n        }\r\n    }\r\n    async export(keyPair, includePrivate) {\r\n        var _a;\r\n        if (!keyPair)\r\n            throw new TypeError('KeyPair object expected.');\r\n        let jwk;\r\n        if (keyPair instanceof dev_tunnels_ssh_1.Rsa.KeyPair) {\r\n            const parameters = await keyPair.exportParameters();\r\n            jwk = JsonWebKeyFormatter.formatRsa(parameters, includePrivate);\r\n        }\r\n        else if (keyPair instanceof dev_tunnels_ssh_1.ECDsa.KeyPair) {\r\n            const parameters = await keyPair.exportParameters();\r\n            jwk = JsonWebKeyFormatter.formatEC(parameters, includePrivate);\r\n        }\r\n        else {\r\n            throw new Error('KeyPair class not supported: ' + ((_a = keyPair.constructor) === null || _a === void 0 ? void 0 : _a.name));\r\n        }\r\n        if (keyPair.comment) {\r\n            jwk.comment = keyPair.comment;\r\n        }\r\n        const keyData = new keyData_1.KeyData();\r\n        keyData.data = Buffer.from(JSON.stringify(jwk, null, '\\t') + '\\n', 'utf8');\r\n        return keyData;\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        // Just check if it's valid JSON.\r\n        try {\r\n            JSON.parse(keyData.data.toString('utf8'));\r\n            return keyData;\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    encrypt(keyData, passphrase) {\r\n        throw new Error('JWK does not support encryption.');\r\n    }\r\n    static formatRsa(rsa, includePrivate) {\r\n        const formatBigInt = JsonWebKeyFormatter.formatBigInt;\r\n        let jwk;\r\n        if (includePrivate !== false && rsa.d && rsa.p && rsa.q && rsa.dp && rsa.dq && rsa.qi) {\r\n            jwk = {\r\n                kty: 'RSA',\r\n                n: formatBigInt(rsa.modulus),\r\n                e: formatBigInt(rsa.exponent),\r\n                d: formatBigInt(rsa.d),\r\n                p: formatBigInt(rsa.p),\r\n                q: formatBigInt(rsa.q),\r\n                dp: formatBigInt(rsa.dp),\r\n                dq: formatBigInt(rsa.dq),\r\n                qi: formatBigInt(rsa.qi),\r\n            };\r\n        }\r\n        else if (!includePrivate) {\r\n            jwk = {\r\n                kty: 'RSA',\r\n                n: formatBigInt(rsa.modulus),\r\n                e: formatBigInt(rsa.exponent),\r\n            };\r\n        }\r\n        else {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        return jwk;\r\n    }\r\n    static parseRsa(jwk) {\r\n        if ((jwk === null || jwk === void 0 ? void 0 : jwk.kty) !== 'RSA' || !(jwk.n && jwk.e))\r\n            throw new Error('Invalid RSA JWK.');\r\n        const parseBigInt = JsonWebKeyFormatter.parseBigInt;\r\n        let rsa;\r\n        if (jwk.d && jwk.p && jwk.q && jwk.dp && jwk.dq && jwk.qi) {\r\n            rsa = {\r\n                modulus: parseBigInt(jwk.n),\r\n                exponent: parseBigInt(jwk.e),\r\n                d: parseBigInt(jwk.d),\r\n                p: parseBigInt(jwk.p),\r\n                q: parseBigInt(jwk.q),\r\n                dp: parseBigInt(jwk.dp),\r\n                dq: parseBigInt(jwk.dq),\r\n                qi: parseBigInt(jwk.qi),\r\n            };\r\n        }\r\n        else {\r\n            rsa = {\r\n                modulus: parseBigInt(jwk.n),\r\n                exponent: parseBigInt(jwk.e),\r\n            };\r\n        }\r\n        return rsa;\r\n    }\r\n    static formatEC(ec, includePrivate) {\r\n        const curve = dev_tunnels_ssh_1.ECDsa.curves.find((c) => c.oid === ec.curve.oid);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        const formatBigInt = JsonWebKeyFormatter.formatBigInt;\r\n        const jwk = {\r\n            kty: 'EC',\r\n            crv: ec.curve.name,\r\n            x: formatBigInt(ec.x, keySizeInBytes),\r\n            y: formatBigInt(ec.y, keySizeInBytes),\r\n        };\r\n        if (includePrivate !== false && ec.d) {\r\n            jwk.d = formatBigInt(ec.d, keySizeInBytes);\r\n        }\r\n        else if (includePrivate) {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        return jwk;\r\n    }\r\n    static parseEC(jwk) {\r\n        var _a;\r\n        if ((jwk === null || jwk === void 0 ? void 0 : jwk.kty) !== 'EC' || !(jwk.crv && jwk.x && jwk.y))\r\n            throw new Error('Invalid EC JWK.');\r\n        const curveOid = (_a = dev_tunnels_ssh_1.ECDsa.curves.find((c) => c.name === jwk.crv)) === null || _a === void 0 ? void 0 : _a.oid;\r\n        if (!curveOid) {\r\n            throw new Error(`Unknown EC curve: ${jwk.crv}`);\r\n        }\r\n        const parseBigInt = JsonWebKeyFormatter.parseBigInt;\r\n        const ec = {\r\n            curve: { name: jwk.crv, oid: curveOid },\r\n            x: parseBigInt(jwk.x),\r\n            y: parseBigInt(jwk.y),\r\n        };\r\n        if (jwk.d) {\r\n            ec.d = parseBigInt(jwk.d);\r\n        }\r\n        return ec;\r\n    }\r\n    static formatBigInt(value, length) {\r\n        return JsonWebKeyFormatter.base64UrlEncode(value.toBytes({ unsigned: true, length }));\r\n    }\r\n    static parseBigInt(value) {\r\n        return dev_tunnels_ssh_1.BigInt.fromBytes(Buffer.from(value, 'base64'), { unsigned: true });\r\n    }\r\n    static base64UrlEncode(data) {\r\n        // JWK format uses base64-url-encoding, which is base64 but with 2 substituted characters.\r\n        // (Note Buffer's base64 DECODING implicitly supports this format.)\r\n        return data\r\n            .toString('base64')\r\n            .replace(/=+$/g, '')\r\n            .replace(/\\+/g, '-')\r\n            .replace(/\\//g, '_');\r\n    }\r\n}\r\nexports.JsonWebKeyFormatter = JsonWebKeyFormatter;\r\n//# sourceMappingURL=jsonWebKeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyData = void 0;\r\n/**\r\n * Encapsulates formatted (serialized) key data and metadata.\r\n */\r\nclass KeyData {\r\n    constructor(keyType, data) {\r\n        /**\r\n         * Optional headers containing key metadata. In PEM encoding, the headers appear in\r\n         * plaintext before the base64-encoded key.\r\n         */\r\n        this.headers = new Map();\r\n        this.keyType = keyType !== null && keyType !== void 0 ? keyType : '';\r\n        this.data = data !== null && data !== void 0 ? data : Buffer.alloc(0);\r\n    }\r\n    static tryDecodePem(input) {\r\n        const lines = input.split('\\n').map((line) => line.trimRight());\r\n        while (lines.length > 0 && lines[lines.length - 1].length === 0) {\r\n            lines.splice(lines.length - 1, 1);\r\n        }\r\n        const beginMatch = lines[0].match(KeyData.beginRegex);\r\n        const endMatch = lines[lines.length - 1].match(KeyData.endRegex);\r\n        if (!beginMatch || !endMatch) {\r\n            return null;\r\n        }\r\n        const keyType = beginMatch[1];\r\n        if (endMatch[1] !== keyType) {\r\n            return null;\r\n        }\r\n        const headers = new Map();\r\n        let i = 1;\r\n        if (lines[i].includes(':')) {\r\n            for (; i < lines.length - 1 && lines[i].length > 0; i++) {\r\n                const headerMatch = lines[i].match(this.headerRegex);\r\n                if (headerMatch) {\r\n                    const name = headerMatch[1];\r\n                    let value = headerMatch[2];\r\n                    while (value.endsWith('\\\\')) {\r\n                        value = value.substr(0, value.length - 1);\r\n                        value += lines[++i];\r\n                    }\r\n                    headers.set(name, value);\r\n                }\r\n            }\r\n        }\r\n        while (lines[i].length === 0) {\r\n            i++;\r\n        }\r\n        const base64Data = lines.slice(i, lines.length - 1).join('');\r\n        let data;\r\n        try {\r\n            data = Buffer.from(base64Data, 'base64');\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        const keyData = new KeyData();\r\n        keyData.keyType = keyType;\r\n        keyData.headers = headers;\r\n        keyData.data = data;\r\n        return keyData;\r\n    }\r\n    static tryDecodePemBytes(input) {\r\n        const hyphen = '-'.charCodeAt(0);\r\n        if (input.length < 3 || input[0] !== hyphen || input[1] !== hyphen || input[2] !== hyphen) {\r\n            return null;\r\n        }\r\n        let inputString;\r\n        try {\r\n            inputString = input.toString('utf8');\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        return KeyData.tryDecodePem(inputString);\r\n    }\r\n    encodePem() {\r\n        let s = `-----BEGIN ${this.keyType}-----\\n`;\r\n        for (const [name, value] of this.headers) {\r\n            // TODO: Wrap the value with \\ if it's long.\r\n            s += `${name}: ${value}\\n`;\r\n        }\r\n        if (this.headers.size > 0) {\r\n            s += '\\n';\r\n        }\r\n        const dataBase64 = this.data.toString('base64');\r\n        const lineLength = 64;\r\n        for (let offset = 0; offset < dataBase64.length; offset += lineLength) {\r\n            s += dataBase64.substr(offset, Math.min(lineLength, dataBase64.length - offset)) + '\\n';\r\n        }\r\n        s += `-----END ${this.keyType}-----\\n`;\r\n        return s;\r\n    }\r\n    encodePemBytes() {\r\n        return Buffer.from(this.encodePem(), 'utf8');\r\n    }\r\n    encodeSshPublicKey() {\r\n        const comment = this.headers.get('Comment');\r\n        return (this.keyType + ' ' + this.data.toString('base64') + (comment ? ' ' + comment : '') + '\\n');\r\n    }\r\n    encodeSshPublicKeyBytes() {\r\n        return Buffer.from(this.encodeSshPublicKey(), 'utf8');\r\n    }\r\n}\r\nexports.KeyData = KeyData;\r\nKeyData.beginRegex = /^-+ *BEGIN (\\w+( \\w+)*) *-+$/;\r\nKeyData.endRegex = /^-+ *END (\\w+( \\w+)*) *-+$/;\r\nKeyData.headerRegex = /^([\\w-]+): (.*)$/;\r\n//# sourceMappingURL=keyData.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getKeyEncryptionAlgorithm = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nfunction getKeyEncryptionAlgorithm(algorithm) {\r\n    // Different formats may use different casing and hyphens. Normalize before comparing.\r\n    algorithm = algorithm.toUpperCase().replace(/-/g, '');\r\n    // Note algorithms other than AES256 are used only for decrypting (importing) keys.\r\n    switch (algorithm) {\r\n        case 'AES128CBC':\r\n            return new dev_tunnels_ssh_1.Encryption('aes128-cbc', 'AES', 'CBC', 128);\r\n        case 'AES128CTR':\r\n            return new dev_tunnels_ssh_1.Encryption('aes128-ctr', 'AES', 'CTR', 128);\r\n        case 'AES192CBC':\r\n            return new dev_tunnels_ssh_1.Encryption('aes192-cbc', 'AES', 'CBC', 192);\r\n        case 'AES192CTR':\r\n            return new dev_tunnels_ssh_1.Encryption('aes192-ctr', 'AES', 'CTR', 192);\r\n        case 'AES256CBC':\r\n            return new dev_tunnels_ssh_1.Encryption('aes256-cbc', 'AES', 'CBC', 256);\r\n        case 'AES256CTR':\r\n            return new dev_tunnels_ssh_1.Encryption('aes256-ctr', 'AES', 'CTR', 256);\r\n        default:\r\n            throw new Error(`Key cipher not supported: ${algorithm}`);\r\n    }\r\n}\r\nexports.getKeyEncryptionAlgorithm = getKeyEncryptionAlgorithm;\r\n//# sourceMappingURL=keyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pkcs1KeyFormatter = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst keyFormatter_1 = require(\"./keyFormatter\");\r\nconst keyData_1 = require(\"./keyData\");\r\n/** Provides import/export of the PKCS#1 key format. */\r\nclass Pkcs1KeyFormatter {\r\n    async import(keyData) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (!keyData.keyType) {\r\n            // Automatically determine public or private by reading the first few bytes.\r\n            try {\r\n                const reader = new dev_tunnels_ssh_1.DerReader(keyData.data);\r\n                reader.readInteger();\r\n                reader.readInteger();\r\n                keyData.keyType =\r\n                    reader.available > 0\r\n                        ? Pkcs1KeyFormatter.privateKeyType\r\n                        : Pkcs1KeyFormatter.publicKeyType;\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        let parameters = null;\r\n        if (keyData.keyType === Pkcs1KeyFormatter.publicKeyType) {\r\n            parameters = Pkcs1KeyFormatter.parseRsaPublic(keyData.data);\r\n        }\r\n        else if (keyData.keyType === Pkcs1KeyFormatter.privateKeyType) {\r\n            parameters = Pkcs1KeyFormatter.parseRsaPrivate(keyData.data);\r\n        }\r\n        if (parameters) {\r\n            const keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.rsaWithSha512.createKeyPair();\r\n            await keyPair.importParameters(parameters);\r\n            return keyPair;\r\n        }\r\n        return null;\r\n    }\r\n    async export(keyPair, includePrivate) {\r\n        if (!keyPair)\r\n            throw new TypeError('KeyPair object expected.');\r\n        if (keyPair instanceof dev_tunnels_ssh_1.Rsa.KeyPair) {\r\n            if (!keyPair.hasPublicKey) {\r\n                throw new Error('KeyPair object does not have a public key.');\r\n            }\r\n            else if (includePrivate && !keyPair.hasPrivateKey) {\r\n                throw new Error('KeyPair object does not have a private key.');\r\n            }\r\n            const keyData = new keyData_1.KeyData();\r\n            const parameters = await keyPair.exportParameters();\r\n            if (includePrivate) {\r\n                keyData.keyType = Pkcs1KeyFormatter.privateKeyType;\r\n                keyData.data = Pkcs1KeyFormatter.formatRsaPrivate(parameters);\r\n            }\r\n            else {\r\n                keyData.keyType = Pkcs1KeyFormatter.publicKeyType;\r\n                keyData.data = Pkcs1KeyFormatter.formatRsaPublic(parameters);\r\n            }\r\n            return keyData;\r\n        }\r\n        else {\r\n            throw new Error('KeyPair class not supported.');\r\n        }\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Pkcs1KeyFormatter.publicKeyType ||\r\n            (!keyData.keyType && !passphrase)) {\r\n            return keyData;\r\n        }\r\n        else if (keyData.keyType === Pkcs1KeyFormatter.privateKeyType || !keyData.keyType) {\r\n            const procTypeHeader = keyData.headers.get('Proc-Type');\r\n            if (procTypeHeader === '4,ENCRYPTED') {\r\n                if (!passphrase) {\r\n                    throw new Error('A passphrase is required to decrypt the key.');\r\n                }\r\n                return Pkcs1KeyFormatter.decryptPrivate(keyData, passphrase);\r\n            }\r\n            else {\r\n                return keyData;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async encrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Pkcs1KeyFormatter.publicKeyType) {\r\n            throw new Error('Public key cannot be encrypted.');\r\n        }\r\n        else if (keyData.keyType === Pkcs1KeyFormatter.privateKeyType) {\r\n            throw new Error('PKCS#1 export with passphrase is not supported because the format uses ' +\r\n                'a weak key derivation algorithm. Use PKCS#8 to export a ' +\r\n                'passphrase-protected private key.');\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported key type: ${keyData.keyType}`);\r\n        }\r\n    }\r\n    static formatRsaPublic(rsa) {\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(1024));\r\n        writer.writeInteger(rsa.modulus);\r\n        writer.writeInteger(rsa.exponent);\r\n        return writer.toBuffer();\r\n    }\r\n    static formatRsaPrivate(rsa) {\r\n        if (!(rsa.d && rsa.p && rsa.q && rsa.dp && rsa.dq && rsa.qi)) {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(2048));\r\n        writer.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(0));\r\n        writer.writeInteger(rsa.modulus);\r\n        writer.writeInteger(rsa.exponent);\r\n        writer.writeInteger(rsa.d);\r\n        writer.writeInteger(rsa.p);\r\n        writer.writeInteger(rsa.q);\r\n        writer.writeInteger(rsa.dp);\r\n        writer.writeInteger(rsa.dq);\r\n        writer.writeInteger(rsa.qi);\r\n        return writer.toBuffer();\r\n    }\r\n    static parseRsaPublic(keyBytes) {\r\n        const reader = new dev_tunnels_ssh_1.DerReader(keyBytes);\r\n        const modulus = reader.readInteger();\r\n        const exponent = reader.readInteger();\r\n        return { modulus, exponent };\r\n    }\r\n    static parseRsaPrivate(keyBytes) {\r\n        const reader = new dev_tunnels_ssh_1.DerReader(keyBytes);\r\n        const version = reader.readInteger();\r\n        const modulus = reader.readInteger();\r\n        const exponent = reader.readInteger();\r\n        const d = reader.readInteger();\r\n        const p = reader.readInteger();\r\n        const q = reader.readInteger();\r\n        const dp = reader.readInteger();\r\n        const dq = reader.readInteger();\r\n        const qi = reader.readInteger();\r\n        return { modulus, exponent, d, p, q, dp, dq, qi };\r\n    }\r\n    /* @internal */\r\n    static async decryptPrivate(keyData, passphrase) {\r\n        const decryptionInfo = keyData.headers.get('DEK-Info');\r\n        if (!decryptionInfo) {\r\n            throw new Error('PKCS#1 decryption parameters not found.');\r\n        }\r\n        const decryptionInfoParts = decryptionInfo.split(',');\r\n        const cipherName = decryptionInfoParts[0];\r\n        const ivHex = decryptionInfoParts[1];\r\n        const iv = Buffer.from(ivHex, 'hex');\r\n        const encryption = (0, keyFormatter_1.getKeyEncryptionAlgorithm)(cipherName);\r\n        const key = Pkcs1KeyFormatter.deriveDecryptionKey(Buffer.from(passphrase, 'utf8'), iv, encryption.keyLength);\r\n        const decryptedKeyData = new keyData_1.KeyData(keyData.keyType);\r\n        decryptedKeyData.headers = new Map(keyData.headers);\r\n        decryptedKeyData.headers.delete('Proc-Type');\r\n        decryptedKeyData.headers.delete('DEK-Info');\r\n        const decipher = await encryption.createCipher(false, key, iv);\r\n        decryptedKeyData.data = await decipher.transform(keyData.data);\r\n        // The first part of the key should be a DER sequence header.\r\n        if (decryptedKeyData.data[0] !== (32 /* DerType.Constructed */ | 16 /* DerType.Sequence */)) {\r\n            throw new Error('Key decryption failed - incorrect passphrase.');\r\n        }\r\n        return decryptedKeyData;\r\n    }\r\n    static deriveDecryptionKey(passphraseBytes, iv, keyLength) {\r\n        const useWebCrypto = !!(typeof crypto === 'object' && crypto.subtle);\r\n        if (useWebCrypto) {\r\n            // Web crypto does not provide an MD5 implementation. An external lib could be used here,\r\n            // but it's not worth it to support an insecure encryption format. Use PKCS#8 instead.\r\n            throw new Error('PKCS#1 decryption not implemented.');\r\n        }\r\n        const nodeCrypto = require('crypto');\r\n        const PKCS5_SALT_LEN = 8;\r\n        const salt = iv.slice(0, PKCS5_SALT_LEN);\r\n        let key = Buffer.alloc(0);\r\n        while (key.length < keyLength) {\r\n            // MD5 is an unsafe hash algorithm, but it is used only for decrypting (importing) keys,\r\n            // not encrypting.\r\n            const md5 = nodeCrypto.createHash('md5');\r\n            md5.update(key);\r\n            md5.update(passphraseBytes);\r\n            md5.update(salt);\r\n            key = Buffer.concat([key, md5.digest()]);\r\n        }\r\n        key = key.slice(0, keyLength);\r\n        return key;\r\n    }\r\n}\r\nexports.Pkcs1KeyFormatter = Pkcs1KeyFormatter;\r\nPkcs1KeyFormatter.publicKeyType = 'RSA PUBLIC KEY';\r\nPkcs1KeyFormatter.privateKeyType = 'RSA PRIVATE KEY';\r\n//# sourceMappingURL=pkcs1KeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pkcs8KeyFormatter = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst keyData_1 = require(\"./keyData\");\r\n/** Provides import/export of the PKCS#8 key format. */\r\n// eslint-disable-next-line no-redeclare\r\nclass Pkcs8KeyFormatter {\r\n    constructor() {\r\n        /** Mapping from public key algorithm OID to import handler for that algorithm. */\r\n        this.importers = new Map();\r\n        /** Mapping from public key algorithm name to export handler for that algorithm. */\r\n        this.exporters = new Map();\r\n        /** Enables overriding randomness for predictable testing. */\r\n        this.random = dev_tunnels_ssh_1.SshAlgorithms.random;\r\n        this.importers.set(\"1.2.840.113549.1.1.1\" /* Oids.rsa */, Pkcs8KeyFormatter.importRsaKey);\r\n        this.importers.set(\"1.2.840.10045.2.1\" /* Oids.ec */, Pkcs8KeyFormatter.importECKey);\r\n        this.exporters.set(dev_tunnels_ssh_1.Rsa.keyAlgorithmName, Pkcs8KeyFormatter.exportRsaKey);\r\n        this.exporters.set(dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp256, Pkcs8KeyFormatter.exportECKey);\r\n        this.exporters.set(dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp384, Pkcs8KeyFormatter.exportECKey);\r\n        this.exporters.set(dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp521, Pkcs8KeyFormatter.exportECKey);\r\n    }\r\n    async import(keyData) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (!keyData.keyType) {\r\n            // Automatically determine public or private by reading the first few bytes.\r\n            try {\r\n                const reader = new dev_tunnels_ssh_1.DerReader(keyData.data);\r\n                if (reader.peek() === (32 /* DerType.Constructed */ | 16 /* DerType.Sequence */)) {\r\n                    keyData.keyType = Pkcs8KeyFormatter.publicKeyType;\r\n                }\r\n                else if (reader.peek() === 2 /* DerType.Integer */) {\r\n                    keyData.keyType = Pkcs8KeyFormatter.privateKeyType;\r\n                }\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        if (keyData.keyType === Pkcs8KeyFormatter.publicKeyType) {\r\n            return await this.importPublic(keyData);\r\n        }\r\n        else if (keyData.keyType === Pkcs8KeyFormatter.privateKeyType) {\r\n            return await this.importPrivate(keyData);\r\n        }\r\n        else if (keyData.keyType === Pkcs8KeyFormatter.encryptedPrivateKeyType) {\r\n            throw new Error('Decrypt before importing.');\r\n        }\r\n        return null;\r\n    }\r\n    async export(keyPair, includePrivate) {\r\n        if (!keyPair)\r\n            throw new TypeError('KeyPair object expected.');\r\n        if (includePrivate) {\r\n            if (!keyPair.hasPrivateKey) {\r\n                throw new Error('KeyPair object does not contain the private key.');\r\n            }\r\n            return await this.exportPrivate(keyPair);\r\n        }\r\n        else {\r\n            return await this.exportPublic(keyPair);\r\n        }\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Pkcs8KeyFormatter.publicKeyType ||\r\n            keyData.keyType === Pkcs8KeyFormatter.privateKeyType ||\r\n            (!keyData.keyType && !passphrase)) {\r\n            return keyData;\r\n        }\r\n        else if (keyData.keyType === Pkcs8KeyFormatter.encryptedPrivateKeyType ||\r\n            (!keyData.keyType && passphrase)) {\r\n            if (!passphrase) {\r\n                throw new Error('A passphrase is required to decrypt the key.');\r\n            }\r\n            return Pkcs8KeyFormatter.decryptPrivate(keyData, passphrase);\r\n        }\r\n        return null;\r\n    }\r\n    async encrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Pkcs8KeyFormatter.publicKeyType) {\r\n            throw new Error('Public key cannot be encrypted.');\r\n        }\r\n        else if (keyData.keyType === Pkcs8KeyFormatter.privateKeyType) {\r\n            return Pkcs8KeyFormatter.encryptPrivate(keyData, passphrase, this.random);\r\n        }\r\n        else if (keyData.keyType === Pkcs8KeyFormatter.encryptedPrivateKeyType) {\r\n            throw new Error('Already encrypted.');\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported key type: ${keyData.keyType}`);\r\n        }\r\n    }\r\n    async importPublic(keyData) {\r\n        const reader = new dev_tunnels_ssh_1.DerReader(keyData.data);\r\n        const oidReader = reader.readSequence();\r\n        const keyAlgorithm = oidReader.readObjectIdentifier();\r\n        const keyBytes = reader.readBitString();\r\n        const importer = this.importers.get(keyAlgorithm);\r\n        if (!importer) {\r\n            throw new Error(`No PKCS#8 importer available for key algorithm: ${keyAlgorithm}`);\r\n        }\r\n        return await importer(keyBytes, oidReader, false);\r\n    }\r\n    async importPrivate(keyData) {\r\n        const reader = new dev_tunnels_ssh_1.DerReader(keyData.data);\r\n        const version = reader.readInteger().toInt32();\r\n        if (version !== 0) {\r\n            throw new Error(`PKCS#8 format version not supported: ${version}`);\r\n        }\r\n        const oidReader = reader.readSequence();\r\n        const keyAlgorithm = oidReader.readObjectIdentifier();\r\n        const keyBytes = reader.readOctetString();\r\n        const importer = this.importers.get(keyAlgorithm);\r\n        if (!importer) {\r\n            throw new Error(`No PKCS#8 importer available for key algorithm: ${keyAlgorithm}`);\r\n        }\r\n        return await importer(keyBytes, oidReader, true);\r\n    }\r\n    static async importRsaKey(keyBytes, oidReader, includePrivate) {\r\n        const keyReader = new dev_tunnels_ssh_1.DerReader(keyBytes);\r\n        if (includePrivate) {\r\n            const version = keyReader.readInteger().toInt32();\r\n            if (version !== 0) {\r\n                throw new Error(`PKCS#8 key format version not supported: ${version}`);\r\n            }\r\n        }\r\n        const parameters = {\r\n            modulus: keyReader.readInteger(),\r\n            exponent: keyReader.readInteger(),\r\n        };\r\n        if (includePrivate) {\r\n            parameters.d = keyReader.readInteger();\r\n            parameters.p = keyReader.readInteger();\r\n            parameters.q = keyReader.readInteger();\r\n            parameters.dp = keyReader.readInteger();\r\n            parameters.dq = keyReader.readInteger();\r\n            parameters.qi = keyReader.readInteger();\r\n        }\r\n        const keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.rsaWithSha512.createKeyPair();\r\n        await keyPair.importParameters(parameters);\r\n        return keyPair;\r\n    }\r\n    static async importECKey(keyBytes, oidReader, includePrivate) {\r\n        const curveOid = oidReader.readObjectIdentifier();\r\n        let publicKeyBytes;\r\n        let privateKeyBytes = null;\r\n        if (includePrivate) {\r\n            const keyReader = new dev_tunnels_ssh_1.DerReader(keyBytes);\r\n            const version = keyReader.readInteger().toInt32();\r\n            if (version !== 1) {\r\n                throw new Error(`PKCS#8 EC key format version not supported: ${version}`);\r\n            }\r\n            privateKeyBytes = keyReader.readOctetString();\r\n            const publicKeyReader = keyReader.tryReadTagged(1);\r\n            if (!publicKeyReader) {\r\n                throw new Error('Failed to read EC public key data.');\r\n            }\r\n            publicKeyBytes = publicKeyReader.readBitString();\r\n        }\r\n        else {\r\n            publicKeyBytes = keyBytes;\r\n        }\r\n        if (publicKeyBytes.length % 2 !== 1) {\r\n            throw new Error(`Unexpected key data length: ${publicKeyBytes.length}`);\r\n        }\r\n        // 4 = uncompressed curve format\r\n        const dataFormat = publicKeyBytes[0];\r\n        if (dataFormat !== 4) {\r\n            throw new Error(`Unexpected curve format: ${dataFormat}`);\r\n        }\r\n        // X and Y parameters are equal length, after a one-byte header.\r\n        const x = dev_tunnels_ssh_1.BigInt.fromBytes(publicKeyBytes.slice(1, 1 + (publicKeyBytes.length - 1) / 2), {\r\n            unsigned: true,\r\n        });\r\n        const y = dev_tunnels_ssh_1.BigInt.fromBytes(publicKeyBytes.slice(1 + (publicKeyBytes.length - 1) / 2), {\r\n            unsigned: true,\r\n        });\r\n        const d = privateKeyBytes ? dev_tunnels_ssh_1.BigInt.fromBytes(privateKeyBytes, { unsigned: true }) : undefined;\r\n        const parameters = {\r\n            curve: { oid: curveOid },\r\n            x,\r\n            y,\r\n            d,\r\n        };\r\n        const keyPair = new dev_tunnels_ssh_1.ECDsa.KeyPair();\r\n        await keyPair.importParameters(parameters);\r\n        return keyPair;\r\n    }\r\n    async exportPublic(keyPair) {\r\n        const exporter = this.exporters.get(keyPair.keyAlgorithmName);\r\n        if (!exporter) {\r\n            throw new Error(`No PKCS#8 exporter available for key algorithm: ${keyPair.keyAlgorithmName}`);\r\n        }\r\n        const oidWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(256));\r\n        const keyBytes = await exporter(keyPair, oidWriter, false);\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(1024));\r\n        writer.writeSequence(oidWriter);\r\n        writer.writeBitString(keyBytes);\r\n        const keyData = new keyData_1.KeyData();\r\n        keyData.keyType = Pkcs8KeyFormatter.publicKeyType;\r\n        keyData.data = writer.toBuffer();\r\n        return keyData;\r\n    }\r\n    async exportPrivate(keyPair) {\r\n        const exporter = this.exporters.get(keyPair.keyAlgorithmName);\r\n        if (!exporter) {\r\n            throw new Error(`No PKCS#8 exporter available for key algorithm: ${keyPair.keyAlgorithmName}`);\r\n        }\r\n        const oidWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(256));\r\n        const keyBytes = await exporter(keyPair, oidWriter, true);\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(2048));\r\n        writer.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(0)); // version\r\n        writer.writeSequence(oidWriter);\r\n        writer.writeOctetString(keyBytes);\r\n        return new keyData_1.KeyData(Pkcs8KeyFormatter.privateKeyType, writer.toBuffer());\r\n    }\r\n    static async exportRsaKey(keyPair, oidWriter, includePrivate) {\r\n        const parameters = await keyPair.exportParameters();\r\n        oidWriter.writeObjectIdentifier(\"1.2.840.113549.1.1.1\" /* Oids.rsa */);\r\n        oidWriter.writeNull();\r\n        const keyWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(1024));\r\n        if (includePrivate) {\r\n            keyWriter.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(0)); // version\r\n        }\r\n        keyWriter.writeInteger(parameters.modulus);\r\n        keyWriter.writeInteger(parameters.exponent);\r\n        if (includePrivate) {\r\n            keyWriter.writeInteger(parameters.d);\r\n            keyWriter.writeInteger(parameters.p);\r\n            keyWriter.writeInteger(parameters.q);\r\n            keyWriter.writeInteger(parameters.dp);\r\n            keyWriter.writeInteger(parameters.dq);\r\n            keyWriter.writeInteger(parameters.qi);\r\n        }\r\n        return keyWriter.toBuffer();\r\n    }\r\n    static async exportECKey(keyPair, oidWriter, includePrivate) {\r\n        const parameters = await keyPair.exportParameters();\r\n        const curve = dev_tunnels_ssh_1.ECDsa.curves.find((c) => c.oid === parameters.curve.oid);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        oidWriter.writeObjectIdentifier(\"1.2.840.10045.2.1\" /* Oids.ec */);\r\n        oidWriter.writeObjectIdentifier(parameters.curve.oid);\r\n        const x = parameters.x.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const y = parameters.y.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const publicKeyData = Buffer.alloc(1 + x.length + y.length);\r\n        publicKeyData[0] = 4; // Indicates uncompressed curve format\r\n        x.copy(publicKeyData, 1);\r\n        y.copy(publicKeyData, 1 + x.length);\r\n        if (includePrivate) {\r\n            const keyWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(512));\r\n            keyWriter.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(1)); // version\r\n            keyWriter.writeOctetString(parameters.d.toBytes({ unsigned: true }));\r\n            const publicKeyWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(1024));\r\n            publicKeyWriter.writeBitString(publicKeyData);\r\n            keyWriter.writeTagged(1, publicKeyWriter);\r\n            return keyWriter.toBuffer();\r\n        }\r\n        else {\r\n            return publicKeyData;\r\n        }\r\n    }\r\n    static async decryptPrivate(keyData, passphrase) {\r\n        let reader = new dev_tunnels_ssh_1.DerReader(keyData.data);\r\n        const innerReader = reader.readSequence();\r\n        let privateKeyData = reader.readOctetString();\r\n        reader = innerReader;\r\n        reader.readObjectIdentifier(\"1.2.840.113549.1.5.13\" /* Oids.pkcs5PBES2 */);\r\n        reader = reader.readSequence();\r\n        let kdfReader = reader.readSequence();\r\n        const algReader = reader.readSequence();\r\n        kdfReader.readObjectIdentifier(\"1.2.840.113549.1.5.12\" /* Oids.pkcs5PBKDF2 */);\r\n        kdfReader = kdfReader.readSequence();\r\n        const salt = kdfReader.readOctetString();\r\n        const iterations = kdfReader.readInteger().toInt32();\r\n        kdfReader = kdfReader.readSequence();\r\n        kdfReader.readObjectIdentifier(\"1.2.840.113549.2.9\" /* Oids.hmacWithSHA256 */);\r\n        kdfReader.readNull();\r\n        const algorithmOid = algReader.readObjectIdentifier();\r\n        const iv = algReader.readOctetString();\r\n        const encryption = Pkcs8KeyFormatter.getKeyEncryptionAlgorithm(algorithmOid);\r\n        const key = await Pkcs8KeyFormatter.pbkdf2(Buffer.from(passphrase, 'utf8'), salt, iterations, encryption.keyLength);\r\n        const decipher = await encryption.createCipher(false, key, iv);\r\n        try {\r\n            privateKeyData = await decipher.transform(privateKeyData);\r\n        }\r\n        catch (e) {\r\n            // Web crypto AES-CBC may throw an error due to invalid padding, if the key is incorrect.\r\n            privateKeyData = Buffer.alloc(0);\r\n        }\r\n        finally {\r\n            decipher.dispose();\r\n        }\r\n        // The first part of the key should be a DER sequence header.\r\n        if (privateKeyData[0] !== (32 /* DerType.Constructed */ | 16 /* DerType.Sequence */)) {\r\n            throw new Error('Key decryption failed - incorrect passphrase.');\r\n        }\r\n        return new keyData_1.KeyData(Pkcs8KeyFormatter.privateKeyType, privateKeyData);\r\n    }\r\n    static async encryptPrivate(keyData, passphrase, random) {\r\n        let privateKeyData = Buffer.from(keyData.data);\r\n        const encryption = Pkcs8KeyFormatter.getKeyEncryptionAlgorithm(\"2.16.840.1.101.3.4.1.42\" /* Oids.aes256Cbc */);\r\n        const salt = Buffer.alloc(8);\r\n        random.getBytes(salt);\r\n        const iterations = 2048;\r\n        const key = await Pkcs8KeyFormatter.pbkdf2(Buffer.from(passphrase, 'utf8'), salt, iterations, encryption.keyLength);\r\n        const iv = Buffer.alloc(encryption.blockLength);\r\n        random.getBytes(iv);\r\n        // Append PKCS#7 padding up to next block boundary.\r\n        const paddingLength = encryption.blockLength - (privateKeyData.length % encryption.blockLength);\r\n        const paddedData = Buffer.alloc(privateKeyData.length + paddingLength);\r\n        privateKeyData.copy(paddedData, 0);\r\n        for (let i = privateKeyData.length; i < paddedData.length; i++) {\r\n            paddedData[i] = paddingLength;\r\n        }\r\n        privateKeyData = paddedData;\r\n        const cipher = await encryption.createCipher(true, key, iv);\r\n        try {\r\n            privateKeyData = await cipher.transform(privateKeyData);\r\n        }\r\n        finally {\r\n            cipher.dispose();\r\n        }\r\n        const pbeWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(256));\r\n        pbeWriter.writeObjectIdentifier(\"1.2.840.113549.1.5.13\" /* Oids.pkcs5PBES2 */);\r\n        const kdfAndAlgWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(256));\r\n        const kdfWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(256));\r\n        kdfWriter.writeObjectIdentifier(\"1.2.840.113549.1.5.12\" /* Oids.pkcs5PBKDF2 */);\r\n        const kdfParamsWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(32));\r\n        kdfParamsWriter.writeOctetString(salt);\r\n        kdfParamsWriter.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(iterations));\r\n        const hmacWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(16));\r\n        hmacWriter.writeObjectIdentifier(\"1.2.840.113549.2.9\" /* Oids.hmacWithSHA256 */);\r\n        hmacWriter.writeNull();\r\n        kdfParamsWriter.writeSequence(hmacWriter);\r\n        kdfWriter.writeSequence(kdfParamsWriter);\r\n        kdfAndAlgWriter.writeSequence(kdfWriter);\r\n        const algWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(64));\r\n        algWriter.writeObjectIdentifier(\"2.16.840.1.101.3.4.1.42\" /* Oids.aes256Cbc */);\r\n        algWriter.writeOctetString(iv);\r\n        kdfAndAlgWriter.writeSequence(algWriter);\r\n        pbeWriter.writeSequence(kdfAndAlgWriter);\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(2048));\r\n        writer.writeSequence(pbeWriter);\r\n        writer.writeOctetString(privateKeyData);\r\n        return new keyData_1.KeyData(Pkcs8KeyFormatter.encryptedPrivateKeyType, writer.toBuffer());\r\n    }\r\n    static getKeyEncryptionAlgorithm(algorithmOid) {\r\n        // Note algorithms other than AES256 are used only for decrypting (importing) keys.\r\n        if (algorithmOid === \"2.16.840.1.101.3.4.1.42\" /* Oids.aes256Cbc */) {\r\n            return new dev_tunnels_ssh_1.Encryption('aes256-cbc', 'AES', 'CBC', 256);\r\n        }\r\n        else if (algorithmOid === \"2.16.840.1.101.3.4.1.22\" /* Oids.aes192Cbc */) {\r\n            return new dev_tunnels_ssh_1.Encryption('aes192-cbc', 'AES', 'CBC', 192);\r\n        }\r\n        else if (algorithmOid === \"2.16.840.1.101.3.4.1.2\" /* Oids.aes128Cbc */) {\r\n            return new dev_tunnels_ssh_1.Encryption('aes128-cbc', 'AES', 'CBC', 128);\r\n        }\r\n        else if (algorithmOid === \"1.2.840.113549.3.7\" /* Oids.desEde3Cbc */) {\r\n            return new dev_tunnels_ssh_1.Encryption('3des-cbc', '3DES', 'CBC', 192);\r\n        }\r\n        else {\r\n            throw new Error(`Key cipher not supported: ${algorithmOid}`);\r\n        }\r\n    }\r\n    static async pbkdf2(passphrase, salt, iterations, keyLength) {\r\n        const useWebCrypto = !!(typeof crypto === 'object' && crypto.subtle);\r\n        if (useWebCrypto) {\r\n            const passphraseKey = await crypto.subtle.importKey('raw', passphrase, 'PBKDF2', false, // extractable\r\n            ['deriveBits']);\r\n            const key = await crypto.subtle.deriveBits({\r\n                name: 'PBKDF2',\r\n                salt,\r\n                iterations,\r\n                hash: 'SHA-256',\r\n            }, passphraseKey, keyLength * 8);\r\n            return Buffer.from(key);\r\n        }\r\n        else {\r\n            const crypto = await Promise.resolve().then(() => require('crypto'));\r\n            return await new Promise((resolve, reject) => {\r\n                crypto.pbkdf2(passphrase, salt, iterations, keyLength, 'sha256', (err, derivedKey) => {\r\n                    if (err)\r\n                        reject(err);\r\n                    else\r\n                        resolve(derivedKey);\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.Pkcs8KeyFormatter = Pkcs8KeyFormatter;\r\nPkcs8KeyFormatter.publicKeyType = 'PUBLIC KEY';\r\nPkcs8KeyFormatter.privateKeyType = 'PRIVATE KEY';\r\nPkcs8KeyFormatter.encryptedPrivateKeyType = 'ENCRYPTED PRIVATE KEY';\r\n//# sourceMappingURL=pkcs8KeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PublicKeyFormatter = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst keyData_1 = require(\"./keyData\");\r\n/** Provides import/export of the SSH public key format. */\r\nclass PublicKeyFormatter {\r\n    async import(keyData) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (!keyData.keyType) {\r\n            // Try to parse binary data without any key type prefix.\r\n            try {\r\n                const reader = new dev_tunnels_ssh_1.SshDataReader(keyData.data);\r\n                keyData.keyType = reader.readString('ascii');\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        let keyPair = null;\r\n        if (keyData.keyType === dev_tunnels_ssh_1.Rsa.keyAlgorithmName) {\r\n            keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.rsaWithSha512.createKeyPair();\r\n        }\r\n        else if (keyData.keyType === dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp256) {\r\n            keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.ecdsaSha2Nistp256.createKeyPair();\r\n        }\r\n        else if (keyData.keyType === dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp384) {\r\n            keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.ecdsaSha2Nistp384.createKeyPair();\r\n        }\r\n        else if (keyData.keyType === dev_tunnels_ssh_1.ECDsa.ecdsaSha2Nistp521) {\r\n            keyPair = dev_tunnels_ssh_1.SshAlgorithms.publicKey.ecdsaSha2Nistp521.createKeyPair();\r\n        }\r\n        if (keyPair) {\r\n            await keyPair.setPublicKeyBytes(keyData.data);\r\n            const comment = keyData.headers.get('Comment');\r\n            keyPair.comment = comment !== null && comment !== void 0 ? comment : null;\r\n        }\r\n        return keyPair;\r\n    }\r\n    async export(keyPair, includePrivate) {\r\n        if (!keyPair)\r\n            throw new TypeError('KeyPair object expected.');\r\n        if (includePrivate) {\r\n            throw new Error('SSH public key formatter does not support private keys.');\r\n        }\r\n        if (!keyPair.hasPublicKey) {\r\n            throw new Error('KeyPair object does not include a public key.');\r\n        }\r\n        const keyData = new keyData_1.KeyData();\r\n        keyData.keyType = keyPair.keyAlgorithmName;\r\n        keyData.data = (await keyPair.getPublicKeyBytes());\r\n        if (keyPair.comment) {\r\n            keyData.headers.set('Comment', keyPair.comment);\r\n        }\r\n        return keyData;\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        return keyData;\r\n    }\r\n    encrypt(keyData, passphrase) {\r\n        throw new Error('SSH public key format does not support encryption.');\r\n    }\r\n}\r\nexports.PublicKeyFormatter = PublicKeyFormatter;\r\n//# sourceMappingURL=publicKeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sec1KeyFormatter = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst keyData_1 = require(\"./keyData\");\r\nconst pkcs1KeyFormatter_1 = require(\"./pkcs1KeyFormatter\");\r\n/** Provides import/export of the SEC1 key format. */\r\nclass Sec1KeyFormatter {\r\n    async import(keyData) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Sec1KeyFormatter.privateKeyType || !keyData.keyType) {\r\n            const parameters = Sec1KeyFormatter.importECPrivate(keyData.data);\r\n            const keyPair = new dev_tunnels_ssh_1.ECDsa.KeyPair();\r\n            await keyPair.importParameters(parameters);\r\n            return keyPair;\r\n        }\r\n        return null;\r\n    }\r\n    async export(keyPair, includePrivate) {\r\n        if (!keyPair)\r\n            throw new TypeError('KeyPair object expected.');\r\n        if (!includePrivate) {\r\n            throw new Error('Public-only export is not supported by this format.');\r\n        }\r\n        if (keyPair instanceof dev_tunnels_ssh_1.ECDsa.KeyPair) {\r\n            if (!keyPair.hasPublicKey) {\r\n                throw new Error('KeyPair object does not have a public key.');\r\n            }\r\n            else if (!keyPair.hasPrivateKey) {\r\n                throw new Error('KeyPair object does not have a private key.');\r\n            }\r\n            const keyData = new keyData_1.KeyData();\r\n            const parameters = await keyPair.exportParameters();\r\n            keyData.keyType = Sec1KeyFormatter.privateKeyType;\r\n            keyData.data = Sec1KeyFormatter.exportECPrivate(parameters);\r\n            return keyData;\r\n        }\r\n        else {\r\n            throw new Error('KeyPair class not supported.');\r\n        }\r\n    }\r\n    async decrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Sec1KeyFormatter.privateKeyType || !keyData.keyType) {\r\n            const procTypeHeader = keyData.headers.get('Proc-Type');\r\n            if (procTypeHeader === '4,ENCRYPTED') {\r\n                if (!passphrase) {\r\n                    throw new Error('A passphrase is required to decrypt the key.');\r\n                }\r\n                return pkcs1KeyFormatter_1.Pkcs1KeyFormatter.decryptPrivate(keyData, passphrase);\r\n            }\r\n            else {\r\n                return keyData;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async encrypt(keyData, passphrase) {\r\n        if (!keyData)\r\n            throw new TypeError('KeyData object expected.');\r\n        if (keyData.keyType === Sec1KeyFormatter.privateKeyType) {\r\n            throw new Error('SEC1 export with passphrase is not supported because the format uses ' +\r\n                'a weak key derivation algorithm. Use PKCS#8 to export a ' +\r\n                'passphrase-protected private key.');\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported key type: ${keyData.keyType}`);\r\n        }\r\n    }\r\n    static exportECPrivate(ec) {\r\n        const curve = dev_tunnels_ssh_1.ECDsa.curves.find((c) => c.oid === ec.curve.oid);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        const writer = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(1024));\r\n        writer.writeInteger(dev_tunnels_ssh_1.BigInt.fromInt32(1)); // version\r\n        writer.writeOctetString(ec.d.toBytes({ unsigned: true, length: keySizeInBytes }));\r\n        const curveWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(100));\r\n        curveWriter.writeObjectIdentifier(ec.curve.oid);\r\n        writer.writeTagged(0, curveWriter);\r\n        const publicKeyWriter = new dev_tunnels_ssh_1.DerWriter(Buffer.alloc(512));\r\n        const x = ec.x.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const y = ec.y.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const publicKeyData = Buffer.alloc(1 + x.length + y.length);\r\n        publicKeyData[0] = 4; // Indicates uncompressed curve format\r\n        x.copy(publicKeyData, 1);\r\n        y.copy(publicKeyData, 1 + x.length);\r\n        publicKeyWriter.writeBitString(publicKeyData);\r\n        writer.writeTagged(1, publicKeyWriter);\r\n        return writer.toBuffer();\r\n    }\r\n    static importECPrivate(keyBytes) {\r\n        var _a;\r\n        const reader = new dev_tunnels_ssh_1.DerReader(keyBytes);\r\n        const version = reader.readInteger().toInt32();\r\n        if (version !== 1) {\r\n            throw new Error(`Unsupported SEC1 format version: ${version}`);\r\n        }\r\n        const d = dev_tunnels_ssh_1.BigInt.fromBytes(reader.readOctetString(), { unsigned: true });\r\n        const curveReader = reader.tryReadTagged(0);\r\n        if (!curveReader) {\r\n            throw new Error('SEC1 curve info not found.');\r\n        }\r\n        const curveOid = curveReader.readObjectIdentifier();\r\n        const curveName = (_a = dev_tunnels_ssh_1.ECDsa.curves.find((c) => c.oid === curveOid)) === null || _a === void 0 ? void 0 : _a.name;\r\n        const publicKeyReader = reader.tryReadTagged(1);\r\n        if (!publicKeyReader) {\r\n            throw new Error('SEC1 public key data not found.');\r\n        }\r\n        const xy = publicKeyReader.readBitString();\r\n        if (xy.length % 2 !== 1) {\r\n            throw new Error(`Unexpected key data length: ${xy.length}`);\r\n        }\r\n        const x = dev_tunnels_ssh_1.BigInt.fromBytes(xy.slice(1, 1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const y = dev_tunnels_ssh_1.BigInt.fromBytes(xy.slice(1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const ec = {\r\n            curve: { name: curveName, oid: curveOid },\r\n            x,\r\n            y,\r\n            d,\r\n        };\r\n        return ec;\r\n    }\r\n}\r\nexports.Sec1KeyFormatter = Sec1KeyFormatter;\r\nSec1KeyFormatter.privateKeyType = 'EC PRIVATE KEY';\r\n//# sourceMappingURL=sec1KeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForwardedPort = void 0;\r\n/**\r\n * Represents a port being forwarded over an SSH session.\r\n */\r\nclass ForwardedPort {\r\n    /** @internal */\r\n    constructor(localPort, remotePort, isRemote) {\r\n        if (localPort === null && remotePort === null) {\r\n            throw new TypeError('Local and remote ports cannot both be null.');\r\n        }\r\n        else if (!isRemote && remotePort === null) {\r\n            // The remote port number should always be known for locally forwarded ports.\r\n            throw new TypeError('The report port number must not be null for locally forwarded ports.');\r\n        }\r\n        if (localPort !== null && (typeof localPort !== 'number' || localPort <= 0)) {\r\n            throw new TypeError('Local port must be a positive integer.');\r\n        }\r\n        else if (remotePort !== null && (typeof remotePort !== 'number' || remotePort <= 0)) {\r\n            throw new TypeError('Remote port must be a positive integer: ' + remotePort);\r\n        }\r\n        this.localPort = localPort;\r\n        this.remotePort = remotePort;\r\n        // The string representation is constructed ahead of time because it is used as a workaround\r\n        // for JavaScript Map<T> objects not supporting custom object equality. The string\r\n        // representation is used as the map key.\r\n        const arrow = isRemote ? '->' : '<-';\r\n        if (this.localPort === null) {\r\n            this.str = `${arrow}${this.remotePort}`;\r\n        }\r\n        else if (this.remotePort == null) {\r\n            this.str = `${this.localPort}${arrow}`;\r\n        }\r\n        else {\r\n            this.str = `${this.localPort}${arrow}${this.remotePort}`;\r\n        }\r\n    }\r\n    /**\r\n     * Gets a string representation of the forwarded port, which includes both\r\n     * local and remote port numbers if present.\r\n     *\r\n     * An arrow shows the direction of connections (channel open requests).\r\n     * Once connections are opened, data may flow in both directions.\r\n     */\r\n    toString() {\r\n        return this.str;\r\n    }\r\n}\r\nexports.ForwardedPort = ForwardedPort;\r\n//# sourceMappingURL=forwardedPort.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForwardedPortConnectingEventArgs = exports.ForwardedPortChannelEventArgs = exports.ForwardedPortEventArgs = void 0;\r\nclass ForwardedPortEventArgs {\r\n    constructor(port) {\r\n        this.port = port;\r\n    }\r\n    toString() {\r\n        return this.port.toString();\r\n    }\r\n}\r\nexports.ForwardedPortEventArgs = ForwardedPortEventArgs;\r\nclass ForwardedPortChannelEventArgs extends ForwardedPortEventArgs {\r\n    constructor(port, channel) {\r\n        super(port);\r\n        this.port = port;\r\n        this.channel = channel;\r\n    }\r\n    toString() {\r\n        return `${this.port} ${this.channel}`;\r\n    }\r\n}\r\nexports.ForwardedPortChannelEventArgs = ForwardedPortChannelEventArgs;\r\n/**\r\n * Event raised when an incoming or outgoing connection to a forwarded port is\r\n * about to be established.\r\n */\r\nclass ForwardedPortConnectingEventArgs {\r\n    constructor(\r\n    /**\r\n     * The remote forwarded port number. This may be different from the local port number,\r\n     * if the local TCP listener chose a different port.\r\n     */\r\n    port, \r\n    /**\r\n     * True if this connection is incoming (remote connection to a local port);\r\n     * false if it is outgoing (local connection to a remote port).\r\n     */\r\n    isIncoming, \r\n    /**\r\n     * A stream for the forwarded connection.\r\n     */\r\n    stream, \r\n    /**\r\n     * A cancellation token that is cancelled when the session is closed.\r\n     */\r\n    cancellation) {\r\n        this.port = port;\r\n        this.isIncoming = isIncoming;\r\n        this.stream = stream;\r\n        this.cancellation = cancellation;\r\n    }\r\n    toString() {\r\n        return `${this.port} isIncoming=${this.isIncoming}`;\r\n    }\r\n}\r\nexports.ForwardedPortConnectingEventArgs = ForwardedPortConnectingEventArgs;\r\n//# sourceMappingURL=forwardedPortEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForwardedPortsCollection = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst forwardedPortEventArgs_1 = require(\"./forwardedPortEventArgs\");\r\n/**\r\n * Tracks the list of ports that are currently being forwarded between the SSH client and server,\r\n * along with the set of channel connections for each forwarded port.\r\n *\r\n * Ports forwarded in either direction (client->server or server->client) are tracked in separate\r\n * collections. Typically within a session the forwarding is done only in one direction, though\r\n * the protocol supports bi-directional forwarding.\r\n *\r\n * @see PortForwardingService.RemoteForwardedPorts\r\n * @see PortForwardingService.LocalForwardedPorts\r\n */\r\nclass ForwardedPortsCollection {\r\n    constructor() {\r\n        /**\r\n         * Maintains a mapping from port keys to port objects and channels for the port.\r\n         *\r\n         * The ForwardedPort string representation is used as the keys.\r\n         */\r\n        this.portChannelMap = new Map();\r\n        this.portAddedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /** Event raised when a port is added to the collection. */\r\n        this.onPortAdded = this.portAddedEmitter.event;\r\n        this.portUpdatedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event raised when a port in the collection is updated. \"Updating\" a port doesn't\r\n         * change anything at the SSH protocol level, but the application may use this event\r\n         * as a signal to update or refresh its state for the forwarded port.\r\n         */\r\n        this.onPortUpdated = this.portUpdatedEmitter.event;\r\n        this.portRemovedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /** Event raised when a port is removed from the collection. */\r\n        this.onPortRemoved = this.portRemovedEmitter.event;\r\n        this.portChannelAddedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /** Event raised when a channel is added to the collection. */\r\n        this.onPortChannelAdded = this.portChannelAddedEmitter.event;\r\n        this.portChannelRemovedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /** Event raised when a channel is removed from the collection. */\r\n        this.onPortChannelRemoved = this.portChannelRemovedEmitter.event;\r\n    }\r\n    /** Gets the number of ports in the collection. */\r\n    get size() {\r\n        return this.portChannelMap.size;\r\n    }\r\n    /** Checks whether a port is in the collection. */\r\n    has(port) {\r\n        return this.portChannelMap.has(port.toString());\r\n    }\r\n    /** Lists all the ports in the collection. */\r\n    *values() {\r\n        for (const [port, channels] of this.portChannelMap.values()) {\r\n            yield port;\r\n        }\r\n    }\r\n    /** Iterates over all the ports in the collection. */\r\n    [Symbol.iterator]() {\r\n        return this.values();\r\n    }\r\n    /** Lists all the ports in the collection. */\r\n    *entries() {\r\n        for (const [port, channels] of this.portChannelMap.values()) {\r\n            yield [port, port];\r\n        }\r\n    }\r\n    /**\r\n     * Lists all the ports in the collection.\r\n     * (In a set, the keys are the same as the values.)\r\n     */\r\n    keys() {\r\n        return this.values();\r\n    }\r\n    /** Iterates over all the ports in the collection, invoking a callback function on each. */\r\n    forEach(callbackfn, thisArg) {\r\n        for (const [port, channels] of this.portChannelMap.values()) {\r\n            callbackfn.apply(thisArg, [port, port, this]);\r\n        }\r\n    }\r\n    getChannels(port) {\r\n        const portAndChannels = this.portChannelMap.get(port.toString());\r\n        if (!portAndChannels) {\r\n            throw new Error(`Port ${port} is not in the collection.`);\r\n        }\r\n        return portAndChannels[1];\r\n    }\r\n    /** Finds the first port in the collection that matches a predicate. */\r\n    find(predicate) {\r\n        for (const port of this.values()) {\r\n            if (predicate(port)) {\r\n                return port;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /* @internal */\r\n    addOrUpdatePort(port) {\r\n        if (this.has(port)) {\r\n            this.portUpdatedEmitter.fire(new forwardedPortEventArgs_1.ForwardedPortEventArgs(port));\r\n        }\r\n        this.portChannelMap.set(port.toString(), [port, []]);\r\n        this.portAddedEmitter.fire(new forwardedPortEventArgs_1.ForwardedPortEventArgs(port));\r\n    }\r\n    /* @internal */\r\n    removePort(port) {\r\n        if (!this.has(port)) {\r\n            return false;\r\n        }\r\n        this.portChannelMap.delete(port.toString());\r\n        this.portRemovedEmitter.fire(new forwardedPortEventArgs_1.ForwardedPortEventArgs(port));\r\n        return true;\r\n    }\r\n    /* @internal */\r\n    addChannel(port, channel) {\r\n        const portAndChannels = this.portChannelMap.get(port.toString());\r\n        if (!portAndChannels) {\r\n            throw new Error(`Port ${port} is not in the collection.`);\r\n        }\r\n        const portChannels = portAndChannels[1];\r\n        if (portChannels.find((c) => c.channelId === channel.channelId)) {\r\n            throw new Error(`Channel ${channel.channelId} is already in the collection for port ${port}`);\r\n        }\r\n        portChannels.push(channel);\r\n        channel.onClosed(() => this.tryRemoveChannel(port, channel));\r\n        this.portChannelAddedEmitter.fire(new forwardedPortEventArgs_1.ForwardedPortChannelEventArgs(port, channel));\r\n    }\r\n    tryRemoveChannel(port, channel) {\r\n        const portAndChannels = this.portChannelMap.get(port.toString());\r\n        if (portAndChannels) {\r\n            const portChannels = portAndChannels[1];\r\n            const index = portChannels.findIndex((c) => c.channelId === channel.channelId);\r\n            if (index >= 0) {\r\n                portChannels.splice(index, 1);\r\n                this.portChannelRemovedEmitter.fire(new forwardedPortEventArgs_1.ForwardedPortChannelEventArgs(port, channel));\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        return [...this].join(', ');\r\n    }\r\n}\r\nexports.ForwardedPortsCollection = ForwardedPortsCollection;\r\n//# sourceMappingURL=forwardedPortsCollection.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ForwardedPortConnectingEventArgs = exports.ForwardedPortChannelEventArgs = exports.ForwardedPortEventArgs = exports.ForwardedPortsCollection = exports.ForwardedPort = exports.PortForwardChannelOpenMessage = exports.PortForwardSuccessMessage = exports.PortForwardRequestMessage = exports.RemotePortStreamer = exports.RemotePortForwarder = exports.LocalPortForwarder = exports.PortForwardingService = exports.SshServer = exports.SshClient = void 0;\r\nvar sshClient_1 = require(\"./sshClient\");\r\nObject.defineProperty(exports, \"SshClient\", { enumerable: true, get: function () { return sshClient_1.SshClient; } });\r\nvar sshServer_1 = require(\"./sshServer\");\r\nObject.defineProperty(exports, \"SshServer\", { enumerable: true, get: function () { return sshServer_1.SshServer; } });\r\nvar portForwardingService_1 = require(\"./services/portForwardingService\");\r\nObject.defineProperty(exports, \"PortForwardingService\", { enumerable: true, get: function () { return portForwardingService_1.PortForwardingService; } });\r\nvar localPortForwarder_1 = require(\"./services/localPortForwarder\");\r\nObject.defineProperty(exports, \"LocalPortForwarder\", { enumerable: true, get: function () { return localPortForwarder_1.LocalPortForwarder; } });\r\nvar remotePortForwarder_1 = require(\"./services/remotePortForwarder\");\r\nObject.defineProperty(exports, \"RemotePortForwarder\", { enumerable: true, get: function () { return remotePortForwarder_1.RemotePortForwarder; } });\r\nvar remotePortStreamer_1 = require(\"./services/remotePortStreamer\");\r\nObject.defineProperty(exports, \"RemotePortStreamer\", { enumerable: true, get: function () { return remotePortStreamer_1.RemotePortStreamer; } });\r\nvar portForwardRequestMessage_1 = require(\"./messages/portForwardRequestMessage\");\r\nObject.defineProperty(exports, \"PortForwardRequestMessage\", { enumerable: true, get: function () { return portForwardRequestMessage_1.PortForwardRequestMessage; } });\r\nvar portForwardSuccessMessage_1 = require(\"./messages/portForwardSuccessMessage\");\r\nObject.defineProperty(exports, \"PortForwardSuccessMessage\", { enumerable: true, get: function () { return portForwardSuccessMessage_1.PortForwardSuccessMessage; } });\r\nvar portForwardChannelOpenMessage_1 = require(\"./messages/portForwardChannelOpenMessage\");\r\nObject.defineProperty(exports, \"PortForwardChannelOpenMessage\", { enumerable: true, get: function () { return portForwardChannelOpenMessage_1.PortForwardChannelOpenMessage; } });\r\nvar forwardedPort_1 = require(\"./events/forwardedPort\");\r\nObject.defineProperty(exports, \"ForwardedPort\", { enumerable: true, get: function () { return forwardedPort_1.ForwardedPort; } });\r\nvar forwardedPortsCollection_1 = require(\"./events/forwardedPortsCollection\");\r\nObject.defineProperty(exports, \"ForwardedPortsCollection\", { enumerable: true, get: function () { return forwardedPortsCollection_1.ForwardedPortsCollection; } });\r\nvar forwardedPortEventArgs_1 = require(\"./events/forwardedPortEventArgs\");\r\nObject.defineProperty(exports, \"ForwardedPortEventArgs\", { enumerable: true, get: function () { return forwardedPortEventArgs_1.ForwardedPortEventArgs; } });\r\nObject.defineProperty(exports, \"ForwardedPortChannelEventArgs\", { enumerable: true, get: function () { return forwardedPortEventArgs_1.ForwardedPortChannelEventArgs; } });\r\nObject.defineProperty(exports, \"ForwardedPortConnectingEventArgs\", { enumerable: true, get: function () { return forwardedPortEventArgs_1.ForwardedPortConnectingEventArgs; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IPAddressConversions = void 0;\r\n/**\r\n * Converts betwee SSH-protocol address string and IP address strings.\r\n */\r\nclass IPAddressConversions {\r\n    /**\r\n     * Converts from an SSH-protocol address string to an IP address string.\r\n     */\r\n    static fromSshAddress(address) {\r\n        if (!address) {\r\n            // SSH uses an empty address to indicate \"both IPv4-any and IPv6-any\".\r\n            // While this just returns the IPv4-any address, the default\r\n            // TCP listener factory treats this value as dual-mode anyway,\r\n            // meaning there's no way to actually listen on only IPv4-any.\r\n            // It would be strange for an application to actually want to exclude\r\n            // IPv6 like that, so this should be a reasonable limitation of this library.\r\n            return '0.0.0.0';\r\n        }\r\n        else if (address === 'localhost') {\r\n            // SSH uses a \"localhost\" address to indicate \"both IPv4-loopback and\r\n            // IPv6-loopback\", while this just returns the IPv4-loopback address.\r\n            // The default TCP listener factory treats this value as dual-mode anyway.\r\n            return '127.0.0.1';\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    /**\r\n     * Converts from an IP Address to an SSH-protocol address string.\r\n     */\r\n    static toSshAddress(ipAddress) {\r\n        if (!ipAddress) {\r\n            return null;\r\n        }\r\n        else if (ipAddress === '0.0.0.0') {\r\n            return '';\r\n        }\r\n        else if (ipAddress === '127.0.0.1') {\r\n            return 'localhost';\r\n        }\r\n        else {\r\n            return ipAddress;\r\n        }\r\n    }\r\n}\r\nexports.IPAddressConversions = IPAddressConversions;\r\n//# sourceMappingURL=ipAddressConversions.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PortForwardChannelOpenMessage = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nclass PortForwardChannelOpenMessage extends dev_tunnels_ssh_1.ChannelOpenMessage {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.host = '';\r\n        this.port = 0;\r\n        this.originatorIPAddress = '';\r\n        this.originatorPort = 0;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.host = reader.readString('ascii');\r\n        this.port = reader.readUInt32();\r\n        this.originatorIPAddress = reader.readString('ascii');\r\n        this.originatorPort = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeString(this.validateField(this.host, 'host'), 'ascii');\r\n        writer.writeUInt32(this.validateField(this.port, 'port'));\r\n        writer.writeString(this.originatorIPAddress || '', 'ascii');\r\n        writer.writeUInt32(this.originatorPort || 0);\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (host=${this.host} port=${this.port})`;\r\n    }\r\n}\r\nexports.PortForwardChannelOpenMessage = PortForwardChannelOpenMessage;\r\n//# sourceMappingURL=portForwardChannelOpenMessage.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PortForwardRequestMessage = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst portForwardingService_1 = require(\"../services/portForwardingService\");\r\nclass PortForwardRequestMessage extends dev_tunnels_ssh_1.SessionRequestMessage {\r\n    constructor() {\r\n        super();\r\n        this.addressToBind = '';\r\n        this.port = 0;\r\n        this.requestType = portForwardingService_1.PortForwardingService.portForwardRequestType;\r\n        this.wantReply = true;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.addressToBind = reader.readString('ascii');\r\n        this.port = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeString(this.validateField(this.addressToBind, 'address'), 'ascii');\r\n        writer.writeUInt32(this.validateField(this.port, 'port'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (addressToBind=${this.addressToBind} port=${this.port})`;\r\n    }\r\n}\r\nexports.PortForwardRequestMessage = PortForwardRequestMessage;\r\n//# sourceMappingURL=portForwardRequestMessage.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PortForwardSuccessMessage = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nclass PortForwardSuccessMessage extends dev_tunnels_ssh_1.SessionRequestSuccessMessage {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.port = 0;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        if (reader.available >= 4) {\r\n            this.port = reader.readUInt32();\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.port, 'port'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (port=${this.port})`;\r\n    }\r\n}\r\nexports.PortForwardSuccessMessage = PortForwardSuccessMessage;\r\n//# sourceMappingURL=portForwardSuccessMessage.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultPortForwardMessageFactory = void 0;\r\nconst portForwardChannelOpenMessage_1 = require(\"./messages/portForwardChannelOpenMessage\");\r\nconst portForwardRequestMessage_1 = require(\"./messages/portForwardRequestMessage\");\r\nconst portForwardSuccessMessage_1 = require(\"./messages/portForwardSuccessMessage\");\r\nclass DefaultPortForwardMessageFactory {\r\n    createRequestMessageAsync(port) {\r\n        return Promise.resolve(new portForwardRequestMessage_1.PortForwardRequestMessage());\r\n    }\r\n    createSuccessMessageAsync(port) {\r\n        return Promise.resolve(new portForwardSuccessMessage_1.PortForwardSuccessMessage());\r\n    }\r\n    createChannelOpenMessageAsync(port) {\r\n        return Promise.resolve(new portForwardChannelOpenMessage_1.PortForwardChannelOpenMessage());\r\n    }\r\n}\r\nexports.DefaultPortForwardMessageFactory = DefaultPortForwardMessageFactory;\r\n//# sourceMappingURL=portForwardMessageFactory.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LocalPortForwarder = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst streamForwarder_1 = require(\"./streamForwarder\");\r\n/**\r\n * Listens on a local port and forwards incoming connections as SSH channels.\r\n */\r\nclass LocalPortForwarder extends dev_tunnels_ssh_1.SshService {\r\n    /* @internal */\r\n    constructor(pfs, session, channelType, localIPAddress, localPort, remoteHost, remotePort) {\r\n        super(session);\r\n        this.pfs = pfs;\r\n        this.channelType = channelType;\r\n        this.localIPAddress = localIPAddress;\r\n        this.port = localPort;\r\n        this.remoteHost = remoteHost;\r\n        // The remote port defaults to the same as the local port, if the remote port\r\n        // was unspecified and a specific (nonzero) local port was specified. Whether\r\n        // or not a specific local port was specified, the local port may be changed\r\n        // by the TCP listener factory. In that case the remote port does not change.\r\n        this.remotePort = remotePort !== null && remotePort !== void 0 ? remotePort : (localPort !== 0 ? localPort : undefined);\r\n    }\r\n    /**\r\n     * Local port that the forwarder is listening on.\r\n     */\r\n    get localPort() {\r\n        return this.port;\r\n    }\r\n    /* @internal */\r\n    async startForwarding(cancellation) {\r\n        var _a;\r\n        let listenAddress = this.localIPAddress;\r\n        try {\r\n            this.tcpListener = await this.pfs.tcpListenerFactory.createTcpListener(listenAddress, this.port, true);\r\n            const serverAddress = this.tcpListener.address();\r\n            if (!(serverAddress.port > 0)) {\r\n                this.tcpListener.close();\r\n                throw new Error('Could not get server port.');\r\n            }\r\n            this.port = serverAddress.port;\r\n            // The SSH protocol specifies that \"localhost\" or \"\" (any) should be dual-mode.\r\n            // So 2 TCP listener instances are required in those cases.\r\n            if (this.localIPAddress === '127.0.0.1' || this.localIPAddress === '0.0.0.0') {\r\n                // Call the factory again to create another listener, but this time with the\r\n                // corresponding IPv6 local address, and not allowing a port change.\r\n                listenAddress = this.localIPAddress === '0.0.0.0' ? '::' : '::1';\r\n                try {\r\n                    this.tcpListener2 = await this.pfs.tcpListenerFactory.createTcpListener(listenAddress, this.port, false);\r\n                }\r\n                catch (e) {\r\n                    if (!(e instanceof Error) || e.code !== 'EADDRNOTAVAIL') {\r\n                        throw e;\r\n                    }\r\n                    // The OS may not support IPv6 or there may be no IPv6 network interfaces.\r\n                    this.trace(dev_tunnels_ssh_1.TraceLevel.Warning, dev_tunnels_ssh_1.SshTraceEventIds.portForwardServerListenFailed, 'PortForwardingService failed to listen on ' +\r\n                        `${listenAddress}:{this.port}: ${e.message}`, e);\r\n                    // Do not rethrow, just skip IPv6 in this case.\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Error, dev_tunnels_ssh_1.SshTraceEventIds.portForwardServerListenFailed, `PortForwardingService failed to listen on ${listenAddress}:${this.port}: ${e.message}`, e);\r\n            throw e;\r\n        }\r\n        this.tcpListener.on('connection', this.acceptConnection.bind(this));\r\n        (_a = this.tcpListener2) === null || _a === void 0 ? void 0 : _a.on('connection', this.acceptConnection.bind(this));\r\n        this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardServerListening, `PortForwardingService listening on ${this.localIPAddress}:${this.port}.`);\r\n        if (this.tcpListener2) {\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardServerListening, `PortForwardingService also listening on ${listenAddress}:${this.port}.`);\r\n        }\r\n    }\r\n    async acceptConnection(socket) {\r\n        var _a, _b, _c, _d, _e;\r\n        this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardConnectionAccepted, 'PortForwardingService accepted connection from: ' +\r\n            `${socket.remoteAddress} on port ${this.port}`);\r\n        // TODO: Set socket options?\r\n        let channel;\r\n        try {\r\n            channel = await this.pfs.openChannel(this.session, this.channelType, (_a = socket.remoteAddress) !== null && _a !== void 0 ? _a : null, (_b = socket.remotePort) !== null && _b !== void 0 ? _b : null, (_c = this.remoteHost) !== null && _c !== void 0 ? _c : this.localIPAddress, (_d = this.remotePort) !== null && _d !== void 0 ? _d : this.localPort);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            // TODO: Destroy the socket in a way that causes a connection reset:\r\n            // https://github.com/nodejs/node/issues/27428\r\n            socket.destroy();\r\n            // Don't re-throw. This is an async event handler so the caller isn't awaiting.\r\n            // The error details have already been traced.\r\n            return;\r\n        }\r\n        // The event handler may return a transformed stream.\r\n        const forwardedStream = await this.pfs.forwardedPortConnecting((_e = this.remotePort) !== null && _e !== void 0 ? _e : this.localPort, false, new dev_tunnels_ssh_1.SshStream(channel));\r\n        if (!forwardedStream) {\r\n            // The event handler rejected the connection.\r\n            return;\r\n        }\r\n        const forwarder = new streamForwarder_1.StreamForwarder(socket, forwardedStream, channel.session.trace);\r\n        this.pfs.streamForwarders.push(forwarder);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        // Note stopping the listener does not disconnect any already-accepted sockets.\r\n        (_a = this.tcpListener) === null || _a === void 0 ? void 0 : _a.close();\r\n        (_b = this.tcpListener2) === null || _b === void 0 ? void 0 : _b.close();\r\n        this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardServerListening, `PortForwardingService stopped listening on ${this.localIPAddress}:${this.port}.`);\r\n        super.dispose();\r\n    }\r\n}\r\nexports.LocalPortForwarder = LocalPortForwarder;\r\n//# sourceMappingURL=localPortForwarder.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar PortForwardingService_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PortForwardingService = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst forwardedPort_1 = require(\"../events/forwardedPort\");\r\nconst forwardedPortsCollection_1 = require(\"../events/forwardedPortsCollection\");\r\nconst ipAddressConversions_1 = require(\"../ipAddressConversions\");\r\nconst portForwardChannelOpenMessage_1 = require(\"../messages/portForwardChannelOpenMessage\");\r\nconst portForwardRequestMessage_1 = require(\"../messages/portForwardRequestMessage\");\r\nconst portForwardSuccessMessage_1 = require(\"../messages/portForwardSuccessMessage\");\r\nconst tcpListenerFactory_1 = require(\"../tcpListenerFactory\");\r\nconst portForwardMessageFactory_1 = require(\"../portForwardMessageFactory\");\r\nconst localPortForwarder_1 = require(\"./localPortForwarder\");\r\nconst remotePortForwarder_1 = require(\"./remotePortForwarder\");\r\nconst remotePortStreamer_1 = require(\"./remotePortStreamer\");\r\nconst forwardedPortEventArgs_1 = require(\"../events/forwardedPortEventArgs\");\r\n/**\r\n * Implements the standard SSH port-forwarding protocol.\r\n * @example\r\n * Use `SshSessionConfiguration.addService()` on both client and server side configurations\r\n * to add the `PortForwardingService` type before attempting to call methods on the service.\r\n * Then use `SshSession.activateService()` to get the service instance:\r\n *\r\n *     const config = new SshSessionConfiguration();\r\n *     config.addService(PortForwardingService);\r\n *     const client = new SshClient(config);\r\n *     const session = await client.openSession(host, port);\r\n *     await session.authenticate(clientCredentials);\r\n *     const pfs = session.activateService(PortForwardingService);\r\n *     const forwarder = pfs.forwardToRemotePort('::', 3000);\r\n */\r\nlet PortForwardingService = PortForwardingService_1 = class PortForwardingService extends dev_tunnels_ssh_1.SshService {\r\n    /* @internal */\r\n    constructor(session) {\r\n        super(session);\r\n        /**\r\n         * Maps from FORWARDED port number to the object that manages listening for incoming\r\n         * connections for that port and forwarding them through the session.\r\n         *\r\n         * Note the actual local source port number used may be different from the forwarded port\r\n         * number if the local TCP listener factory chose a different port. The forwarded port number\r\n         * is used to identify the port in any messages exchanged between client and server.\r\n         */\r\n        this.localForwarders = new Map();\r\n        /**\r\n         * Maps from FORWARDED port numbers to the object that manages relaying forwarded connections\r\n         * from the session to a local port.\r\n         *\r\n         * Note the actual local destination port number used may be different from the forwarded port\r\n         * number. The forwarded port number is used to identify the port in any messages exchanged\r\n         * between client and server.\r\n         */\r\n        this.remoteConnectors = new Map();\r\n        /* @internal */\r\n        this.streamForwarders = [];\r\n        /**\r\n         * Gets or sets a value that controls whether the port-forwarding service listens on\r\n         * local TCP sockets to accept connections for ports that are forwarded from the remote side.\r\n         *\r\n         * The default is true.\r\n         *\r\n         * This property is typically initialized before connecting a session (if not keeping the\r\n         * default). It may be changed at any time while the session is connected, and the new value\r\n         * will affect any newly forwarded ports after that, but not previously-forwarded ports.\r\n         *\r\n         * Regardless of whether this is enabled, connections to forwarded ports can be made using\r\n         * `connectToForwardedPort()`.\r\n         */\r\n        this.acceptLocalConnectionsForForwardedPorts = true;\r\n        /**\r\n         * Gets or sets a value that controls whether the port-forwarding service forwards connections\r\n         * to local TCP sockets.\r\n         *\r\n         * The default is true.\r\n         *\r\n         * This property is typically initialized before connecting a session (if not keeping the\r\n         * default). It may be changed at any time while the session is connected, and the new value\r\n         * will affect any newly forwarded ports after that, but not previously-forwarded ports.\r\n         */\r\n        this.forwardConnectionsToLocalPorts = true;\r\n        /**\r\n         * Gets or sets a value that controls whether the port-forwarding service accepts\r\n         * 'direct-tcpip' channel open requests and forwards the channel connections to the local port.\r\n         *\r\n         * The default is true.\r\n         *\r\n         * This property is typically initialized before connecting a session (if not keeping the\r\n         * default). It may be changed at any time while the session is connected, and the new value\r\n         * will affect any newly forwarded ports after that, but not previously-forwarded ports.\r\n         *\r\n         * Regardless of whether this is enabled, the remote side can open 'forwarded-tcpip' channels\r\n         * to connect to ports that were explicitly forwarded by this side.\r\n         */\r\n        this.acceptRemoteConnectionsForNonForwardedPorts = true;\r\n        /**\r\n         * Gets the collection of ports that are currently being forwarded from the remote side\r\n         * to the local side.\r\n         *\r\n         * Ports are added to this collection when `forwardFromRemotePort()` or\r\n         * `streamFromRemotePort()` is called (and the other side accepts the\r\n         * 'tcpip-forward' request), and then are removed when the `RemotePortForwarder`\r\n         * is disposed (which also sends a 'cancel-tcpip-forward' message).\r\n         *\r\n         * Each forwarded port may have 0 or more active connections (channels).\r\n         *\r\n         * The collection does not include direct connections initiated via\r\n         * `forwardToRemotePort()` or `streamToRemotePort()`.\r\n         *\r\n         * Local forwarded ports may or may not have local TCP listeners automatically set up,\r\n         * depending on the value of `acceptLocalConnectionsForForwardedPorts`.\r\n         */\r\n        this.localForwardedPorts = new forwardedPortsCollection_1.ForwardedPortsCollection();\r\n        /**\r\n         * Gets the collection of ports that are currently being forwarded from the local side\r\n         * to the remote side.\r\n         *\r\n         * Ports are added to this collection when the port-forwarding service handles a\r\n         * 'tcpip-forward' request message, and removed when it receives a 'cancel-tcpip-forward'\r\n         * request message.\r\n         *\r\n         * Each forwarded port may have 0 or more active connections (channels).\r\n         *\r\n         * The collection does not include direct connections initiated via\r\n         * `forwardToRemotePort()` or `streamToRemotePort()`.\r\n         */\r\n        this.remoteForwardedPorts = new forwardedPortsCollection_1.ForwardedPortsCollection();\r\n        /**\r\n         * Gets or sets a factory for creating TCP listeners.\r\n         *\r\n         * Applications may override this factory to provide custom logic for selecting\r\n         * local port numbers to listen on for port-forwarding.\r\n         *\r\n         * This factory is not used when `acceptLocalConnectionsForForwardedPorts` is\r\n         * set to false.\r\n         */\r\n        this.tcpListenerFactory = new tcpListenerFactory_1.DefaultTcpListenerFactory();\r\n        /**\r\n         * Gets or sets a factory for creating port-forwarding messages.\r\n         *\r\n         * A message factory enables applications to extend port-forwarding by providing custom\r\n         * message subclasses that may include additional properties.\r\n         */\r\n        this.messageFactory = new portForwardMessageFactory_1.DefaultPortForwardMessageFactory();\r\n        this.forwardedPortConnectingEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event raised when an incoming or outgoing connection to a forwarded port is\r\n         * about to be established.\r\n         */\r\n        this.onForwardedPortConnecting = this.forwardedPortConnectingEmitter.event;\r\n    }\r\n    /* @internal */\r\n    async forwardedPortConnecting(port, isIncoming, stream, cancellation) {\r\n        try {\r\n            const args = new forwardedPortEventArgs_1.ForwardedPortConnectingEventArgs(port, isIncoming, stream, cancellation);\r\n            this.forwardedPortConnectingEmitter.fire(args);\r\n            if (args.transformPromise) {\r\n                return await args.transformPromise;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Warning, dev_tunnels_ssh_1.SshTraceEventIds.portForwardConnectionFailed, `Forwarded port connecting event-handler failed: ${e.message}`);\r\n            return null;\r\n        }\r\n        return stream;\r\n    }\r\n    async forwardFromRemotePort(remoteIPAddress, remotePort, localHostOrCancellation, localPort, cancellation) {\r\n        const localHost = typeof localHostOrCancellation === 'string' ? localHostOrCancellation : '127.0.0.1';\r\n        if (typeof localPort === 'undefined')\r\n            localPort = remotePort;\r\n        if (!remoteIPAddress)\r\n            throw new TypeError('Remote IP address is required.');\r\n        if (!Number.isInteger(remotePort) || remotePort < 0) {\r\n            throw new TypeError('Remote port must be a non-negative integer.');\r\n        }\r\n        if (!localHost)\r\n            throw new TypeError('Local host is required.');\r\n        if (!Number.isInteger(localPort) || localPort <= 0) {\r\n            throw new TypeError('Local port must be a positive integer.');\r\n        }\r\n        if (this.localForwardedPorts.find((p) => p.localPort === localPort)) {\r\n            throw new Error(`Local port ${localPort} is already forwarded.`);\r\n        }\r\n        else if (remotePort > 0 &&\r\n            this.localForwardedPorts.find((p) => p.remotePort === remotePort)) {\r\n            throw new Error(`Remote port ${remotePort} is already forwarded.`);\r\n        }\r\n        const forwarder = new remotePortForwarder_1.RemotePortForwarder(this, this.session, remoteIPAddress, remotePort, localHost, localPort);\r\n        const request = await this.messageFactory.createRequestMessageAsync(remotePort);\r\n        if (!(await forwarder.request(request, cancellation))) {\r\n            // The remote side rejected the forwarding request, or it was a duplicate request.\r\n            return null;\r\n        }\r\n        remotePort = forwarder.remotePort;\r\n        // The remote port is the port sent in the message to the other side,\r\n        // so the connector is indexed on that port number, rather than the local port.\r\n        //\r\n        // Do not track duplicate port forwarders. (The remote side may not have detected the\r\n        // duplicate if not accepting local connections.)\r\n        if (this.remoteConnectors.has(remotePort)) {\r\n            // Do not dispose the forwarder because that would send a message to cancel\r\n            // forwarding of the port.\r\n            return null;\r\n        }\r\n        this.remoteConnectors.set(remotePort, forwarder);\r\n        const forwardedPort = new forwardedPort_1.ForwardedPort(localPort, remotePort, false);\r\n        this.localForwardedPorts.addOrUpdatePort(forwardedPort);\r\n        forwarder.onDisposed(() => {\r\n            this.localForwardedPorts.removePort(forwardedPort);\r\n            this.remoteConnectors.delete(remotePort);\r\n        });\r\n        return forwarder;\r\n    }\r\n    async forwardToRemotePort(localIPAddress, localPort, remoteHostOrCancellation, remotePort, cancellation) {\r\n        const remoteHost = typeof remoteHostOrCancellation === 'string' ? remoteHostOrCancellation : '127.0.0.1';\r\n        if (typeof remotePort === 'undefined')\r\n            remotePort = localPort;\r\n        if (!localIPAddress)\r\n            throw new TypeError('Local IP address is required.');\r\n        if (!Number.isInteger(localPort) || localPort < 0) {\r\n            throw new TypeError('Local port must be a non-negative integer.');\r\n        }\r\n        if (!remoteHost)\r\n            throw new TypeError('Remote host is required.');\r\n        if (!Number.isInteger(remotePort) || remotePort <= 0) {\r\n            throw new TypeError('Remote port must be a positive integer.');\r\n        }\r\n        if (this.localForwarders.has(remotePort)) {\r\n            throw new Error(`Port ${remotePort} is already forwarded.`);\r\n        }\r\n        const forwarder = new localPortForwarder_1.LocalPortForwarder(this, this.session, PortForwardingService_1.reversePortForwardChannelType, localIPAddress, localPort, remoteHost, remotePort);\r\n        await forwarder.startForwarding(cancellation);\r\n        // The remote port is the port sent in the message to the other side,\r\n        // so the forwarder is indexed on that port number, rather than the local port.\r\n        this.localForwarders.set(remotePort, forwarder);\r\n        forwarder.onDisposed(() => {\r\n            this.localForwarders.delete(remotePort);\r\n        });\r\n        return forwarder;\r\n    }\r\n    /**\r\n     * Sends a request to the remote side to listen on a port and forward incoming connections as\r\n     * SSH channels of type 'forwarded-tcpip', which will then be relayed as local streams.\r\n     *\r\n     * @param remoteIPAddress IP address of the interface to bind to on the remote side.\r\n     * @param remotePort The remote port to listen on, or 0 to choose an available port.\r\n     * (The chosen port can then be obtained via the `remotePort` property on the returned object.)\r\n     * @param cancellation Cancellation token for the request; note this cannot cancel forwarding\r\n     * once it has started; use the returned disposable do do that.\r\n     * @returns A disposable object that when disposed will cancel forwarding the port, or `null`\r\n     * if the request was rejected by the remote side, possibly because the remote port was already\r\n     * in use. Handle the `onStreamOpened` event on this object to receive streams.\r\n     */\r\n    async streamFromRemotePort(remoteIPAddress, remotePort, cancellation) {\r\n        if (!remoteIPAddress)\r\n            throw new TypeError('Remote IP address is required.');\r\n        if (!Number.isInteger(remotePort) || remotePort < 0) {\r\n            throw new TypeError('Remote port must be a non-negative integer.');\r\n        }\r\n        const streamer = new remotePortStreamer_1.RemotePortStreamer(this.session, remoteIPAddress, remotePort);\r\n        const request = await this.messageFactory.createRequestMessageAsync(remotePort);\r\n        if (!(await streamer.request(request, cancellation))) {\r\n            streamer.dispose();\r\n            return null;\r\n        }\r\n        remotePort = streamer.remotePort;\r\n        // The remote port is the port sent in the message to the other side,\r\n        // so the connector is indexed on that port number. (There is no local port anyway.)\r\n        this.remoteConnectors.set(remotePort, streamer);\r\n        const forwardedPort = new forwardedPort_1.ForwardedPort(null, remotePort, false);\r\n        this.localForwardedPorts.addOrUpdatePort(forwardedPort);\r\n        streamer.onDisposed(() => {\r\n            this.localForwardedPorts.removePort(forwardedPort);\r\n            this.remoteConnectors.delete(remotePort);\r\n        });\r\n        return streamer;\r\n    }\r\n    /**\r\n     * Opens a stream for an SSH channel of type 'direct-tcpip' that is relayed to remote port,\r\n     * regardless of whether the remote side has explicitly forwarded that port.\r\n     *\r\n     * @param remoteHost The destination hostname or IP address for forwarded connections, to be\r\n     * resolved on the remote side. WARNING: Avoid using the hostname `localhost` as the destination\r\n     * host; use `127.0.0.1` or `::1` instead. (OpenSSH does not recognize `localhost` as a valid\r\n     * destination host.)\r\n     * @param remotePort The destination port for the forwarded stream. (Must not be 0.)\r\n     * @param cancellation Cancellation token for the request; note this cannot cancel streaming\r\n     * once it has started; dipose the returned stream for that.\r\n     * @returns A stream that is relayed to the remote port.\r\n     * @throws `SshChannelError` if the streaming channel could not be opened, either because it\r\n     * was rejected by the remote side, or the remote connection failed.\r\n     */\r\n    async streamToRemotePort(remoteHost, remotePort, cancellation) {\r\n        if (!remoteHost)\r\n            throw new TypeError('Remote host is required.');\r\n        if (!Number.isInteger(remotePort) || remotePort <= 0) {\r\n            throw new TypeError('Remote port must be a positive integer.');\r\n        }\r\n        const channel = await this.openChannel(this.session, PortForwardingService_1.reversePortForwardChannelType, null, null, remoteHost, remotePort, cancellation);\r\n        return new dev_tunnels_ssh_1.SshStream(channel);\r\n    }\r\n    /**\r\n     * Opens a stream for an SSH channel of type 'forwarded-tcpip' that is relayed to a remote\r\n     * port. The port must have been explicitly forwarded by the remote side.\r\n     *\r\n     * It may be necessary to call `waitForForwardedPort` before this method\r\n     * to ensure the port is ready for connections.\r\n     *\r\n     * An error is thrown if the requested port could not be forwarded, possibly because it was\r\n     * rejected by the remote side, or the remote connection failed.\r\n     *\r\n     * @param forwardedPort Remote port number that was forwarded.\r\n     * @param cancellation Cancellation token for the request; note this cannot\r\n     * cancel streaming once it has started; dipose the returned stream for that.\r\n     * @returns A stream that is relayed to the remote forwarded port.\r\n     */\r\n    async connectToForwardedPort(forwardedPort, cancellation) {\r\n        if (!Number.isInteger(forwardedPort) || forwardedPort <= 0) {\r\n            throw new TypeError('Forwarded port must be a positive integer.');\r\n        }\r\n        const channel = await this.openChannel(this.session, PortForwardingService_1.portForwardChannelType, null, null, '127.0.0.1', forwardedPort, cancellation);\r\n        const forwardedStream = await this.forwardedPortConnecting(forwardedPort, false, new dev_tunnels_ssh_1.SshStream(channel), cancellation);\r\n        if (!forwardedStream) {\r\n            channel.close().catch((e) => { });\r\n            throw new dev_tunnels_ssh_1.SshChannelError('The connection to the forwarded port was rejected by the connecting event-handler.');\r\n        }\r\n        return forwardedStream;\r\n    }\r\n    /**\r\n     * Waits asynchronously for the remote side to forward an expected port number.\r\n     *\r\n     * A common pattern for some applications may be to call this method just before\r\n     * `ConnectToForwardedPortAsync`.\r\n     *\r\n     * @param forwardedPort Port number that is expected to be forwarded.\r\n     * @param cancellation Token that can be used to cancel waiting.\r\n     * @returns A promise that completes when the expected port number has been forwarded.\r\n     */\r\n    async waitForForwardedPort(forwardedPort, cancellation) {\r\n        if (this.remoteForwardedPorts.find((p) => p.remotePort === forwardedPort)) {\r\n            // It's already forwarded, so there's no need to wait.\r\n            return;\r\n        }\r\n        const waitCompletion = new dev_tunnels_ssh_1.PromiseCompletionSource();\r\n        let cancellationRegistration;\r\n        if (cancellation) {\r\n            cancellationRegistration = cancellation.onCancellationRequested(() => waitCompletion.reject(new dev_tunnels_ssh_1.CancellationError()));\r\n        }\r\n        let portAddedRegistration;\r\n        let sessionClosedRegistration;\r\n        try {\r\n            portAddedRegistration = this.remoteForwardedPorts.onPortAdded((e) => {\r\n                if (e.port.remotePort === forwardedPort) {\r\n                    waitCompletion.resolve();\r\n                }\r\n            });\r\n            sessionClosedRegistration = this.session.onClosed(() => {\r\n                waitCompletion.reject(new dev_tunnels_ssh_1.ObjectDisposedError('The session was closed.'));\r\n            });\r\n            await waitCompletion.promise;\r\n        }\r\n        finally {\r\n            portAddedRegistration === null || portAddedRegistration === void 0 ? void 0 : portAddedRegistration.dispose();\r\n            sessionClosedRegistration === null || sessionClosedRegistration === void 0 ? void 0 : sessionClosedRegistration.dispose();\r\n            cancellationRegistration === null || cancellationRegistration === void 0 ? void 0 : cancellationRegistration.dispose();\r\n        }\r\n    }\r\n    async onSessionRequest(request, cancellation) {\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        else if (request.requestType !== PortForwardingService_1.portForwardRequestType &&\r\n            request.requestType !== PortForwardingService_1.cancelPortForwardRequestType) {\r\n            throw new Error(`Unexpected request type: ${request.requestType}`);\r\n        }\r\n        const portForwardRequest = request.request.convertTo(new portForwardRequestMessage_1.PortForwardRequestMessage());\r\n        const localIPAddress = ipAddressConversions_1.IPAddressConversions.fromSshAddress(portForwardRequest.addressToBind);\r\n        if (request.requestType === PortForwardingService_1.portForwardRequestType &&\r\n            portForwardRequest.port !== 0 &&\r\n            this.localForwarders.has(portForwardRequest.port)) {\r\n            // The port is already forwarded, so a failure response will be returned. This may happen\r\n            // when re-connecting, to ensure the state of forwarded ports is consistent.\r\n            //\r\n            // Note duplicate ports are not detected here when AcceptLocalConnectionsForForwardedPorts\r\n            // is false; in that case duplicate port requests may succeed (if authorized below), though\r\n            // they don't really do anything.\r\n            const message = `PortForwardingService port ${portForwardRequest.port} is already forwarded.`;\r\n            this.session.trace(dev_tunnels_ssh_1.TraceLevel.Verbose, dev_tunnels_ssh_1.SshTraceEventIds.portForwardRequestInvalid, message);\r\n            request.isAuthorized = false;\r\n            return;\r\n        }\r\n        const args = new dev_tunnels_ssh_1.SshRequestEventArgs(request.requestType, portForwardRequest, this.session.principal);\r\n        await super.onSessionRequest(args, cancellation);\r\n        let response;\r\n        let localPort = null;\r\n        if (args.isAuthorized) {\r\n            if (request.requestType === PortForwardingService_1.portForwardRequestType) {\r\n                try {\r\n                    localPort = await this.startForwarding(localIPAddress, portForwardRequest.port, cancellation);\r\n                }\r\n                catch (e) {\r\n                    // The error is already traced.\r\n                }\r\n                if (localPort !== null) {\r\n                    // The chosen local port may be different from the requested port. Use the\r\n                    // requested port in the response, unless the request was for a random port.\r\n                    const forwardedPort = portForwardRequest.port === 0 ? localPort : portForwardRequest.port;\r\n                    const portResponse = await this.messageFactory.createSuccessMessageAsync(forwardedPort);\r\n                    portResponse.port = forwardedPort;\r\n                    response = portResponse;\r\n                }\r\n            }\r\n            else if (request.requestType === PortForwardingService_1.cancelPortForwardRequestType) {\r\n                if (await this.cancelForwarding(portForwardRequest.port, cancellation)) {\r\n                    response = new dev_tunnels_ssh_1.SessionRequestSuccessMessage();\r\n                }\r\n            }\r\n        }\r\n        request.responsePromise = Promise.resolve(response !== null && response !== void 0 ? response : new dev_tunnels_ssh_1.SessionRequestFailureMessage());\r\n        // Add to the collection (and raise event) after sending the response,\r\n        // to ensure event-handlers can immediately open a channel.\r\n        if (response instanceof portForwardSuccessMessage_1.PortForwardSuccessMessage) {\r\n            const forwardedPort = new forwardedPort_1.ForwardedPort(localPort !== null && localPort !== void 0 ? localPort : response.port, response.port, true);\r\n            this.remoteForwardedPorts.addOrUpdatePort(forwardedPort);\r\n        }\r\n    }\r\n    async startForwarding(localIPAddress, remotePort, cancellation) {\r\n        if (typeof remotePort !== 'number')\r\n            throw new TypeError('Remote port must be an integer.');\r\n        if (this.acceptLocalConnectionsForForwardedPorts) {\r\n            // The local port is initially set to the remote port, but it may change\r\n            // when starting forwarding, if there was a conflict.\r\n            let localPort = remotePort;\r\n            const forwarder = new localPortForwarder_1.LocalPortForwarder(this, this.session, PortForwardingService_1.portForwardChannelType, localIPAddress, localPort, undefined, remotePort === 0 ? undefined : remotePort);\r\n            await forwarder.startForwarding(cancellation);\r\n            localPort = forwarder.localPort;\r\n            if (remotePort === 0) {\r\n                // The other side requested a random port. Reply with the chosen port number.\r\n                remotePort = localPort;\r\n            }\r\n            if (this.localForwarders.has(remotePort)) {\r\n                // The forwarder (TCP listener factory) chose a port that is already forwarded.\r\n                // This can happen (though its' very unlikely) if a random port was requested.\r\n                // Returning null here causes the forward request to be rejected.\r\n                forwarder.dispose();\r\n                return null;\r\n            }\r\n            // The remote port is the port referenced in exchanged messages,\r\n            // so the forwarder is indexed on that port number, rather than the local port.\r\n            this.localForwarders.set(remotePort, forwarder);\r\n            localPort = forwarder.localPort;\r\n            forwarder.onDisposed(() => {\r\n                const forwardedPort = new forwardedPort_1.ForwardedPort(localPort, remotePort, true);\r\n                this.remoteForwardedPorts.removePort(forwardedPort);\r\n                this.localForwarders.delete(remotePort);\r\n            });\r\n            return localPort;\r\n        }\r\n        else if (remotePort !== 0) {\r\n            return remotePort;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    async cancelForwarding(forwardedPort, cancellation) {\r\n        const forwarder = this.localForwarders.get(forwardedPort);\r\n        if (forwarder) {\r\n            this.localForwarders.delete(forwardedPort);\r\n            forwarder.dispose();\r\n            return true;\r\n        }\r\n        const port = new forwardedPort_1.ForwardedPort(forwardedPort, forwardedPort, true);\r\n        if (this.remoteForwardedPorts.removePort(port)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    async onChannelOpening(request, cancellation) {\r\n        var _a;\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        const channelType = request.request.channelType;\r\n        if (channelType !== PortForwardingService_1.portForwardChannelType &&\r\n            channelType !== PortForwardingService_1.reversePortForwardChannelType) {\r\n            request.failureReason = dev_tunnels_ssh_1.SshChannelOpenFailureReason.unknownChannelType;\r\n            return;\r\n        }\r\n        let remoteConnector = null;\r\n        const portForwardMessage = request.request instanceof portForwardChannelOpenMessage_1.PortForwardChannelOpenMessage\r\n            ? request.request\r\n            : request.request.convertTo(new portForwardChannelOpenMessage_1.PortForwardChannelOpenMessage());\r\n        if (request.isRemoteRequest) {\r\n            if (channelType === PortForwardingService_1.portForwardChannelType) {\r\n                const remoteIPAddress = ipAddressConversions_1.IPAddressConversions.fromSshAddress(portForwardMessage.host);\r\n                const remoteEndPoint = `${remoteIPAddress}:${portForwardMessage.port}`;\r\n                remoteConnector = (_a = this.remoteConnectors.get(portForwardMessage.port)) !== null && _a !== void 0 ? _a : null;\r\n                if (!remoteConnector) {\r\n                    this.trace(dev_tunnels_ssh_1.TraceLevel.Error, dev_tunnels_ssh_1.SshTraceEventIds.portForwardRequestInvalid, 'PortForwardingService received forwarding channel ' +\r\n                        `for ${remoteEndPoint} that was not requested.`);\r\n                    request.failureReason = dev_tunnels_ssh_1.SshChannelOpenFailureReason.connectFailed;\r\n                    request.failureDescription = 'Forwarding channel was not requested.';\r\n                    return;\r\n                }\r\n            }\r\n            else if (!this.acceptRemoteConnectionsForNonForwardedPorts) {\r\n                const errorMessage = 'The session has disabled connections to non-forwarded ports.';\r\n                this.session.trace(dev_tunnels_ssh_1.TraceLevel.Warning, dev_tunnels_ssh_1.SshTraceEventIds.portForwardChannelOpenFailed, errorMessage);\r\n                request.failureReason = dev_tunnels_ssh_1.SshChannelOpenFailureReason.administrativelyProhibited;\r\n                request.failureDescription = errorMessage;\r\n                return;\r\n            }\r\n        }\r\n        const portForwardRequest = new dev_tunnels_ssh_1.SshChannelOpeningEventArgs(portForwardMessage, request.channel, request.isRemoteRequest);\r\n        await super.onChannelOpening(portForwardRequest, cancellation);\r\n        request.failureReason = portForwardRequest.failureReason;\r\n        request.failureDescription = portForwardRequest.failureDescription;\r\n        request.openingPromise = portForwardRequest.openingPromise;\r\n        if (request.failureReason === dev_tunnels_ssh_1.SshChannelOpenFailureReason.none &&\r\n            request.isRemoteRequest &&\r\n            this.forwardConnectionsToLocalPorts) {\r\n            if (remoteConnector) {\r\n                // The forwarding was initiated by this session.\r\n                await remoteConnector.onPortChannelOpening(request, cancellation);\r\n                const localPort = remoteConnector instanceof remotePortForwarder_1.RemotePortForwarder ? remoteConnector.localPort : null;\r\n                const remotePort = remoteConnector instanceof remotePortForwarder_1.RemotePortForwarder\r\n                    ? remoteConnector.remotePort\r\n                    : portForwardMessage.port;\r\n                const forwardedPort = new forwardedPort_1.ForwardedPort(localPort, remotePort, false);\r\n                this.localForwardedPorts.addChannel(forwardedPort, request.channel);\r\n            }\r\n            else {\r\n                // THe forwarding was initiated by the remote session.\r\n                await remotePortForwarder_1.RemotePortForwarder.forwardChannel(this, request, portForwardMessage.host, portForwardMessage.port, portForwardMessage.port, this.trace, cancellation);\r\n            }\r\n        }\r\n    }\r\n    /* @internal */\r\n    async openChannel(session, channelType, originatorIPAddress, originatorPort, host, port, cancellation) {\r\n        let forwardedPort = undefined;\r\n        if (channelType === PortForwardingService_1.portForwardChannelType) {\r\n            forwardedPort = this.remoteForwardedPorts.find((p) => p.remotePort === port || (p.remotePort === null && p.localPort === port));\r\n            if (!forwardedPort) {\r\n                throw new Error(`Port ${port} is not being forwarded.`);\r\n            }\r\n        }\r\n        const openMessage = await this.messageFactory.createChannelOpenMessageAsync(port);\r\n        openMessage.channelType = channelType;\r\n        openMessage.originatorIPAddress = originatorIPAddress !== null && originatorIPAddress !== void 0 ? originatorIPAddress : '';\r\n        openMessage.originatorPort = originatorPort !== null && originatorPort !== void 0 ? originatorPort : 0;\r\n        openMessage.host = host;\r\n        openMessage.port = port;\r\n        const trace = this.session.trace;\r\n        let channel;\r\n        try {\r\n            channel = await session.openChannel(openMessage, null, cancellation);\r\n            trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardChannelOpened, `PortForwardingService opened ${channelType} channel #${channel.channelId} for ${host}:${port}.`);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            trace(dev_tunnels_ssh_1.TraceLevel.Error, dev_tunnels_ssh_1.SshTraceEventIds.portForwardChannelOpenFailed, `PortForwardingService failed to open ${channelType} channel for ${host}:${port}: ${e.message}`, e);\r\n            throw e;\r\n        }\r\n        if (channelType === PortForwardingService_1.portForwardChannelType) {\r\n            this.remoteForwardedPorts.addChannel(forwardedPort, channel);\r\n        }\r\n        return channel;\r\n    }\r\n    dispose() {\r\n        // Do not dispose StreamForwarder objects here, since they may be transferred to\r\n        // other sessions when reconnecting. The StreamForwarders will self-dispose when\r\n        // their underlying transport streams are closed.\r\n        const disposables = [\r\n            ...this.localForwarders.values(),\r\n            ...this.remoteConnectors.values(),\r\n        ];\r\n        this.streamForwarders.splice(0, this.streamForwarders.length);\r\n        this.localForwarders.clear();\r\n        this.remoteConnectors.clear();\r\n        for (const disposable of disposables) {\r\n            disposable.dispose();\r\n        }\r\n        super.dispose();\r\n    }\r\n};\r\nPortForwardingService.portForwardRequestType = 'tcpip-forward';\r\nPortForwardingService.cancelPortForwardRequestType = 'cancel-tcpip-forward';\r\nPortForwardingService.portForwardChannelType = 'forwarded-tcpip';\r\nPortForwardingService.reversePortForwardChannelType = 'direct-tcpip';\r\nPortForwardingService = PortForwardingService_1 = __decorate([\r\n    (0, dev_tunnels_ssh_1.serviceActivation)({ sessionRequest: PortForwardingService_1.portForwardRequestType }),\r\n    (0, dev_tunnels_ssh_1.serviceActivation)({ sessionRequest: PortForwardingService_1.cancelPortForwardRequestType }),\r\n    (0, dev_tunnels_ssh_1.serviceActivation)({ channelType: PortForwardingService_1.portForwardChannelType }),\r\n    (0, dev_tunnels_ssh_1.serviceActivation)({ channelType: PortForwardingService_1.reversePortForwardChannelType })\r\n], PortForwardingService);\r\nexports.PortForwardingService = PortForwardingService;\r\n//# sourceMappingURL=portForwardingService.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RemotePortConnector = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst portForwardRequestMessage_1 = require(\"../messages/portForwardRequestMessage\");\r\nconst portForwardSuccessMessage_1 = require(\"../messages/portForwardSuccessMessage\");\r\nconst portForwardingService_1 = require(\"./portForwardingService\");\r\n/**\r\n * Base class for services that receive SSH channels forwarded from a remote port.\r\n */\r\nclass RemotePortConnector extends dev_tunnels_ssh_1.SshService {\r\n    /* @internal */\r\n    constructor(session, remoteIPAddress, remotePort) {\r\n        super(session);\r\n        this.forwarding = false;\r\n        this.remoteIPAddress = remoteIPAddress;\r\n        this.port = remotePort;\r\n    }\r\n    /**\r\n     * Port that the remote server is listening on. If the request specified port 0, this\r\n     * property returns the actual available port that was chosen by the server.\r\n     */\r\n    get remotePort() {\r\n        return this.port;\r\n    }\r\n    /* @internal */\r\n    async request(request, cancellation) {\r\n        if (this.forwarding) {\r\n            throw new Error('Already forwarding.');\r\n        }\r\n        request.addressToBind = this.remoteIPAddress;\r\n        request.port = this.remotePort;\r\n        request.wantReply = true;\r\n        const response = await this.session.requestResponse(request, portForwardSuccessMessage_1.PortForwardSuccessMessage, dev_tunnels_ssh_1.SessionRequestFailureMessage, cancellation);\r\n        let result = false;\r\n        if (response instanceof portForwardSuccessMessage_1.PortForwardSuccessMessage) {\r\n            if (response.port !== 0) {\r\n                this.port = response.port;\r\n            }\r\n            result = true;\r\n        }\r\n        this.forwarding = result;\r\n        return result;\r\n    }\r\n    dispose() {\r\n        if (this.forwarding) {\r\n            this.forwarding = false;\r\n            const request = new portForwardRequestMessage_1.PortForwardRequestMessage();\r\n            request.requestType = portForwardingService_1.PortForwardingService.cancelPortForwardRequestType;\r\n            request.addressToBind = this.remoteIPAddress;\r\n            request.port = this.remotePort;\r\n            request.wantReply = false;\r\n            try {\r\n                this.session.request(request).catch((e) => {\r\n                    // Ignore async cancel failure.\r\n                    // Error details have already been trace.\r\n                });\r\n            }\r\n            catch (e) { }\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexports.RemotePortConnector = RemotePortConnector;\r\n//# sourceMappingURL=remotePortConnector.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RemotePortForwarder = void 0;\r\nconst net = require(\"net\");\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst streamForwarder_1 = require(\"./streamForwarder\");\r\nconst remotePortConnector_1 = require(\"./remotePortConnector\");\r\n/**\r\n * Receives SSH channels forwarded from a remote port and forwards them on to a local port.\r\n */\r\nclass RemotePortForwarder extends remotePortConnector_1.RemotePortConnector {\r\n    /* @internal */\r\n    constructor(pfs, session, remoteIPAddress, remotePort, localHost, localPort) {\r\n        super(session, remoteIPAddress, remotePort);\r\n        this.pfs = pfs;\r\n        this.localHost = localHost;\r\n        this.localPort = localPort;\r\n    }\r\n    /* @internal */\r\n    async onPortChannelOpening(request, cancellation) {\r\n        await RemotePortForwarder.forwardChannel(this.pfs, request, this.localHost, this.localPort, this.remotePort, this.trace, cancellation);\r\n    }\r\n    /* @internal */\r\n    static async forwardChannel(pfs, request, localHost, localPort, remotePort, trace, cancellation) {\r\n        const channel = request.channel;\r\n        const forwardedStream = await pfs.forwardedPortConnecting(remotePort !== null && remotePort !== void 0 ? remotePort : localPort, true, new dev_tunnels_ssh_1.SshStream(channel), cancellation);\r\n        if (!forwardedStream) {\r\n            // The event handler rejected the connection.\r\n            request.failureReason = dev_tunnels_ssh_1.SshChannelOpenFailureReason.connectFailed;\r\n            return;\r\n        }\r\n        const socket = net.createConnection({\r\n            host: localHost,\r\n            port: localPort,\r\n            // This option enables connection attempts for multiple resolved IP addresses,\r\n            // aka \"Happy Eyeballs\" as described in https://datatracker.ietf.org/doc/html/rfc8305.\r\n            // Effectively this enables fast connections to either 127.0.0.1 or ::1 when 'localhost'\r\n            // is specified as the hostname. Note this option is available starting with Node.js\r\n            // v18.13 and is enabled by default starting with Node.js v20.0.\r\n            autoSelectFamily: true,\r\n            // Use the minimum supported connection attempt delay when connecting to 'localhost'.\r\n            // See https://nodejs.org/api/net.html#socketconnectoptions-connectlistener\r\n            autoSelectFamilyAttemptTimeout: localHost === 'localhost' ? 10 : 250,\r\n        });\r\n        const connectCompletion = new dev_tunnels_ssh_1.PromiseCompletionSource();\r\n        const cancellationRegistration = cancellation\r\n            ? cancellation.onCancellationRequested(() => socket.destroy(new Error('Cancelled.')))\r\n            : null;\r\n        try {\r\n            socket.once('connect', () => {\r\n                connectCompletion.resolve();\r\n            });\r\n            socket.once('error', (e) => {\r\n                connectCompletion.reject(e);\r\n            });\r\n            await connectCompletion.promise;\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error) || (cancellation === null || cancellation === void 0 ? void 0 : cancellation.isCancellationRequested)) {\r\n                throw e;\r\n            }\r\n            trace(dev_tunnels_ssh_1.TraceLevel.Error, dev_tunnels_ssh_1.SshTraceEventIds.portForwardConnectionFailed, `${channel.session} PortForwardingService forwarded channel #${channel.channelId} ` +\r\n                `connection to ${localHost}:${localPort} failed: ${e.message}`, e);\r\n            request.failureReason = dev_tunnels_ssh_1.SshChannelOpenFailureReason.connectFailed;\r\n            request.failureDescription = e.message;\r\n        }\r\n        finally {\r\n            cancellationRegistration === null || cancellationRegistration === void 0 ? void 0 : cancellationRegistration.dispose();\r\n        }\r\n        // TODO: Set socket options?\r\n        const streamForwarder = new streamForwarder_1.StreamForwarder(socket, forwardedStream, channel.session.trace);\r\n        trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.portForwardConnectionOpened, `${channel.session} PortForwardingService forwarded channel ` +\r\n            `#${channel.channelId} connection to ${localHost}:${localPort}.`);\r\n        pfs.streamForwarders.push(streamForwarder);\r\n    }\r\n}\r\nexports.RemotePortForwarder = RemotePortForwarder;\r\n//# sourceMappingURL=remotePortForwarder.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RemotePortStreamer = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst remotePortConnector_1 = require(\"./remotePortConnector\");\r\n/**\r\n * Receives SSH channels forwarded from a remote port and exposes them as streams.\r\n */\r\nclass RemotePortStreamer extends remotePortConnector_1.RemotePortConnector {\r\n    /* @internal */\r\n    constructor(session, remoteIPAddress, remotePort) {\r\n        super(session, remoteIPAddress, remotePort);\r\n        this.streamOpenedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event raised when a new connection stream is forwarded from the remote port.\r\n         */\r\n        this.onStreamOpened = this.streamOpenedEmitter.event;\r\n    }\r\n    /* @internal */\r\n    async onPortChannelOpening(request, cancellation) {\r\n        const stream = new dev_tunnels_ssh_1.SshStream(request.channel);\r\n        this.streamOpenedEmitter.fire(stream);\r\n    }\r\n}\r\nexports.RemotePortStreamer = RemotePortStreamer;\r\n//# sourceMappingURL=remotePortStreamer.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StreamForwarder = void 0;\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst net_1 = require(\"net\");\r\nclass StreamForwarder {\r\n    /* @internal */\r\n    constructor(localStream, remoteStream, trace) {\r\n        this.localStream = localStream;\r\n        this.remoteStream = remoteStream;\r\n        this.trace = trace;\r\n        this.disposed = false;\r\n        if (!localStream)\r\n            throw new TypeError('Local stream is required.');\r\n        if (!remoteStream)\r\n            throw new TypeError('Remote stream is required.');\r\n        localStream.pipe(remoteStream);\r\n        remoteStream.pipe(localStream);\r\n    }\r\n    close(abort, errorMessage) {\r\n        try {\r\n            if (abort && this.localStream instanceof net_1.Socket) {\r\n                this.localStream.destroy();\r\n            }\r\n            else {\r\n                this.localStream.end();\r\n            }\r\n            if (this.remoteStream instanceof dev_tunnels_ssh_1.SshStream) {\r\n                this.remoteStream.channel.close('SIGABRT', errorMessage).catch((e) => { });\r\n            }\r\n            else {\r\n                this.remoteStream.end();\r\n            }\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Verbose, dev_tunnels_ssh_1.SshTraceEventIds.portForwardChannelClosed, `Stream forwarder ${abort ? 'aborted' : 'closed'} connection.`);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Warning, dev_tunnels_ssh_1.SshTraceEventIds.unknownError, `Stream forwarder unexpected error closing connection:  ${e.message}`);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true;\r\n            this.close(true);\r\n        }\r\n    }\r\n}\r\nexports.StreamForwarder = StreamForwarder;\r\n//# sourceMappingURL=streamForwarder.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshClient = void 0;\r\nconst net = require(\"net\");\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\n/**\r\n * Enables opening an SSH session over a TCP connection.\r\n *\r\n * It's possible to create an `SshClientSession` over any `Stream` instance;\r\n * this class is merely a convenient helper that manages creating a session\r\n * over a Node.js TCP `Socket`.\r\n */\r\nclass SshClient {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.sessions = [];\r\n        /**\r\n         * Gets or sets a function that handles trace messages associated with the client session.\r\n         *\r\n         * By default, no messages are traced. To enable tracing, set this property to a function\r\n         * that routes the message to console.log, a file, or anywhere else.\r\n         *\r\n         * @param level The level of message being traced: error, warning, info, or verbose.\r\n         * @param eventId An integer that identifies the type of event. Normally this is one of\r\n         * the values from `SshTraceEventIds`, but extensions may define additional event IDs.\r\n         * @param msg A description of the event (non-localized).\r\n         * @param err Optional `Error` object associated with the event, often included with\r\n         * warning or error events. While the `Error.message` property is typically included as\r\n         * (part of) the `msg` parameter, the error object may contain additional useful context\r\n         * such as the stack trace.\r\n         */\r\n        this.trace = (level, eventId, msg, err) => { };\r\n        if (!config)\r\n            throw new TypeError('SshSessionConfiguration is required.');\r\n    }\r\n    async openSession(serverHost, serverPort, cancellation) {\r\n        if (!serverHost)\r\n            throw new TypeError('Server host is reqiured.');\r\n        const stream = await this.openConnection(serverHost, serverPort, cancellation);\r\n        const session = new dev_tunnels_ssh_1.SshClientSession(this.config);\r\n        session.trace = this.trace;\r\n        await session.connect(stream, cancellation);\r\n        this.sessions.push(session);\r\n        return session;\r\n    }\r\n    async openConnection(serverHost, serverPort, cancellation) {\r\n        const socket = new net.Socket();\r\n        await new Promise((resolve, reject) => {\r\n            socket.on('connect', resolve);\r\n            socket.on('error', reject);\r\n            if (cancellation) {\r\n                if (cancellation.isCancellationRequested) {\r\n                    reject(new dev_tunnels_ssh_1.CancellationError());\r\n                    return;\r\n                }\r\n                cancellation.onCancellationRequested(reject);\r\n            }\r\n            socket.connect(serverPort || SshClient.defaultServerPort, serverHost);\r\n        });\r\n        return new dev_tunnels_ssh_1.NodeStream(socket);\r\n    }\r\n    async reconnectSession(session, serverHost, serverPort, cancellation) {\r\n        const stream = await this.openConnection(serverHost, serverPort, cancellation);\r\n        await session.reconnect(stream, cancellation);\r\n    }\r\n    dispose() {\r\n        while (this.sessions.length > 0) {\r\n            const session = this.sessions.shift();\r\n            session.dispose();\r\n        }\r\n    }\r\n}\r\nexports.SshClient = SshClient;\r\nSshClient.defaultServerPort = 22;\r\n//# sourceMappingURL=sshClient.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshServer = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst dev_tunnels_ssh_1 = require(\"@microsoft/dev-tunnels-ssh\");\r\nconst tcpListenerFactory_1 = require(\"./tcpListenerFactory\");\r\n/**\r\n * Enables accepting SSH sessions on a TCP socket.\r\n *\r\n * It's possible to create an `SshServerSession` over any `Stream` instance;\r\n * this class is merely a convenient helper that manages creating sessions\r\n * over Node.js TCP `Socket`s from incoming connections.\r\n */\r\nclass SshServer {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.sessions = [];\r\n        /**\r\n         * Gets or sets a function that handles trace messages associated with the server sessions.\r\n         *\r\n         * By default, no messages are traced. To enable tracing, set this property to a function\r\n         * that routes the message to console.log, a file, or anywhere else.\r\n         *\r\n         * @param level The level of message being traced: error, warning, info, or verbose.\r\n         * @param eventId An integer that identifies the type of event. Normally this is one of\r\n         * the values from `SshTraceEventIds`, but extensions may define additional event IDs.\r\n         * @param msg A description of the event (non-localized).\r\n         * @param err Optional `Error` object associated with the event, often included with\r\n         * warning or error events. While the `Error.message` property is typically included as\r\n         * (part of) the `msg` parameter, the error object may contain additional useful context\r\n         * such as the stack trace.\r\n         */\r\n        this.trace = (level, eventId, msg, err) => { };\r\n        this.errorEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onError = this.errorEmitter.event;\r\n        this.sessionOpenedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onSessionOpened = this.sessionOpenedEmitter.event;\r\n        this.credentials = { publicKeys: [] };\r\n        /**\r\n         * Gets or sets a factory for creating TCP listeners.\r\n         *\r\n         * Applications may override this factory to provide custom logic for selecting\r\n         * local port numbers to listen on for port-forwarding.\r\n         */\r\n        this.tcpListenerFactory = new tcpListenerFactory_1.DefaultTcpListenerFactory();\r\n        if (!config)\r\n            throw new TypeError('SshSessionConfiguration is required.');\r\n        if (config.protocolExtensions.includes(dev_tunnels_ssh_1.SshProtocolExtensionNames.sessionReconnect)) {\r\n            this.reconnectableSessions = [];\r\n        }\r\n    }\r\n    async acceptSessions(localPort, localAddress) {\r\n        if (!localAddress) {\r\n            localAddress = '0.0.0.0';\r\n        }\r\n        const portPrefix = localAddress === '0.0.0.0' ? 'port ' : localAddress + ':';\r\n        try {\r\n            this.tcpListener = await this.tcpListenerFactory.createTcpListener(localAddress, localPort, false);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(dev_tunnels_ssh_1.TraceLevel.Error, dev_tunnels_ssh_1.SshTraceEventIds.serverListenFailed, `SshServer failed to listen on ${portPrefix}${localPort}: ${e.message}`, e);\r\n            throw e;\r\n        }\r\n        this.tcpListener.addListener('connection', this.acceptSession.bind(this));\r\n        this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.serverListening, `SshServer listening on ${portPrefix}${localPort}.`);\r\n    }\r\n    async acceptConnection(socket) {\r\n        socket.setNoDelay(true);\r\n        return new dev_tunnels_ssh_1.NodeStream(socket);\r\n    }\r\n    async acceptSession(socket) {\r\n        this.trace(dev_tunnels_ssh_1.TraceLevel.Info, dev_tunnels_ssh_1.SshTraceEventIds.serverClientConnected, 'SshServer client connected.');\r\n        const stream = await this.acceptConnection(socket);\r\n        const session = new dev_tunnels_ssh_1.SshServerSession(this.config, this.reconnectableSessions);\r\n        session.trace = this.trace;\r\n        session.credentials = this.credentials;\r\n        this.sessions.push(session);\r\n        session.onClosed((e) => {\r\n            const sessionIndex = this.sessions.indexOf(session);\r\n            if (sessionIndex >= 0) {\r\n                this.sessions.splice(sessionIndex, 1);\r\n            }\r\n        });\r\n        this.sessionOpenedEmitter.fire(session);\r\n        try {\r\n            await session.connect(stream);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            if (e instanceof dev_tunnels_ssh_1.SshConnectionError) {\r\n                await session.close(e.reason || dev_tunnels_ssh_1.SshDisconnectReason.connectionLost, e.message, e);\r\n            }\r\n            else {\r\n                await session.close(dev_tunnels_ssh_1.SshDisconnectReason.protocolError, e.message, e);\r\n            }\r\n            this.errorEmitter.fire(e);\r\n        }\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.tcpListener) === null || _a === void 0 ? void 0 : _a.close();\r\n    }\r\n}\r\nexports.SshServer = SshServer;\r\n//# sourceMappingURL=sshServer.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultTcpListenerFactory = void 0;\r\nconst net = require(\"net\");\r\nclass DefaultTcpListenerFactory {\r\n    async createTcpListener(localIPAddress, localPort, canChangePort, cancellation) {\r\n        if (!localIPAddress)\r\n            throw new TypeError('Local IP address is required.');\r\n        if (!Number.isInteger(localPort) || localPort < 0)\r\n            throw new TypeError('Local port must be a non-negative integer.');\r\n        const listener = net.createServer();\r\n        await new Promise((resolve, reject) => {\r\n            listener.listen({\r\n                host: localIPAddress,\r\n                port: localPort,\r\n                ipv6Only: net.isIPv6(localIPAddress),\r\n                exclusive: false,\r\n            });\r\n            listener.on('listening', resolve);\r\n            listener.on('error', reject);\r\n        });\r\n        return listener;\r\n    }\r\n}\r\nexports.DefaultTcpListenerFactory = DefaultTcpListenerFactory;\r\n//# sourceMappingURL=tcpListenerFactory.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.curves = void 0;\r\n/**\r\n * List of EC curves supported by the SSH ECDSA algorithm.\r\n */\r\nexports.curves = [\r\n    {\r\n        shortName: 'P-256',\r\n        name: 'nistp256',\r\n        oid: '1.2.840.10045.3.1.7',\r\n        keySize: 256,\r\n    },\r\n    {\r\n        shortName: 'P-384',\r\n        name: 'nistp384',\r\n        oid: '1.3.132.0.34',\r\n        keySize: 384,\r\n    },\r\n    {\r\n        shortName: 'P-521',\r\n        name: 'nistp521',\r\n        oid: '1.3.132.0.35',\r\n        keySize: 521,\r\n    },\r\n];\r\n//# sourceMappingURL=ecdsaCurves.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EncryptionAlgorithm = void 0;\r\nclass EncryptionAlgorithm {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n}\r\nexports.EncryptionAlgorithm = EncryptionAlgorithm;\r\n//# sourceMappingURL=encryptionAlgorithm.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HmacAlgorithm = void 0;\r\nclass HmacAlgorithm {\r\n    constructor(name, algorithmName, keyLength, digestLength) {\r\n        this.name = name;\r\n        this.algorithmName = algorithmName;\r\n        this.keyLength = keyLength;\r\n        this.digestLength = digestLength;\r\n    }\r\n}\r\nexports.HmacAlgorithm = HmacAlgorithm;\r\n//# sourceMappingURL=hmacAlgorithm.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyExchangeAlgorithm = void 0;\r\nclass KeyExchangeAlgorithm {\r\n    constructor(name, keySizeInBits, hashAlgorithmName, hashDigestLength) {\r\n        this.name = name;\r\n        this.keySizeInBits = keySizeInBits;\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.hashDigestLength = hashDigestLength;\r\n    }\r\n}\r\nexports.KeyExchangeAlgorithm = KeyExchangeAlgorithm;\r\n//# sourceMappingURL=keyExchangeAlgorithm.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sec1KeyFormatter = exports.Pkcs1KeyFormatter = exports.parsePem = exports.formatPem = void 0;\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nconst derData_1 = require(\"../../io/derData\");\r\nconst ecdsaCurves_1 = require(\"../ecdsaCurves\");\r\nfunction formatPem(keyBytes, name) {\r\n    const key = `-----BEGIN ${name}-----\\n` +\r\n        keyBytes\r\n            .toString('base64')\r\n            .match(/.{1,64}/g)\r\n            .join('\\n') +\r\n        '\\n' +\r\n        `-----END ${name}-----\\n`;\r\n    return key;\r\n}\r\nexports.formatPem = formatPem;\r\nfunction parsePem(key) {\r\n    const keyBase64 = key.replace(/-+[^-\\n]+KEY-+/g, '').replace(/\\s/g, '');\r\n    const keyBytes = Buffer.from(keyBase64, 'base64');\r\n    return keyBytes;\r\n}\r\nexports.parsePem = parsePem;\r\n/**\r\n * Provides *minimal* PKCS#1 import/export support for Node.js keys.\r\n *\r\n * This code is redundant with some of the PKCS#1 import/export code in the separate\r\n * `ssh-keys` library; that is intentional, and necessary to support a consistent\r\n * interface for importing/exporting key parameters in the core `ssh` library.\r\n */\r\nclass Pkcs1KeyFormatter {\r\n    static formatRsaPublic(rsa) {\r\n        const writer = new derData_1.DerWriter(Buffer.alloc(1024));\r\n        writer.writeInteger(rsa.modulus);\r\n        writer.writeInteger(rsa.exponent);\r\n        return writer.toBuffer();\r\n    }\r\n    static formatRsaPrivate(rsa) {\r\n        if (!(rsa.d && rsa.p && rsa.q && rsa.dp && rsa.dq && rsa.qi)) {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        const writer = new derData_1.DerWriter(Buffer.alloc(2048));\r\n        writer.writeInteger(bigInt_1.BigInt.fromInt32(0));\r\n        writer.writeInteger(rsa.modulus);\r\n        writer.writeInteger(rsa.exponent);\r\n        writer.writeInteger(rsa.d);\r\n        writer.writeInteger(rsa.p);\r\n        writer.writeInteger(rsa.q);\r\n        writer.writeInteger(rsa.dp);\r\n        writer.writeInteger(rsa.dq);\r\n        writer.writeInteger(rsa.qi);\r\n        return writer.toBuffer();\r\n    }\r\n    static parseRsaPublic(keyBytes) {\r\n        const reader = new derData_1.DerReader(keyBytes);\r\n        const modulus = reader.readInteger();\r\n        const exponent = reader.readInteger();\r\n        return { modulus, exponent };\r\n    }\r\n    static parseRsaPrivate(keyBytes) {\r\n        const reader = new derData_1.DerReader(keyBytes);\r\n        const version = reader.readInteger();\r\n        const modulus = reader.readInteger();\r\n        const exponent = reader.readInteger();\r\n        const d = reader.readInteger();\r\n        const p = reader.readInteger();\r\n        const q = reader.readInteger();\r\n        const dp = reader.readInteger();\r\n        const dq = reader.readInteger();\r\n        const qi = reader.readInteger();\r\n        return { modulus, exponent, d, p, q, dp, dq, qi };\r\n    }\r\n}\r\nexports.Pkcs1KeyFormatter = Pkcs1KeyFormatter;\r\n/**\r\n * Provides *minimal* SEC1 import/export support for Node.js keys.\r\n *\r\n * This code is redundant with some of the SEC1 import/export code in the separate\r\n * `ssh-keys` library; that is intentional, and necessary to support a consistent\r\n * interface for importing/exporting key parameters in the core `ssh` library.\r\n */\r\nclass Sec1KeyFormatter {\r\n    static formatECPublic(ec) {\r\n        const curve = ecdsaCurves_1.curves.find((c) => c.oid === ec.curve.oid);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        const writer = new derData_1.DerWriter(Buffer.alloc(512));\r\n        const oidsWriter = new derData_1.DerWriter(Buffer.alloc(100));\r\n        oidsWriter.writeObjectIdentifier(Sec1KeyFormatter.ecPublicKeyOid);\r\n        oidsWriter.writeObjectIdentifier(ec.curve.oid);\r\n        writer.writeSequence(oidsWriter);\r\n        const x = ec.x.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const y = ec.y.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const publicKeyData = Buffer.alloc(1 + x.length + y.length);\r\n        publicKeyData[0] = 4; // Indicates uncompressed curve format\r\n        x.copy(publicKeyData, 1);\r\n        y.copy(publicKeyData, 1 + x.length);\r\n        writer.writeBitString(publicKeyData);\r\n        return writer.toBuffer();\r\n    }\r\n    static formatECPrivate(ec) {\r\n        const curve = ecdsaCurves_1.curves.find((c) => c.oid === ec.curve.oid);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        const writer = new derData_1.DerWriter(Buffer.alloc(512));\r\n        writer.writeInteger(bigInt_1.BigInt.fromInt32(1)); // version\r\n        writer.writeOctetString(ec.d.toBytes({ unsigned: true, length: keySizeInBytes }));\r\n        const curveWriter = new derData_1.DerWriter(Buffer.alloc(100));\r\n        curveWriter.writeObjectIdentifier(ec.curve.oid);\r\n        writer.writeTagged(0, curveWriter);\r\n        const x = ec.x.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const y = ec.y.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const publicKeyData = Buffer.alloc(1 + x.length + y.length);\r\n        publicKeyData[0] = 4; // Indicates uncompressed curve format\r\n        x.copy(publicKeyData, 1);\r\n        y.copy(publicKeyData, 1 + x.length);\r\n        const keyWriter = new derData_1.DerWriter(Buffer.alloc(512));\r\n        keyWriter.writeBitString(publicKeyData);\r\n        writer.writeTagged(1, keyWriter);\r\n        return writer.toBuffer();\r\n    }\r\n    static parseECPublic(keyBytes) {\r\n        var _a;\r\n        const reader = new derData_1.DerReader(keyBytes);\r\n        const oidsReader = reader.readSequence();\r\n        const keyTypeOid = oidsReader.readObjectIdentifier();\r\n        if (keyTypeOid !== Sec1KeyFormatter.ecPublicKeyOid) {\r\n            throw new Error(`Unexpected key type OID: ${keyTypeOid}`);\r\n        }\r\n        const curveOid = oidsReader.readObjectIdentifier();\r\n        const curveName = (_a = ecdsaCurves_1.curves.find((c) => c.oid === curveOid)) === null || _a === void 0 ? void 0 : _a.name;\r\n        const xy = reader.readBitString();\r\n        if (xy.length % 2 !== 1) {\r\n            throw new Error(`Unexpected key data length: ${xy.length}`);\r\n        }\r\n        const x = bigInt_1.BigInt.fromBytes(xy.slice(1, 1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const y = bigInt_1.BigInt.fromBytes(xy.slice(1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const ec = {\r\n            curve: { name: curveName, oid: curveOid },\r\n            x,\r\n            y,\r\n        };\r\n        return ec;\r\n    }\r\n    static parseECPrivate(keyBytes) {\r\n        var _a;\r\n        const reader = new derData_1.DerReader(keyBytes);\r\n        const version = reader.readInteger().toInt32();\r\n        if (version !== 1) {\r\n            throw new Error(`Unsupported SEC1 format version: ${version}`);\r\n        }\r\n        const d = bigInt_1.BigInt.fromBytes(reader.readOctetString(), { unsigned: true });\r\n        const curveReader = reader.tryReadTagged(0);\r\n        if (!curveReader) {\r\n            throw new Error('SEC1 curve info not found.');\r\n        }\r\n        const curveOid = curveReader.readObjectIdentifier();\r\n        const curveName = (_a = ecdsaCurves_1.curves.find((c) => c.oid === curveOid)) === null || _a === void 0 ? void 0 : _a.name;\r\n        const publicKeyReader = reader.tryReadTagged(1);\r\n        if (!publicKeyReader) {\r\n            throw new Error('SEC1 public key data not found.');\r\n        }\r\n        const xy = publicKeyReader.readBitString();\r\n        if (xy.length % 2 !== 1) {\r\n            throw new Error(`Unexpected key data length: ${xy.length}`);\r\n        }\r\n        const x = bigInt_1.BigInt.fromBytes(xy.slice(1, 1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const y = bigInt_1.BigInt.fromBytes(xy.slice(1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const ec = {\r\n            curve: { name: curveName, oid: curveOid },\r\n            x,\r\n            y,\r\n            d,\r\n        };\r\n        return ec;\r\n    }\r\n}\r\nexports.Sec1KeyFormatter = Sec1KeyFormatter;\r\nSec1KeyFormatter.ecPublicKeyOid = '1.2.840.10045.2.1';\r\n//# sourceMappingURL=keyFormatters.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeECDsa = void 0;\r\nconst crypto = require(\"crypto\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst publicKeyAlgorithm_1 = require(\"../publicKeyAlgorithm\");\r\nconst ecdsaCurves_1 = require(\"../ecdsaCurves\");\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nconst derData_1 = require(\"../../io/derData\");\r\nconst sshData_1 = require(\"../../io/sshData\");\r\nconst keyFormatters_1 = require(\"./keyFormatters\");\r\nconst nodeVersionParts = process.versions.node.split('.').map((v) => parseInt(v, 10));\r\nconst nodeGenerateKeyPairSupport = nodeVersionParts[0] > 10 || (nodeVersionParts[0] === 10 && nodeVersionParts[1] >= 12);\r\nconst nodeKeyObjectSupport = nodeVersionParts[0] > 11 || (nodeVersionParts[0] === 11 && nodeVersionParts[1] >= 6);\r\nclass NodeECDsaKeyPair {\r\n    /**\r\n     * Constructs a new ECDSA key pair object.\r\n     *\r\n     * @param algorithmName Key pair algorithm name. If unspecified, the key pair object must be\r\n     * initialized before use via `importParameters()`.\r\n     */\r\n    constructor(algorithmName) {\r\n        this.comment = null;\r\n        if (algorithmName) {\r\n            this.algorithmName = algorithmName;\r\n        }\r\n    }\r\n    get hasPublicKey() {\r\n        return !!this.publicKey;\r\n    }\r\n    get hasPrivateKey() {\r\n        return !!this.privateKey;\r\n    }\r\n    get keyAlgorithmName() {\r\n        return this.algorithmName;\r\n    }\r\n    get algorithmName() {\r\n        return this.algorithm;\r\n    }\r\n    set algorithmName(value) {\r\n        const curveName = value.split('-')[2];\r\n        this.curve = ecdsaCurves_1.curves.find((c) => c.name === curveName);\r\n        if (!this.curve) {\r\n            throw new Error('Invalid or unsupported ECDSA algorithm: ' + value);\r\n        }\r\n        this.algorithm = value;\r\n    }\r\n    generate() {\r\n        if (nodeGenerateKeyPairSupport && nodeKeyObjectSupport) {\r\n            return this.generateNodeKeyPairObjects();\r\n        }\r\n        else if (nodeGenerateKeyPairSupport) {\r\n            return this.generateNodeKeyPairBuffers();\r\n        }\r\n        else {\r\n            return this.generateExternalKeyPair();\r\n        }\r\n    }\r\n    async generateNodeKeyPairObjects() {\r\n        [this.publicKey, this.privateKey] = await new Promise((resolve, reject) => {\r\n            const keyGenParams = {\r\n                namedCurve: this.curve.shortName,\r\n            };\r\n            try {\r\n                crypto.generateKeyPair('ec', keyGenParams, (err, publicKey, privateKey) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve([publicKey, privateKey]);\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async generateNodeKeyPairBuffers() {\r\n        [this.publicKey, this.privateKey] = await new Promise((resolve, reject) => {\r\n            const keyGenParams = {\r\n                namedCurve: this.curve.shortName,\r\n                publicKeyEncoding: { type: 'spki', format: 'pem' },\r\n                privateKeyEncoding: {\r\n                    type: 'sec1',\r\n                    format: 'pem',\r\n                    cipher: undefined,\r\n                    passphrase: undefined,\r\n                },\r\n            };\r\n            try {\r\n                crypto.generateKeyPair('ec', keyGenParams, (err, publicKey, privateKey) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve([publicKey, privateKey]);\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async generateExternalKeyPair() {\r\n        throw new Error('This version of node does not support generating key pairs. Use node >= 10.12.');\r\n    }\r\n    async setPublicKeyBytes(keyBytes, algorithmName) {\r\n        if (!keyBytes) {\r\n            throw new TypeError('Buffer is required.');\r\n        }\r\n        // Read public key in SSH format.\r\n        const reader = new sshData_1.SshDataReader(keyBytes);\r\n        const readAlgorithmName = reader.readString('ascii');\r\n        this.algorithmName = algorithmName || readAlgorithmName;\r\n        const curveName = reader.readString('ascii');\r\n        this.algorithmName = `ecdsa-sha2-${curveName}`;\r\n        const xy = reader.readBinary();\r\n        const x = bigInt_1.BigInt.fromBytes(xy.slice(1, 1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const y = bigInt_1.BigInt.fromBytes(xy.slice(1 + (xy.length - 1) / 2), { unsigned: true });\r\n        const derKeyBytes = keyFormatters_1.Sec1KeyFormatter.formatECPublic({\r\n            curve: { name: this.curve.name, oid: this.curve.oid },\r\n            x,\r\n            y,\r\n        });\r\n        if (nodeKeyObjectSupport) {\r\n            this.publicKey = crypto.createPublicKey({\r\n                key: derKeyBytes,\r\n                type: 'spki',\r\n                format: 'der',\r\n            });\r\n        }\r\n        else {\r\n            this.publicKey = (0, keyFormatters_1.formatPem)(derKeyBytes, 'PUBLIC KEY');\r\n        }\r\n    }\r\n    async getPublicKeyBytes(algorithmName) {\r\n        if (!this.publicKey) {\r\n            return null;\r\n        }\r\n        let derKeyBytes;\r\n        if (typeof this.publicKey === 'string') {\r\n            derKeyBytes = (0, keyFormatters_1.parsePem)(this.publicKey);\r\n        }\r\n        else {\r\n            derKeyBytes = this.publicKey.export({\r\n                type: 'spki',\r\n                format: 'der',\r\n            });\r\n        }\r\n        const ec = keyFormatters_1.Sec1KeyFormatter.parseECPublic(derKeyBytes);\r\n        // Write public key in SSH format.\r\n        algorithmName = algorithmName || this.algorithmName || this.keyAlgorithmName;\r\n        const keyWriter = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(512));\r\n        keyWriter.writeString(algorithmName, 'ascii');\r\n        keyWriter.writeString(this.curve.name, 'ascii');\r\n        const keySizeInBytes = Math.ceil(this.curve.keySize / 8);\r\n        const xBytes = ec.x.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        const yBytes = ec.y.toBytes({ unsigned: true, length: keySizeInBytes });\r\n        keyWriter.writeUInt32(1 + xBytes.length + yBytes.length);\r\n        keyWriter.writeByte(4); // Indicates uncompressed curve format\r\n        keyWriter.write(xBytes);\r\n        keyWriter.write(yBytes);\r\n        const keyBytes = keyWriter.toBuffer();\r\n        return keyBytes;\r\n    }\r\n    async importParameters(parameters) {\r\n        if (!parameters.curve)\r\n            throw new TypeError('A curve is required.');\r\n        let curve;\r\n        if (parameters.curve.oid) {\r\n            curve = ecdsaCurves_1.curves.find((c) => c.oid === parameters.curve.oid);\r\n            if (!curve) {\r\n                throw new Error(`Unsupported curve OID: ${parameters.curve.oid}`);\r\n            }\r\n        }\r\n        else if (parameters.curve.name) {\r\n            curve = ecdsaCurves_1.curves.find((c) => c.name === parameters.curve.name);\r\n            if (!curve) {\r\n                throw new Error(`Unsupported curve: ${parameters.curve.name}`);\r\n            }\r\n        }\r\n        else {\r\n            throw new TypeError('A curve OID or name is required.');\r\n        }\r\n        this.algorithmName = 'ecdsa-sha2-' + curve.name;\r\n        const publicKeyBytes = keyFormatters_1.Sec1KeyFormatter.formatECPublic(parameters);\r\n        if (nodeKeyObjectSupport) {\r\n            this.publicKey = crypto.createPublicKey({\r\n                key: publicKeyBytes,\r\n                type: 'spki',\r\n                format: 'der',\r\n            });\r\n        }\r\n        else {\r\n            this.publicKey = (0, keyFormatters_1.formatPem)(publicKeyBytes, 'EC PUBLIC KEY');\r\n        }\r\n        if (parameters.d) {\r\n            const privateKeyBytes = keyFormatters_1.Sec1KeyFormatter.formatECPrivate(parameters);\r\n            if (nodeKeyObjectSupport) {\r\n                this.privateKey = crypto.createPrivateKey({\r\n                    key: privateKeyBytes,\r\n                    type: 'sec1',\r\n                    format: 'der',\r\n                });\r\n            }\r\n            else {\r\n                this.privateKey = (0, keyFormatters_1.formatPem)(privateKeyBytes, 'EC PRIVATE KEY');\r\n            }\r\n        }\r\n        else {\r\n            this.privateKey = undefined;\r\n        }\r\n    }\r\n    async exportParameters() {\r\n        var _a, _b;\r\n        if (!this.publicKey) {\r\n            throw new Error('Key is not present.');\r\n        }\r\n        let derKeyBytes;\r\n        if (typeof this.publicKey === 'string') {\r\n            derKeyBytes = (0, keyFormatters_1.parsePem)((_a = this.privateKey) !== null && _a !== void 0 ? _a : this.publicKey);\r\n        }\r\n        else {\r\n            derKeyBytes = ((_b = this.privateKey) !== null && _b !== void 0 ? _b : this.publicKey).export({\r\n                type: this.privateKey ? 'sec1' : 'spki',\r\n                format: 'der',\r\n            });\r\n        }\r\n        return this.privateKey\r\n            ? keyFormatters_1.Sec1KeyFormatter.parseECPrivate(derKeyBytes)\r\n            : keyFormatters_1.Sec1KeyFormatter.parseECPublic(derKeyBytes);\r\n    }\r\n    dispose() { }\r\n}\r\nclass NodeECDsa extends publicKeyAlgorithm_1.PublicKeyAlgorithm {\r\n    constructor(name, hashAlgorithmName) {\r\n        super(name, name, // The key algorithm name is the same (unlike RSA).\r\n        hashAlgorithmName);\r\n    }\r\n    createKeyPair() {\r\n        return new NodeECDsaKeyPair(this.name);\r\n    }\r\n    async generateKeyPair() {\r\n        const ecdsaKey = new NodeECDsaKeyPair(this.name);\r\n        await ecdsaKey.generate();\r\n        return ecdsaKey;\r\n    }\r\n    createSigner(keyPair) {\r\n        if (!(keyPair instanceof NodeECDsaKeyPair)) {\r\n            throw new TypeError('ECDSA key pair object expected.');\r\n        }\r\n        return new NodeECDsaSignerVerifier(keyPair, NodeECDsa.convertHashAlgorithmName(this.hashAlgorithmName));\r\n    }\r\n    createVerifier(keyPair) {\r\n        if (!(keyPair instanceof NodeECDsaKeyPair)) {\r\n            throw new TypeError('ECDSA key pair object expected.');\r\n        }\r\n        return new NodeECDsaSignerVerifier(keyPair, NodeECDsa.convertHashAlgorithmName(this.hashAlgorithmName));\r\n    }\r\n    static convertHashAlgorithmName(hashAlgorithmName) {\r\n        return hashAlgorithmName.replace('SHA2-', 'SHA');\r\n    }\r\n    /* @internal */\r\n    static getSignatureLength(keySizeInBits) {\r\n        // The signature is double the key size, but formatted as 2 bigints.\r\n        // To each bigint add 4 for the length and 1 for a leading zero.\r\n        const keySizeInBytes = Math.ceil(keySizeInBits / 8);\r\n        return (4 + 1 + keySizeInBytes) * 2;\r\n    }\r\n}\r\nexports.NodeECDsa = NodeECDsa;\r\nNodeECDsa.ecdsaSha2Nistp256 = 'ecdsa-sha2-nistp256';\r\nNodeECDsa.ecdsaSha2Nistp384 = 'ecdsa-sha2-nistp384';\r\nNodeECDsa.ecdsaSha2Nistp521 = 'ecdsa-sha2-nistp521';\r\nNodeECDsa.curves = ecdsaCurves_1.curves;\r\nNodeECDsa.KeyPair = NodeECDsaKeyPair;\r\nclass NodeECDsaSignerVerifier {\r\n    constructor(keyPair, hashAlgorithmName) {\r\n        this.keyPair = keyPair;\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n    }\r\n    get digestLength() {\r\n        const curve = this.keyPair.curve;\r\n        if (!curve) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return NodeECDsa.getSignatureLength(curve.keySize);\r\n        }\r\n    }\r\n    async sign(data) {\r\n        if (!this.keyPair.privateKey) {\r\n            throw new Error('Private key not set.');\r\n        }\r\n        const signer = crypto.createSign(this.hashAlgorithmName);\r\n        signer.update(data);\r\n        let signature = signer.sign(this.keyPair.privateKey);\r\n        // Reformat the signature integer bytes as required by SSH.\r\n        const signatureReader = new derData_1.DerReader(signature);\r\n        const x = signatureReader.readInteger();\r\n        const y = signatureReader.readInteger();\r\n        const keySizeInBytes = Math.ceil(this.keyPair.curve.keySize / 8);\r\n        const signatureWriter = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(this.digestLength));\r\n        signatureWriter.writeBinary(x.toBytes({ unsigned: true, length: keySizeInBytes + 1 }));\r\n        signatureWriter.writeBinary(y.toBytes({ unsigned: true, length: keySizeInBytes + 1 }));\r\n        signature = signatureWriter.toBuffer();\r\n        return signature;\r\n    }\r\n    async verify(data, signature) {\r\n        if (!this.keyPair.publicKey) {\r\n            throw new Error('Public key not set.');\r\n        }\r\n        // Reformat the signature integer bytes as required by node.\r\n        const signatureReader = new sshData_1.SshDataReader(signature);\r\n        const x = signatureReader.readBigInt();\r\n        const y = signatureReader.readBigInt();\r\n        const signatureWriter = new derData_1.DerWriter(buffer_1.Buffer.alloc(signature.length));\r\n        signatureWriter.writeInteger(x);\r\n        signatureWriter.writeInteger(y);\r\n        signature = signatureWriter.toBuffer();\r\n        const verifier = crypto.createVerify(this.hashAlgorithmName);\r\n        verifier.update(data);\r\n        const result = verifier.verify(this.keyPair.publicKey, signature);\r\n        return result;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=nodeECDsa.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeEncryption = void 0;\r\nconst crypto = require(\"crypto\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst encryptionAlgorithm_1 = require(\"../encryptionAlgorithm\");\r\nclass NodeEncryption extends encryptionAlgorithm_1.EncryptionAlgorithm {\r\n    constructor(name, algorithmName, cipherMode, keySizeInBits) {\r\n        super(name);\r\n        this.algorithmName = algorithmName;\r\n        this.cipherMode = cipherMode;\r\n        this.keySizeInBits = keySizeInBits;\r\n        if (algorithmName !== 'AES') {\r\n            throw new Error(`Unsupported encryption algorithm: ${algorithmName}`);\r\n        }\r\n        this.blockSizeInBits = NodeEncryption.getBlockSize(algorithmName);\r\n    }\r\n    get keyLength() {\r\n        return this.keySizeInBits / 8;\r\n    }\r\n    get blockLength() {\r\n        return this.blockSizeInBits / 8;\r\n    }\r\n    async createCipher(isEncryption, key, iv) {\r\n        let cipher;\r\n        if (this.cipherMode === 'CTR' || this.cipherMode === 'CBC') {\r\n            cipher = new NodeAesCipher(isEncryption, this.keySizeInBits, this.blockSizeInBits, key, iv, this.cipherMode);\r\n        }\r\n        else if (this.cipherMode === 'GCM') {\r\n            cipher = new NodeAesGcmCipher(isEncryption, this.keySizeInBits, this.blockSizeInBits, key, iv);\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported cipher mode: ${this.cipherMode}`);\r\n        }\r\n        return cipher;\r\n    }\r\n    static getBlockSize(algorithmName) {\r\n        if (algorithmName === 'AES') {\r\n            return 128;\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported encryption algorithm: ${algorithmName}`);\r\n        }\r\n    }\r\n}\r\nexports.NodeEncryption = NodeEncryption;\r\nclass NodeAesCipher {\r\n    constructor(isEncryption, keySizeInBits, blockSizeInBits, key, iv, cipherMode) {\r\n        this.isEncryption = isEncryption;\r\n        this.keySizeInBits = keySizeInBits;\r\n        this.blockSizeInBits = blockSizeInBits;\r\n        const nodeAlgorithm = `AES-${this.keySizeInBits}-${cipherMode}`;\r\n        this.cipher = this.isEncryption\r\n            ? crypto.createCipheriv(nodeAlgorithm, key, iv)\r\n            : crypto.createDecipheriv(nodeAlgorithm, key, iv);\r\n        this.cipher.setAutoPadding(false);\r\n    }\r\n    get blockLength() {\r\n        return this.blockSizeInBits / 8;\r\n    }\r\n    transform(data) {\r\n        const result = this.cipher.update(data);\r\n        if (result.length !== data.length) {\r\n            const message = 'Result from encrypt/decrypt has invalid length ' +\r\n                `${result.length}, expected ${data.length}.`;\r\n            throw new Error(message);\r\n        }\r\n        return Promise.resolve(result);\r\n    }\r\n    dispose() { }\r\n}\r\nclass NodeAesGcmCipher {\r\n    constructor(isEncryption, keySizeInBits, blockSizeInBits, key, iv) {\r\n        this.isEncryption = isEncryption;\r\n        this.keySizeInBits = keySizeInBits;\r\n        this.blockSizeInBits = blockSizeInBits;\r\n        this.tag = null;\r\n        this.algorithmName = `aes-${this.keySizeInBits}-gcm`;\r\n        this.key = buffer_1.Buffer.alloc(key.length);\r\n        key.copy(this.key);\r\n        // Ininitialize the nonce to the first 12 bytes of the IV. It will be incremented by each op.\r\n        this.nonce = buffer_1.Buffer.alloc(12);\r\n        iv.copy(this.nonce, 0, 0, 12);\r\n        this.associatedData = buffer_1.Buffer.alloc(4);\r\n    }\r\n    get blockLength() {\r\n        return this.blockSizeInBits / 8;\r\n    }\r\n    get digestLength() {\r\n        return 16;\r\n    }\r\n    get authenticatedEncryption() {\r\n        return true;\r\n    }\r\n    transform(data) {\r\n        if (data.length % this.blockLength !== 0) {\r\n            const message = 'Encrypt/decrypt input has invalid length ' +\r\n                `${data.length}, not a multiple of block size ${this.blockLength}.`;\r\n            throw new Error(message);\r\n        }\r\n        const cipher = this.isEncryption\r\n            ? crypto.createCipheriv(this.algorithmName, this.key, this.nonce)\r\n            : crypto.createDecipheriv(this.algorithmName, this.key, this.nonce);\r\n        // Associated data is the 32-bit packet length.\r\n        const packetLength = data.length;\r\n        this.associatedData[0] = packetLength >>> 24;\r\n        this.associatedData[1] = packetLength >>> 16;\r\n        this.associatedData[2] = packetLength >>> 8;\r\n        this.associatedData[3] = packetLength;\r\n        cipher.setAAD(this.associatedData);\r\n        if (!this.isEncryption) {\r\n            if (!this.tag) {\r\n                throw new Error('AES-GCM tag was not set before decrypting.');\r\n            }\r\n            cipher.setAuthTag(this.tag);\r\n        }\r\n        const result = cipher.update(data);\r\n        if (result.length !== data.length) {\r\n            const message = 'Result from encrypt/decrypt has invalid length ' +\r\n                `${result.length}, expected ${data.length}.`;\r\n            throw new Error(message);\r\n        }\r\n        cipher.final();\r\n        if (this.isEncryption) {\r\n            this.tag = cipher.getAuthTag();\r\n        }\r\n        else {\r\n            this.tag = null;\r\n        }\r\n        // Increment the counter (last 8 bytes of the nonce) as a big-endian integer.\r\n        // First increment the last byte, and if it reaches 0 then increment the\r\n        // next-to-last byte, and so on.\r\n        let k = 12;\r\n        while (--k >= 4) {\r\n            this.nonce[k]++;\r\n            if (this.nonce[k] !== 0) {\r\n                break;\r\n            }\r\n        }\r\n        return Promise.resolve(result);\r\n    }\r\n    async sign(data) {\r\n        if (!this.tag) {\r\n            throw new Error('AES-GCM tag was not obtained by encrypting.');\r\n        }\r\n        return this.tag;\r\n    }\r\n    async verify(data, signature) {\r\n        if (signature.length !== this.digestLength) {\r\n            throw new Error('Incorrect AES-GCM tag length.');\r\n        }\r\n        this.tag = signature;\r\n        return true;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=nodeEncryption.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeHmac = void 0;\r\nconst crypto = require(\"crypto\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst hmacAlgorithm_1 = require(\"../hmacAlgorithm\");\r\nclass NodeHmac extends hmacAlgorithm_1.HmacAlgorithm {\r\n    constructor(name, algorithmName, encryptThenMac = false) {\r\n        super(name, algorithmName, NodeHmac.getHashKeyLength(algorithmName), NodeHmac.getHashDigestLength(algorithmName));\r\n        this.encryptThenMac = encryptThenMac;\r\n    }\r\n    async createSigner(key) {\r\n        const hmac = new NodeSignerVerifier(NodeHmac.getNodeHashAlgorithmName(this.algorithmName), this.digestLength, this.encryptThenMac, key);\r\n        return hmac;\r\n    }\r\n    async createVerifier(key) {\r\n        const hmac = new NodeSignerVerifier(NodeHmac.getNodeHashAlgorithmName(this.algorithmName), this.digestLength, this.encryptThenMac, key);\r\n        return hmac;\r\n    }\r\n    static getHashKeyLength(hashAlgorithmName) {\r\n        if (hashAlgorithmName === 'SHA2-512')\r\n            return 512 / 8;\r\n        if (hashAlgorithmName === 'SHA2-384')\r\n            return 384 / 8;\r\n        if (hashAlgorithmName === 'SHA2-256')\r\n            return 256 / 8;\r\n        throw new Error(`Unsupported hash algorithm: ${hashAlgorithmName}`);\r\n    }\r\n    static getHashDigestLength(hashAlgorithmName) {\r\n        return this.getHashKeyLength(hashAlgorithmName);\r\n    }\r\n    static getNodeHashAlgorithmName(hashAlgorithmName) {\r\n        if (hashAlgorithmName === 'SHA2-512')\r\n            return 'sha512';\r\n        if (hashAlgorithmName === 'SHA2-384')\r\n            return 'sha384';\r\n        if (hashAlgorithmName === 'SHA2-256')\r\n            return 'sha256';\r\n        throw new Error(`Unsupported hash algorithm: ${hashAlgorithmName}`);\r\n    }\r\n}\r\nexports.NodeHmac = NodeHmac;\r\nclass NodeSignerVerifier {\r\n    constructor(algorithmName, digestLength, encryptThenMac, key) {\r\n        this.algorithmName = algorithmName;\r\n        this.digestLength = digestLength;\r\n        this.encryptThenMac = encryptThenMac;\r\n        // crypto.createSecretKey is only available on node >= 11.6.\r\n        this.key = crypto.createSecretKey ? crypto.createSecretKey(key) : buffer_1.Buffer.from(key);\r\n    }\r\n    async sign(data) {\r\n        const signer = crypto.createHmac(this.algorithmName, this.key);\r\n        signer.update(data);\r\n        const hmac = signer.digest();\r\n        return hmac;\r\n    }\r\n    async verify(data, signature) {\r\n        const verifier = crypto.createHmac(this.algorithmName, this.key);\r\n        verifier.update(data);\r\n        const hmac = verifier.digest();\r\n        const result = hmac.equals(signature);\r\n        return result;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=nodeHmac.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeECDiffieHellman = exports.NodeDiffieHellman = void 0;\r\nconst crypto = require(\"crypto\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst keyExchangeAlgorithm_1 = require(\"../keyExchangeAlgorithm\");\r\nconst nodeHmac_1 = require(\"./nodeHmac\");\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nclass NodeDiffieHellman extends keyExchangeAlgorithm_1.KeyExchangeAlgorithm {\r\n    constructor(name, keySizeInBits, hashAlgorithmName) {\r\n        super(name, keySizeInBits, hashAlgorithmName, nodeHmac_1.NodeHmac.getHashDigestLength(hashAlgorithmName));\r\n    }\r\n    createKeyExchange() {\r\n        return new NodeDiffieHellmanKex(this.keySizeInBits, nodeHmac_1.NodeHmac.getNodeHashAlgorithmName(this.hashAlgorithmName), this.hashDigestLength);\r\n    }\r\n}\r\nexports.NodeDiffieHellman = NodeDiffieHellman;\r\nclass NodeDiffieHellmanKex {\r\n    constructor(bitLength, hashAlgorithmName, digestLength) {\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.digestLength = digestLength;\r\n        switch (bitLength) {\r\n            case 1024:\r\n                this.dh = crypto.getDiffieHellman('modp2');\r\n                break;\r\n            case 2048:\r\n                this.dh = crypto.getDiffieHellman('modp14');\r\n                break;\r\n            case 4096:\r\n                this.dh = crypto.getDiffieHellman('modp16');\r\n                break;\r\n            default:\r\n                throw new Error('Invalid DH bit length.');\r\n        }\r\n    }\r\n    startKeyExchange() {\r\n        const exchangeValueKeys = this.dh.generateKeys();\r\n        const exchangeValue = bigInt_1.BigInt.fromBytes(exchangeValueKeys, { unsigned: true }).toBytes();\r\n        return Promise.resolve(exchangeValue);\r\n    }\r\n    decryptKeyExchange(exchangeValue) {\r\n        const key = this.dh.computeSecret(exchangeValue);\r\n        const sharedSecret = bigInt_1.BigInt.fromBytes(key, { unsigned: true }).toBytes();\r\n        return Promise.resolve(sharedSecret);\r\n    }\r\n    async sign(data) {\r\n        const hash = crypto.createHash(this.hashAlgorithmName);\r\n        hash.update(data);\r\n        return buffer_1.Buffer.from(hash.digest());\r\n    }\r\n    dispose() { }\r\n}\r\nclass NodeECDiffieHellman extends keyExchangeAlgorithm_1.KeyExchangeAlgorithm {\r\n    constructor(name, keySizeInBits, hashAlgorithmName) {\r\n        super(name, keySizeInBits, hashAlgorithmName, nodeHmac_1.NodeHmac.getHashDigestLength(hashAlgorithmName));\r\n    }\r\n    createKeyExchange() {\r\n        return new NodeECDiffieHellmanKex(this.keySizeInBits, nodeHmac_1.NodeHmac.getNodeHashAlgorithmName(this.hashAlgorithmName), this.hashDigestLength);\r\n    }\r\n}\r\nexports.NodeECDiffieHellman = NodeECDiffieHellman;\r\nclass NodeECDiffieHellmanKex {\r\n    constructor(bitLength, hashAlgorithmName, digestLength) {\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.digestLength = digestLength;\r\n        switch (bitLength) {\r\n            case 256:\r\n                this.ecdh = crypto.createECDH('prime256v1');\r\n                break;\r\n            case 384:\r\n                this.ecdh = crypto.createECDH('secp384r1');\r\n                break;\r\n            case 521:\r\n                this.ecdh = crypto.createECDH('secp521r1');\r\n                break;\r\n            default:\r\n                throw new Error('Invalid ECDH bit length.');\r\n        }\r\n    }\r\n    startKeyExchange() {\r\n        const exchangeValue = this.ecdh.generateKeys();\r\n        return Promise.resolve(exchangeValue);\r\n    }\r\n    decryptKeyExchange(exchangeValue) {\r\n        const sharedSecretBytes = this.ecdh.computeSecret(exchangeValue);\r\n        const sharedSecret = bigInt_1.BigInt.fromBytes(sharedSecretBytes, { unsigned: true }).toBytes();\r\n        return Promise.resolve(sharedSecret);\r\n    }\r\n    async sign(data) {\r\n        const hash = crypto.createHash(this.hashAlgorithmName);\r\n        hash.update(data);\r\n        return buffer_1.Buffer.from(hash.digest());\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=nodeKeyExchange.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeRandom = void 0;\r\nconst crypto = require(\"crypto\");\r\nclass NodeRandom {\r\n    getBytes(buffer) {\r\n        const randomBytes = crypto.randomBytes(buffer.length);\r\n        randomBytes.copy(buffer);\r\n    }\r\n}\r\nexports.NodeRandom = NodeRandom;\r\n//# sourceMappingURL=nodeRandom.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeRsa = void 0;\r\nconst crypto = require(\"crypto\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst publicKeyAlgorithm_1 = require(\"../publicKeyAlgorithm\");\r\nconst sshData_1 = require(\"../../io/sshData\");\r\nconst nodeHmac_1 = require(\"./nodeHmac\");\r\nconst keyFormatters_1 = require(\"./keyFormatters\");\r\nconst nodeVersionParts = process.versions.node.split('.').map((v) => parseInt(v, 10));\r\nconst nodeGenerateKeyPairSupport = nodeVersionParts[0] > 10 || (nodeVersionParts[0] === 10 && nodeVersionParts[1] >= 12);\r\nconst nodeKeyObjectSupport = nodeVersionParts[0] > 11 || (nodeVersionParts[0] === 11 && nodeVersionParts[1] >= 6);\r\n// Note this is exposed as an inner-class property below: `NodeRsa.KeyPair`.\r\n// TypeScript requires that the class definition comes first.\r\nclass NodeRsaKeyPair {\r\n    /* @internal */\r\n    constructor() {\r\n        this.comment = null;\r\n    }\r\n    get hasPublicKey() {\r\n        return !!this.publicKey;\r\n    }\r\n    get hasPrivateKey() {\r\n        return !!this.privateKey;\r\n    }\r\n    get keyAlgorithmName() {\r\n        return NodeRsa.keyAlgorithmName;\r\n    }\r\n    generate(keySizeInBits) {\r\n        keySizeInBits = keySizeInBits !== null && keySizeInBits !== void 0 ? keySizeInBits : NodeRsaKeyPair.defaultKeySize;\r\n        if (nodeGenerateKeyPairSupport && nodeKeyObjectSupport) {\r\n            return this.generateNodeKeyPairObjects(keySizeInBits);\r\n        }\r\n        else if (nodeGenerateKeyPairSupport) {\r\n            return this.generateNodeKeyPairBuffers(keySizeInBits);\r\n        }\r\n        else {\r\n            return this.generateExternalKeyPair(keySizeInBits);\r\n        }\r\n    }\r\n    async generateNodeKeyPairObjects(keySizeInBits) {\r\n        [this.publicKey, this.privateKey] = await new Promise((resolve, reject) => {\r\n            const keyGenParams = {\r\n                modulusLength: keySizeInBits,\r\n            };\r\n            try {\r\n                crypto.generateKeyPair('rsa', keyGenParams, (err, publicKey, privateKey) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve([publicKey, privateKey]);\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async generateNodeKeyPairBuffers(keySizeInBits) {\r\n        [this.publicKey, this.privateKey] = await new Promise((resolve, reject) => {\r\n            const keyGenParams = {\r\n                modulusLength: keySizeInBits,\r\n                publicKeyEncoding: { type: 'pkcs1', format: 'pem' },\r\n                privateKeyEncoding: {\r\n                    type: 'pkcs1',\r\n                    format: 'pem',\r\n                    cipher: undefined,\r\n                    passphrase: undefined,\r\n                },\r\n            };\r\n            try {\r\n                crypto.generateKeyPair('rsa', keyGenParams, (err, publicKey, privateKey) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve([publicKey, privateKey]);\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async generateExternalKeyPair(keySizeInBits) {\r\n        // When running in a version of node that doesn't have a built-in API\r\n        // for RSA key-gen, use an external library. Note this implementation\r\n        // is SLOW because it's pure JS. It may take 1-5 seconds to generate\r\n        // a 2048 bit key.\r\n        const externRsa = await Promise.resolve().then(() => require('node-rsa'));\r\n        const keyPair = new externRsa({ b: keySizeInBits });\r\n        this.publicKey = keyPair.exportKey('pkcs1-public-pem');\r\n        this.privateKey = keyPair.exportKey('pkcs1-private-pem');\r\n        // Ensure the PEM format ends in a newline, just for consistency.\r\n        if (!this.publicKey.endsWith('\\n'))\r\n            this.publicKey += '\\n';\r\n        if (!this.privateKey.endsWith('\\n'))\r\n            this.privateKey += '\\n';\r\n    }\r\n    async setPublicKeyBytes(keyBytes) {\r\n        if (!keyBytes) {\r\n            throw new TypeError('Buffer is required.');\r\n        }\r\n        // Read public key in SSH format.\r\n        const reader = new sshData_1.SshDataReader(keyBytes);\r\n        const algorithmName = reader.readString('ascii');\r\n        if (algorithmName !== this.keyAlgorithmName &&\r\n            algorithmName !== NodeRsa.rsaWithSha256 &&\r\n            algorithmName !== NodeRsa.rsaWithSha512) {\r\n            throw new Error(`Invalid RSA key algorithm: ${algorithmName}`);\r\n        }\r\n        const exponent = reader.readBigInt();\r\n        const modulus = reader.readBigInt();\r\n        // Write public key in PKCS#1 format.\r\n        keyBytes = keyFormatters_1.Pkcs1KeyFormatter.formatRsaPublic({ modulus, exponent });\r\n        if (nodeKeyObjectSupport) {\r\n            this.publicKey = crypto.createPublicKey({\r\n                key: keyBytes,\r\n                type: 'pkcs1',\r\n                format: 'der',\r\n            });\r\n        }\r\n        else {\r\n            this.publicKey = (0, keyFormatters_1.formatPem)(keyBytes, 'RSA PUBLIC KEY');\r\n        }\r\n    }\r\n    async getPublicKeyBytes(algorithmName) {\r\n        if (!this.publicKey) {\r\n            return null;\r\n        }\r\n        if (!algorithmName) {\r\n            algorithmName = this.keyAlgorithmName;\r\n        }\r\n        let keyBytes;\r\n        if (typeof this.publicKey === 'string') {\r\n            keyBytes = (0, keyFormatters_1.parsePem)(this.publicKey);\r\n        }\r\n        else {\r\n            keyBytes = this.publicKey.export({\r\n                type: 'pkcs1',\r\n                format: 'der',\r\n            });\r\n        }\r\n        const parameters = keyFormatters_1.Pkcs1KeyFormatter.parseRsaPublic(keyBytes);\r\n        // Write public key in SSH format.\r\n        const keyBuffer = buffer_1.Buffer.alloc(512);\r\n        const keyWriter = new sshData_1.SshDataWriter(keyBuffer);\r\n        keyWriter.writeString(algorithmName, 'ascii');\r\n        keyWriter.writeBigInt(parameters.exponent);\r\n        keyWriter.writeBigInt(parameters.modulus);\r\n        keyBytes = keyWriter.toBuffer();\r\n        return keyBytes;\r\n    }\r\n    async importParameters(parameters) {\r\n        if (nodeKeyObjectSupport) {\r\n            this.publicKey = crypto.createPublicKey({\r\n                key: keyFormatters_1.Pkcs1KeyFormatter.formatRsaPublic(parameters),\r\n                format: 'der',\r\n                type: 'pkcs1',\r\n            });\r\n            if (parameters.d) {\r\n                this.privateKey = crypto.createPrivateKey({\r\n                    key: keyFormatters_1.Pkcs1KeyFormatter.formatRsaPrivate(parameters),\r\n                    format: 'der',\r\n                    type: 'pkcs1',\r\n                });\r\n            }\r\n            else {\r\n                this.privateKey = undefined;\r\n            }\r\n        }\r\n        else {\r\n            const publicKeyBytes = keyFormatters_1.Pkcs1KeyFormatter.formatRsaPublic(parameters);\r\n            this.publicKey = (0, keyFormatters_1.formatPem)(publicKeyBytes, 'RSA PUBLIC KEY');\r\n            if (parameters.d) {\r\n                const privateKeyBytes = keyFormatters_1.Pkcs1KeyFormatter.formatRsaPrivate(parameters);\r\n                this.privateKey = (0, keyFormatters_1.formatPem)(privateKeyBytes, 'RSA PRIVATE KEY');\r\n            }\r\n        }\r\n    }\r\n    async exportParameters() {\r\n        var _a, _b;\r\n        if (!this.publicKey)\r\n            throw new Error('Public key not set.');\r\n        let keyBytes;\r\n        if (nodeKeyObjectSupport) {\r\n            keyBytes = ((_a = this.privateKey) !== null && _a !== void 0 ? _a : this.publicKey).export({\r\n                format: 'der',\r\n                type: 'pkcs1',\r\n            });\r\n        }\r\n        else {\r\n            keyBytes = (0, keyFormatters_1.parsePem)((_b = this.privateKey) !== null && _b !== void 0 ? _b : this.publicKey);\r\n        }\r\n        return this.privateKey\r\n            ? keyFormatters_1.Pkcs1KeyFormatter.parseRsaPrivate(keyBytes)\r\n            : keyFormatters_1.Pkcs1KeyFormatter.parseRsaPublic(keyBytes);\r\n    }\r\n    dispose() {\r\n        this.publicKey = undefined;\r\n        this.privateKey = undefined;\r\n    }\r\n}\r\nNodeRsaKeyPair.defaultKeySize = 2048;\r\nclass NodeRsa extends publicKeyAlgorithm_1.PublicKeyAlgorithm {\r\n    constructor(name, hashAlgorithmName) {\r\n        super(name, NodeRsa.keyAlgorithmName, hashAlgorithmName);\r\n    }\r\n    createKeyPair() {\r\n        return new NodeRsaKeyPair();\r\n    }\r\n    async generateKeyPair(keySizeInBits) {\r\n        const rsaKey = new NodeRsaKeyPair();\r\n        await rsaKey.generate(keySizeInBits);\r\n        return rsaKey;\r\n    }\r\n    createSigner(keyPair) {\r\n        if (!(keyPair instanceof NodeRsaKeyPair)) {\r\n            throw new TypeError('RSA key pair object expected.');\r\n        }\r\n        return new NodeRsaSignerVerifier(keyPair, NodeRsa.convertHashAlgorithmName(this.hashAlgorithmName), nodeHmac_1.NodeHmac.getHashDigestLength(this.hashAlgorithmName));\r\n    }\r\n    createVerifier(keyPair) {\r\n        if (!(keyPair instanceof NodeRsaKeyPair)) {\r\n            throw new TypeError('RSA key pair object expected.');\r\n        }\r\n        return new NodeRsaSignerVerifier(keyPair, NodeRsa.convertHashAlgorithmName(this.hashAlgorithmName), nodeHmac_1.NodeHmac.getHashDigestLength(this.hashAlgorithmName));\r\n    }\r\n    static convertHashAlgorithmName(hashAlgorithmName) {\r\n        return hashAlgorithmName.replace('SHA2-', 'SHA');\r\n    }\r\n}\r\nexports.NodeRsa = NodeRsa;\r\nNodeRsa.keyAlgorithmName = 'ssh-rsa';\r\nNodeRsa.rsaWithSha256 = 'rsa-sha2-256';\r\nNodeRsa.rsaWithSha512 = 'rsa-sha2-512';\r\nNodeRsa.KeyPair = NodeRsaKeyPair;\r\nclass NodeRsaSignerVerifier {\r\n    constructor(keyPair, hashAlgorithmName, digestLength) {\r\n        this.keyPair = keyPair;\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.digestLength = digestLength;\r\n    }\r\n    async sign(data) {\r\n        if (!this.keyPair.privateKey) {\r\n            throw new Error('Private key not set.');\r\n        }\r\n        const signer = crypto.createSign(this.hashAlgorithmName);\r\n        signer.update(data);\r\n        const signature = signer.sign(this.keyPair.privateKey);\r\n        return signature;\r\n    }\r\n    async verify(data, signature) {\r\n        if (!this.keyPair.publicKey) {\r\n            throw new Error('Public key not set.');\r\n        }\r\n        const verifier = crypto.createVerify(this.hashAlgorithmName);\r\n        verifier.update(data);\r\n        const result = verifier.verify(this.keyPair.publicKey, signature);\r\n        return result;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=nodeRsa.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PublicKeyAlgorithm = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nclass PublicKeyAlgorithm {\r\n    constructor(name, keyAlgorithmName, hashAlgorithmName) {\r\n        this.name = name;\r\n        this.keyAlgorithmName = keyAlgorithmName;\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n    }\r\n    readSignatureData(signatureData) {\r\n        const reader = new sshData_1.SshDataReader(signatureData);\r\n        const algorithmName = reader.readString('ascii');\r\n        if (algorithmName !== this.name) {\r\n            throw new Error('Mismatched public key algorithm: ' +\r\n                `got '${algorithmName}', expected '${this.name}'.`);\r\n        }\r\n        const signature = reader.readBinary();\r\n        return signature;\r\n    }\r\n    createSignatureData(signature) {\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(this.name.length + signature.length + 20));\r\n        writer.writeString(this.name, 'ascii');\r\n        writer.writeBinary(signature);\r\n        return writer.toBuffer();\r\n    }\r\n}\r\nexports.PublicKeyAlgorithm = PublicKeyAlgorithm;\r\n//# sourceMappingURL=publicKeyAlgorithm.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.algorithmNames = exports.SshAlgorithms = exports.Encryption = exports.ECDsa = exports.Rsa = exports.HmacAlgorithm = exports.EncryptionAlgorithm = exports.PublicKeyAlgorithm = exports.KeyExchangeAlgorithm = void 0;\r\nconst keyExchangeAlgorithm_1 = require(\"./keyExchangeAlgorithm\");\r\nObject.defineProperty(exports, \"KeyExchangeAlgorithm\", { enumerable: true, get: function () { return keyExchangeAlgorithm_1.KeyExchangeAlgorithm; } });\r\nconst publicKeyAlgorithm_1 = require(\"./publicKeyAlgorithm\");\r\nObject.defineProperty(exports, \"PublicKeyAlgorithm\", { enumerable: true, get: function () { return publicKeyAlgorithm_1.PublicKeyAlgorithm; } });\r\nconst encryptionAlgorithm_1 = require(\"./encryptionAlgorithm\");\r\nObject.defineProperty(exports, \"EncryptionAlgorithm\", { enumerable: true, get: function () { return encryptionAlgorithm_1.EncryptionAlgorithm; } });\r\nconst hmacAlgorithm_1 = require(\"./hmacAlgorithm\");\r\nObject.defineProperty(exports, \"HmacAlgorithm\", { enumerable: true, get: function () { return hmacAlgorithm_1.HmacAlgorithm; } });\r\n// Swap imports to node crypto implementations when web crypto is not available.\r\nconst useWebCrypto = !!(typeof crypto === 'object' && crypto.subtle);\r\nconst webKeyExchange_1 = require(\"./web/webKeyExchange\");\r\nconst webRsa_1 = require(\"./web/webRsa\");\r\nconst webECDsa_1 = require(\"./web/webECDsa\");\r\nconst webEncryption_1 = require(\"./web/webEncryption\");\r\nconst webHmac_1 = require(\"./web/webHmac\");\r\nconst webRandom_1 = require(\"./web/webRandom\");\r\n/* eslint-disable @typescript-eslint/naming-convention, id-match */\r\nconst DiffieHellman = useWebCrypto\r\n    ? webKeyExchange_1.WebDiffieHellman\r\n    : require('./node/nodeKeyExchange').NodeDiffieHellman;\r\nconst ECDiffieHellman = useWebCrypto\r\n    ? webKeyExchange_1.WebECDiffieHellman\r\n    : require('./node/nodeKeyExchange').NodeECDiffieHellman;\r\nconst Rsa = useWebCrypto ? webRsa_1.WebRsa : require('./node/nodeRsa').NodeRsa;\r\nexports.Rsa = Rsa;\r\nconst ECDsa = useWebCrypto ? webECDsa_1.WebECDsa : require('./node/nodeECDsa').NodeECDsa;\r\nexports.ECDsa = ECDsa;\r\nconst Encryption = useWebCrypto\r\n    ? webEncryption_1.WebEncryption\r\n    : require('./node/nodeEncryption').NodeEncryption;\r\nexports.Encryption = Encryption;\r\nconst Hmac = useWebCrypto ? webHmac_1.WebHmac : require('./node/nodeHmac').NodeHmac;\r\n// eslint-disable-next-line no-redeclare\r\nconst Random = useWebCrypto ? webRandom_1.WebRandom : require('./node/nodeRandom').NodeRandom;\r\nclass SshAlgorithms {\r\n}\r\nexports.SshAlgorithms = SshAlgorithms;\r\nSshAlgorithms.keyExchange = {\r\n    none: null,\r\n    dhGroup14Sha256: new DiffieHellman('diffie-hellman-group14-sha256', 2048, 'SHA2-256'),\r\n    dhGroup16Sha512: new DiffieHellman('diffie-hellman-group16-sha512', 4096, 'SHA2-512'),\r\n    ecdhNistp256Sha256: new ECDiffieHellman('ecdh-sha2-nistp256', 256, 'SHA2-256'),\r\n    ecdhNistp384Sha384: new ECDiffieHellman('ecdh-sha2-nistp384', 384, 'SHA2-384'),\r\n    ecdhNistp521Sha512: new ECDiffieHellman('ecdh-sha2-nistp521', 521, 'SHA2-512'),\r\n};\r\nSshAlgorithms.publicKey = {\r\n    none: null,\r\n    rsaWithSha256: new Rsa('rsa-sha2-256', 'SHA2-256'),\r\n    rsaWithSha512: new Rsa('rsa-sha2-512', 'SHA2-512'),\r\n    ecdsaSha2Nistp256: new ECDsa('ecdsa-sha2-nistp256', 'SHA2-256'),\r\n    ecdsaSha2Nistp384: new ECDsa('ecdsa-sha2-nistp384', 'SHA2-384'),\r\n    ecdsaSha2Nistp521: new ECDsa('ecdsa-sha2-nistp521', 'SHA2-512'),\r\n};\r\nSshAlgorithms.encryption = {\r\n    none: null,\r\n    ////aes256Cbc: new Encryption('aes256-cbc', 'AES', 'CBC', 256) },\r\n    aes256Ctr: new Encryption('aes256-ctr', 'AES', 'CTR', 256),\r\n    aes256Gcm: new Encryption('aes256-gcm@openssh.com', 'AES', 'GCM', 256),\r\n};\r\nSshAlgorithms.hmac = {\r\n    none: null,\r\n    hmacSha256: new Hmac('hmac-sha2-256', 'SHA2-256'),\r\n    hmacSha512: new Hmac('hmac-sha2-512', 'SHA2-512'),\r\n    hmacSha256Etm: new Hmac('hmac-sha2-256-etm@openssh.com', 'SHA2-256', true),\r\n    hmacSha512Etm: new Hmac('hmac-sha2-512-etm@openssh.com', 'SHA2-512', true),\r\n};\r\nSshAlgorithms.compression = {\r\n    none: null,\r\n};\r\nSshAlgorithms.random = new Random();\r\nfunction algorithmNames(list) {\r\n    return list.map((a) => (a ? a.name : 'none'));\r\n}\r\nexports.algorithmNames = algorithmNames;\r\n//# sourceMappingURL=sshAlgorithms.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.JsonWebKeyFormatter = void 0;\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nconst ecdsaCurves_1 = require(\"../ecdsaCurves\");\r\n/**\r\n * Provides *minimal* JWK import/export support for web keys.\r\n *\r\n * This code is redundant with some of the JWK import/export code in the separate\r\n * `ssh-keys` library; that is intentional, and necessary to support a consistent\r\n * interface for importing/exporting key parameters in the core `ssh` library.\r\n */\r\nclass JsonWebKeyFormatter {\r\n    static formatRsa(rsa, includePrivate) {\r\n        const formatBigInt = JsonWebKeyFormatter.formatBigInt;\r\n        let jwk;\r\n        if (includePrivate !== false && rsa.d && rsa.p && rsa.q && rsa.dp && rsa.dq && rsa.qi) {\r\n            jwk = {\r\n                kty: 'RSA',\r\n                n: formatBigInt(rsa.modulus),\r\n                e: formatBigInt(rsa.exponent),\r\n                d: formatBigInt(rsa.d),\r\n                p: formatBigInt(rsa.p),\r\n                q: formatBigInt(rsa.q),\r\n                dp: formatBigInt(rsa.dp),\r\n                dq: formatBigInt(rsa.dq),\r\n                qi: formatBigInt(rsa.qi),\r\n            };\r\n        }\r\n        else if (!includePrivate) {\r\n            jwk = {\r\n                kty: 'RSA',\r\n                n: formatBigInt(rsa.modulus),\r\n                e: formatBigInt(rsa.exponent),\r\n            };\r\n        }\r\n        else {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        return jwk;\r\n    }\r\n    static parseRsa(jwk, includePrivate) {\r\n        if ((jwk === null || jwk === void 0 ? void 0 : jwk.kty) !== 'RSA' || !(jwk.n && jwk.e))\r\n            throw new Error('Invalid RSA JWK.');\r\n        const parseBigInt = JsonWebKeyFormatter.parseBigInt;\r\n        let rsa;\r\n        if (includePrivate !== false && jwk.d && jwk.p && jwk.q && jwk.dp && jwk.dq && jwk.qi) {\r\n            rsa = {\r\n                modulus: parseBigInt(jwk.n),\r\n                exponent: parseBigInt(jwk.e),\r\n                d: parseBigInt(jwk.d),\r\n                p: parseBigInt(jwk.p),\r\n                q: parseBigInt(jwk.q),\r\n                dp: parseBigInt(jwk.dp),\r\n                dq: parseBigInt(jwk.dq),\r\n                qi: parseBigInt(jwk.qi),\r\n            };\r\n        }\r\n        else {\r\n            rsa = {\r\n                modulus: parseBigInt(jwk.n),\r\n                exponent: parseBigInt(jwk.e),\r\n            };\r\n        }\r\n        return rsa;\r\n    }\r\n    static formatEC(ec, includePrivate) {\r\n        const formatBigInt = JsonWebKeyFormatter.formatBigInt;\r\n        const curve = ecdsaCurves_1.curves.find((c) => c.oid === ec.curve.oid || c.name === ec.curve.name || c.shortName === ec.curve.name);\r\n        const keySizeInBytes = Math.ceil(curve.keySize / 8);\r\n        const jwk = {\r\n            kty: 'EC',\r\n            crv: ec.curve.name,\r\n            x: formatBigInt(ec.x, keySizeInBytes),\r\n            y: formatBigInt(ec.y, keySizeInBytes),\r\n        };\r\n        if (includePrivate !== false && ec.d) {\r\n            jwk.d = formatBigInt(ec.d, keySizeInBytes);\r\n        }\r\n        else if (includePrivate) {\r\n            throw new Error('Missing private key parameters.');\r\n        }\r\n        return jwk;\r\n    }\r\n    static parseEC(jwk, includePrivate) {\r\n        if ((jwk === null || jwk === void 0 ? void 0 : jwk.kty) !== 'EC' || !(jwk.crv && jwk.x && jwk.y))\r\n            throw new Error('Invalid EC JWK.');\r\n        const parseBigInt = JsonWebKeyFormatter.parseBigInt;\r\n        const ec = {\r\n            curve: { name: jwk.crv },\r\n            x: parseBigInt(jwk.x),\r\n            y: parseBigInt(jwk.y),\r\n        };\r\n        if (includePrivate !== false && jwk.d) {\r\n            ec.d = parseBigInt(jwk.d);\r\n        }\r\n        return ec;\r\n    }\r\n    static formatBigInt(value, length) {\r\n        return JsonWebKeyFormatter.base64UrlEncode(value.toBytes({ unsigned: true, length }));\r\n    }\r\n    static parseBigInt(value) {\r\n        return bigInt_1.BigInt.fromBytes(Buffer.from(value, 'base64'), { unsigned: true });\r\n    }\r\n    static base64UrlEncode(data) {\r\n        // JWK format uses base64-url-encoding, which is base64 but with 2 substituted characters.\r\n        // (Note Buffer's base64 DECODING implicitly supports this format.)\r\n        return data\r\n            .toString('base64')\r\n            .replace(/=+$/g, '')\r\n            .replace(/\\+/g, '-')\r\n            .replace(/\\//g, '_');\r\n    }\r\n}\r\nexports.JsonWebKeyFormatter = JsonWebKeyFormatter;\r\n//# sourceMappingURL=jsonWebKeyFormatter.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebECDsa = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst publicKeyAlgorithm_1 = require(\"../publicKeyAlgorithm\");\r\nconst sshData_1 = require(\"../../io/sshData\");\r\nconst ecdsaCurves_1 = require(\"../ecdsaCurves\");\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nconst jsonWebKeyFormatter_1 = require(\"./jsonWebKeyFormatter\");\r\nclass WebECDsaKeyPair {\r\n    /**\r\n     * Constructs a new ECDSA key pair object.\r\n     *\r\n     * @param algorithmName Key pair algorithm name. If unspecified, the key pair object must be\r\n     * initialized before use via `importParameters()`.\r\n     */\r\n    constructor(algorithmName) {\r\n        this.comment = null;\r\n        if (algorithmName) {\r\n            this.algorithmName = algorithmName;\r\n        }\r\n    }\r\n    get hasPublicKey() {\r\n        return !!this.publicKey;\r\n    }\r\n    get hasPrivateKey() {\r\n        return !!this.privateKey;\r\n    }\r\n    get keyAlgorithmName() {\r\n        return this.algorithmName;\r\n    }\r\n    get algorithmName() {\r\n        return this.algorithm;\r\n    }\r\n    set algorithmName(value) {\r\n        const curveName = value.split('-')[2];\r\n        this.curve = ecdsaCurves_1.curves.find((c) => c.name === curveName);\r\n        if (!this.curve) {\r\n            throw new Error('Invalid or unsupported ECDSA algorithm: ' + value);\r\n        }\r\n        this.algorithm = value;\r\n    }\r\n    async generate() {\r\n        try {\r\n            const keyGenParams = {\r\n                name: 'ECDSA',\r\n                namedCurve: this.curve.shortName,\r\n            };\r\n            const keyPair = (await crypto.subtle.generateKey(keyGenParams, true, ['sign', 'verify']));\r\n            this.publicKey = keyPair.publicKey;\r\n            this.privateKey = keyPair.privateKey;\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to generate RSA key pair: ' + e);\r\n        }\r\n    }\r\n    async setPublicKeyBytes(keyBytes, algorithmName) {\r\n        if (!keyBytes) {\r\n            throw new TypeError('Buffer is required.');\r\n        }\r\n        // Read public key in SSH format.\r\n        const reader = new sshData_1.SshDataReader(keyBytes);\r\n        const readAlgorithmName = reader.readString('ascii');\r\n        this.algorithmName = algorithmName || readAlgorithmName;\r\n        const curveName = reader.readString('ascii');\r\n        if (curveName !== this.curve.name) {\r\n            throw new Error('EC curve name does not match.');\r\n        }\r\n        // X and Y parameters are equal length, after a one-byte header.\r\n        const key = reader.readBinary();\r\n        const n = Math.ceil(this.curve.keySize / 8);\r\n        const x = bigInt_1.BigInt.fromBytes(key.slice(1, 1 + n), { unsigned: true });\r\n        const y = bigInt_1.BigInt.fromBytes(key.slice(1 + n, key.length), { unsigned: true });\r\n        const jwk = jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatEC({\r\n            curve: { name: this.curve.shortName, oid: this.curve.oid },\r\n            x,\r\n            y,\r\n        });\r\n        try {\r\n            const importParams = {\r\n                name: 'ECDSA',\r\n                namedCurve: this.curve.shortName,\r\n            };\r\n            this.publicKey = await crypto.subtle.importKey('jwk', jwk, importParams, true, ['verify']);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to import EC public key: ' + e);\r\n        }\r\n    }\r\n    async getPublicKeyBytes(algorithmName) {\r\n        if (!this.publicKey) {\r\n            return null;\r\n        }\r\n        // Export public key in JWK format.\r\n        let jwk;\r\n        try {\r\n            jwk = await crypto.subtle.exportKey('jwk', this.publicKey);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to export ECDSA public key: ' + e);\r\n        }\r\n        const x = buffer_1.Buffer.from(jwk.x, 'base64');\r\n        const y = buffer_1.Buffer.from(jwk.y, 'base64');\r\n        const n = Math.ceil(this.curve.keySize / 8);\r\n        if (x.length !== n || y.length !== n) {\r\n            throw new Error('Unexpected key length.');\r\n        }\r\n        // Write public key in SSH format.\r\n        algorithmName = algorithmName || this.algorithmName || this.keyAlgorithmName;\r\n        const keyBuffer = buffer_1.Buffer.alloc(algorithmName.length + x.length + y.length + 10);\r\n        const keyWriter = new sshData_1.SshDataWriter(keyBuffer);\r\n        keyWriter.writeString(algorithmName, 'ascii');\r\n        keyWriter.writeString(this.curve.name, 'ascii');\r\n        keyWriter.writeUInt32(1 + x.length + y.length);\r\n        keyWriter.writeByte(4); // Indicates uncompressed curve format\r\n        keyWriter.write(x);\r\n        keyWriter.write(y);\r\n        const keyBytes = keyWriter.toBuffer();\r\n        return keyBytes;\r\n    }\r\n    async importParameters(parameters) {\r\n        if (!parameters.curve)\r\n            throw new TypeError('A curve is required.');\r\n        let curve;\r\n        if (parameters.curve.oid) {\r\n            curve = ecdsaCurves_1.curves.find((c) => c.oid === parameters.curve.oid);\r\n            if (!curve) {\r\n                throw new Error(`Unsupported curve OID: ${parameters.curve.oid}`);\r\n            }\r\n        }\r\n        else if (parameters.curve.name) {\r\n            curve = ecdsaCurves_1.curves.find((c) => c.name === parameters.curve.name);\r\n            if (!curve) {\r\n                throw new Error(`Unsupported curve: ${parameters.curve.name}`);\r\n            }\r\n        }\r\n        else {\r\n            throw new TypeError('A curve OID or name is required.');\r\n        }\r\n        this.algorithmName = 'ecdsa-sha2-' + curve.name;\r\n        const importParams = {\r\n            name: 'ECDSA',\r\n            namedCurve: this.curve.shortName,\r\n        };\r\n        const jwk = jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatEC(parameters);\r\n        jwk.crv = this.curve.shortName;\r\n        try {\r\n            if (jwk.d) {\r\n                this.privateKey = await crypto.subtle.importKey('jwk', jwk, importParams, true, [\r\n                    'sign',\r\n                ]);\r\n                jwk.d = undefined;\r\n            }\r\n            else {\r\n                this.privateKey = undefined;\r\n            }\r\n            this.publicKey = await crypto.subtle.importKey('jwk', jwk, importParams, true, ['verify']);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to import ECDSA key pair: ' + e);\r\n        }\r\n    }\r\n    async exportParameters() {\r\n        var _a;\r\n        const exportKey = (_a = this.privateKey) !== null && _a !== void 0 ? _a : this.publicKey;\r\n        if (!exportKey) {\r\n            throw new Error('Key not present.');\r\n        }\r\n        let jwk;\r\n        try {\r\n            jwk = await crypto.subtle.exportKey('jwk', exportKey);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to export ECDSA key pair: ' + e);\r\n        }\r\n        const parameters = jsonWebKeyFormatter_1.JsonWebKeyFormatter.parseEC(jwk);\r\n        parameters.curve = { name: this.curve.name, oid: this.curve.oid };\r\n        return parameters;\r\n    }\r\n    dispose() { }\r\n}\r\nclass WebECDsa extends publicKeyAlgorithm_1.PublicKeyAlgorithm {\r\n    constructor(name, hashAlgorithmName) {\r\n        super(name, name, hashAlgorithmName);\r\n    }\r\n    createKeyPair() {\r\n        return new WebECDsaKeyPair(this.name);\r\n    }\r\n    async generateKeyPair() {\r\n        const ecdsaKey = new WebECDsaKeyPair(this.name);\r\n        await ecdsaKey.generate();\r\n        return ecdsaKey;\r\n    }\r\n    createSigner(keyPair) {\r\n        if (!(keyPair instanceof WebECDsaKeyPair)) {\r\n            throw new TypeError('ECDSA key pair object expected.');\r\n        }\r\n        const hashAlgorithm = WebECDsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        return new WebECDsaSignerVerifier(keyPair, hashAlgorithm);\r\n    }\r\n    createVerifier(keyPair) {\r\n        if (!(keyPair instanceof WebECDsaKeyPair)) {\r\n            throw new TypeError('ECDSA key pair object expected.');\r\n        }\r\n        const hashAlgorithm = WebECDsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        return new WebECDsaSignerVerifier(keyPair, hashAlgorithm);\r\n    }\r\n    static convertHashAlgorithmName(hashAlgorithmName) {\r\n        return hashAlgorithmName.replace('SHA2-', 'SHA-');\r\n    }\r\n    /* @internal */\r\n    static getSignatureLength(keySizeInBits) {\r\n        // The signature is double the key size, but formatted as 2 bigints.\r\n        // To each bigint add 4 for the length and 1 for a leading zero.\r\n        const keySizeInBytes = Math.ceil(keySizeInBits / 8);\r\n        return (4 + 1 + keySizeInBytes) * 2;\r\n    }\r\n}\r\nexports.WebECDsa = WebECDsa;\r\nWebECDsa.ecdsaSha2Nistp256 = 'ecdsa-sha2-nistp256';\r\nWebECDsa.ecdsaSha2Nistp384 = 'ecdsa-sha2-nistp384';\r\nWebECDsa.ecdsaSha2Nistp521 = 'ecdsa-sha2-nistp521';\r\nWebECDsa.curves = ecdsaCurves_1.curves;\r\nWebECDsa.KeyPair = WebECDsaKeyPair;\r\nclass WebECDsaSignerVerifier {\r\n    constructor(keyPair, hashAlgorithm) {\r\n        this.keyPair = keyPair;\r\n        this.hashAlgorithm = hashAlgorithm;\r\n    }\r\n    get digestLength() {\r\n        const curve = this.keyPair.curve;\r\n        if (!curve) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return WebECDsa.getSignatureLength(curve.keySize);\r\n        }\r\n    }\r\n    async sign(data) {\r\n        if (!this.keyPair.privateKey) {\r\n            throw new Error('Private key not set.');\r\n        }\r\n        let signature = buffer_1.Buffer.from(await crypto.subtle.sign({ name: 'ECDSA', hash: { name: this.hashAlgorithm } }, this.keyPair.privateKey, data));\r\n        const keySizeInBytes = Math.ceil(this.keyPair.curve.keySize / 8);\r\n        if (signature.length !== 2 * keySizeInBytes) {\r\n            throw new Error(`Unexpected signature length: ${signature.length}`);\r\n        }\r\n        // Reformat the signature integer bytes as required by SSH.\r\n        const x = bigInt_1.BigInt.fromBytes(signature.slice(0, keySizeInBytes), { unsigned: true });\r\n        const y = bigInt_1.BigInt.fromBytes(signature.slice(keySizeInBytes, signature.length), {\r\n            unsigned: true,\r\n        });\r\n        const signatureWriter = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(this.digestLength));\r\n        signatureWriter.writeBinary(x.toBytes({ unsigned: true, length: keySizeInBytes + 1 }));\r\n        signatureWriter.writeBinary(y.toBytes({ unsigned: true, length: keySizeInBytes + 1 }));\r\n        signature = signatureWriter.toBuffer();\r\n        return signature;\r\n    }\r\n    async verify(data, signature) {\r\n        if (!this.keyPair.publicKey) {\r\n            throw new Error('Public key not set.');\r\n        }\r\n        // Reformat the signature integer bytes as required by the web crypto API.\r\n        const signatureReader = new sshData_1.SshDataReader(signature);\r\n        const x = signatureReader.readBigInt();\r\n        const y = signatureReader.readBigInt();\r\n        const keySizeInBytes = Math.ceil(this.keyPair.curve.keySize / 8);\r\n        signature = buffer_1.Buffer.alloc(2 * keySizeInBytes);\r\n        x.toBytes({ unsigned: true, length: keySizeInBytes }).copy(signature, 0);\r\n        y.toBytes({ unsigned: true, length: keySizeInBytes }).copy(signature, keySizeInBytes);\r\n        const result = await crypto.subtle.verify({ name: 'ECDSA', hash: { name: this.hashAlgorithm } }, this.keyPair.publicKey, signature, data);\r\n        return result;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=webECDsa.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebEncryption = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst encryptionAlgorithm_1 = require(\"../encryptionAlgorithm\");\r\nclass WebEncryption extends encryptionAlgorithm_1.EncryptionAlgorithm {\r\n    constructor(name, algorithmName, cipherMode, keySizeInBits) {\r\n        super(name);\r\n        this.algorithmName = algorithmName;\r\n        this.cipherMode = cipherMode;\r\n        this.keySizeInBits = keySizeInBits;\r\n        this.blockSizeInBits = WebEncryption.getBlockSize(algorithmName);\r\n    }\r\n    get keyLength() {\r\n        return this.keySizeInBits / 8;\r\n    }\r\n    get blockLength() {\r\n        return this.blockSizeInBits / 8;\r\n    }\r\n    async createCipher(isEncryption, key, iv) {\r\n        const cipher = new WebCipher(isEncryption, this.algorithmName, this.cipherMode, this.keySizeInBits, this.blockSizeInBits);\r\n        await cipher.init(key, iv);\r\n        return cipher;\r\n    }\r\n    static getBlockSize(algorithmName) {\r\n        if (algorithmName === 'AES') {\r\n            return 128;\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported encryption algorithm: ${algorithmName}`);\r\n        }\r\n    }\r\n}\r\nexports.WebEncryption = WebEncryption;\r\nclass WebCipher {\r\n    get blockLength() {\r\n        return this.blockSizeInBits / 8;\r\n    }\r\n    constructor(isEncryption, algorithmName, cipherMode, keySizeInBits, blockSizeInBits) {\r\n        this.isEncryption = isEncryption;\r\n        this.algorithmName = algorithmName;\r\n        this.cipherMode = cipherMode;\r\n        this.keySizeInBits = keySizeInBits;\r\n        this.blockSizeInBits = blockSizeInBits;\r\n        this.tag = null;\r\n        if (this.algorithmName === 'AES' && this.cipherMode === 'CTR') {\r\n            this.transform = this.aesCtr.bind(this, isEncryption);\r\n        }\r\n        else if (this.algorithmName === 'AES' && this.cipherMode === 'CBC') {\r\n            this.transform = this.aesCbc.bind(this, isEncryption);\r\n        }\r\n        else if (this.algorithmName === 'AES' && this.cipherMode === 'GCM') {\r\n            this.transform = this.aesGcm.bind(this, isEncryption);\r\n            this.associatedData = buffer_1.Buffer.alloc(4);\r\n            this.decryptBuffer = buffer_1.Buffer.alloc(this.blockLength * 4);\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported encryption algorithm: ${this.algorithmName}-${this.cipherMode}`);\r\n        }\r\n    }\r\n    async init(key, iv) {\r\n        try {\r\n            const name = `${this.algorithmName}-${this.cipherMode}`;\r\n            this.key = await crypto.subtle.importKey('raw', key, { name, length: this.keySizeInBits }, false, this.isEncryption ? ['encrypt'] : ['decrypt']);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to initialize AES: ' + e);\r\n        }\r\n        if (this.cipherMode === 'GCM') {\r\n            this.iv = buffer_1.Buffer.from(iv.slice(0, 12));\r\n        }\r\n        else {\r\n            this.iv = buffer_1.Buffer.from(iv);\r\n        }\r\n    }\r\n    async aesCtr(isEncryption, data) {\r\n        if (data.length % this.blockLength !== 0) {\r\n            const message = 'Encrypt/decrypt input has invalid length ' +\r\n                `${data.length}, not a multiple of block size ${this.blockLength}.`;\r\n            throw new Error(message);\r\n        }\r\n        let result;\r\n        if (isEncryption) {\r\n            result = buffer_1.Buffer.from(await crypto.subtle.encrypt({ name: 'AES-CTR', counter: this.iv, length: this.blockSizeInBits }, this.key, data));\r\n        }\r\n        else {\r\n            result = buffer_1.Buffer.from(await crypto.subtle.decrypt({ name: 'AES-CTR', counter: this.iv, length: this.blockSizeInBits }, this.key, data));\r\n        }\r\n        if (result.length !== data.length) {\r\n            const message = 'Result from encrypt/decrypt has invalid length ' +\r\n                `${result.length}, expected ${data.length}.`;\r\n            throw new Error(message);\r\n        }\r\n        // A single call to encrypt() or decrypt() internally increments the counter.\r\n        // This code ensures those increments get preserved across multiple calls.\r\n        const incrementCount = data.length / this.blockLength;\r\n        for (let i = 0; i < incrementCount; i++) {\r\n            // Increment the counter that is combined with the IV as a big-endian integer.\r\n            // First increment the last byte, and if it reaches 0 then increment the\r\n            // next-to-last byte, and so on.\r\n            for (let k = this.iv.length - 1; k >= 0; k--) {\r\n                this.iv[k] = this.iv[k] + 1;\r\n                if (this.iv[k])\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    async aesCbc(isEncryption, data) {\r\n        // TODO: Fix padding. Web crypto's AES-CBC uses padding by default,\r\n        // which isn't compatible with SSH.\r\n        if (isEncryption) {\r\n            let result = buffer_1.Buffer.from(await crypto.subtle.encrypt({ name: 'AES-CBC', iv: this.iv }, this.key, data));\r\n            result = result.slice(0, data.length);\r\n            return result;\r\n        }\r\n        else {\r\n            return buffer_1.Buffer.from(await crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv }, this.key, data));\r\n        }\r\n    }\r\n    async aesGcm(isEncryption, data) {\r\n        if (data.length % this.blockLength !== 0) {\r\n            const message = 'Encrypt/decrypt input has invalid length ' +\r\n                `${data.length}, not a multiple of block size ${this.blockLength}.`;\r\n            throw new Error(message);\r\n        }\r\n        // Associated data is the 32-bit packet length.\r\n        const packetLength = data.length;\r\n        this.associatedData[0] = packetLength >>> 24;\r\n        this.associatedData[1] = packetLength >>> 16;\r\n        this.associatedData[2] = packetLength >>> 8;\r\n        this.associatedData[3] = packetLength;\r\n        let result;\r\n        if (isEncryption) {\r\n            result = buffer_1.Buffer.from(await crypto.subtle.encrypt({\r\n                name: 'AES-GCM',\r\n                iv: this.iv,\r\n                additionalData: this.associatedData,\r\n                tagLength: this.digestLength * 8, // tagLength is in bits, not bytes\r\n            }, this.key, data));\r\n            this.tag = result.slice(result.length - this.digestLength);\r\n            result = result.slice(0, result.length - this.digestLength);\r\n        }\r\n        else {\r\n            if (!this.tag) {\r\n                throw new Error('AES-GCM tag was not set before decrypting.');\r\n            }\r\n            // The AES-GCM decrypt API expects the ciphertext and tag to be in a contiguous buffer.\r\n            // Re-use a temporary buffer for that purpose, expanding it as needed.\r\n            const inputLength = data.length + this.digestLength;\r\n            if (this.decryptBuffer.length < inputLength) {\r\n                let newLength = this.decryptBuffer.length * 2;\r\n                while (newLength < inputLength)\r\n                    newLength *= 2;\r\n                this.decryptBuffer = buffer_1.Buffer.alloc(newLength);\r\n            }\r\n            const input = this.decryptBuffer.slice(0, inputLength);\r\n            data.copy(input, 0);\r\n            this.tag.copy(input, data.length);\r\n            result = buffer_1.Buffer.from(await crypto.subtle.decrypt({\r\n                name: 'AES-GCM',\r\n                iv: this.iv,\r\n                additionalData: this.associatedData,\r\n                tagLength: this.digestLength * 8, // tagLength is in bits, not bytes\r\n            }, this.key, input));\r\n        }\r\n        if (result.length !== data.length) {\r\n            const message = 'Result from encrypt/decrypt has invalid length ' +\r\n                `${result.length}, expected ${data.length}.`;\r\n            throw new Error(message);\r\n        }\r\n        // Increment the counter (last 8 bytes of the iv/nonce) as a big-endian integer.\r\n        // First increment the last byte, and if it reaches 0 then increment the\r\n        // next-to-last byte, and so on.\r\n        let k = 12;\r\n        while (--k >= 4) {\r\n            this.iv[k]++;\r\n            if (this.iv[k] !== 0) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get digestLength() {\r\n        return 16;\r\n    }\r\n    get authenticatedEncryption() {\r\n        return this.cipherMode === 'GCM';\r\n    }\r\n    async sign(data) {\r\n        if (!this.tag) {\r\n            throw new Error('AES-GCM tag was not obtained by encrypting.');\r\n        }\r\n        return this.tag;\r\n    }\r\n    async verify(data, signature) {\r\n        if (signature.length !== this.digestLength) {\r\n            throw new Error('Incorrect AES-GCM tag length.');\r\n        }\r\n        this.tag = signature;\r\n        return true;\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=webEncryption.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebHmac = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst hmacAlgorithm_1 = require(\"../hmacAlgorithm\");\r\nclass WebHmac extends hmacAlgorithm_1.HmacAlgorithm {\r\n    constructor(name, algorithmName, encryptThenMac = false) {\r\n        super(name, algorithmName, WebHmac.getHashKeyLength(algorithmName), WebHmac.getHashDigestLength(algorithmName));\r\n        this.encryptThenMac = encryptThenMac;\r\n    }\r\n    async createSigner(key) {\r\n        const hmac = new WebSignerVerifier(this.algorithmName, true, this.digestLength, this.encryptThenMac);\r\n        await hmac.init(key);\r\n        return hmac;\r\n    }\r\n    async createVerifier(key) {\r\n        const hmac = new WebSignerVerifier(this.algorithmName, false, this.digestLength, this.encryptThenMac);\r\n        await hmac.init(key);\r\n        return hmac;\r\n    }\r\n    static getHashKeyLength(hashAlgorithmName) {\r\n        if (hashAlgorithmName === 'SHA2-512')\r\n            return 512 / 8;\r\n        if (hashAlgorithmName === 'SHA2-384')\r\n            return 384 / 8;\r\n        if (hashAlgorithmName === 'SHA2-256')\r\n            return 256 / 8;\r\n        throw new Error(`Unsupported hash algorithm: ${hashAlgorithmName}`);\r\n    }\r\n    static getHashDigestLength(hashAlgorithmName) {\r\n        return this.getHashKeyLength(hashAlgorithmName);\r\n    }\r\n    static getWebHashAlgorithmName(hashAlgorithmName) {\r\n        if (hashAlgorithmName === 'SHA2-512')\r\n            return 'SHA-512';\r\n        if (hashAlgorithmName === 'SHA2-384')\r\n            return 'SHA-384';\r\n        if (hashAlgorithmName === 'SHA2-256')\r\n            return 'SHA-256';\r\n        throw new Error(`Unsupported hash algorithm: ${hashAlgorithmName}`);\r\n    }\r\n}\r\nexports.WebHmac = WebHmac;\r\nclass WebSignerVerifier {\r\n    constructor(algorithmName, isSigning, digestLength, encryptThenMac) {\r\n        this.algorithmName = algorithmName;\r\n        this.isSigning = isSigning;\r\n        this.digestLength = digestLength;\r\n        this.encryptThenMac = encryptThenMac;\r\n    }\r\n    async init(key) {\r\n        try {\r\n            const name = this.algorithmName.replace('SHA2-', 'SHA-');\r\n            this.key = await crypto.subtle.importKey('raw', key, { name: 'HMAC', hash: { name } }, false, this.isSigning ? ['sign'] : ['verify']);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to initialize HMAC: ' + e);\r\n        }\r\n    }\r\n    async sign(data) {\r\n        return buffer_1.Buffer.from(await crypto.subtle.sign({ name: 'HMAC', hash: { name: this.algorithmName } }, this.key, data));\r\n    }\r\n    async verify(data, signature) {\r\n        return await crypto.subtle.verify({ name: 'HMAC', hash: { name: this.algorithmName } }, this.key, signature, data);\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=webHmac.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebECDiffieHellman = exports.WebDiffieHellman = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst diffie_hellman_1 = require(\"diffie-hellman\");\r\nconst keyExchangeAlgorithm_1 = require(\"../keyExchangeAlgorithm\");\r\nconst webHmac_1 = require(\"./webHmac\");\r\nconst bigInt_1 = require(\"../../io/bigInt\");\r\nconst jsonWebKeyFormatter_1 = require(\"./jsonWebKeyFormatter\");\r\nclass WebDiffieHellman extends keyExchangeAlgorithm_1.KeyExchangeAlgorithm {\r\n    constructor(name, keySizeInBits, hashAlgorithmName) {\r\n        super(name, keySizeInBits, hashAlgorithmName, webHmac_1.WebHmac.getHashDigestLength(hashAlgorithmName));\r\n    }\r\n    createKeyExchange() {\r\n        return new WebDiffieHellmanKex(this.keySizeInBits, webHmac_1.WebHmac.getWebHashAlgorithmName(this.hashAlgorithmName), this.hashDigestLength);\r\n    }\r\n}\r\nexports.WebDiffieHellman = WebDiffieHellman;\r\nclass WebDiffieHellmanKex {\r\n    constructor(bitLength, hashAlgorithmName, digestLength) {\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.digestLength = digestLength;\r\n        switch (bitLength) {\r\n            case 1024:\r\n                this.dh = (0, diffie_hellman_1.getDiffieHellman)('modp2');\r\n                break;\r\n            case 2048:\r\n                this.dh = (0, diffie_hellman_1.getDiffieHellman)('modp14');\r\n                break;\r\n            case 4096:\r\n                this.dh = (0, diffie_hellman_1.getDiffieHellman)('modp16');\r\n                break;\r\n            default:\r\n                throw new Error('Invalid DH bit length.');\r\n        }\r\n    }\r\n    startKeyExchange() {\r\n        const exchangeValueKeys = this.dh.generateKeys();\r\n        const exchangeValue = bigInt_1.BigInt.fromBytes(exchangeValueKeys, { unsigned: true }).toBytes();\r\n        return Promise.resolve(exchangeValue);\r\n    }\r\n    decryptKeyExchange(exchangeValue) {\r\n        const key = this.dh.computeSecret(exchangeValue);\r\n        const sharedSecret = bigInt_1.BigInt.fromBytes(key, { unsigned: true }).toBytes();\r\n        return Promise.resolve(sharedSecret);\r\n    }\r\n    async sign(data) {\r\n        const hashBuffer = await crypto.subtle.digest(this.hashAlgorithmName, data);\r\n        return buffer_1.Buffer.from(hashBuffer);\r\n    }\r\n    dispose() { }\r\n}\r\nclass WebECDiffieHellman extends keyExchangeAlgorithm_1.KeyExchangeAlgorithm {\r\n    constructor(name, keySizeInBits, hashAlgorithmName) {\r\n        super(name, keySizeInBits, hashAlgorithmName, webHmac_1.WebHmac.getHashDigestLength(hashAlgorithmName));\r\n    }\r\n    createKeyExchange() {\r\n        return new WebECDiffieHellmanKex(this.keySizeInBits, webHmac_1.WebHmac.getWebHashAlgorithmName(this.hashAlgorithmName), this.hashDigestLength);\r\n    }\r\n}\r\nexports.WebECDiffieHellman = WebECDiffieHellman;\r\nclass WebECDiffieHellmanKex {\r\n    constructor(bitLength, hashAlgorithmName, digestLength) {\r\n        this.bitLength = bitLength;\r\n        this.hashAlgorithmName = hashAlgorithmName;\r\n        this.digestLength = digestLength;\r\n        this.algorithm = {\r\n            name: 'ECDH',\r\n            namedCurve: 'P-' + bitLength,\r\n        };\r\n    }\r\n    async startKeyExchange() {\r\n        if (!this.keyPair) {\r\n            this.keyPair = await crypto.subtle.generateKey(this.algorithm, true, // exportable\r\n            ['deriveBits']);\r\n        }\r\n        const jwk = await crypto.subtle.exportKey('jwk', this.keyPair.publicKey);\r\n        const ec = jsonWebKeyFormatter_1.JsonWebKeyFormatter.parseEC(jwk);\r\n        const length = Math.ceil(this.bitLength / 8);\r\n        const publicKeyBytes = buffer_1.Buffer.alloc(1 + length * 2);\r\n        publicKeyBytes[0] = 4;\r\n        ec.x.toBytes({ unsigned: true, length }).copy(publicKeyBytes, 1);\r\n        ec.y.toBytes({ unsigned: true, length }).copy(publicKeyBytes, 1 + length);\r\n        return buffer_1.Buffer.from(publicKeyBytes);\r\n    }\r\n    async decryptKeyExchange(exchangeValue) {\r\n        if (!this.keyPair) {\r\n            throw new Error('Key exchange not started.');\r\n        }\r\n        const xy = exchangeValue;\r\n        const jwk = jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatEC({\r\n            curve: { name: this.algorithm.namedCurve },\r\n            x: bigInt_1.BigInt.fromBytes(xy.slice(1, 1 + (xy.length - 1) / 2), { unsigned: true }),\r\n            y: bigInt_1.BigInt.fromBytes(xy.slice(1 + (xy.length - 1) / 2), { unsigned: true }),\r\n        });\r\n        const otherPublicKey = await crypto.subtle.importKey('jwk', jwk, this.algorithm, false, []);\r\n        const sharedSecretBytes = buffer_1.Buffer.from(await crypto.subtle.deriveBits(Object.assign(Object.assign({}, this.algorithm), { public: otherPublicKey }), this.keyPair.privateKey, Math.ceil(this.bitLength / 8) * 8));\r\n        const sharedSecret = bigInt_1.BigInt.fromBytes(sharedSecretBytes, { unsigned: true }).toBytes();\r\n        return sharedSecret;\r\n    }\r\n    async sign(data) {\r\n        const hashBuffer = await crypto.subtle.digest(this.hashAlgorithmName, data);\r\n        return buffer_1.Buffer.from(hashBuffer);\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=webKeyExchange.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebRandom = void 0;\r\nclass WebRandom {\r\n    getBytes(buffer) {\r\n        crypto.getRandomValues(buffer);\r\n    }\r\n}\r\nexports.WebRandom = WebRandom;\r\n//# sourceMappingURL=webRandom.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebRsa = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst publicKeyAlgorithm_1 = require(\"../publicKeyAlgorithm\");\r\nconst webHmac_1 = require(\"./webHmac\");\r\nconst sshData_1 = require(\"../../io/sshData\");\r\nconst jsonWebKeyFormatter_1 = require(\"./jsonWebKeyFormatter\");\r\n// Note this is exposed as an inner-class property below: `WebRsa.KeyPair`.\r\n// TypeScript requires that the class definition comes first.\r\nclass WebRsaKeyPair {\r\n    /* @internal */\r\n    constructor(hashAlgorithm) {\r\n        this.hashAlgorithm = hashAlgorithm;\r\n        this.comment = null;\r\n    }\r\n    get hasPublicKey() {\r\n        return !!this.publicKey;\r\n    }\r\n    get hasPrivateKey() {\r\n        return !!this.privateKey;\r\n    }\r\n    get keyAlgorithmName() {\r\n        return WebRsa.keyAlgorithmName;\r\n    }\r\n    async generate(keySizeInBits) {\r\n        keySizeInBits = keySizeInBits !== null && keySizeInBits !== void 0 ? keySizeInBits : WebRsaKeyPair.defaultKeySize;\r\n        try {\r\n            const keyGenParams = {\r\n                name: 'RSASSA-PKCS1-v1_5',\r\n                modulusLength: keySizeInBits,\r\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n                hash: { name: this.hashAlgorithm },\r\n            };\r\n            const keyPair = (await crypto.subtle.generateKey(keyGenParams, true, ['sign', 'verify']));\r\n            this.publicKey = keyPair.publicKey;\r\n            this.privateKey = keyPair.privateKey;\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to generate RSA key pair: ' + e);\r\n        }\r\n    }\r\n    async setPublicKeyBytes(keyBytes) {\r\n        if (!keyBytes) {\r\n            throw new TypeError('Buffer is required.');\r\n        }\r\n        // Read public key in SSH format.\r\n        const reader = new sshData_1.SshDataReader(keyBytes);\r\n        const algorithmName = reader.readString('ascii');\r\n        if (algorithmName !== this.keyAlgorithmName &&\r\n            algorithmName !== WebRsa.rsaWithSha256 &&\r\n            algorithmName !== WebRsa.rsaWithSha512) {\r\n            throw new Error(`Invalid RSA key algorithm: ${algorithmName}`);\r\n        }\r\n        const exponent = reader.readBigInt();\r\n        const modulus = reader.readBigInt();\r\n        // Import public key in JWK format.\r\n        const jwk = jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatRsa({ modulus, exponent }, false);\r\n        jwk.alg = 'RS' + this.hashAlgorithm.replace('SHA-', '');\r\n        jwk.key_ops = ['verify'];\r\n        try {\r\n            const importParams = {\r\n                name: 'RSASSA-PKCS1-v1_5',\r\n                hash: { name: this.hashAlgorithm },\r\n            };\r\n            this.publicKey = await crypto.subtle.importKey('jwk', jwk, importParams, true, ['verify']);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to import RSA public key: ' + e);\r\n        }\r\n    }\r\n    async getPublicKeyBytes(algorithmName) {\r\n        if (!this.publicKey) {\r\n            return null;\r\n        }\r\n        if (!algorithmName) {\r\n            algorithmName = this.keyAlgorithmName;\r\n        }\r\n        // Export public key in JWK format.\r\n        let jwk;\r\n        try {\r\n            jwk = await crypto.subtle.exportKey('jwk', this.publicKey);\r\n        }\r\n        catch (e) {\r\n            throw new Error('Failed to export RSA public key: ' + e);\r\n        }\r\n        const { modulus, exponent } = jsonWebKeyFormatter_1.JsonWebKeyFormatter.parseRsa(jwk, false);\r\n        // Write public key in SSH format.\r\n        const keyBuffer = buffer_1.Buffer.alloc(512);\r\n        const keyWriter = new sshData_1.SshDataWriter(keyBuffer);\r\n        keyWriter.writeString(algorithmName, 'ascii');\r\n        keyWriter.writeBigInt(exponent);\r\n        keyWriter.writeBigInt(modulus);\r\n        const keyBytes = keyWriter.toBuffer();\r\n        return keyBytes;\r\n    }\r\n    async importParameters(parameters) {\r\n        const privateJwk = parameters.d ? jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatRsa(parameters, true) : null;\r\n        const publicJwk = jsonWebKeyFormatter_1.JsonWebKeyFormatter.formatRsa(parameters, false);\r\n        const importParams = {\r\n            name: 'RSASSA-PKCS1-v1_5',\r\n            hash: { name: this.hashAlgorithm },\r\n        };\r\n        try {\r\n            this.publicKey = await crypto.subtle.importKey('jwk', publicJwk, importParams, true, [\r\n                'verify',\r\n            ]);\r\n            if (privateJwk) {\r\n                this.privateKey = await crypto.subtle.importKey('jwk', privateJwk, importParams, true, [\r\n                    'sign',\r\n                ]);\r\n            }\r\n            else {\r\n                this.privateKey = undefined;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            throw new Error('Failed to import RSA key pair: ' + e.message);\r\n        }\r\n    }\r\n    async exportParameters() {\r\n        var _a;\r\n        if (!this.publicKey)\r\n            throw new Error('Public key not set.');\r\n        let jwk;\r\n        try {\r\n            jwk = await crypto.subtle.exportKey('jwk', (_a = this.privateKey) !== null && _a !== void 0 ? _a : this.publicKey);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            throw new Error('Failed to export RSA public key: ' + e.message);\r\n        }\r\n        return jsonWebKeyFormatter_1.JsonWebKeyFormatter.parseRsa(jwk, !!this.privateKey);\r\n    }\r\n    dispose() { }\r\n}\r\nWebRsaKeyPair.defaultKeySize = 2048;\r\nclass WebRsa extends publicKeyAlgorithm_1.PublicKeyAlgorithm {\r\n    constructor(name, hashAlgorithmName) {\r\n        super(name, WebRsa.keyAlgorithmName, hashAlgorithmName);\r\n    }\r\n    createKeyPair() {\r\n        const hashAlgorithm = WebRsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        return new WebRsaKeyPair(hashAlgorithm);\r\n    }\r\n    async generateKeyPair(keySizeInBits) {\r\n        const hashAlgorithm = WebRsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        const rsaKey = new WebRsaKeyPair(hashAlgorithm);\r\n        await rsaKey.generate(keySizeInBits);\r\n        return rsaKey;\r\n    }\r\n    createSigner(keyPair) {\r\n        if (!(keyPair instanceof WebRsaKeyPair)) {\r\n            throw new TypeError('RSA key pair object expected.');\r\n        }\r\n        const hashAlgorithm = WebRsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        return new WebRsaSignerVerifier(keyPair, hashAlgorithm, webHmac_1.WebHmac.getHashDigestLength(this.hashAlgorithmName));\r\n    }\r\n    createVerifier(keyPair) {\r\n        if (!(keyPair instanceof WebRsaKeyPair)) {\r\n            throw new TypeError('RSA key pair object expected.');\r\n        }\r\n        const hashAlgorithm = WebRsa.convertHashAlgorithmName(this.hashAlgorithmName);\r\n        return new WebRsaSignerVerifier(keyPair, hashAlgorithm, webHmac_1.WebHmac.getHashDigestLength(this.hashAlgorithmName));\r\n    }\r\n    static convertHashAlgorithmName(hashAlgorithmName) {\r\n        return hashAlgorithmName.replace('SHA2-', 'SHA-');\r\n    }\r\n}\r\nexports.WebRsa = WebRsa;\r\nWebRsa.keyAlgorithmName = 'ssh-rsa';\r\nWebRsa.rsaWithSha256 = 'rsa-sha2-256';\r\nWebRsa.rsaWithSha512 = 'rsa-sha2-512';\r\nWebRsa.KeyPair = WebRsaKeyPair;\r\nclass WebRsaSignerVerifier {\r\n    constructor(keyPair, hashAlgorithm, digestLength) {\r\n        this.keyPair = keyPair;\r\n        this.hashAlgorithm = hashAlgorithm;\r\n        this.digestLength = digestLength;\r\n    }\r\n    async sign(data) {\r\n        if (!this.keyPair.privateKey) {\r\n            throw new Error('Private key not set.');\r\n        }\r\n        await this.convertKeyHashAlgorithm();\r\n        const signature = buffer_1.Buffer.from(await crypto.subtle.sign('RSASSA-PKCS1-v1_5', this.keyPair.privateKey, data));\r\n        return signature;\r\n    }\r\n    async verify(data, signature) {\r\n        if (!this.keyPair.publicKey) {\r\n            throw new Error('Public key not set.');\r\n        }\r\n        await this.convertKeyHashAlgorithm();\r\n        const result = await crypto.subtle.verify('RSASSA-PKCS1-v1_5', this.keyPair.publicKey, signature, data);\r\n        return result;\r\n    }\r\n    async convertKeyHashAlgorithm() {\r\n        if (this.keyPair.hashAlgorithm !== this.hashAlgorithm) {\r\n            const parameters = await this.keyPair.exportParameters();\r\n            this.keyPair = new WebRsaKeyPair(this.hashAlgorithm);\r\n            await this.keyPair.importParameters(parameters);\r\n        }\r\n    }\r\n    dispose() { }\r\n}\r\n//# sourceMappingURL=webRsa.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectDisposedError = exports.SshChannelError = exports.SshReconnectError = exports.SshConnectionError = void 0;\r\nclass SshConnectionError extends Error {\r\n    constructor(message, reason) {\r\n        super(message);\r\n        this.reason = reason;\r\n    }\r\n}\r\nexports.SshConnectionError = SshConnectionError;\r\nclass SshReconnectError extends Error {\r\n    constructor(message, reason) {\r\n        super(message);\r\n        this.reason = reason;\r\n    }\r\n}\r\nexports.SshReconnectError = SshReconnectError;\r\nclass SshChannelError extends Error {\r\n    constructor(message, reason) {\r\n        super(message);\r\n        this.reason = reason;\r\n    }\r\n}\r\nexports.SshChannelError = SshChannelError;\r\nclass ObjectDisposedError extends Error {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    constructor(objectOrMessage) {\r\n        var _a, _b;\r\n        let message;\r\n        if (typeof objectOrMessage === 'string') {\r\n            // Custom message.\r\n            message = objectOrMessage;\r\n        }\r\n        else if (typeof objectOrMessage === 'function') {\r\n            // Constructor function (class name).\r\n            // eslint-disable-next-line @typescript-eslint/ban-types\r\n            message = objectOrMessage.name + ' disposed.';\r\n        }\r\n        else {\r\n            // Disposable object - get its class name.\r\n            message = ((_b = (_a = objectOrMessage === null || objectOrMessage === void 0 ? void 0 : objectOrMessage.constructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'Object ') + ' disposed.';\r\n        }\r\n        super(message);\r\n    }\r\n}\r\nexports.ObjectDisposedError = ObjectDisposedError;\r\n//# sourceMappingURL=errors.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshAuthenticatingEventArgs = exports.SshAuthenticationType = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Indicates the type of authentication being requested by an SSH client or server when an\r\n * `SshSession.authenticating` event is raised.\r\n */\r\nvar SshAuthenticationType;\r\n(function (SshAuthenticationType) {\r\n    /**\r\n     * The client is attempting to authenticate without any credentials, or with only a\r\n     * username, or is merely checking what authentication methods are supported by the server.\r\n     *\r\n     * This event is raised by an `SshServerSession` when the client requests authentication\r\n     * using the \"none\" method. With this method, all of the credential properties in the\r\n     * `SshAuthenticatingEventArgs` are null.\r\n     *\r\n     * If the server app wishes to allow the client to authenticate with only a username, it may\r\n     * return a principal for the user. Othwerwise, the \"none\" authentication method fails, and\r\n     * the client may make a follow-up attempt to authenticate _with_ credentials.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"clientNone\"] = 0] = \"clientNone\";\r\n    /**\r\n     * The client is attempting to authenticate with a client host public key.\r\n     *\r\n     * This event is raised by an `SshServerSession` when the client requests authentication\r\n     * using the \"hostbased\" method. The authentication handler must verify that the public key\r\n     * actually belongs to the client host name, _and_ that the network address the client\r\n     * connected from matches that host name, before returning a user principal to indicate\r\n     * successful authentication.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"clientHostBased\"] = 1] = \"clientHostBased\";\r\n    /**\r\n     * The client is attempting to authenticate with a username and password credential.\r\n     *\r\n     * This event is raised by an `SshServerSession` when the client requests authentication\r\n     * using the \"password\" method. The authentication handler must verify that the username\r\n     * and password match known credentials on the server, before returning a user principal\r\n     * to indicate successful authentication.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"clientPassword\"] = 2] = \"clientPassword\";\r\n    /**\r\n     * The client is querying whether authentication may be possible for a specified username and\r\n     * public key without yet proving they have the private key.\r\n     *\r\n     * This event is raised by an `SshServerSession` when the client requests authentication\r\n     * using the \"publickey\" method _without_ providing a signature. The authentication handler\r\n     * must verify that the username and public key match known credentials on the server. If\r\n     * they match, an _unauthenticated_ principal should be returned. That indicates to the\r\n     * client that they may proceed to actually authenticate using that username and public key.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"clientPublicKeyQuery\"] = 3] = \"clientPublicKeyQuery\";\r\n    /**\r\n     * The client is attempting to authenticate with a username and public key credential.\r\n     *\r\n     * This event is raised by an `SshServerSession` when the client requests authentication\r\n     * using the \"publickey\" method, including a signature that proves they have the private\r\n     * key. The authentication handler must verify that the username and public key match known\r\n     * credentials on the server, before returning a user principal to indicate successful\r\n     * authentication.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"clientPublicKey\"] = 4] = \"clientPublicKey\";\r\n    /**\r\n     * The server is attempting to authenticate with a public key credential.\r\n     *\r\n     * This event is raised by an `SshClientSession` when the server requests\r\n     * authentication by providing a signature that proves it has the private key. The client\r\n     * authentication handler must verify that the public key matches known public key(s) for\r\n     * that server. Or if not known (often the case for the first time connecting to that server)\r\n     * it may prompt the user to consent, and then save the public key for later reference. To\r\n     * indicate successful authentication, the client authentication handler returns a principal\r\n     * that represents the server.\r\n     */\r\n    SshAuthenticationType[SshAuthenticationType[\"serverPublicKey\"] = 10] = \"serverPublicKey\";\r\n})(SshAuthenticationType = exports.SshAuthenticationType || (exports.SshAuthenticationType = {}));\r\n/**\r\n * Arguments for the `SshSession.Authenticating` event that is raised when a client\r\n * or server is requesting authentication.\r\n *\r\n * See `SshAuthenticationType` for a description of the different authentication methods and\r\n * how they map to properties in this event-args object.\r\n *\r\n * After validating the credentials, the event handler must set the `authenticationPromise`\r\n * property to a task that resolves to a principal object to indicate successful authentication.\r\n * That principal will then be associated with the sesssion as the `SshSession.principal` property.\r\n */\r\nclass SshAuthenticatingEventArgs {\r\n    constructor(authenticationType, { username, password, publicKey, clientHostname, clientUsername, }, cancellation) {\r\n        this.authenticationType = authenticationType;\r\n        const validate = ({ usernameRequired, passwordRequired, publicKeyRequired, clientHostnameRequired, clientUsernameRequired, }) => {\r\n            // This is intentionally not checking for empty strings. The authentication handler\r\n            // should determine whether any non-null string values are valid.\r\n            if ((typeof username === 'string') !== !!usernameRequired)\r\n                return false;\r\n            if ((typeof password === 'string') !== !!passwordRequired)\r\n                return false;\r\n            if (!!publicKey !== !!publicKeyRequired)\r\n                return false;\r\n            if ((typeof clientHostname === 'string') !== !!clientHostnameRequired)\r\n                return false;\r\n            if ((typeof clientUsername === 'string') !== !!clientUsernameRequired)\r\n                return false;\r\n            return true;\r\n        };\r\n        let valid;\r\n        switch (authenticationType) {\r\n            case SshAuthenticationType.clientNone:\r\n                valid = validate({ usernameRequired: true });\r\n                break;\r\n            case SshAuthenticationType.clientHostBased:\r\n                valid = validate({\r\n                    usernameRequired: true,\r\n                    publicKeyRequired: true,\r\n                    clientHostnameRequired: true,\r\n                    clientUsernameRequired: true,\r\n                });\r\n                break;\r\n            case SshAuthenticationType.clientPassword:\r\n                valid = validate({ usernameRequired: true, passwordRequired: true });\r\n                break;\r\n            case SshAuthenticationType.clientPublicKeyQuery:\r\n            case SshAuthenticationType.clientPublicKey:\r\n                valid = validate({ usernameRequired: true, publicKeyRequired: true });\r\n                break;\r\n            case SshAuthenticationType.serverPublicKey:\r\n                valid = validate({ publicKeyRequired: true });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication type: ${authenticationType}`);\r\n        }\r\n        if (!valid) {\r\n            throw new Error(`Invalid arguments for authentication type: ${authenticationType}`);\r\n        }\r\n        this.username = username !== null && username !== void 0 ? username : null;\r\n        this.password = password !== null && password !== void 0 ? password : null;\r\n        this.publicKey = publicKey !== null && publicKey !== void 0 ? publicKey : null;\r\n        this.clientHostname = clientHostname !== null && clientHostname !== void 0 ? clientHostname : null;\r\n        this.clientUsername = clientUsername !== null && clientUsername !== void 0 ? clientUsername : null;\r\n        this.cancellationValue = cancellation !== null && cancellation !== void 0 ? cancellation : vscode_jsonrpc_1.CancellationToken.None;\r\n    }\r\n    /**\r\n     * Gets a token that is cancelled if the session ends before the authentication handler\r\n     * completes.\r\n     */\r\n    get cancellation() {\r\n        return this.cancellationValue;\r\n    }\r\n    /* @internal */\r\n    set cancellation(value) {\r\n        this.cancellationValue = value;\r\n    }\r\n    toString() {\r\n        if (this.password) {\r\n            return `${this.username ? '\"' + this.username + '\" ' : ''}[password]`;\r\n        }\r\n        else if (this.publicKey) {\r\n            return `${this.username ? '\"' + this.username + '\" ' : ''}[${this.publicKey.keyAlgorithmName}]`;\r\n        }\r\n        else {\r\n            return `\"${this.username}\"`;\r\n        }\r\n    }\r\n}\r\nexports.SshAuthenticatingEventArgs = SshAuthenticatingEventArgs;\r\n//# sourceMappingURL=sshAuthenticatingEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshChannelClosedEventArgs = void 0;\r\nclass SshChannelClosedEventArgs {\r\n    constructor(exitStatusOrSignalOrError, errorMessage) {\r\n        if (typeof exitStatusOrSignalOrError === 'number') {\r\n            this.exitStatus = exitStatusOrSignalOrError;\r\n        }\r\n        else if (typeof exitStatusOrSignalOrError === 'string') {\r\n            this.exitSignal = exitStatusOrSignalOrError;\r\n            this.errorMessage = errorMessage;\r\n        }\r\n        else if (exitStatusOrSignalOrError instanceof Error) {\r\n            this.error = exitStatusOrSignalOrError;\r\n        }\r\n    }\r\n}\r\nexports.SshChannelClosedEventArgs = SshChannelClosedEventArgs;\r\n//# sourceMappingURL=sshChannelClosedEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshChannelOpeningEventArgs = void 0;\r\nconst connectionMessages_1 = require(\"../messages/connectionMessages\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass SshChannelOpeningEventArgs {\r\n    constructor(request, channel, isRemoteRequest, cancellation) {\r\n        this.request = request;\r\n        this.channel = channel;\r\n        this.isRemoteRequest = isRemoteRequest;\r\n        /**\r\n         * Specifies a reason that the channel could not be opened.\r\n         *\r\n         * The handler of this event can optionally block the channel by setting\r\n         * a failure reason. If the event is not handled or the reason remains\r\n         * `none` then the channel is allowed to open.\r\n         */\r\n        this.failureReason = connectionMessages_1.SshChannelOpenFailureReason.none;\r\n        /**\r\n         * Optional message to go along with a failure reason.\r\n         */\r\n        this.failureDescription = null;\r\n        if (!request)\r\n            throw new TypeError('A channel open message is required.');\r\n        if (!channel)\r\n            throw new TypeError('A channel is required.');\r\n        this.cancellationValue = cancellation !== null && cancellation !== void 0 ? cancellation : vscode_jsonrpc_1.CancellationToken.None;\r\n    }\r\n    /**\r\n     * Gets a token that is cancelled if the session ends before the request handler\r\n     * completes.\r\n     */\r\n    get cancellation() {\r\n        return this.cancellationValue;\r\n    }\r\n    /* @internal */\r\n    set cancellation(value) {\r\n        this.cancellationValue = value;\r\n    }\r\n    toString() {\r\n        return `${this.channel.toString()}${this.failureReason ? ' ' + connectionMessages_1.SshChannelOpenFailureReason[this.failureReason] : ''}`;\r\n    }\r\n}\r\nexports.SshChannelOpeningEventArgs = SshChannelOpeningEventArgs;\r\n//# sourceMappingURL=sshChannelOpeningEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshExtendedDataEventArgs = exports.SshExtendedDataType = void 0;\r\nvar SshExtendedDataType;\r\n(function (SshExtendedDataType) {\r\n    /**\r\n     * The extended data type SSH_EXTENDED_DATA_STDERR has been defined for stderr data.\r\n     */\r\n    SshExtendedDataType[SshExtendedDataType[\"STDERR\"] = 1] = \"STDERR\";\r\n})(SshExtendedDataType = exports.SshExtendedDataType || (exports.SshExtendedDataType = {}));\r\nclass SshExtendedDataEventArgs {\r\n    constructor(dataTypeCode, data) {\r\n        this.dataTypeCode = dataTypeCode;\r\n        this.data = data;\r\n    }\r\n    toString() {\r\n        return `${SshExtendedDataType[this.dataTypeCode]}: ${this.data.toString()}`;\r\n    }\r\n}\r\nexports.SshExtendedDataEventArgs = SshExtendedDataEventArgs;\r\n//# sourceMappingURL=sshExtendedDataEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshRequestEventArgs = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass SshRequestEventArgs {\r\n    constructor(requestType, request, principal, cancellation) {\r\n        this.requestType = requestType;\r\n        this.request = request;\r\n        this.principal = principal;\r\n        this.cancellationValue = cancellation !== null && cancellation !== void 0 ? cancellation : vscode_jsonrpc_1.CancellationToken.None;\r\n    }\r\n    /**\r\n     * Gets a token that is cancelled if the session ends before the request handler\r\n     * completes.\r\n     */\r\n    get cancellation() {\r\n        return this.cancellationValue;\r\n    }\r\n    /* @internal */\r\n    set cancellation(value) {\r\n        this.cancellationValue = value;\r\n    }\r\n    toString() {\r\n        return `RequestType: ${this.requestType}` + this.request ? ` Request: ${this.request}` : '';\r\n    }\r\n}\r\nexports.SshRequestEventArgs = SshRequestEventArgs;\r\n//# sourceMappingURL=sshRequestEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshSessionClosedEventArgs = void 0;\r\nconst transportMessages_1 = require(\"../messages/transportMessages\");\r\nclass SshSessionClosedEventArgs {\r\n    constructor(reason, message, error) {\r\n        this.reason = reason;\r\n        this.message = message;\r\n        this.error = error;\r\n        if (!message)\r\n            throw new TypeError('A disconnect message is required.');\r\n    }\r\n    toString() {\r\n        return `${transportMessages_1.SshDisconnectReason[this.reason]}: ${this.message}`;\r\n    }\r\n}\r\nexports.SshSessionClosedEventArgs = SshSessionClosedEventArgs;\r\n//# sourceMappingURL=sshSessionClosedEventArgs.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DerWriter = exports.DerReader = exports.formatBuffer = exports.SshDataWriter = exports.SshDataReader = exports.ECDsa = exports.Rsa = exports.Encryption = exports.HmacAlgorithm = exports.EncryptionAlgorithm = exports.PublicKeyAlgorithm = exports.KeyExchangeAlgorithm = exports.SshAlgorithms = exports.CommandRequestMessage = exports.ChannelRequestType = exports.ChannelRequestMessage = exports.ChannelOpenConfirmationMessage = exports.ChannelOpenMessage = exports.ChannelOpenFailureMessage = exports.ChannelMessage = exports.SshChannelOpenFailureReason = exports.SshReconnectFailureReason = exports.SshDisconnectReason = exports.SessionRequestFailureMessage = exports.SessionRequestSuccessMessage = exports.DebugMessage = exports.SessionRequestMessage = exports.SshMessage = exports.SshExtendedDataEventArgs = exports.SshExtendedDataType = exports.SshChannelClosedEventArgs = exports.SshSessionClosedEventArgs = exports.SshChannelOpeningEventArgs = exports.SshRequestEventArgs = exports.SshAuthenticatingEventArgs = exports.SshAuthenticationType = exports.serviceActivation = exports.SshService = exports.SshRpcMessageStream = exports.WebSocketStream = exports.NodeStream = exports.BaseStream = exports.SshStream = exports.SshChannel = exports.SshServerSession = exports.SshClientSession = exports.SshSession = exports.SshVersionInfo = exports.SshProtocolExtensionNames = exports.SshSessionConfiguration = void 0;\r\nexports.SshTraceEventIds = exports.TraceLevel = exports.SecureStream = exports.MultiChannelStream = exports.SessionContour = exports.ChannelMetrics = exports.SessionMetrics = exports.Queue = exports.Semaphore = exports.PromiseCompletionSource = exports.CancellationError = exports.CancellationTokenSource = exports.CancellationToken = exports.ObjectDisposedError = exports.SshReconnectError = exports.SshConnectionError = exports.SshChannelError = exports.BigInt = void 0;\r\nvar sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nObject.defineProperty(exports, \"SshSessionConfiguration\", { enumerable: true, get: function () { return sshSessionConfiguration_1.SshSessionConfiguration; } });\r\nObject.defineProperty(exports, \"SshProtocolExtensionNames\", { enumerable: true, get: function () { return sshSessionConfiguration_1.SshProtocolExtensionNames; } });\r\nvar sshVersionInfo_1 = require(\"./sshVersionInfo\");\r\nObject.defineProperty(exports, \"SshVersionInfo\", { enumerable: true, get: function () { return sshVersionInfo_1.SshVersionInfo; } });\r\nvar sshSession_1 = require(\"./sshSession\");\r\nObject.defineProperty(exports, \"SshSession\", { enumerable: true, get: function () { return sshSession_1.SshSession; } });\r\nvar sshClientSession_1 = require(\"./sshClientSession\");\r\nObject.defineProperty(exports, \"SshClientSession\", { enumerable: true, get: function () { return sshClientSession_1.SshClientSession; } });\r\nvar sshServerSession_1 = require(\"./sshServerSession\");\r\nObject.defineProperty(exports, \"SshServerSession\", { enumerable: true, get: function () { return sshServerSession_1.SshServerSession; } });\r\nvar sshChannel_1 = require(\"./sshChannel\");\r\nObject.defineProperty(exports, \"SshChannel\", { enumerable: true, get: function () { return sshChannel_1.SshChannel; } });\r\nvar sshStream_1 = require(\"./sshStream\");\r\nObject.defineProperty(exports, \"SshStream\", { enumerable: true, get: function () { return sshStream_1.SshStream; } });\r\nvar streams_1 = require(\"./streams\");\r\nObject.defineProperty(exports, \"BaseStream\", { enumerable: true, get: function () { return streams_1.BaseStream; } });\r\nObject.defineProperty(exports, \"NodeStream\", { enumerable: true, get: function () { return streams_1.NodeStream; } });\r\nObject.defineProperty(exports, \"WebSocketStream\", { enumerable: true, get: function () { return streams_1.WebSocketStream; } });\r\nvar sshRpcMessageStream_1 = require(\"./sshRpcMessageStream\");\r\nObject.defineProperty(exports, \"SshRpcMessageStream\", { enumerable: true, get: function () { return sshRpcMessageStream_1.SshRpcMessageStream; } });\r\nvar sshService_1 = require(\"./services/sshService\");\r\nObject.defineProperty(exports, \"SshService\", { enumerable: true, get: function () { return sshService_1.SshService; } });\r\nvar serviceActivation_1 = require(\"./services/serviceActivation\");\r\nObject.defineProperty(exports, \"serviceActivation\", { enumerable: true, get: function () { return serviceActivation_1.serviceActivation; } });\r\nvar sshAuthenticatingEventArgs_1 = require(\"./events/sshAuthenticatingEventArgs\");\r\nObject.defineProperty(exports, \"SshAuthenticationType\", { enumerable: true, get: function () { return sshAuthenticatingEventArgs_1.SshAuthenticationType; } });\r\nObject.defineProperty(exports, \"SshAuthenticatingEventArgs\", { enumerable: true, get: function () { return sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs; } });\r\nvar sshRequestEventArgs_1 = require(\"./events/sshRequestEventArgs\");\r\nObject.defineProperty(exports, \"SshRequestEventArgs\", { enumerable: true, get: function () { return sshRequestEventArgs_1.SshRequestEventArgs; } });\r\nvar sshChannelOpeningEventArgs_1 = require(\"./events/sshChannelOpeningEventArgs\");\r\nObject.defineProperty(exports, \"SshChannelOpeningEventArgs\", { enumerable: true, get: function () { return sshChannelOpeningEventArgs_1.SshChannelOpeningEventArgs; } });\r\nvar sshSessionClosedEventArgs_1 = require(\"./events/sshSessionClosedEventArgs\");\r\nObject.defineProperty(exports, \"SshSessionClosedEventArgs\", { enumerable: true, get: function () { return sshSessionClosedEventArgs_1.SshSessionClosedEventArgs; } });\r\nvar sshChannelClosedEventArgs_1 = require(\"./events/sshChannelClosedEventArgs\");\r\nObject.defineProperty(exports, \"SshChannelClosedEventArgs\", { enumerable: true, get: function () { return sshChannelClosedEventArgs_1.SshChannelClosedEventArgs; } });\r\nvar sshExtendedDataEventArgs_1 = require(\"./events/sshExtendedDataEventArgs\");\r\nObject.defineProperty(exports, \"SshExtendedDataType\", { enumerable: true, get: function () { return sshExtendedDataEventArgs_1.SshExtendedDataType; } });\r\nObject.defineProperty(exports, \"SshExtendedDataEventArgs\", { enumerable: true, get: function () { return sshExtendedDataEventArgs_1.SshExtendedDataEventArgs; } });\r\nvar sshMessage_1 = require(\"./messages/sshMessage\");\r\nObject.defineProperty(exports, \"SshMessage\", { enumerable: true, get: function () { return sshMessage_1.SshMessage; } });\r\nvar transportMessages_1 = require(\"./messages/transportMessages\");\r\nObject.defineProperty(exports, \"SessionRequestMessage\", { enumerable: true, get: function () { return transportMessages_1.SessionRequestMessage; } });\r\nObject.defineProperty(exports, \"DebugMessage\", { enumerable: true, get: function () { return transportMessages_1.DebugMessage; } });\r\nObject.defineProperty(exports, \"SessionRequestSuccessMessage\", { enumerable: true, get: function () { return transportMessages_1.SessionRequestSuccessMessage; } });\r\nObject.defineProperty(exports, \"SessionRequestFailureMessage\", { enumerable: true, get: function () { return transportMessages_1.SessionRequestFailureMessage; } });\r\nObject.defineProperty(exports, \"SshDisconnectReason\", { enumerable: true, get: function () { return transportMessages_1.SshDisconnectReason; } });\r\nObject.defineProperty(exports, \"SshReconnectFailureReason\", { enumerable: true, get: function () { return transportMessages_1.SshReconnectFailureReason; } });\r\nvar connectionMessages_1 = require(\"./messages/connectionMessages\");\r\nObject.defineProperty(exports, \"SshChannelOpenFailureReason\", { enumerable: true, get: function () { return connectionMessages_1.SshChannelOpenFailureReason; } });\r\nObject.defineProperty(exports, \"ChannelMessage\", { enumerable: true, get: function () { return connectionMessages_1.ChannelMessage; } });\r\nObject.defineProperty(exports, \"ChannelOpenFailureMessage\", { enumerable: true, get: function () { return connectionMessages_1.ChannelOpenFailureMessage; } });\r\nObject.defineProperty(exports, \"ChannelOpenMessage\", { enumerable: true, get: function () { return connectionMessages_1.ChannelOpenMessage; } });\r\nObject.defineProperty(exports, \"ChannelOpenConfirmationMessage\", { enumerable: true, get: function () { return connectionMessages_1.ChannelOpenConfirmationMessage; } });\r\nObject.defineProperty(exports, \"ChannelRequestMessage\", { enumerable: true, get: function () { return connectionMessages_1.ChannelRequestMessage; } });\r\nObject.defineProperty(exports, \"ChannelRequestType\", { enumerable: true, get: function () { return connectionMessages_1.ChannelRequestType; } });\r\nObject.defineProperty(exports, \"CommandRequestMessage\", { enumerable: true, get: function () { return connectionMessages_1.CommandRequestMessage; } });\r\nvar sshAlgorithms_1 = require(\"./algorithms/sshAlgorithms\");\r\nObject.defineProperty(exports, \"SshAlgorithms\", { enumerable: true, get: function () { return sshAlgorithms_1.SshAlgorithms; } });\r\nObject.defineProperty(exports, \"KeyExchangeAlgorithm\", { enumerable: true, get: function () { return sshAlgorithms_1.KeyExchangeAlgorithm; } });\r\nObject.defineProperty(exports, \"PublicKeyAlgorithm\", { enumerable: true, get: function () { return sshAlgorithms_1.PublicKeyAlgorithm; } });\r\nObject.defineProperty(exports, \"EncryptionAlgorithm\", { enumerable: true, get: function () { return sshAlgorithms_1.EncryptionAlgorithm; } });\r\nObject.defineProperty(exports, \"HmacAlgorithm\", { enumerable: true, get: function () { return sshAlgorithms_1.HmacAlgorithm; } });\r\nObject.defineProperty(exports, \"Encryption\", { enumerable: true, get: function () { return sshAlgorithms_1.Encryption; } });\r\nObject.defineProperty(exports, \"Rsa\", { enumerable: true, get: function () { return sshAlgorithms_1.Rsa; } });\r\nObject.defineProperty(exports, \"ECDsa\", { enumerable: true, get: function () { return sshAlgorithms_1.ECDsa; } });\r\nvar sshData_1 = require(\"./io/sshData\");\r\nObject.defineProperty(exports, \"SshDataReader\", { enumerable: true, get: function () { return sshData_1.SshDataReader; } });\r\nObject.defineProperty(exports, \"SshDataWriter\", { enumerable: true, get: function () { return sshData_1.SshDataWriter; } });\r\nObject.defineProperty(exports, \"formatBuffer\", { enumerable: true, get: function () { return sshData_1.formatBuffer; } });\r\nvar derData_1 = require(\"./io/derData\");\r\nObject.defineProperty(exports, \"DerReader\", { enumerable: true, get: function () { return derData_1.DerReader; } });\r\nObject.defineProperty(exports, \"DerWriter\", { enumerable: true, get: function () { return derData_1.DerWriter; } });\r\nvar bigInt_1 = require(\"./io/bigInt\");\r\nObject.defineProperty(exports, \"BigInt\", { enumerable: true, get: function () { return bigInt_1.BigInt; } });\r\nvar errors_1 = require(\"./errors\");\r\nObject.defineProperty(exports, \"SshChannelError\", { enumerable: true, get: function () { return errors_1.SshChannelError; } });\r\nObject.defineProperty(exports, \"SshConnectionError\", { enumerable: true, get: function () { return errors_1.SshConnectionError; } });\r\nObject.defineProperty(exports, \"SshReconnectError\", { enumerable: true, get: function () { return errors_1.SshReconnectError; } });\r\nObject.defineProperty(exports, \"ObjectDisposedError\", { enumerable: true, get: function () { return errors_1.ObjectDisposedError; } });\r\nvar cancellation_1 = require(\"./util/cancellation\");\r\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\r\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\r\nObject.defineProperty(exports, \"CancellationError\", { enumerable: true, get: function () { return cancellation_1.CancellationError; } });\r\nvar promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nObject.defineProperty(exports, \"PromiseCompletionSource\", { enumerable: true, get: function () { return promiseCompletionSource_1.PromiseCompletionSource; } });\r\nvar semaphore_1 = require(\"./util/semaphore\");\r\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return semaphore_1.Semaphore; } });\r\nvar queue_1 = require(\"./util/queue\");\r\nObject.defineProperty(exports, \"Queue\", { enumerable: true, get: function () { return queue_1.Queue; } });\r\nvar sessionMetrics_1 = require(\"./metrics/sessionMetrics\");\r\nObject.defineProperty(exports, \"SessionMetrics\", { enumerable: true, get: function () { return sessionMetrics_1.SessionMetrics; } });\r\nvar channelMetrics_1 = require(\"./metrics/channelMetrics\");\r\nObject.defineProperty(exports, \"ChannelMetrics\", { enumerable: true, get: function () { return channelMetrics_1.ChannelMetrics; } });\r\nvar sessionContour_1 = require(\"./metrics/sessionContour\");\r\nObject.defineProperty(exports, \"SessionContour\", { enumerable: true, get: function () { return sessionContour_1.SessionContour; } });\r\nvar multiChannelStream_1 = require(\"./multiChannelStream\");\r\nObject.defineProperty(exports, \"MultiChannelStream\", { enumerable: true, get: function () { return multiChannelStream_1.MultiChannelStream; } });\r\nvar secureStream_1 = require(\"./secureStream\");\r\nObject.defineProperty(exports, \"SecureStream\", { enumerable: true, get: function () { return secureStream_1.SecureStream; } });\r\nvar trace_1 = require(\"./trace\");\r\nObject.defineProperty(exports, \"TraceLevel\", { enumerable: true, get: function () { return trace_1.TraceLevel; } });\r\nObject.defineProperty(exports, \"SshTraceEventIds\", { enumerable: true, get: function () { return trace_1.SshTraceEventIds; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BigInt = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshData_1 = require(\"./sshData\");\r\n/**\r\n * Represents a large signed integer as a byte byffer.\r\n */\r\nclass BigInt {\r\n    /**\r\n     * Creates a new BigInt instance from a buffer of signed bytes.\r\n     *\r\n     * The first (high) bit of the first (high) byte is the sign bit. Therefore if the\r\n     * highest byte of an unsigned integer is greater than 127, the bytes must include\r\n     * a leading zero byte to prevent interpretation as a negative value.\r\n     */\r\n    constructor(buffer) {\r\n        this.buffer = buffer;\r\n        if (buffer.length === 0) {\r\n            throw new Error('BigInt buffer length must be greater than zero.');\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value that indicates the sign of the big integer:\r\n     * 1 for positive, 0 for zero, -1 for negative.\r\n     */\r\n    get sign() {\r\n        const highByte = this.buffer[0];\r\n        if (highByte === 0) {\r\n            return this.buffer.length > 1 ? 1 : 0;\r\n        }\r\n        else {\r\n            return (highByte & 0x80) === 0 ? 1 : -1;\r\n        }\r\n    }\r\n    static fromInt32(value) {\r\n        if (value === 0) {\r\n            return BigInt.zero;\r\n        }\r\n        let isNegative = false;\r\n        if (value < 0) {\r\n            isNegative = true;\r\n            value = -value;\r\n        }\r\n        const bytes = [];\r\n        for (let bit = 24; bit >= 0; bit -= 8) {\r\n            if (value >= 1 << bit || bytes.length > 0) {\r\n                bytes.push(value >> bit);\r\n                value = value & ~((1 << bit) - 1);\r\n            }\r\n        }\r\n        if (isNegative) {\r\n            if ((bytes[0] & 0x80) === 0) {\r\n                bytes[0] |= 0x80;\r\n            }\r\n            else {\r\n                bytes.splice(0, 0, 0x80);\r\n            }\r\n        }\r\n        return new BigInt(buffer_1.Buffer.from(new Uint8Array(bytes)));\r\n    }\r\n    toInt32() {\r\n        if (this.buffer.length > 4) {\r\n            throw new TypeError('BigInt value cannot be converted to a 32-bit signed integer.');\r\n        }\r\n        let value = this.buffer[0];\r\n        if (this.sign < 0) {\r\n            value &= 0x7f;\r\n        }\r\n        for (let i = 1; i < this.buffer.length; i++) {\r\n            value = (value << 8) + this.buffer[i];\r\n        }\r\n        if (this.sign < 0) {\r\n            value = -value;\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Creates a new BigInt instance from a byte buffer.\r\n     * @param bytes Source byte buffer.\r\n     * @param options.unsigned True if the bytes should be interpreted as unsigned. If false,\r\n     * the high bit of the high byte is the sign bit. The default is false.\r\n     */\r\n    static fromBytes(bytes, options) {\r\n        if (!buffer_1.Buffer.isBuffer(bytes)) {\r\n            throw new TypeError('Buffer expected.');\r\n        }\r\n        else if (bytes.length === 0) {\r\n            throw new Error('BigInt buffer length must be greater than zero.');\r\n        }\r\n        options = options !== null && options !== void 0 ? options : {};\r\n        const highBit = (bytes[0] & 0x80) !== 0;\r\n        const prependZeroCount = options.unsigned && highBit ? 1 : 0;\r\n        let skipZeroCount = 0;\r\n        // Skip non-significant zeroes at the big end.\r\n        for (let i = 0; i < bytes.length - 1 && bytes[i] === 0; i++) {\r\n            if ((bytes[i + 1] & 0x80) === 0) {\r\n                skipZeroCount++;\r\n            }\r\n        }\r\n        const newBytes = buffer_1.Buffer.alloc(bytes.length + prependZeroCount - skipZeroCount);\r\n        bytes.copy(newBytes, prependZeroCount, skipZeroCount, bytes.length);\r\n        return new BigInt(newBytes);\r\n    }\r\n    /**\r\n     * Converts a BigInt instance to a byte buffer.\r\n     *\r\n     * @param options.unsigned True if the returned bytes will be interprted as unsigned.\r\n     * If false, a positive integer may have a leading zero to prevent it from being\r\n     * interpreted as negative.\r\n     * @param options.length Desired length of the resulting buffer. The value will be zero-\r\n     * padded to fill the length. Only applies when `options.unsigned` is true.\r\n     */\r\n    toBytes(options) {\r\n        options = options !== null && options !== void 0 ? options : {};\r\n        let bytes = this.buffer;\r\n        if (options.unsigned) {\r\n            if (this.sign < 0) {\r\n                throw new TypeError('Cannot format a negative BigInt as unsigned.');\r\n            }\r\n            else if (bytes[0] === 0 && bytes.length > 1) {\r\n                bytes = bytes.slice(1, bytes.length);\r\n            }\r\n            if (options.length !== undefined) {\r\n                if (bytes.length > options.length) {\r\n                    throw new Error(`BigInt (${bytes.length} bytes) is too large for length ${options.length}.`);\r\n                }\r\n                else if (bytes.length < options.length) {\r\n                    const padded = buffer_1.Buffer.alloc(options.length);\r\n                    bytes.copy(padded, options.length - bytes.length);\r\n                    return padded;\r\n                }\r\n            }\r\n        }\r\n        const newBytes = buffer_1.Buffer.alloc(bytes.length);\r\n        bytes.copy(newBytes, 0, 0, bytes.length);\r\n        return newBytes;\r\n    }\r\n    copyTo(buffer, offset = 0) {\r\n        this.buffer.copy(buffer, offset, 0, this.buffer.length);\r\n    }\r\n    equals(other) {\r\n        return other instanceof BigInt && this.buffer.equals(other.buffer);\r\n    }\r\n    toString(name) {\r\n        return (0, sshData_1.formatBuffer)(this.buffer, name !== null && name !== void 0 ? name : 'BigInt');\r\n    }\r\n}\r\nexports.BigInt = BigInt;\r\nBigInt.zero = new BigInt(buffer_1.Buffer.alloc(1));\r\n//# sourceMappingURL=bigInt.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DerWriter = exports.DerReader = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst bigInt_1 = require(\"./bigInt\");\r\n/**\r\n * Reads data in DER (Distinguished Encoding Rules) format.\r\n *\r\n * Enables importing and exporting key files, which are commonly DER-encoded.\r\n */\r\nclass DerReader {\r\n    constructor(buffer, dataType = 32 /* DerType.Constructed */ | 16 /* DerType.Sequence */) {\r\n        this.buffer = buffer;\r\n        this.position = 0;\r\n        this.readType(dataType);\r\n        const length = this.readLength();\r\n        if (length > this.buffer.length - this.position) {\r\n            throw new Error('Read out of bounds.');\r\n        }\r\n        this.buffer = this.buffer.slice(0, this.position + length);\r\n    }\r\n    get available() {\r\n        return this.buffer.length - this.position;\r\n    }\r\n    readNull() {\r\n        this.readType(5 /* DerType.Null */);\r\n        if (this.readByte() !== 0) {\r\n            throw new Error('Expected a 0 after Null type.');\r\n        }\r\n    }\r\n    readInteger() {\r\n        this.readType(2 /* DerType.Integer */);\r\n        const length = this.readLength();\r\n        const bytes = this.readBytes(length);\r\n        const result = new bigInt_1.BigInt(bytes);\r\n        return result;\r\n    }\r\n    readOctetString() {\r\n        this.readType(4 /* DerType.OctetString */);\r\n        const length = this.readLength();\r\n        const result = this.readBytes(length);\r\n        return result;\r\n    }\r\n    readBitString() {\r\n        this.readType(3 /* DerType.BitString */);\r\n        const length = this.readLength();\r\n        const padding = this.readByte();\r\n        if (padding !== 0) {\r\n            throw new Error('Padded bit strings are not supported.');\r\n        }\r\n        const result = this.readBytes(length - 1);\r\n        return result;\r\n    }\r\n    readObjectIdentifier(expected) {\r\n        this.readType(6 /* DerType.ObjectIdentifier */);\r\n        const length = this.readLength();\r\n        const end = this.position + length;\r\n        const values = [];\r\n        const first = this.readByte();\r\n        values.push(Math.trunc(first / 40));\r\n        values.push(first % 40);\r\n        let next = 0;\r\n        while (this.position < end) {\r\n            const b = this.readByte();\r\n            if ((b & 0x80) !== 0) {\r\n                next = next * 128 + (b & 0x7f);\r\n            }\r\n            else {\r\n                next = next * 128 + b;\r\n                values.push(next);\r\n                next = 0;\r\n            }\r\n        }\r\n        if (next !== 0) {\r\n            throw new Error('Invalid OID format.');\r\n        }\r\n        const result = values.join('.');\r\n        if (expected && result !== expected) {\r\n            throw new Error(`Expected OID ${expected}, found: ${result}`);\r\n        }\r\n        return result;\r\n    }\r\n    readSequence() {\r\n        const start = this.position;\r\n        this.readType(32 /* DerType.Constructed */ | 16 /* DerType.Sequence */);\r\n        const length = this.readLength();\r\n        this.position += length;\r\n        return new DerReader(this.buffer.slice(start, this.position));\r\n    }\r\n    tryReadTagged(tagId) {\r\n        if (this.position >= this.buffer.length) {\r\n            return null;\r\n        }\r\n        const type = this.buffer[this.position];\r\n        if ((type & 160 /* DerType.Tagged */) === 0 || (type & ~160 /* DerType.Tagged */) !== tagId) {\r\n            return null;\r\n        }\r\n        const start = this.position;\r\n        this.position++;\r\n        const length = this.readLength();\r\n        this.position += length;\r\n        const taggedData = new DerReader(this.buffer.slice(start, this.position), type);\r\n        return taggedData;\r\n    }\r\n    /** Reads the type of the next value in the sequence WITHOUT advancing the reader position. */\r\n    peek() {\r\n        if (this.position >= this.buffer.length) {\r\n            throw new Error('Read out of bounds.');\r\n        }\r\n        return this.buffer[this.position];\r\n    }\r\n    readLength() {\r\n        let length = this.readByte();\r\n        if (length === 0x80) {\r\n            throw new Error('Indefinite-length encoding is not supported.');\r\n        }\r\n        if (length > 127) {\r\n            const size = length & 0x7f;\r\n            if (size > 4) {\r\n                throw new Error(`DER length size is ${size} and cannot be more than 4 bytes.`);\r\n            }\r\n            length = 0;\r\n            for (let i = 0; i < size; i++) {\r\n                const next = this.readByte();\r\n                length = (length << 8) + next;\r\n            }\r\n            if (length < 0) {\r\n                throw new Error('Corrupted data - negative length found');\r\n            }\r\n        }\r\n        return length;\r\n    }\r\n    readByte() {\r\n        if (this.position >= this.buffer.length) {\r\n            throw new Error('Read out of bounds.');\r\n        }\r\n        return this.buffer[this.position++];\r\n    }\r\n    readBytes(length) {\r\n        if (this.position + length > this.buffer.length) {\r\n            throw new Error('Read out of bounds.');\r\n        }\r\n        const result = this.buffer.slice(this.position, this.position + length);\r\n        this.position += length;\r\n        return result;\r\n    }\r\n    readType(expectedType) {\r\n        const type = this.readByte();\r\n        if (type !== expectedType) {\r\n            throw new Error(`Expected ${expectedType} data type, found : ${type}`);\r\n        }\r\n    }\r\n}\r\nexports.DerReader = DerReader;\r\n/**\r\n * Writes data in DER (Distinguished Encoding Rules) format.\r\n *\r\n * Enables importing and exporting key files, which are commonly DER-encoded.\r\n */\r\nclass DerWriter {\r\n    constructor(buffer, dataType = 32 /* DerType.Constructed */ | 16 /* DerType.Sequence */) {\r\n        this.buffer = buffer;\r\n        this.dataType = dataType;\r\n        this.position = 0;\r\n        this.buffer = buffer;\r\n    }\r\n    toBuffer() {\r\n        // Move the data over to make space for the type + length prefix.\r\n        const length = this.position;\r\n        const lengthBytes = DerWriter.getLength(length);\r\n        this.ensureCapacity(1 + lengthBytes.length + length);\r\n        const result = this.buffer.slice(0, 1 + lengthBytes.length + length);\r\n        this.buffer.copy(result, 1 + lengthBytes.length);\r\n        // Write the type + length prefix.\r\n        result[0] = this.dataType;\r\n        lengthBytes.copy(result, 1, 0);\r\n        // Restore the writer buffer to its previous state (without the type + length prefix).\r\n        this.buffer = this.buffer.slice(1 + lengthBytes.length, result.length);\r\n        this.position = length;\r\n        return result;\r\n    }\r\n    writeSequence(data) {\r\n        this.writeBytes(data.toBuffer());\r\n    }\r\n    writeTagged(tagId, data) {\r\n        if (tagId > 0xf)\r\n            throw new Error('Invalid DER tag.');\r\n        this.writeByte(160 /* DerType.Tagged */ | tagId);\r\n        const lengthBytes = DerWriter.getLength(data.position);\r\n        this.writeBytes(lengthBytes);\r\n        this.writeBytes(data.buffer.slice(0, data.position));\r\n    }\r\n    writeNull() {\r\n        this.writeByte(5 /* DerType.Null */);\r\n        this.writeByte(0);\r\n    }\r\n    writeInteger(value) {\r\n        this.writeByte(2 /* DerType.Integer */);\r\n        const integerBytes = value.toBytes();\r\n        const lengthBytes = DerWriter.getLength(integerBytes.length);\r\n        this.writeBytes(lengthBytes);\r\n        this.writeBytes(integerBytes);\r\n    }\r\n    writeOctetString(data) {\r\n        this.writeByte(4 /* DerType.OctetString */);\r\n        const lengthBytes = DerWriter.getLength(data.length);\r\n        this.writeBytes(lengthBytes);\r\n        this.writeBytes(data);\r\n    }\r\n    writeBitString(data) {\r\n        this.writeByte(3 /* DerType.BitString */);\r\n        const lengthBytes = DerWriter.getLength(1 + data.length);\r\n        this.writeBytes(lengthBytes);\r\n        this.writeByte(0);\r\n        this.writeBytes(data);\r\n    }\r\n    writeObjectIdentifier(oid) {\r\n        if (!oid)\r\n            throw new TypeError('OID value is null or empty.');\r\n        const values = oid.split('.').map(Number);\r\n        if (values.length < 2 || values[0] > 3 || values[1] >= 40) {\r\n            throw new Error(`Invalid OID: ${oid}`);\r\n        }\r\n        this.writeByte(6 /* DerType.ObjectIdentifier */);\r\n        let length = values.length - 1;\r\n        for (let i = 2; i < values.length; i++) {\r\n            let value = values[i];\r\n            while (value > 128) {\r\n                length++;\r\n                value /= 128;\r\n            }\r\n        }\r\n        const lengthBytes = DerWriter.getLength(length);\r\n        this.writeBytes(lengthBytes);\r\n        this.writeByte(values[0] * 40 + values[1]);\r\n        for (let i = 2; i < values.length; i++) {\r\n            let value = values[i];\r\n            if (value >= 128) {\r\n                const bytes = [];\r\n                bytes.push(value & 0x7f);\r\n                while (value >= 128) {\r\n                    value /= 128;\r\n                    bytes.push(0x80 | (value & 0x7f));\r\n                }\r\n                while (bytes.length > 0) {\r\n                    this.writeByte(bytes.pop());\r\n                }\r\n            }\r\n            else {\r\n                this.writeByte(value);\r\n            }\r\n        }\r\n    }\r\n    static getLength(length) {\r\n        if (length > 127) {\r\n            let size = 1;\r\n            for (let val = length >> 8; val !== 0; val >>= 8) {\r\n                size++;\r\n            }\r\n            const lengthBytes = DerWriter.lengthBuffer.slice(0, size + 1);\r\n            lengthBytes[0] = size | 0x80;\r\n            for (let i = (size - 1) * 8, j = 1; i >= 0; i -= 8, j++) {\r\n                lengthBytes[j] = length >> i;\r\n            }\r\n            return lengthBytes;\r\n        }\r\n        else {\r\n            const lengthBytes = DerWriter.lengthBuffer.slice(0, 1);\r\n            lengthBytes[0] = length;\r\n            return lengthBytes;\r\n        }\r\n    }\r\n    writeByte(value) {\r\n        this.ensureCapacity(this.position + 1);\r\n        this.buffer[this.position++] = value;\r\n    }\r\n    writeBytes(value) {\r\n        this.ensureCapacity(this.position + value.length);\r\n        value.copy(this.buffer, this.position);\r\n        this.position += value.length;\r\n    }\r\n    ensureCapacity(capacity) {\r\n        if (this.buffer.length < capacity) {\r\n            let newLength = Math.max(512, this.buffer.length * 2);\r\n            while (newLength < capacity)\r\n                newLength *= 2;\r\n            const newBuffer = buffer_1.Buffer.alloc(newLength);\r\n            this.buffer.copy(newBuffer, 0, 0, this.position);\r\n            this.buffer = newBuffer;\r\n        }\r\n    }\r\n}\r\nexports.DerWriter = DerWriter;\r\nDerWriter.lengthBuffer = buffer_1.Buffer.alloc(10);\r\n//# sourceMappingURL=derData.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.formatBuffer = exports.SshDataWriter = exports.SshDataReader = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshAlgorithms_1 = require(\"../algorithms/sshAlgorithms\");\r\nconst bigInt_1 = require(\"./bigInt\");\r\nclass SshDataReader {\r\n    constructor(buffer) {\r\n        this.buffer = buffer;\r\n        this.position = 0;\r\n    }\r\n    get available() {\r\n        return this.buffer.length - this.position;\r\n    }\r\n    read(length) {\r\n        if (this.available < length) {\r\n            throw new Error('Attempted to read past end of buffer.');\r\n        }\r\n        const data = this.buffer.slice(this.position, this.position + length);\r\n        this.position += length;\r\n        return data;\r\n    }\r\n    readByte() {\r\n        if (this.available === 0) {\r\n            throw new Error('Attempted to read past end of buffer.');\r\n        }\r\n        const value = this.buffer[this.position];\r\n        this.position++;\r\n        return value;\r\n    }\r\n    readBinary() {\r\n        const length = this.readUInt32();\r\n        if (this.available < length) {\r\n            throw new Error('Attempted to read past end of buffer.');\r\n        }\r\n        const data = this.buffer.slice(this.position, this.position + length);\r\n        this.position += length;\r\n        return data;\r\n    }\r\n    readString(encoding) {\r\n        const bytes = this.readBinary();\r\n        return bytes.toString();\r\n    }\r\n    readList(encoding) {\r\n        const stringList = this.readString(encoding);\r\n        return stringList.length === 0 ? [] : stringList.split(',');\r\n    }\r\n    readBoolean() {\r\n        return this.readByte() !== 0;\r\n    }\r\n    readUInt32() {\r\n        if (this.available < 4) {\r\n            throw new Error('Attempted to read past end of buffer.');\r\n        }\r\n        // Big-endian encoding\r\n        const value0 = this.buffer[this.position + 0];\r\n        const value1 = this.buffer[this.position + 1];\r\n        const value2 = this.buffer[this.position + 2];\r\n        const value3 = this.buffer[this.position + 3];\r\n        this.position += 4;\r\n        const value = ((value0 << 24) | (value1 << 16) | (value2 << 8) | value3) >>> 0;\r\n        return value;\r\n    }\r\n    readUInt64() {\r\n        if (this.available < 8) {\r\n            throw new Error('Attempted to read past end of buffer.');\r\n        }\r\n        // Big-endian encoding\r\n        const value0 = this.buffer[this.position + 0];\r\n        const value1 = this.buffer[this.position + 1];\r\n        const value2 = this.buffer[this.position + 2];\r\n        const value3 = this.buffer[this.position + 3];\r\n        const value4 = this.buffer[this.position + 4];\r\n        const value5 = this.buffer[this.position + 5];\r\n        const value6 = this.buffer[this.position + 6];\r\n        const value7 = this.buffer[this.position + 7];\r\n        this.position += 8;\r\n        const high = ((value0 << 24) | (value1 << 16) | (value2 << 8) | value3) >>> 0;\r\n        const low = ((value4 << 24) | (value5 << 16) | (value6 << 8) | value7) >>> 0;\r\n        return high * 0x100000000 + low;\r\n    }\r\n    readBigInt() {\r\n        const data = this.readBinary();\r\n        if (data.length === 0) {\r\n            return bigInt_1.BigInt.zero;\r\n        }\r\n        return bigInt_1.BigInt.fromBytes(data);\r\n    }\r\n}\r\nexports.SshDataReader = SshDataReader;\r\nSshDataReader.mpintZero = buffer_1.Buffer.alloc(1);\r\nclass SshDataWriter {\r\n    constructor(buffer) {\r\n        this.buffer = buffer;\r\n        this.position = 0;\r\n    }\r\n    write(data) {\r\n        this.ensureCapacity(this.position + data.length);\r\n        data.copy(this.buffer, this.position);\r\n        this.position += data.length;\r\n    }\r\n    writeByte(value) {\r\n        this.ensureCapacity(this.position + 1);\r\n        this.buffer[this.position] = value;\r\n        this.position++;\r\n    }\r\n    writeBinary(data) {\r\n        this.ensureCapacity(this.position + 4 + data.length);\r\n        this.writeUInt32(data.length);\r\n        data.copy(this.buffer, this.position);\r\n        this.position += data.length;\r\n    }\r\n    writeString(value, encoding) {\r\n        this.writeBinary(buffer_1.Buffer.from(value));\r\n    }\r\n    writeList(value, encoding) {\r\n        this.writeString(value ? value.join(',') : '', encoding);\r\n    }\r\n    writeBoolean(value) {\r\n        this.writeByte(value ? 1 : 0);\r\n    }\r\n    writeUInt32(value) {\r\n        this.ensureCapacity(this.position + 4);\r\n        // Big-endian encoding\r\n        this.buffer[this.position + 0] = value >>> 24;\r\n        this.buffer[this.position + 1] = value >>> 16;\r\n        this.buffer[this.position + 2] = value >>> 8;\r\n        this.buffer[this.position + 3] = value >>> 0;\r\n        this.position += 4;\r\n    }\r\n    /* @internal */\r\n    static writeUInt32(buffer, offset, value) {\r\n        buffer[offset + 0] = value >>> 24;\r\n        buffer[offset + 1] = value >>> 16;\r\n        buffer[offset + 2] = value >>> 8;\r\n        buffer[offset + 3] = value >>> 0;\r\n    }\r\n    writeUInt64(value) {\r\n        this.ensureCapacity(this.position + 8);\r\n        const low = value & 0xffffffff;\r\n        const high = (value - low) / 0x100000000;\r\n        // Big-endian encoding\r\n        this.buffer[this.position + 0] = high >>> 24;\r\n        this.buffer[this.position + 1] = high >>> 16;\r\n        this.buffer[this.position + 2] = high >>> 8;\r\n        this.buffer[this.position + 3] = high >>> 0;\r\n        this.buffer[this.position + 4] = low >>> 24;\r\n        this.buffer[this.position + 5] = low >>> 16;\r\n        this.buffer[this.position + 6] = low >>> 8;\r\n        this.buffer[this.position + 7] = low >>> 0;\r\n        this.position += 8;\r\n    }\r\n    writeBigInt(value) {\r\n        const data = value.toBytes();\r\n        if (data.length === 1 && data[0] === 0) {\r\n            this.writeUInt32(0);\r\n        }\r\n        else {\r\n            this.writeBinary(data);\r\n        }\r\n    }\r\n    writeRandom(length) {\r\n        this.ensureCapacity(this.position + length);\r\n        const randomBuffer = this.buffer.slice(this.position, this.position + length);\r\n        sshAlgorithms_1.SshAlgorithms.random.getBytes(randomBuffer);\r\n        this.position += length;\r\n    }\r\n    skip(length) {\r\n        this.ensureCapacity(this.position + length);\r\n        this.position += length;\r\n    }\r\n    ensureCapacity(capacity) {\r\n        if (this.buffer.length < capacity) {\r\n            let newLength = Math.max(512, this.buffer.length * 2);\r\n            while (newLength < capacity)\r\n                newLength *= 2;\r\n            const newBuffer = buffer_1.Buffer.alloc(newLength);\r\n            this.buffer.copy(newBuffer, 0, 0, this.position);\r\n            this.buffer = newBuffer;\r\n        }\r\n    }\r\n    toBuffer() {\r\n        return this.buffer.slice(0, this.position);\r\n    }\r\n}\r\nexports.SshDataWriter = SshDataWriter;\r\nfunction makeCrcTable() {\r\n    let c;\r\n    const table = [];\r\n    for (let n = 0; n < 256; n++) {\r\n        c = n;\r\n        for (let k = 0; k < 8; k++) {\r\n            c = c & 1 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\r\n        }\r\n        table[n] = c;\r\n    }\r\n    return table;\r\n}\r\nlet crcTable;\r\nfunction crc32(data) {\r\n    if (!crcTable) {\r\n        crcTable = makeCrcTable();\r\n    }\r\n    let crc = 0 ^ -1;\r\n    for (let i = 0; i < data.length; i++) {\r\n        crc = (crc >>> 8) ^ crcTable[(crc ^ data[i]) & 0xff];\r\n    }\r\n    const result = (crc ^ -1) >>> 0;\r\n    return (result + 0x100000000)\r\n        .toString(16)\r\n        .substr(-8)\r\n        .toUpperCase();\r\n}\r\n/**\r\n * Formats a byte buffer using the same format as OpenSSH,\r\n * useful for debugging and comparison in logs.\r\n */\r\nfunction formatBuffer(data, name, formatData) {\r\n    let s = `${name === undefined ? 'Buffer' : name}[${data.length}] (${crc32(data)})\\n`;\r\n    if (formatData === false) {\r\n        return s;\r\n    }\r\n    const max = Math.min(2048, data.length);\r\n    for (let lineOffset = 0; lineOffset < max; lineOffset += 16) {\r\n        if (lineOffset < 1000)\r\n            s += '0';\r\n        if (lineOffset < 100)\r\n            s += '0';\r\n        if (lineOffset < 10)\r\n            s += '0';\r\n        s += lineOffset + ':';\r\n        for (let i = lineOffset; i < lineOffset + 16; i++) {\r\n            if (i < max) {\r\n                s += ' ' + data.slice(i, i + 1).toString('hex');\r\n            }\r\n            else {\r\n                s += '   ';\r\n            }\r\n        }\r\n        s += '  ';\r\n        for (let i = lineOffset; i < lineOffset + 16; i++) {\r\n            if (i < max) {\r\n                const c = data[i];\r\n                s += c > 32 && c <= 127 ? data.slice(i, i + 1).toString() : '.';\r\n            }\r\n            else {\r\n                s += ' ';\r\n            }\r\n        }\r\n        s += '\\n';\r\n    }\r\n    if (max < data.length) {\r\n        s += '...\\n';\r\n    }\r\n    return s;\r\n}\r\nexports.formatBuffer = formatBuffer;\r\n//# sourceMappingURL=sshData.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshProtocol = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst queue_1 = require(\"../util/queue\");\r\nconst semaphore_1 = require(\"../util/semaphore\");\r\nconst sshMessage_1 = require(\"../messages/sshMessage\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nconst transportMessages_1 = require(\"../messages/transportMessages\");\r\nconst kexMessages_1 = require(\"../messages/kexMessages\");\r\nconst connectionMessages_1 = require(\"../messages/connectionMessages\");\r\nconst errors_1 = require(\"../errors\");\r\nconst trace_1 = require(\"../trace\");\r\nclass SequencedMessage {\r\n    constructor(sequence, message) {\r\n        this.sequence = sequence;\r\n        this.message = message;\r\n    }\r\n}\r\n/**\r\n * Implements the base SSH protocol (sending and receiving messages) over a Stream.\r\n */\r\nclass SshProtocol {\r\n    constructor(stream, config, metrics, trace) {\r\n        this.config = config;\r\n        this.metrics = metrics;\r\n        this.trace = trace;\r\n        this.sessionSemaphore = new semaphore_1.Semaphore(1);\r\n        this.inboundPacketSequence = 0;\r\n        this.outboundPacketSequence = 0;\r\n        this.inboundFlow = 0;\r\n        this.outboundFlow = 0;\r\n        // Sent messages are kept for a short time, until the other side acknowledges\r\n        // that they have been received. This enables re-sending lost messages on reconnect.\r\n        this.recentSentMessages = new queue_1.Queue();\r\n        // Initialize buffers that are re-used for each sent/received message.\r\n        // The buffers will be automatically expanded as necessary.\r\n        this.sendWriter = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(1024));\r\n        this.receiveWriter = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(1024));\r\n        /* @internal */\r\n        this.traceChannelData = false;\r\n        this.extensions = null;\r\n        this.kexService = null;\r\n        this.algorithms = null;\r\n        this.outgoingMessagesHaveLatencyInfo = false;\r\n        this.incomingMessagesHaveLatencyInfo = false;\r\n        this.outgoingMessagesHaveReconnectInfo = false;\r\n        this.incomingMessagesHaveReconnectInfo = false;\r\n        this.stream = stream;\r\n        this.traceChannelData = config.traceChannelData;\r\n    }\r\n    get lastIncomingSequence() {\r\n        return this.inboundPacketSequence - 1;\r\n    }\r\n    getSentMessages(startingSequenceNumber) {\r\n        if (startingSequenceNumber === this.outboundPacketSequence + 1) {\r\n            // The recipient is already up-to-date.\r\n            return [];\r\n        }\r\n        if (this.recentSentMessages.size > 0 &&\r\n            startingSequenceNumber < this.recentSentMessages.peek().sequence) {\r\n            // The cached recent messages do not go back as far as the requested sequence number.\r\n            // This should never happen because messages are not dropped from this list until\r\n            // the other side acknowledges they have been received, so they should not be\r\n            // requested again after reconnecting.\r\n            return null;\r\n        }\r\n        // Return all messages starting with the requested sequence number.\r\n        // Exclude key exchange messages because they cannot be retransmitted; a reconnected\r\n        // session will do key exchange separately. Also exclude any disconnect messages that\r\n        // may have been attempted when the connection was lost.\r\n        const messagesToRetransmit = new Array();\r\n        for (const sequencedMessage of this.recentSentMessages) {\r\n            if (sequencedMessage.sequence >= startingSequenceNumber) {\r\n                const message = sequencedMessage.message;\r\n                if (!(message instanceof kexMessages_1.KeyExchangeMessage || message instanceof transportMessages_1.DisconnectMessage)) {\r\n                    messagesToRetransmit.push(message);\r\n                }\r\n            }\r\n        }\r\n        return messagesToRetransmit;\r\n    }\r\n    async writeProtocolVersion(version, cancellation) {\r\n        const stream = this.stream;\r\n        if (!stream)\r\n            throw new Error('SSH session disconnected.');\r\n        const data = buffer_1.Buffer.from(version + '\\r\\n');\r\n        await stream.write(data, cancellation);\r\n        this.metrics.addMessageSent(data.length);\r\n        return Promise.resolve();\r\n    }\r\n    async readProtocolVersion(cancellation) {\r\n        const stream = this.stream;\r\n        if (!stream)\r\n            throw new Error('SSH session disconnected.');\r\n        // http://tools.ietf.org/html/rfc4253#section-4.2\r\n        const buffer = buffer_1.Buffer.alloc(255);\r\n        let lineCount = 0;\r\n        for (let i = 0; i < buffer.length; i++) {\r\n            const byteBuffer = await stream.read(1, cancellation);\r\n            if (!byteBuffer) {\r\n                break;\r\n            }\r\n            buffer[i] = byteBuffer[0];\r\n            const carriageReturn = 0x0d;\r\n            const lineFeed = 0x0a;\r\n            if (i > 0 && buffer[i - 1] === carriageReturn && buffer[i] === lineFeed) {\r\n                const line = buffer.toString('utf8', 0, i - 1);\r\n                if (line.startsWith('SSH-')) {\r\n                    this.metrics.addMessageReceived(i + 1);\r\n                    return line;\r\n                }\r\n                else if (lineCount > 20) {\r\n                    // Give up if a version string was not found after 20 lines.\r\n                    break;\r\n                }\r\n                else {\r\n                    // Ignore initial lines before the version line.\r\n                    lineCount++;\r\n                    i = -1;\r\n                }\r\n            }\r\n        }\r\n        throw new errors_1.SshConnectionError('Failed to read the protocol version', transportMessages_1.SshDisconnectReason.protocolError);\r\n    }\r\n    async handleNewKeys(cancellation) {\r\n        try {\r\n            await this.sessionSemaphore.wait(cancellation);\r\n            this.inboundFlow = 0;\r\n            this.outboundFlow = 0;\r\n            this.algorithms = this.kexService.finishKeyExchange();\r\n        }\r\n        finally {\r\n            this.sessionSemaphore.release();\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to read from the stream until the buffer is full.\r\n     * @returns True if the read succeeded, false if the stream was disposed.\r\n     */\r\n    async read(buffer, cancellation) {\r\n        const stream = this.stream;\r\n        if (!stream)\r\n            return false;\r\n        let bytesRead = 0;\r\n        do {\r\n            let data;\r\n            try {\r\n                data = await stream.read(buffer.length - bytesRead, cancellation);\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                if (stream.isDisposed)\r\n                    return false;\r\n                stream.dispose();\r\n                this.stream = null;\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamReadError, `Error reading from stream: ${e.message}`, e);\r\n                throw new errors_1.SshConnectionError('Error reading from stream: ' + e.message, transportMessages_1.SshDisconnectReason.connectionLost);\r\n            }\r\n            if (!data)\r\n                return false;\r\n            data.copy(buffer, bytesRead);\r\n            bytesRead += data.length;\r\n        } while (bytesRead < buffer.length);\r\n        return true;\r\n    }\r\n    /**\r\n     * Attempts to write data to the stream.\r\n     * @returns True if the write succeeded, false if the stream was disposed.\r\n     */\r\n    async write(data, cancellation) {\r\n        const stream = this.stream;\r\n        if (!stream)\r\n            return false;\r\n        try {\r\n            await stream.write(data, cancellation);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            if (stream.isDisposed)\r\n                return false;\r\n            stream.dispose();\r\n            this.stream = null;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamWriteError, `Error writing to stream: ${e.message}`, e);\r\n            throw new errors_1.SshConnectionError('Error writing to stream: ' + e.message, transportMessages_1.SshDisconnectReason.connectionLost);\r\n        }\r\n        return true;\r\n    }\r\n    async considerReExchange(initial, cancellation) {\r\n        const kexService = this.kexService;\r\n        if (!kexService)\r\n            return;\r\n        let kexMessage = null;\r\n        let kexGuessMessage = null;\r\n        if (!kexService.exchanging &&\r\n            (initial || this.inboundFlow + this.outboundFlow > this.config.keyRotationThreshold)) {\r\n            [kexMessage, kexGuessMessage] = await kexService.startKeyExchange(initial);\r\n        }\r\n        if (kexMessage) {\r\n            await this.sendMessage(kexMessage, cancellation);\r\n            if (kexGuessMessage) {\r\n                await this.sendMessage(kexGuessMessage, cancellation);\r\n            }\r\n        }\r\n    }\r\n    async computeHmac(signer, payload, seq) {\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(4 + payload.length));\r\n        writer.writeUInt32(seq);\r\n        writer.write(payload);\r\n        const result = await signer.sign(writer.toBuffer());\r\n        return result;\r\n    }\r\n    async verifyHmac(verifier, payload, seq, mac) {\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(4 + payload.length));\r\n        writer.writeUInt32(seq);\r\n        writer.write(payload);\r\n        const result = await verifier.verify(writer.toBuffer(), mac);\r\n        return result;\r\n    }\r\n    async readAndVerifyHmac(verifier, data, macBuffer, cancellation) {\r\n        if (!(await this.read(macBuffer, cancellation))) {\r\n            return false;\r\n        }\r\n        const verified = await this.verifyHmac(verifier, data, this.inboundPacketSequence, macBuffer);\r\n        if (!verified) {\r\n            throw new errors_1.SshConnectionError('Invalid MAC', transportMessages_1.SshDisconnectReason.macError);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Attemps to write one message to the stream.\r\n     * @returns `true` if writing succeeded, `false` if the stream was disposed.\r\n     * @throws SshConnectionException if writing to the stream failed for any other reason.\r\n     */\r\n    async sendMessage(message, cancellation) {\r\n        var _a;\r\n        const algorithms = this.algorithms;\r\n        const compression = algorithms === null || algorithms === void 0 ? void 0 : algorithms.compressor;\r\n        const encryption = algorithms === null || algorithms === void 0 ? void 0 : algorithms.cipher;\r\n        const hmac = algorithms === null || algorithms === void 0 ? void 0 : algorithms.messageSigner;\r\n        let result;\r\n        await this.sessionSemaphore.wait(cancellation);\r\n        try {\r\n            const blockSize = encryption ? Math.max(8, encryption.blockLength) : 8;\r\n            // Start by writing the uncompressed payload to the buffer at the correct offset.\r\n            const payloadOffset = SshProtocol.packetLengthSize + SshProtocol.paddingLengthSize;\r\n            this.sendWriter.position = payloadOffset;\r\n            message.write(this.sendWriter);\r\n            if (this.outgoingMessagesHaveReconnectInfo) {\r\n                // Write the sequence number of the last inbound packet processed.\r\n                this.sendWriter.writeUInt64(this.lastIncomingSequence);\r\n                if (this.outgoingMessagesHaveLatencyInfo) {\r\n                    // Write the time (in microseconds, not ms) since last packet was received.\r\n                    const timeSinceLastReceivedMessage = Math.min(4294967295, // max uint32\r\n                    Math.round((this.metrics.time - this.lastIncomingTimestamp) * 1000));\r\n                    this.sendWriter.writeUInt32(timeSinceLastReceivedMessage);\r\n                }\r\n            }\r\n            let payload = this.sendWriter.toBuffer().slice(payloadOffset);\r\n            if (compression != null) {\r\n                payload = compression.compress(payload);\r\n            }\r\n            // The packet length is not encrypted when in EtM or AEAD mode.\r\n            const isLengthEncrypted = !((hmac === null || hmac === void 0 ? void 0 : hmac.encryptThenMac) || (hmac === null || hmac === void 0 ? void 0 : hmac.authenticatedEncryption));\r\n            // http://tools.ietf.org/html/rfc4253\r\n            // 6.  Binary Packet Protocol\r\n            // the total length of (packet_length || padding_length || payload || padding)\r\n            // is a multiple of the cipher block size or 8,\r\n            // padding length must between 4 and 255 bytes.\r\n            let paddingLength = blockSize -\r\n                (((isLengthEncrypted ? SshProtocol.packetLengthSize : 0) +\r\n                    SshProtocol.paddingLengthSize +\r\n                    payload.length) %\r\n                    blockSize);\r\n            if (paddingLength < 4) {\r\n                paddingLength += blockSize;\r\n            }\r\n            const packetLength = SshProtocol.paddingLengthSize + payload.length + paddingLength;\r\n            this.sendWriter.position = 0;\r\n            this.sendWriter.writeUInt32(packetLength);\r\n            this.sendWriter.writeByte(paddingLength);\r\n            // The uncompressed payload was already written at the correct offset.\r\n            // When compression is enabled, rewrite the compressed payload.\r\n            if (compression != null) {\r\n                this.sendWriter.write(payload);\r\n            }\r\n            else {\r\n                this.sendWriter.position += payload.length;\r\n            }\r\n            this.sendWriter.writeRandom(paddingLength);\r\n            payload = this.sendWriter.toBuffer();\r\n            let mac = null;\r\n            if ((hmac === null || hmac === void 0 ? void 0 : hmac.encryptThenMac) && encryption) {\r\n                // In EtM mode, compute the MAC after encrypting. And don't encrypt the length.\r\n                const packetWithoutLength = payload.slice(SshProtocol.packetLengthSize, payload.length);\r\n                const encryptedPacket = await encryption.transform(packetWithoutLength);\r\n                encryptedPacket.copy(packetWithoutLength);\r\n                mac = await this.computeHmac(hmac, payload, this.outboundPacketSequence);\r\n            }\r\n            else if (hmac === null || hmac === void 0 ? void 0 : hmac.authenticatedEncryption) {\r\n                // With a GCM cipher, the packet length is not included in the plaintext.\r\n                const packetWithoutLength = payload.slice(SshProtocol.packetLengthSize, payload.length);\r\n                const encryptedPacket = await encryption.transform(packetWithoutLength);\r\n                encryptedPacket.copy(packetWithoutLength);\r\n                // The GCM tag was already generated during the transform call above;\r\n                // this just retrieves it.\r\n                mac = await hmac.sign(packetWithoutLength);\r\n            }\r\n            else {\r\n                if (hmac) {\r\n                    mac = await this.computeHmac(hmac, payload, this.outboundPacketSequence);\r\n                }\r\n                if (encryption) {\r\n                    payload = await encryption.transform(payload);\r\n                }\r\n            }\r\n            if (!(message instanceof connectionMessages_1.ChannelDataMessage)) {\r\n                this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.sendingMessage, `Sending #${this.outboundPacketSequence} ${message}`);\r\n            }\r\n            else if (this.traceChannelData) {\r\n                this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.sendingChannelData, `Sending #${this.outboundPacketSequence} ${message}`);\r\n            }\r\n            if (this.incomingMessagesHaveReconnectInfo) {\r\n                // Save sent messages in case they need to be re-sent after reconnect.\r\n                // They'll be discarded soon, after the other side acknowledges them.\r\n                const sequencedMessage = new SequencedMessage(this.outboundPacketSequence, message);\r\n                sequencedMessage.sentTime = this.metrics.time;\r\n                this.recentSentMessages.enqueue(sequencedMessage);\r\n            }\r\n            this.outboundPacketSequence++;\r\n            this.outboundFlow += packetLength;\r\n            if (mac) {\r\n                const packet = buffer_1.Buffer.concat([payload, mac], payload.length + mac.length);\r\n                result = await this.write(packet, cancellation);\r\n            }\r\n            else {\r\n                result = await this.write(payload, cancellation);\r\n            }\r\n            this.metrics.addMessageSent(SshProtocol.packetLengthSize + packetLength + ((_a = hmac === null || hmac === void 0 ? void 0 : hmac.digestLength) !== null && _a !== void 0 ? _a : 0));\r\n        }\r\n        finally {\r\n            this.sessionSemaphore.release();\r\n        }\r\n        await this.considerReExchange(false, cancellation);\r\n        return result;\r\n    }\r\n    /**\r\n     * Attemps to read one message from the stream.\r\n     * @returns The message, or `null` if the stream was disposed.\r\n     * @throws SshConnectionError if reading from the stream failed for any other reason.\r\n     */\r\n    async receiveMessage(cancellation) {\r\n        var _a;\r\n        const algorithms = this.algorithms;\r\n        const encryption = algorithms === null || algorithms === void 0 ? void 0 : algorithms.decipher;\r\n        const hmac = algorithms === null || algorithms === void 0 ? void 0 : algorithms.messageVerifier;\r\n        const compression = algorithms === null || algorithms === void 0 ? void 0 : algorithms.decompressor;\r\n        // The packet length is not encrypted when in EtM or AEAD mode.\r\n        // So read only the length bytes first, separate from the remaining payload.\r\n        const isLengthEncrypted = !((hmac === null || hmac === void 0 ? void 0 : hmac.encryptThenMac) || (hmac === null || hmac === void 0 ? void 0 : hmac.authenticatedEncryption));\r\n        const firstBlockSize = !isLengthEncrypted\r\n            ? SshProtocol.packetLengthSize\r\n            : encryption\r\n                ? Math.max(8, encryption.blockLength)\r\n                : 8;\r\n        this.receiveWriter.position = firstBlockSize;\r\n        let firstBlock = this.receiveWriter.toBuffer();\r\n        if (!(await this.read(firstBlock, cancellation))) {\r\n            return null;\r\n        }\r\n        this.lastIncomingTimestamp = this.metrics.time;\r\n        // Decrypt the first block to get the packet length.\r\n        if (encryption && isLengthEncrypted) {\r\n            firstBlock = await encryption.transform(firstBlock);\r\n            this.receiveWriter.position = 0;\r\n            this.receiveWriter.write(firstBlock);\r\n        }\r\n        const receiveReader = new sshData_1.SshDataReader(firstBlock);\r\n        const packetLength = receiveReader.readUInt32();\r\n        if (packetLength > SshProtocol.maxPacketLength) {\r\n            throw new errors_1.SshConnectionError('Invalid packet length.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        const packetBufferSize = SshProtocol.packetLengthSize + packetLength;\r\n        if (packetBufferSize > firstBlockSize) {\r\n            this.receiveWriter.skip(packetBufferSize - firstBlockSize);\r\n        }\r\n        if (hmac) {\r\n            // Ensure the receive buffer is large enough to also hold the mac without expanding.\r\n            this.receiveWriter.skip(hmac.digestLength);\r\n        }\r\n        const receiveBuffer = this.receiveWriter.toBuffer();\r\n        const packetBuffer = receiveBuffer.slice(0, packetBufferSize);\r\n        const macBuffer = receiveBuffer.slice(packetBufferSize);\r\n        let followingBlocks = packetBuffer.slice(firstBlockSize, packetBufferSize);\r\n        if (followingBlocks.length > 0) {\r\n            if (!(await this.read(followingBlocks, cancellation))) {\r\n                return null;\r\n            }\r\n            if (hmac === null || hmac === void 0 ? void 0 : hmac.encryptThenMac) {\r\n                // In EtM mode, read and verify the MAC before decrypting.\r\n                ///const packetWithoutLength = packet.slice(SshProtocol.packetLengthSize);\r\n                if (!(await this.readAndVerifyHmac(hmac, packetBuffer, macBuffer, cancellation))) {\r\n                    return null;\r\n                }\r\n            }\r\n            if (encryption) {\r\n                if (hmac === null || hmac === void 0 ? void 0 : hmac.authenticatedEncryption) {\r\n                    // With a GCM cipher, the MAC is required for decryption.\r\n                    if (!(await this.read(macBuffer, cancellation))) {\r\n                        return null;\r\n                    }\r\n                    // This doesn't actually verify anything yet (hence the return value is not checked);\r\n                    // it sets the tag to be used for verification in the following transform call.\r\n                    await hmac.verify(followingBlocks, macBuffer);\r\n                }\r\n                try {\r\n                    followingBlocks = await encryption.transform(followingBlocks);\r\n                }\r\n                catch (e) {\r\n                    if (hmac === null || hmac === void 0 ? void 0 : hmac.authenticatedEncryption) {\r\n                        // GCM decryption failed to verify data + tag.\r\n                        throw new errors_1.SshConnectionError('Invalid MAC', transportMessages_1.SshDisconnectReason.macError);\r\n                    }\r\n                    else {\r\n                        throw e;\r\n                    }\r\n                }\r\n                this.receiveWriter.position = firstBlockSize;\r\n                this.receiveWriter.write(followingBlocks);\r\n            }\r\n        }\r\n        if (hmac && !hmac.encryptThenMac && !hmac.authenticatedEncryption) {\r\n            if (!(await this.readAndVerifyHmac(hmac, packetBuffer, macBuffer, cancellation))) {\r\n                return null;\r\n            }\r\n        }\r\n        const paddingLength = packetBuffer[SshProtocol.packetLengthSize];\r\n        let payload = packetBuffer.slice(SshProtocol.packetLengthSize + SshProtocol.paddingLengthSize, SshProtocol.packetLengthSize + (packetLength - paddingLength));\r\n        if (compression) {\r\n            payload = compression.decompress(payload);\r\n        }\r\n        if (this.incomingMessagesHaveReconnectInfo) {\r\n            // Read the extension info from the end of the payload.\r\n            let lastSequenceSeenByRemote;\r\n            let remoteTimeSinceLastReceived;\r\n            if (this.incomingMessagesHaveLatencyInfo) {\r\n                const reader = new sshData_1.SshDataReader(payload.slice(payload.length - 12, payload.length));\r\n                lastSequenceSeenByRemote = reader.readUInt64();\r\n                remoteTimeSinceLastReceived = reader.readUInt32() / 1000; // microseconds to ms\r\n                payload = payload.slice(0, payload.length - 12);\r\n            }\r\n            else {\r\n                const reader = new sshData_1.SshDataReader(payload.slice(payload.length - 8, payload.length));\r\n                lastSequenceSeenByRemote = reader.readUInt64();\r\n                remoteTimeSinceLastReceived = 0;\r\n                payload = payload.slice(0, payload.length - 8);\r\n            }\r\n            // Discard any recently sent messages that were acknowledged.\r\n            while (this.recentSentMessages.size > 0) {\r\n                const oldestSequenceMessage = this.recentSentMessages.peek();\r\n                if (oldestSequenceMessage.sequence > lastSequenceSeenByRemote) {\r\n                    break;\r\n                }\r\n                if (this.stream &&\r\n                    this.incomingMessagesHaveLatencyInfo &&\r\n                    oldestSequenceMessage.sequence === lastSequenceSeenByRemote) {\r\n                    // Compute the time since the message with the last-seen sequence was sent.\r\n                    // Subtract the time between when the remote side received the message with the\r\n                    // last-seen sequence and sent the current message.\r\n                    const timeSinceSent = this.lastIncomingTimestamp - oldestSequenceMessage.sentTime;\r\n                    const roundTripLatency = timeSinceSent - remoteTimeSinceLastReceived;\r\n                    this.metrics.updateLatency(roundTripLatency, this.trace);\r\n                }\r\n                this.recentSentMessages.dequeue();\r\n            }\r\n        }\r\n        const messageType = payload[0];\r\n        let message = sshMessage_1.SshMessage.create(this.config, messageType, payload);\r\n        if (!message) {\r\n            const unimplementedMessage = new transportMessages_1.UnimplementedMessage();\r\n            unimplementedMessage.sequenceNumber = this.inboundPacketSequence;\r\n            unimplementedMessage.unimplementedMessageType = messageType;\r\n            message = unimplementedMessage;\r\n        }\r\n        if (!(message instanceof connectionMessages_1.ChannelDataMessage)) {\r\n            this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.receivingMessage, `Receiving #${this.inboundPacketSequence} ${message}`);\r\n        }\r\n        else if (this.traceChannelData) {\r\n            this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.receivingChannelData, `Receiving #${this.inboundPacketSequence} ${message}`);\r\n        }\r\n        await this.sessionSemaphore.wait(cancellation);\r\n        this.inboundPacketSequence++;\r\n        this.inboundFlow += packetLength;\r\n        this.sessionSemaphore.release();\r\n        this.metrics.addMessageReceived(SshProtocol.packetLengthSize + packetLength + ((_a = hmac === null || hmac === void 0 ? void 0 : hmac.digestLength) !== null && _a !== void 0 ? _a : 0));\r\n        await this.considerReExchange(false, cancellation);\r\n        return message;\r\n    }\r\n    dispose() {\r\n        try {\r\n            if (this.stream)\r\n                this.stream.close().catch((e) => {\r\n                    this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing stream: ${e.message}`, e);\r\n                });\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing stream: ${e.message}`, e);\r\n        }\r\n        this.stream = null;\r\n        this.metrics.updateLatency(0);\r\n        if (this.algorithms)\r\n            this.algorithms.dispose();\r\n    }\r\n}\r\nexports.SshProtocol = SshProtocol;\r\nSshProtocol.maxPacketLength = 1024 * 1024; // 1 MB\r\nSshProtocol.packetLengthSize = 4;\r\nSshProtocol.paddingLengthSize = 1;\r\n//# sourceMappingURL=sshProtocol.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AuthenticationSuccessMessage = exports.AuthenticationFailureMessage = exports.PasswordRequestMessage = exports.PublicKeyOKMessage = exports.PublicKeyRequestMessage = exports.AuthenticationRequestMessage = exports.AuthenticationMessage = void 0;\r\nconst sshMessage_1 = require(\"./sshMessage\");\r\nclass AuthenticationMessage extends sshMessage_1.SshMessage {\r\n}\r\nexports.AuthenticationMessage = AuthenticationMessage;\r\nclass AuthenticationRequestMessage extends AuthenticationMessage {\r\n    get messageType() {\r\n        return 50;\r\n    }\r\n    onRead(reader) {\r\n        this.username = reader.readString('utf8');\r\n        this.serviceName = reader.readString('ascii');\r\n        this.methodName = reader.readString('ascii');\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeString(this.username || '', 'utf8');\r\n        writer.writeString(this.serviceName || '', 'ascii');\r\n        writer.writeString(this.validateField(this.methodName, 'method name'), 'ascii');\r\n    }\r\n}\r\nexports.AuthenticationRequestMessage = AuthenticationRequestMessage;\r\nclass PublicKeyRequestMessage extends AuthenticationRequestMessage {\r\n    constructor() {\r\n        super();\r\n        this.methodName = \"publickey\" /* AuthenticationMethod.publicKey */;\r\n    }\r\n    get hasSignature() {\r\n        return this.signature && this.signature.length > 0 ? true : false;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        const hasSignature = reader.readBoolean();\r\n        this.keyAlgorithmName = reader.readString('ascii');\r\n        this.publicKey = reader.readBinary();\r\n        if (hasSignature) {\r\n            this.signature = reader.readBinary();\r\n            this.payloadWithoutSignature = this.rawBytes.slice(0, this.rawBytes.length - this.signature.length - 4);\r\n        }\r\n        else {\r\n            this.signature = undefined;\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        var _a, _b;\r\n        super.onWrite(writer);\r\n        if (!this.keyAlgorithmName)\r\n            throw new Error('Key algorithm name not set.');\r\n        if (this.methodName === \"hostbased\" /* AuthenticationMethod.hostBased */) {\r\n            writer.writeString(this.keyAlgorithmName, 'ascii');\r\n            writer.writeBinary(this.publicKey || Buffer.alloc(0));\r\n            writer.writeString((_a = this.clientHostname) !== null && _a !== void 0 ? _a : '', 'ascii');\r\n            writer.writeString((_b = this.clientUsername) !== null && _b !== void 0 ? _b : '', 'ascii');\r\n            if (!this.hasSignature) {\r\n                throw new Error('A signature is required for a host-based authentcation request.');\r\n            }\r\n            writer.writeBinary(this.signature);\r\n        }\r\n        else {\r\n            writer.writeBoolean(this.hasSignature);\r\n            writer.writeString(this.keyAlgorithmName, 'ascii');\r\n            writer.writeBinary(this.publicKey || Buffer.alloc(0));\r\n            if (this.hasSignature) {\r\n                writer.writeBinary(this.signature);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.PublicKeyRequestMessage = PublicKeyRequestMessage;\r\nclass PublicKeyOKMessage extends AuthenticationMessage {\r\n    get messageType() {\r\n        return 60;\r\n    }\r\n    onRead(reader) {\r\n        this.keyAlgorithmName = reader.readString('ascii');\r\n        this.publicKey = reader.readBinary();\r\n    }\r\n    onWrite(writer) {\r\n        if (!this.keyAlgorithmName)\r\n            throw new Error('Key algorithm name not set.');\r\n        if (!this.publicKey)\r\n            throw new Error('Public key not set.');\r\n        writer.writeString(this.keyAlgorithmName, 'ascii');\r\n        writer.writeBinary(this.publicKey);\r\n    }\r\n}\r\nexports.PublicKeyOKMessage = PublicKeyOKMessage;\r\nclass PasswordRequestMessage extends AuthenticationRequestMessage {\r\n    constructor() {\r\n        super();\r\n        this.methodName = \"password\" /* AuthenticationMethod.password */;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        reader.readBoolean();\r\n        this.password = reader.readString('utf8');\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeBoolean(false);\r\n        writer.writeString(this.password || '', 'utf8');\r\n    }\r\n}\r\nexports.PasswordRequestMessage = PasswordRequestMessage;\r\nclass AuthenticationFailureMessage extends AuthenticationMessage {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.partialSuccess = false;\r\n    }\r\n    get messageType() {\r\n        return 51;\r\n    }\r\n    onRead(reader) {\r\n        this.methodNames = reader.readList('ascii');\r\n        this.partialSuccess = reader.readBoolean();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeList(this.methodNames || [], 'ascii');\r\n        writer.writeBoolean(this.partialSuccess);\r\n    }\r\n}\r\nexports.AuthenticationFailureMessage = AuthenticationFailureMessage;\r\nclass AuthenticationSuccessMessage extends AuthenticationMessage {\r\n    get messageType() {\r\n        return 52;\r\n    }\r\n    onRead(reader) { }\r\n    onWrite(writer) { }\r\n}\r\nexports.AuthenticationSuccessMessage = AuthenticationSuccessMessage;\r\nsshMessage_1.SshMessage.index.set(50, AuthenticationRequestMessage);\r\nsshMessage_1.SshMessage.index.set(51, AuthenticationFailureMessage);\r\nsshMessage_1.SshMessage.index.set(52, AuthenticationSuccessMessage);\r\n//# sourceMappingURL=authenticationMessages.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ChannelFailureMessage = exports.ChannelSuccessMessage = exports.ChannelSignalMessage = exports.CommandRequestMessage = exports.ChannelRequestMessage = exports.ChannelRequestType = exports.ChannelCloseMessage = exports.ChannelEofMessage = exports.ChannelExtendedDataMessage = exports.ChannelDataMessage = exports.ChannelWindowAdjustMessage = exports.ChannelOpenFailureMessage = exports.SshChannelOpenFailureReason = exports.ChannelOpenConfirmationMessage = exports.ChannelOpenMessage = exports.ChannelMessage = exports.ConnectionMessage = void 0;\r\nconst sshMessage_1 = require(\"./sshMessage\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nclass ConnectionMessage extends sshMessage_1.SshMessage {\r\n}\r\nexports.ConnectionMessage = ConnectionMessage;\r\nclass ChannelMessage extends ConnectionMessage {\r\n    get recipientChannel() {\r\n        return this.recipientChannelValue;\r\n    }\r\n    set recipientChannel(value) {\r\n        if (value !== this.recipientChannelValue) {\r\n            this.recipientChannelValue = value;\r\n            if (this.rawBytes) {\r\n                // The recipientChannel can be updated without re-serializing the message.\r\n                // This supports piping channel messages with re-mapped channel IDs.\r\n                // The recipientChannel field follows the 1-byte message type.\r\n                sshData_1.SshDataWriter.writeUInt32(this.rawBytes, 1, value !== null && value !== void 0 ? value : 0);\r\n            }\r\n        }\r\n    }\r\n    onRead(reader) {\r\n        this.recipientChannel = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeUInt32(this.validateField(this.recipientChannel, 'recipient channel'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (recipientChannel=${this.recipientChannel})`;\r\n    }\r\n}\r\nexports.ChannelMessage = ChannelMessage;\r\nclass ChannelOpenMessage extends ConnectionMessage {\r\n    get messageType() {\r\n        return 90;\r\n    }\r\n    get senderChannel() {\r\n        return this.senderChannelValue;\r\n    }\r\n    set senderChannel(value) {\r\n        if (value !== this.senderChannelValue) {\r\n            this.senderChannelValue = value;\r\n            if (this.rawBytes && this.channelType) {\r\n                // The senderChannel can be updated without re-serializing the message.\r\n                // This supports piping channel messages with re-mapped channel IDs.\r\n                // The senderChannel field follows the 1-byte message type and\r\n                // length-prefixed channelType string.\r\n                sshData_1.SshDataWriter.writeUInt32(this.rawBytes, 1 + 4 + this.channelType.length, value !== null && value !== void 0 ? value : 0);\r\n            }\r\n        }\r\n    }\r\n    onRead(reader) {\r\n        this.channelType = reader.readString('ascii');\r\n        this.senderChannel = reader.readUInt32();\r\n        this.maxWindowSize = reader.readUInt32();\r\n        this.maxPacketSize = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeString(this.validateField(this.channelType, 'channel type'), 'ascii');\r\n        writer.writeUInt32(this.validateField(this.senderChannel, 'sender channel'));\r\n        writer.writeUInt32(this.maxWindowSize || ChannelOpenMessage.defaultMaxWindowSize);\r\n        writer.writeUInt32(this.maxPacketSize || ChannelOpenMessage.defaultMaxPacketSize);\r\n    }\r\n    toString() {\r\n        return `${super.toString()}(channelType=${this.channelType}, senderChannel=${this.senderChannel})`;\r\n    }\r\n}\r\nexports.ChannelOpenMessage = ChannelOpenMessage;\r\n/* @internal */\r\nChannelOpenMessage.defaultMaxPacketSize = 32 * 1024;\r\n/* @internal */\r\nChannelOpenMessage.defaultMaxWindowSize = 1024 * 1024;\r\nclass ChannelOpenConfirmationMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 91;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.senderChannel = reader.readUInt32();\r\n        this.maxWindowSize = reader.readUInt32();\r\n        this.maxPacketSize = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.senderChannel, 'sender channel'));\r\n        writer.writeUInt32(this.validateField(this.maxWindowSize, 'max window size'));\r\n        writer.writeUInt32(this.validateField(this.maxPacketSize, 'max packet size'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()}(senderChannel=${this.senderChannel})`;\r\n    }\r\n}\r\nexports.ChannelOpenConfirmationMessage = ChannelOpenConfirmationMessage;\r\nvar SshChannelOpenFailureReason;\r\n(function (SshChannelOpenFailureReason) {\r\n    SshChannelOpenFailureReason[SshChannelOpenFailureReason[\"none\"] = 0] = \"none\";\r\n    SshChannelOpenFailureReason[SshChannelOpenFailureReason[\"administrativelyProhibited\"] = 1] = \"administrativelyProhibited\";\r\n    SshChannelOpenFailureReason[SshChannelOpenFailureReason[\"connectFailed\"] = 2] = \"connectFailed\";\r\n    SshChannelOpenFailureReason[SshChannelOpenFailureReason[\"unknownChannelType\"] = 3] = \"unknownChannelType\";\r\n    SshChannelOpenFailureReason[SshChannelOpenFailureReason[\"resourceShortage\"] = 4] = \"resourceShortage\";\r\n})(SshChannelOpenFailureReason = exports.SshChannelOpenFailureReason || (exports.SshChannelOpenFailureReason = {}));\r\nclass ChannelOpenFailureMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 92;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.reasonCode = reader.readUInt32();\r\n        this.description = reader.readString('utf8');\r\n        this.language = reader.readString('ascii');\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.reasonCode, 'reason code'));\r\n        writer.writeString(this.description || '', 'utf8');\r\n        writer.writeString(this.language || 'en', 'ascii');\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (${SshChannelOpenFailureReason[this.reasonCode || 0]}: ${this.description})`;\r\n    }\r\n}\r\nexports.ChannelOpenFailureMessage = ChannelOpenFailureMessage;\r\nclass ChannelWindowAdjustMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 93;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.bytesToAdd = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.bytesToAdd, 'bytes to add'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (bytesToAdd=${this.bytesToAdd})`;\r\n    }\r\n}\r\nexports.ChannelWindowAdjustMessage = ChannelWindowAdjustMessage;\r\nclass ChannelDataMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 94;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.data = reader.readBinary();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeBinary(this.validateField(this.data, 'data'));\r\n    }\r\n    toString() {\r\n        return this.data ? (0, sshData_1.formatBuffer)(this.data, '') : '[0]';\r\n    }\r\n}\r\nexports.ChannelDataMessage = ChannelDataMessage;\r\nclass ChannelExtendedDataMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 95;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.dataTypeCode = reader.readUInt32();\r\n        this.data = reader.readBinary();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.dataTypeCode, 'data type code'));\r\n        writer.writeBinary(this.validateField(this.data, 'data'));\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (dataTypeCode=${this.dataTypeCode}, data=${this.data ? (0, sshData_1.formatBuffer)(this.data, '') : '[0]'})`;\r\n    }\r\n}\r\nexports.ChannelExtendedDataMessage = ChannelExtendedDataMessage;\r\nclass ChannelEofMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 96;\r\n    }\r\n}\r\nexports.ChannelEofMessage = ChannelEofMessage;\r\nclass ChannelCloseMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 97;\r\n    }\r\n}\r\nexports.ChannelCloseMessage = ChannelCloseMessage;\r\nvar ChannelRequestType;\r\n(function (ChannelRequestType) {\r\n    ChannelRequestType[\"command\"] = \"exec\";\r\n    ChannelRequestType[\"shell\"] = \"shell\";\r\n    ChannelRequestType[\"terminal\"] = \"pty-req\";\r\n    ChannelRequestType[\"signal\"] = \"signal\";\r\n    ChannelRequestType[\"exitSignal\"] = \"exit-signal\";\r\n    ChannelRequestType[\"exitStatus\"] = \"exit-status\";\r\n})(ChannelRequestType = exports.ChannelRequestType || (exports.ChannelRequestType = {}));\r\nclass ChannelRequestMessage extends ChannelMessage {\r\n    constructor(requestType, wantReply) {\r\n        super();\r\n        this.requestType = requestType;\r\n        this.wantReply = wantReply !== null && wantReply !== void 0 ? wantReply : false;\r\n    }\r\n    get messageType() {\r\n        return 98;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.requestType = reader.readString('ascii');\r\n        this.wantReply = reader.readBoolean();\r\n    }\r\n    onWrite(writer) {\r\n        if (typeof this.recipientChannel === 'undefined') {\r\n            // The recipient channel field may be uninitialized when sending a channel request\r\n            // that is bundled with the channel-open request.\r\n            this.recipientChannel = 0;\r\n        }\r\n        super.onWrite(writer);\r\n        writer.writeString(this.validateField(this.requestType, 'request type'), 'ascii');\r\n        writer.writeBoolean(this.wantReply);\r\n    }\r\n}\r\nexports.ChannelRequestMessage = ChannelRequestMessage;\r\nclass CommandRequestMessage extends ChannelRequestMessage {\r\n    constructor() {\r\n        super();\r\n        this.requestType = ChannelRequestType.command;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.command = reader.readString('utf8');\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeString(this.validateField(this.command, 'command'), 'utf8');\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (requestType=${this.requestType})`;\r\n    }\r\n}\r\nexports.CommandRequestMessage = CommandRequestMessage;\r\nclass ChannelSignalMessage extends ChannelRequestMessage {\r\n    constructor() {\r\n        super();\r\n    }\r\n    get signal() {\r\n        return this.signalValue;\r\n    }\r\n    set signal(value) {\r\n        this.requestType = ChannelRequestType.signal;\r\n        this.signalValue = value;\r\n    }\r\n    get exitSignal() {\r\n        return this.signalValue;\r\n    }\r\n    set exitSignal(value) {\r\n        this.requestType = ChannelRequestType.exitSignal;\r\n        this.signalValue = value;\r\n    }\r\n    get errorMessage() {\r\n        return this.errorMessageValue;\r\n    }\r\n    set errorMessage(value) {\r\n        if (this.requestType !== ChannelRequestType.exitSignal) {\r\n            throw new Error(`Error message property is only valid for ${ChannelRequestType.exitSignal} messages.`);\r\n        }\r\n        this.errorMessageValue = value;\r\n    }\r\n    get exitStatus() {\r\n        return this.statusValue;\r\n    }\r\n    set exitStatus(value) {\r\n        this.requestType = ChannelRequestType.exitStatus;\r\n        this.statusValue = value;\r\n    }\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        switch (this.requestType) {\r\n            case ChannelRequestType.exitStatus:\r\n                this.exitStatus = reader.readUInt32();\r\n                break;\r\n            case ChannelRequestType.signal:\r\n                this.signal = reader.readString('ascii');\r\n                break;\r\n            case ChannelRequestType.exitSignal:\r\n                this.exitSignal = reader.readString('ascii');\r\n                reader.readBoolean(); // Core dumped\r\n                this.errorMessage = reader.readString('utf8');\r\n                reader.readString('ascii'); // Language tag\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        if (!this.requestType) {\r\n            throw new Error('Signal message request type not set.');\r\n        }\r\n        this.wantReply = false;\r\n        super.onWrite(writer);\r\n        switch (this.requestType) {\r\n            case ChannelRequestType.exitStatus:\r\n                writer.writeUInt32(this.validateField(this.exitStatus, 'exit status'));\r\n                break;\r\n            case ChannelRequestType.signal:\r\n                writer.writeString(this.validateField(this.signal, 'signal'), 'ascii');\r\n                break;\r\n            case ChannelRequestType.exitSignal:\r\n                writer.writeString(this.validateField(this.exitSignal, 'exit signal'), 'ascii');\r\n                writer.writeBoolean(false); // Core dumped\r\n                writer.writeString(this.errorMessage || '', 'utf8');\r\n                writer.writeString('', 'ascii'); // Language tag\r\n                break;\r\n            default:\r\n                throw new Error(`Unknown signal message request type: ${this.requestType}`);\r\n        }\r\n    }\r\n}\r\nexports.ChannelSignalMessage = ChannelSignalMessage;\r\nclass ChannelSuccessMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 99;\r\n    }\r\n}\r\nexports.ChannelSuccessMessage = ChannelSuccessMessage;\r\nclass ChannelFailureMessage extends ChannelMessage {\r\n    get messageType() {\r\n        return 100;\r\n    }\r\n}\r\nexports.ChannelFailureMessage = ChannelFailureMessage;\r\nsshMessage_1.SshMessage.index.set(90, ChannelOpenMessage);\r\nsshMessage_1.SshMessage.index.set(91, ChannelOpenConfirmationMessage);\r\nsshMessage_1.SshMessage.index.set(92, ChannelOpenFailureMessage);\r\nsshMessage_1.SshMessage.index.set(93, ChannelWindowAdjustMessage);\r\nsshMessage_1.SshMessage.index.set(94, ChannelDataMessage);\r\nsshMessage_1.SshMessage.index.set(95, ChannelExtendedDataMessage);\r\nsshMessage_1.SshMessage.index.set(96, ChannelEofMessage);\r\nsshMessage_1.SshMessage.index.set(97, ChannelCloseMessage);\r\nsshMessage_1.SshMessage.index.set(98, ChannelRequestMessage);\r\nsshMessage_1.SshMessage.index.set(99, ChannelSuccessMessage);\r\nsshMessage_1.SshMessage.index.set(100, ChannelFailureMessage);\r\n//# sourceMappingURL=connectionMessages.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NewKeysMessage = exports.KeyExchangeDhReplyMessage = exports.KeyExchangeDhInitMessage = exports.KeyExchangeInitMessage = exports.KeyExchangeMessage = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshMessage_1 = require(\"./sshMessage\");\r\nconst sshAlgorithms_1 = require(\"../algorithms/sshAlgorithms\");\r\nclass KeyExchangeMessage extends sshMessage_1.SshMessage {\r\n}\r\nexports.KeyExchangeMessage = KeyExchangeMessage;\r\nconst keyExchangeInitCookieLength = 16;\r\nclass KeyExchangeInitMessage extends KeyExchangeMessage {\r\n    get messageType() {\r\n        return 20;\r\n    }\r\n    onRead(reader) {\r\n        this.cookie = reader.read(keyExchangeInitCookieLength);\r\n        this.keyExchangeAlgorithms = reader.readList('ascii');\r\n        this.serverHostKeyAlgorithms = reader.readList('ascii');\r\n        this.encryptionAlgorithmsClientToServer = reader.readList('ascii');\r\n        this.encryptionAlgorithmsServerToClient = reader.readList('ascii');\r\n        this.macAlgorithmsClientToServer = reader.readList('ascii');\r\n        this.macAlgorithmsServerToClient = reader.readList('ascii');\r\n        this.compressionAlgorithmsClientToServer = reader.readList('ascii');\r\n        this.compressionAlgorithmsServerToClient = reader.readList('ascii');\r\n        this.languagesClientToServer = reader.readList('ascii');\r\n        this.languagesServerToClient = reader.readList('ascii');\r\n        this.firstKexPacketFollows = reader.readBoolean();\r\n        this.reserved = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        var _a;\r\n        if (!this.cookie) {\r\n            this.cookie = buffer_1.Buffer.alloc(keyExchangeInitCookieLength);\r\n            sshAlgorithms_1.SshAlgorithms.random.getBytes(this.cookie);\r\n        }\r\n        writer.write(this.cookie);\r\n        writer.writeList(this.keyExchangeAlgorithms || [], 'ascii');\r\n        writer.writeList(this.serverHostKeyAlgorithms || [], 'ascii');\r\n        writer.writeList(this.encryptionAlgorithmsClientToServer || [], 'ascii');\r\n        writer.writeList(this.encryptionAlgorithmsServerToClient || [], 'ascii');\r\n        writer.writeList(this.macAlgorithmsClientToServer || [], 'ascii');\r\n        writer.writeList(this.macAlgorithmsServerToClient || [], 'ascii');\r\n        writer.writeList(this.compressionAlgorithmsClientToServer || [], 'ascii');\r\n        writer.writeList(this.compressionAlgorithmsServerToClient || [], 'ascii');\r\n        writer.writeList(this.languagesClientToServer || [], 'ascii');\r\n        writer.writeList(this.languagesServerToClient || [], 'ascii');\r\n        writer.writeBoolean((_a = this.firstKexPacketFollows) !== null && _a !== void 0 ? _a : false);\r\n        writer.writeUInt32(this.reserved || 0);\r\n    }\r\n    static CreateNone() {\r\n        const noneArray = ['none'];\r\n        const emptyArray = [''];\r\n        const message = new KeyExchangeInitMessage();\r\n        message.cookie = buffer_1.Buffer.alloc(keyExchangeInitCookieLength);\r\n        message.keyExchangeAlgorithms = noneArray;\r\n        message.serverHostKeyAlgorithms = noneArray;\r\n        message.encryptionAlgorithmsClientToServer = noneArray;\r\n        message.encryptionAlgorithmsServerToClient = noneArray;\r\n        message.macAlgorithmsClientToServer = noneArray;\r\n        message.macAlgorithmsServerToClient = noneArray;\r\n        message.compressionAlgorithmsClientToServer = noneArray;\r\n        message.compressionAlgorithmsServerToClient = noneArray;\r\n        message.languagesClientToServer = emptyArray;\r\n        message.languagesServerToClient = emptyArray;\r\n        // Save the serialized bytes so that the message doesn't have to be re-serialized every time\r\n        // it is sent.\r\n        message.rawBytes = message.toBuffer();\r\n        return message;\r\n    }\r\n    get allowsNone() {\r\n        const includesNone = (algorithms) => (algorithms === null || algorithms === void 0 ? void 0 : algorithms.includes('none')) === true;\r\n        return (includesNone(this.keyExchangeAlgorithms) &&\r\n            includesNone(this.serverHostKeyAlgorithms) &&\r\n            includesNone(this.encryptionAlgorithmsClientToServer) &&\r\n            includesNone(this.encryptionAlgorithmsServerToClient) &&\r\n            includesNone(this.macAlgorithmsClientToServer) &&\r\n            includesNone(this.macAlgorithmsServerToClient) &&\r\n            includesNone(this.compressionAlgorithmsClientToServer) &&\r\n            includesNone(this.compressionAlgorithmsServerToClient) &&\r\n            this.firstKexPacketFollows !== true);\r\n    }\r\n}\r\nexports.KeyExchangeInitMessage = KeyExchangeInitMessage;\r\nKeyExchangeInitMessage.none = KeyExchangeInitMessage.CreateNone();\r\nclass KeyExchangeDhInitMessage extends KeyExchangeMessage {\r\n    get messageType() {\r\n        return 30;\r\n    }\r\n    onRead(reader) {\r\n        this.e = reader.readBinary();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeBinary(this.validateField(this.e, 'E'));\r\n    }\r\n}\r\nexports.KeyExchangeDhInitMessage = KeyExchangeDhInitMessage;\r\nclass KeyExchangeDhReplyMessage extends KeyExchangeMessage {\r\n    get messageType() {\r\n        return 31;\r\n    }\r\n    onRead(reader) {\r\n        this.hostKey = reader.readBinary();\r\n        this.f = reader.readBinary();\r\n        this.signature = reader.readBinary();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeBinary(this.validateField(this.hostKey, 'host key'));\r\n        writer.writeBinary(this.validateField(this.f, 'F'));\r\n        writer.writeBinary(this.validateField(this.signature, 'signature'));\r\n    }\r\n}\r\nexports.KeyExchangeDhReplyMessage = KeyExchangeDhReplyMessage;\r\nclass NewKeysMessage extends KeyExchangeMessage {\r\n    get messageType() {\r\n        return 21;\r\n    }\r\n    onRead(reader) { }\r\n    onWrite(writer) { }\r\n}\r\nexports.NewKeysMessage = NewKeysMessage;\r\nsshMessage_1.SshMessage.index.set(20, KeyExchangeInitMessage);\r\nsshMessage_1.SshMessage.index.set(30, KeyExchangeDhInitMessage);\r\nsshMessage_1.SshMessage.index.set(31, KeyExchangeDhReplyMessage);\r\nsshMessage_1.SshMessage.index.set(21, NewKeysMessage);\r\n//# sourceMappingURL=kexMessages.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshMessage = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nclass SshMessage {\r\n    get messageType() {\r\n        return 0;\r\n    }\r\n    toBuffer() {\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(16));\r\n        this.write(writer);\r\n        return writer.toBuffer();\r\n    }\r\n    read(reader) {\r\n        this.rawBytes = reader.buffer;\r\n        const number = reader.readByte();\r\n        if (number !== this.messageType) {\r\n            throw new Error(`Message type ${number} is not valid.`);\r\n        }\r\n        this.onRead(reader);\r\n    }\r\n    write(writer) {\r\n        if (this.rawBytes) {\r\n            // Piped messages are rewritten without re-serialization. This preserves any\r\n            // unparsed extended message data. It assumes no properties of the message\r\n            // have been modified without also updating the serialized bytes.\r\n            writer.write(this.rawBytes);\r\n        }\r\n        else {\r\n            writer.writeByte(this.messageType);\r\n            this.onWrite(writer);\r\n        }\r\n    }\r\n    /**\r\n     * Rewrites the message to its buffer to ensure the buffer has the correct values.\r\n     * This should be called after modifying properties of a message that was (potentially)\r\n     * received, before re-sending it.\r\n     */\r\n    rewrite() {\r\n        if (this.rawBytes) {\r\n            const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(16));\r\n            writer.writeByte(this.messageType);\r\n            this.onWrite(writer);\r\n            this.rawBytes = writer.toBuffer();\r\n        }\r\n    }\r\n    onRead(reader) {\r\n        throw new Error('Not supported.');\r\n    }\r\n    onWrite(writer) {\r\n        throw new Error('Not supported.');\r\n    }\r\n    validateField(value, name) {\r\n        if (typeof value === 'undefined') {\r\n            throw new Error(`${this.constructor.name} ${name} is required.`);\r\n        }\r\n        return value;\r\n    }\r\n    toString() {\r\n        return this.constructor.name;\r\n    }\r\n    static create(config, messageType, data) {\r\n        const messageClass = config.messages.get(messageType);\r\n        if (messageClass) {\r\n            const message = new messageClass();\r\n            message.read(new sshData_1.SshDataReader(data));\r\n            return message;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    convertTo(otherMessage, copy = false) {\r\n        const reader = new sshData_1.SshDataReader(copy ? buffer_1.Buffer.from(this.rawBytes) : this.rawBytes);\r\n        otherMessage.read(reader);\r\n        return otherMessage;\r\n    }\r\n}\r\nexports.SshMessage = SshMessage;\r\nSshMessage.index = new Map();\r\n//# sourceMappingURL=sshMessage.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SessionReconnectFailureMessage = exports.SshReconnectFailureReason = exports.SessionReconnectResponseMessage = exports.SessionReconnectRequestMessage = exports.SessionChannelRequestMessage = exports.ExtensionInfoMessage = exports.SessionRequestFailureMessage = exports.SessionRequestSuccessMessage = exports.SessionRequestMessage = exports.ServiceAcceptMessage = exports.ServiceRequestMessage = exports.DebugMessage = exports.UnimplementedMessage = exports.IgnoreMessage = exports.DisconnectMessage = exports.SshDisconnectReason = void 0;\r\nconst sshMessage_1 = require(\"./sshMessage\");\r\nconst connectionMessages_1 = require(\"./connectionMessages\");\r\nvar SshDisconnectReason;\r\n(function (SshDisconnectReason) {\r\n    SshDisconnectReason[SshDisconnectReason[\"none\"] = 0] = \"none\";\r\n    SshDisconnectReason[SshDisconnectReason[\"hostNotAllowedToConnect\"] = 1] = \"hostNotAllowedToConnect\";\r\n    SshDisconnectReason[SshDisconnectReason[\"protocolError\"] = 2] = \"protocolError\";\r\n    SshDisconnectReason[SshDisconnectReason[\"keyExchangeFailed\"] = 3] = \"keyExchangeFailed\";\r\n    SshDisconnectReason[SshDisconnectReason[\"reserved\"] = 4] = \"reserved\";\r\n    SshDisconnectReason[SshDisconnectReason[\"macError\"] = 5] = \"macError\";\r\n    SshDisconnectReason[SshDisconnectReason[\"compressionError\"] = 6] = \"compressionError\";\r\n    SshDisconnectReason[SshDisconnectReason[\"serviceNotAvailable\"] = 7] = \"serviceNotAvailable\";\r\n    SshDisconnectReason[SshDisconnectReason[\"protocolVersionNotSupported\"] = 8] = \"protocolVersionNotSupported\";\r\n    SshDisconnectReason[SshDisconnectReason[\"hostKeyNotVerifiable\"] = 9] = \"hostKeyNotVerifiable\";\r\n    SshDisconnectReason[SshDisconnectReason[\"connectionLost\"] = 10] = \"connectionLost\";\r\n    SshDisconnectReason[SshDisconnectReason[\"byApplication\"] = 11] = \"byApplication\";\r\n    SshDisconnectReason[SshDisconnectReason[\"tooManyConnections\"] = 12] = \"tooManyConnections\";\r\n    SshDisconnectReason[SshDisconnectReason[\"authCancelledByUser\"] = 13] = \"authCancelledByUser\";\r\n    SshDisconnectReason[SshDisconnectReason[\"noMoreAuthMethodsAvailable\"] = 14] = \"noMoreAuthMethodsAvailable\";\r\n    SshDisconnectReason[SshDisconnectReason[\"illegalUserName\"] = 15] = \"illegalUserName\";\r\n})(SshDisconnectReason = exports.SshDisconnectReason || (exports.SshDisconnectReason = {}));\r\nclass DisconnectMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 1;\r\n    }\r\n    onRead(reader) {\r\n        this.reasonCode = reader.readUInt32();\r\n        this.description = reader.readString('utf8');\r\n        if (reader.available >= 4) {\r\n            this.language = reader.readString('ascii');\r\n        }\r\n        else {\r\n            this.language = null;\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeUInt32(this.validateField(this.reasonCode, 'reason code'));\r\n        writer.writeString(this.description || '', 'utf8');\r\n        if (this.language) {\r\n            writer.writeString(this.language, 'ascii');\r\n        }\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (${SshDisconnectReason[this.reasonCode || 0]}: ${this.description})`;\r\n    }\r\n}\r\nexports.DisconnectMessage = DisconnectMessage;\r\nclass IgnoreMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 2;\r\n    }\r\n    onRead(reader) { }\r\n    onWrite(writer) { }\r\n}\r\nexports.IgnoreMessage = IgnoreMessage;\r\nclass UnimplementedMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 3;\r\n    }\r\n    onRead(reader) {\r\n        this.sequenceNumber = reader.readUInt32();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeUInt32(this.validateField(this.sequenceNumber, 'sequence number'));\r\n    }\r\n    toString() {\r\n        return this.unimplementedMessageType\r\n            ? `${super.toString()} (messageType=${this.unimplementedMessageType})`\r\n            : `${super.toString()} (sequenceNumber=${this.sequenceNumber})`;\r\n    }\r\n}\r\nexports.UnimplementedMessage = UnimplementedMessage;\r\nclass DebugMessage extends sshMessage_1.SshMessage {\r\n    constructor(message) {\r\n        super();\r\n        this.alwaysDisplay = false;\r\n        this.message = message;\r\n    }\r\n    get messageType() {\r\n        return 4;\r\n    }\r\n    onRead(reader) {\r\n        this.alwaysDisplay = reader.readBoolean();\r\n        this.message = reader.readString('utf8');\r\n        this.language = reader.readString('ascii');\r\n    }\r\n    onWrite(writer) {\r\n        var _a, _b;\r\n        writer.writeBoolean(this.alwaysDisplay);\r\n        writer.writeString((_a = this.message) !== null && _a !== void 0 ? _a : '', 'utf8');\r\n        writer.writeString((_b = this.language) !== null && _b !== void 0 ? _b : '', 'ascii');\r\n    }\r\n    toString() {\r\n        return `${super.toString()}: ${this.message}`;\r\n    }\r\n}\r\nexports.DebugMessage = DebugMessage;\r\nclass ServiceRequestMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 5;\r\n    }\r\n    onRead(reader) {\r\n        this.serviceName = reader.readString('ascii');\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeString(this.validateField(this.serviceName, 'service name'), 'ascii');\r\n    }\r\n}\r\nexports.ServiceRequestMessage = ServiceRequestMessage;\r\nclass ServiceAcceptMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 6;\r\n    }\r\n    onRead(reader) {\r\n        this.serviceName = reader.readString('ascii');\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeString(this.validateField(this.serviceName, 'service name'), 'ascii');\r\n    }\r\n}\r\nexports.ServiceAcceptMessage = ServiceAcceptMessage;\r\nclass SessionRequestMessage extends sshMessage_1.SshMessage {\r\n    constructor(requestType, wantReply) {\r\n        super();\r\n        this.requestType = requestType;\r\n        this.wantReply = wantReply !== null && wantReply !== void 0 ? wantReply : false;\r\n    }\r\n    get messageType() {\r\n        return 80;\r\n    }\r\n    onRead(reader) {\r\n        this.requestType = reader.readString('ascii');\r\n        this.wantReply = reader.readBoolean();\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeString(this.validateField(this.requestType, 'request type'), 'ascii');\r\n        writer.writeBoolean(this.wantReply);\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (requestType=${this.requestType})`;\r\n    }\r\n}\r\nexports.SessionRequestMessage = SessionRequestMessage;\r\nclass SessionRequestSuccessMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 81;\r\n    }\r\n    onRead(reader) { }\r\n    onWrite(writer) { }\r\n}\r\nexports.SessionRequestSuccessMessage = SessionRequestSuccessMessage;\r\nclass SessionRequestFailureMessage extends sshMessage_1.SshMessage {\r\n    get messageType() {\r\n        return 82;\r\n    }\r\n    onRead(reader) { }\r\n    onWrite(writer) { }\r\n}\r\nexports.SessionRequestFailureMessage = SessionRequestFailureMessage;\r\nclass ExtensionInfoMessage extends sshMessage_1.SshMessage {\r\n    constructor() {\r\n        // https://tools.ietf.org/html/draft-ietf-curdle-ssh-ext-info-15\r\n        super(...arguments);\r\n        this.extensionInfo = {};\r\n    }\r\n    get messageType() {\r\n        return 7;\r\n    }\r\n    onRead(reader) {\r\n        const count = reader.readUInt32();\r\n        this.extensionInfo = {};\r\n        for (let i = 0; i < count; i++) {\r\n            const key = reader.readString('ascii');\r\n            const value = reader.readString('utf8');\r\n            this.extensionInfo[key] = value;\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        const keys = Object.keys(this.extensionInfo);\r\n        writer.writeUInt32(keys.length);\r\n        for (const key of keys) {\r\n            writer.writeString(key, 'ascii');\r\n            writer.writeString(this.extensionInfo[key] || '', 'utf8');\r\n        }\r\n    }\r\n    toString() {\r\n        let extensionInfoDetails = '';\r\n        for (const [key, value] of Object.entries(this.extensionInfo)) {\r\n            if (extensionInfoDetails) {\r\n                extensionInfoDetails += '; ';\r\n            }\r\n            extensionInfoDetails += key;\r\n            if (value) {\r\n                extensionInfoDetails += '=' + value;\r\n            }\r\n        }\r\n        return `${super.toString()} (${extensionInfoDetails})`;\r\n    }\r\n}\r\nexports.ExtensionInfoMessage = ExtensionInfoMessage;\r\nExtensionInfoMessage.serverIndicator = 'ext-info-c';\r\nExtensionInfoMessage.clientIndicator = 'ext-info-c';\r\nclass SessionChannelRequestMessage extends SessionRequestMessage {\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.senderChannel = reader.readUInt32();\r\n        const request = new connectionMessages_1.ChannelRequestMessage();\r\n        request.read(reader);\r\n        this.request = request;\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeUInt32(this.validateField(this.senderChannel, 'sender channel'));\r\n        this.validateField(this.request, 'request message').write(writer);\r\n    }\r\n}\r\nexports.SessionChannelRequestMessage = SessionChannelRequestMessage;\r\nclass SessionReconnectRequestMessage extends SessionRequestMessage {\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.clientReconnectToken = reader.readBinary();\r\n        this.lastReceivedSequenceNumber = reader.readUInt64();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeBinary(this.validateField(this.clientReconnectToken, 'clientReconnectToken'));\r\n        writer.writeUInt64(this.validateField(this.lastReceivedSequenceNumber, 'lastReceivedSequenceNumber'));\r\n    }\r\n}\r\nexports.SessionReconnectRequestMessage = SessionReconnectRequestMessage;\r\nclass SessionReconnectResponseMessage extends SessionRequestSuccessMessage {\r\n    onRead(reader) {\r\n        super.onRead(reader);\r\n        this.serverReconnectToken = reader.readBinary();\r\n        this.lastReceivedSequenceNumber = reader.readUInt64();\r\n    }\r\n    onWrite(writer) {\r\n        super.onWrite(writer);\r\n        writer.writeBinary(this.validateField(this.serverReconnectToken, 'serverReconnectToken'));\r\n        writer.writeUInt64(this.validateField(this.lastReceivedSequenceNumber, 'lastReceivedSequenceNumber'));\r\n    }\r\n}\r\nexports.SessionReconnectResponseMessage = SessionReconnectResponseMessage;\r\nvar SshReconnectFailureReason;\r\n(function (SshReconnectFailureReason) {\r\n    /** No reason was specified. */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"none\"] = 0] = \"none\";\r\n    /**\r\n     * Reconnection failed due to an unknown server-side error.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"unknownServerFailure\"] = 1] = \"unknownServerFailure\";\r\n    /**\r\n     * The session ID requested by the client for reconnection was not found among\r\n     * the server's reconnectable sessions.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"sessionNotFound\"] = 2] = \"sessionNotFound\";\r\n    /**\r\n     * The reconnect token supplied by the client was invalid when checked by the server.\r\n     * The validation ensures that the client knows a secret key negotiated in the\r\n     * previously connected session.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"invalidClientReconnectToken\"] = 3] = \"invalidClientReconnectToken\";\r\n    /**\r\n     * The server was unable to re-send dropped messages that were requested by the client.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"serverDroppedMessages\"] = 4] = \"serverDroppedMessages\";\r\n    /**\r\n     * Reconnection failed due to an unknown client-side error.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"unknownClientFailure\"] = 101] = \"unknownClientFailure\";\r\n    /**\r\n     * The host key supplied by the reconnected server did not match the host key from the\r\n     * original session; the client refused to reconnect to a different host.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"differentServerHostKey\"] = 102] = \"differentServerHostKey\";\r\n    /**\r\n     * The reconnect token supplied by the server was invalid when checked by the client.\r\n     * The validation ensures that the server knows a secret key negotiated in the\r\n     * previously connected session.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"invalidServerReconnectToken\"] = 103] = \"invalidServerReconnectToken\";\r\n    /**\r\n     * The client was unable to re-send dropped messages that were requested by the server.\r\n     */\r\n    SshReconnectFailureReason[SshReconnectFailureReason[\"clientDroppedMessages\"] = 104] = \"clientDroppedMessages\";\r\n})(SshReconnectFailureReason = exports.SshReconnectFailureReason || (exports.SshReconnectFailureReason = {}));\r\nclass SessionReconnectFailureMessage extends SessionRequestFailureMessage {\r\n    onRead(reader) {\r\n        if (reader.available > 0) {\r\n            this.reasonCode = reader.readUInt32();\r\n            this.description = reader.readString('utf8');\r\n            this.language = reader.readString('ascii');\r\n        }\r\n    }\r\n    onWrite(writer) {\r\n        writer.writeUInt32(this.validateField(this.reasonCode, 'reason code'));\r\n        writer.writeString(this.description || '', 'utf8');\r\n        writer.writeString(this.language || 'en', 'ascii');\r\n    }\r\n    toString() {\r\n        return `${super.toString()} (${SshReconnectFailureReason[this.reasonCode || 0]}: ${this.description})`;\r\n    }\r\n}\r\nexports.SessionReconnectFailureMessage = SessionReconnectFailureMessage;\r\nsshMessage_1.SshMessage.index.set(1, DisconnectMessage);\r\nsshMessage_1.SshMessage.index.set(2, IgnoreMessage);\r\nsshMessage_1.SshMessage.index.set(3, UnimplementedMessage);\r\nsshMessage_1.SshMessage.index.set(5, ServiceRequestMessage);\r\nsshMessage_1.SshMessage.index.set(6, ServiceAcceptMessage);\r\nsshMessage_1.SshMessage.index.set(7, ExtensionInfoMessage);\r\nsshMessage_1.SshMessage.index.set(80, SessionRequestMessage);\r\nsshMessage_1.SshMessage.index.set(81, SessionRequestSuccessMessage);\r\nsshMessage_1.SshMessage.index.set(82, SessionRequestFailureMessage);\r\n//# sourceMappingURL=transportMessages.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ChannelMetrics = void 0;\r\n/**\r\n * Collects cumulative measurements about a channel.\r\n */\r\nclass ChannelMetrics {\r\n    /* @internal */\r\n    constructor() {\r\n        this.bytesSentSum = 0;\r\n        this.bytesReceivedSum = 0;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of bytes sent for the duration of the channel,\r\n     * not including message framing, padding, and MAC bytes.\r\n     */\r\n    get bytesSent() {\r\n        return this.bytesSentSum;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of bytes received for the duration of the channel,\r\n     * not including message framing, padding, and MAC bytes.\r\n     */\r\n    get bytesReceived() {\r\n        return this.bytesReceivedSum;\r\n    }\r\n    /* @internal */\r\n    addBytesSent(count) {\r\n        this.bytesSentSum += count;\r\n    }\r\n    /* @internal */\r\n    addBytesReceived(count) {\r\n        this.bytesReceivedSum += count;\r\n    }\r\n    toString() {\r\n        return `Bytes S/R: ${this.bytesSent} / ${this.bytesReceived}; `;\r\n    }\r\n}\r\nexports.ChannelMetrics = ChannelMetrics;\r\n//# sourceMappingURL=channelMetrics.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SessionContour = void 0;\r\nconst errors_1 = require(\"../errors\");\r\nconst queue_1 = require(\"../util/queue\");\r\nconst semaphore_1 = require(\"../util/semaphore\");\r\n/**\r\n * Collects session metrics over time, producing an outline of the timing, speed,\r\n * and quantity of bytes sent/received during the session.\r\n *\r\n * Metrics are recorded across a number of equal time intervals. As the session time\r\n * increases, intervals are expanded to keep the number of intervals under the configured\r\n * maximum. Each expansion doubles the length of all intervals, while combining the metrics\r\n * within each pair of combined intervals. Therefore, a longer session has longer intervals\r\n * and less-granular metrics. In this way, the memory usage (and serialized size) of the\r\n * session contour remains roughly constant regardless of the length of the session.\r\n *\r\n * Metrics exposed via the collection properties on this class may be momentarily\r\n * inconsistent (but will not throw exceptions) if continued session operation causes\r\n * intervals to be expanded while the data is being read concurrently. To avoid any\r\n * inconsistency, hold a lock on the <see cref=\"SessionContour\" /> instance while reading\r\n * data. (Or wait until the session ends.)\r\n *\r\n * A session contour can be exported in a compact form suitable for logging or telemetry.\r\n * Use the code in `SessionContour.kql` to chart a session contour in Azure Data Explorer.\r\n */\r\nclass SessionContour {\r\n    /**\r\n     * Creates a new instance of the `SessionContour` class.\r\n     *\r\n     * @param maxIntervals Maximum number of metric intervals to record,\r\n     * defaults to 256. Must be a power of two.\r\n     */\r\n    constructor(maxIntervals = 256) {\r\n        /** Current size of the metrics interval, in milliseconds. */\r\n        this.intervalMs = SessionContour.initialInterval;\r\n        /** Number of intervals for which metrics have been recorded. */\r\n        this.count = 0;\r\n        this.updateQueue = new queue_1.Queue();\r\n        this.updateSemaphore = new semaphore_1.Semaphore(0);\r\n        this.disposed = false;\r\n        if (maxIntervals < 2 || (maxIntervals & (maxIntervals - 1)) !== 0) {\r\n            throw new Error('Contour intervals must be a power of two.');\r\n        }\r\n        this.maxIntervals = maxIntervals;\r\n        this.intervalBytesSent = new Array(maxIntervals);\r\n        this.intervalBytesReceived = new Array(maxIntervals);\r\n        this.intervalLatencyMin = new Array(maxIntervals);\r\n        this.intervalLatencyMax = new Array(maxIntervals);\r\n        this.intervalLatencySum = new Array(maxIntervals);\r\n        this.intervalLatencyCount = new Array(maxIntervals);\r\n        this.intervalLatencyAvg = new Array(maxIntervals);\r\n        this.intervalBytesSent.fill(0);\r\n        this.intervalBytesReceived.fill(0);\r\n        this.intervalLatencyMin.fill(0);\r\n        this.intervalLatencyMax.fill(0);\r\n        this.intervalLatencySum.fill(0);\r\n        this.intervalLatencyCount.fill(0);\r\n        this.intervalLatencyAvg.fill(0);\r\n    }\r\n    /**\r\n     * Gets the current number of contour intervals with recorded metrics. This is always\r\n     * less than `maxIntervals`.\r\n     */\r\n    get intervalCount() {\r\n        return this.count;\r\n    }\r\n    /**\r\n     * Gets the current time span of each contour interval, in milliseconds. This interval time\r\n     * span is doubled as necesary such that the entire duration of the session is always covered\r\n     * by fewer intervals than the maximum.\r\n     */\r\n    get interval() {\r\n        return this.intervalMs;\r\n    }\r\n    /**\r\n     * Gets the total number of bytes sent for each interval during the session,\r\n     * including all channels and non-channel protocol messages, and including message\r\n     * framing, padding, and MAC bytes. The number of values is equal to `intervalCount`.\r\n     */\r\n    get bytesSent() {\r\n        return this.intervalBytesSent.slice(0, this.count);\r\n    }\r\n    /**\r\n     * Gets the total number of bytes received for each interval during the session,\r\n     * including all channels and non-channel protocol messages, and including message\r\n     * framing, padding, and MAC bytes. The number of values is equal to `intervalCount`.\r\n     */\r\n    get bytesReceived() {\r\n        return this.intervalBytesReceived.slice(0, this.count);\r\n    }\r\n    /**\r\n     * Gets the minimum recorded round-trip connection latency between client and server for\r\n     * each interval during the session. The number of values is equal to `intervalCount`.\r\n     */\r\n    get latencyMinMs() {\r\n        return this.intervalLatencyMin.slice(0, this.count);\r\n    }\r\n    /**\r\n     * Gets the maximum recorded round-trip connection latency between client and server for\r\n     * each interval during the session. The number of values is equal to `intervalCount`.\r\n     */\r\n    get latencyMaxMs() {\r\n        return this.intervalLatencyMax.slice(0, this.count);\r\n    }\r\n    /**\r\n     * Gets the average recorded round-trip connection latency between client and server for\r\n     * each interval during the session. The number of values is equal to `intervalCount`.\r\n     */\r\n    get latencyAverageMs() {\r\n        return this.intervalLatencyAvg.slice(0, this.count);\r\n    }\r\n    onMessageSent(e) {\r\n        this.updateQueue.enqueue({\r\n            time: e.time,\r\n            bytesSent: e.size,\r\n        });\r\n        this.updateSemaphore.tryRelease();\r\n    }\r\n    onMessageReceived(e) {\r\n        this.updateQueue.enqueue({\r\n            time: e.time,\r\n            bytesReceived: e.size,\r\n        });\r\n        this.updateSemaphore.tryRelease();\r\n    }\r\n    onLatencyUpdated(e) {\r\n        this.updateQueue.enqueue(e);\r\n        this.updateSemaphore.tryRelease();\r\n    }\r\n    onSessionClosed() {\r\n        this.updateSemaphore.tryRelease();\r\n    }\r\n    /**\r\n     * Starts collecting session metrics, and processes the metrics in a backgroud loop until\r\n     * cancelled or until the session is closed or the `SessionContour` instance is disposed.\r\n     */\r\n    async collectMetrics(sessionMetrics, cancellation) {\r\n        if (!sessionMetrics)\r\n            throw new TypeError('A session metrics object is required.');\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        const eventRegistrations = [];\r\n        eventRegistrations.push(sessionMetrics.onMessageSent(this.onMessageSent.bind(this)));\r\n        eventRegistrations.push(sessionMetrics.onMessageReceived(this.onMessageReceived.bind(this)));\r\n        eventRegistrations.push(sessionMetrics.onLatencyUpdated(this.onLatencyUpdated.bind(this)));\r\n        eventRegistrations.push(sessionMetrics.onSessionClosed(this.onSessionClosed.bind(this)));\r\n        try {\r\n            while (!(cancellation === null || cancellation === void 0 ? void 0 : cancellation.isCancellationRequested)) {\r\n                try {\r\n                    await this.updateSemaphore.wait(cancellation);\r\n                }\r\n                catch (e) {\r\n                    // The semaphore was disposed.\r\n                    break;\r\n                }\r\n                const update = this.updateQueue.dequeue();\r\n                if (!update) {\r\n                    // The semaphore was released without enqueueing an update item.\r\n                    break;\r\n                }\r\n                const intervalIndex = this.updateInterval(update.time);\r\n                if (update.bytesSent) {\r\n                    this.intervalBytesSent[intervalIndex] += update.bytesSent;\r\n                }\r\n                if (update.bytesReceived) {\r\n                    this.intervalBytesReceived[intervalIndex] += update.bytesReceived;\r\n                }\r\n                const latency = update.latency;\r\n                if (latency) {\r\n                    if (!this.intervalLatencyMin[intervalIndex] ||\r\n                        latency < this.intervalLatencyMin[intervalIndex]) {\r\n                        this.intervalLatencyMin[intervalIndex] = latency;\r\n                    }\r\n                    if (!this.intervalLatencyMax[intervalIndex] ||\r\n                        latency > this.intervalLatencyMax[intervalIndex]) {\r\n                        this.intervalLatencyMax[intervalIndex] = latency;\r\n                    }\r\n                    this.intervalLatencySum[intervalIndex] += latency;\r\n                    this.intervalLatencyCount[intervalIndex]++;\r\n                    this.intervalLatencyAvg[intervalIndex] =\r\n                        this.intervalLatencySum[intervalIndex] / this.intervalLatencyCount[intervalIndex];\r\n                }\r\n            }\r\n            if (this.disposed) {\r\n                this.updateSemaphore.dispose();\r\n            }\r\n        }\r\n        finally {\r\n            for (const eventRegistration of eventRegistrations) {\r\n                eventRegistration.dispose();\r\n            }\r\n        }\r\n    }\r\n    updateInterval(time) {\r\n        let intervalIndex = Math.floor(time / this.intervalMs);\r\n        if (intervalIndex >= this.intervalCount) {\r\n            // Expand as needed to accomodate the current time interval.\r\n            while (intervalIndex >= this.maxIntervals) {\r\n                this.expandIntervals();\r\n                intervalIndex = Math.floor(time / this.intervalMs);\r\n            }\r\n            this.count = intervalIndex + 1;\r\n        }\r\n        return intervalIndex;\r\n    }\r\n    expandIntervals() {\r\n        const combineLatency = (a, b, f) => a === 0 ? b : b === 0 ? a : f(a, b);\r\n        const halfMaxIntervals = this.maxIntervals / 2;\r\n        for (let i = 0; i < halfMaxIntervals; i++) {\r\n            const iA = 2 * i;\r\n            const iB = 2 * i + 1;\r\n            this.intervalBytesSent[i] = this.intervalBytesSent[iA] + this.intervalBytesSent[iB];\r\n            this.intervalBytesReceived[i] =\r\n                this.intervalBytesReceived[iA] + this.intervalBytesReceived[iB];\r\n            this.intervalLatencyMin[i] = combineLatency(this.intervalLatencyMin[iA], this.intervalLatencyMin[iB], Math.min);\r\n            this.intervalLatencyMax[i] = combineLatency(this.intervalLatencyMax[iA], this.intervalLatencyMax[iB], Math.max);\r\n            this.intervalLatencySum[i] = this.intervalLatencySum[iA] + this.intervalLatencySum[iB];\r\n            const countSum = this.intervalLatencyCount[iA] + this.intervalLatencyCount[iB];\r\n            this.intervalLatencyCount[i] = countSum;\r\n            this.intervalLatencyAvg[i] =\r\n                countSum === 0 ? 0 : this.intervalLatencySum[i] / this.intervalLatencyCount[i];\r\n        }\r\n        this.intervalBytesSent.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalBytesReceived.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalLatencyMin.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalLatencyMax.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalLatencySum.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalLatencyCount.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalLatencyAvg.fill(0, halfMaxIntervals, this.maxIntervals);\r\n        this.intervalMs *= 2;\r\n    }\r\n    dispose() {\r\n        this.disposed = true;\r\n        // The semaphore will be disposed after all remaining updates have been processed.\r\n        this.updateSemaphore.tryRelease();\r\n    }\r\n    /**\r\n     * Serializes the session contour into a compact form suitable for recording in\r\n     * logs or telemetry.\r\n     *\r\n     * This compact serialization format uses one byte per metric per interval, so there is\r\n     * some loss of precision, but generally not so much that it affects a visualization. A\r\n     * scale factor for each metric is automatically determined and included in the serialized\r\n     * header. The size of the serialized encoded data will be a little under 7 bytes per\r\n     * interval. With the default interval maximum (256), that comes out to less than 1.75 KB.\r\n     *\r\n     * Use the code in `SessionContour.kql` to decode and chart this output in\r\n     * Azure Data Explorer.\r\n     */\r\n    export() {\r\n        // Time and value scales are in log2 form, determined based on the maximum\r\n        // value in each series. This allows for a reasonable range of precision for each\r\n        // value (with byte values ranging from 0-255). For example a max latency in the\r\n        // 500ms range will get a scale factor of 1 (because ceil(log2(500/255)) = 1), so\r\n        // each serialized value (0-255) is half the actual value (0-510).\r\n        const getScale = (values) => Math.max(0, Math.ceil(Math.log2(Math.max(...values) / 255)));\r\n        const applyReverseScale = (value, scale) => Math.round(value / Math.pow(2, scale));\r\n        const bytes = Buffer.alloc(3 + (2 + this.intervalCount) * 5);\r\n        const version = 1;\r\n        const timeScale = Math.log2(this.interval / SessionContour.initialInterval);\r\n        bytes[0] = version;\r\n        bytes[1] = 5; // Number of metrics per interval\r\n        bytes[2] = timeScale;\r\n        bytes[3] = getScale(this.latencyMinMs);\r\n        bytes[4] = getScale(this.latencyMaxMs);\r\n        bytes[5] = getScale(this.latencyAverageMs);\r\n        bytes[6] = getScale(this.bytesSent);\r\n        bytes[7] = getScale(this.bytesReceived);\r\n        bytes[8] = SessionMetric.latencyMin;\r\n        bytes[9] = SessionMetric.latencyMax;\r\n        bytes[10] = SessionMetric.latencyAverage;\r\n        bytes[11] = SessionMetric.bytesSent;\r\n        bytes[12] = SessionMetric.bytesReceived;\r\n        for (let i = 0; i < this.intervalCount; i++) {\r\n            const offset = 13 + 5 * i;\r\n            bytes[offset + 0] = applyReverseScale(this.intervalLatencyMin[i], bytes[3]);\r\n            bytes[offset + 1] = applyReverseScale(this.intervalLatencyMax[i], bytes[4]);\r\n            bytes[offset + 2] = applyReverseScale(this.intervalLatencyAvg[i], bytes[5]);\r\n            bytes[offset + 3] = applyReverseScale(this.intervalBytesSent[i], bytes[6]);\r\n            bytes[offset + 4] = applyReverseScale(this.intervalBytesReceived[i], bytes[7]);\r\n        }\r\n        return bytes.toString('base64');\r\n    }\r\n    /**\r\n     * Deserializes a session contour that was previously exported.\r\n     *\r\n     * Due to loss in precision, some values in the deserialized contour will not exactly match\r\n     * the original, but they will be close.\r\n     */\r\n    static import(contourBase64) {\r\n        const bytes = Buffer.from(contourBase64, 'base64');\r\n        if (bytes.length < 3) {\r\n            throw new Error('Invalid session contour string.');\r\n        }\r\n        const version = bytes[0];\r\n        const metricsPerInterval = bytes[1];\r\n        const timeScale = bytes[2];\r\n        if (version !== 1) {\r\n            throw new Error(`Unsupported session contour version: ${version}`);\r\n        }\r\n        const intervalCount = (bytes.length - 3) / metricsPerInterval - 2;\r\n        if (intervalCount < 1 || bytes.length !== 3 + metricsPerInterval * (intervalCount + 2)) {\r\n            throw new Error('Incomplete session contour string.');\r\n        }\r\n        const maxIntervals = Math.pow(2, Math.ceil(Math.log2(intervalCount)));\r\n        const sessionContour = new SessionContour(maxIntervals);\r\n        sessionContour.intervalMs = Math.pow(2, timeScale) * SessionContour.initialInterval;\r\n        sessionContour.count = intervalCount;\r\n        const scales = new Array(metricsPerInterval);\r\n        for (let m = 0; m < metricsPerInterval; m++) {\r\n            scales[m] = Math.pow(2, bytes[3 + m]);\r\n        }\r\n        const ids = new Array(metricsPerInterval);\r\n        for (let m = 0; m < metricsPerInterval; m++) {\r\n            ids[m] = bytes[3 + metricsPerInterval + m];\r\n        }\r\n        for (let i = 0; i < intervalCount; i++) {\r\n            const offset = 3 + (2 + i) * metricsPerInterval;\r\n            for (let m = 0; m < metricsPerInterval; m++) {\r\n                switch (ids[m]) {\r\n                    case SessionMetric.latencyMin:\r\n                        sessionContour.intervalLatencyMin[i] = bytes[offset + m] * scales[m];\r\n                        break;\r\n                    case SessionMetric.latencyMax:\r\n                        sessionContour.intervalLatencyMax[i] = bytes[offset + m] * scales[m];\r\n                        break;\r\n                    case SessionMetric.latencyAverage:\r\n                        sessionContour.intervalLatencyAvg[i] = sessionContour.intervalLatencySum[i] =\r\n                            bytes[offset + m] * scales[m];\r\n                        sessionContour.intervalLatencyCount[i] = bytes[offset + m] === 0 ? 0 : 1;\r\n                        break;\r\n                    case SessionMetric.bytesSent:\r\n                        sessionContour.intervalBytesSent[i] = bytes[offset + m] * scales[m];\r\n                        break;\r\n                    case SessionMetric.bytesReceived:\r\n                        sessionContour.intervalBytesReceived[i] = bytes[offset + m] * scales[m];\r\n                        break;\r\n                    default:\r\n                        // Ignore any unknown metrics\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return sessionContour;\r\n    }\r\n}\r\nexports.SessionContour = SessionContour;\r\nSessionContour.initialInterval = 1000; // 1 second (in milliseconds)\r\nvar SessionMetric;\r\n(function (SessionMetric) {\r\n    SessionMetric[SessionMetric[\"none\"] = 0] = \"none\";\r\n    SessionMetric[SessionMetric[\"latencyMin\"] = 1] = \"latencyMin\";\r\n    SessionMetric[SessionMetric[\"latencyMax\"] = 2] = \"latencyMax\";\r\n    SessionMetric[SessionMetric[\"latencyAverage\"] = 3] = \"latencyAverage\";\r\n    SessionMetric[SessionMetric[\"bytesSent\"] = 11] = \"bytesSent\";\r\n    SessionMetric[SessionMetric[\"bytesReceived\"] = 12] = \"bytesReceived\";\r\n})(SessionMetric || (SessionMetric = {}));\r\n//# sourceMappingURL=sessionContour.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SessionMetrics = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst trace_1 = require(\"../trace\");\r\n/**\r\n * Collects current and cumulative measurements about a session.\r\n */\r\nclass SessionMetrics {\r\n    /* @internal */\r\n    constructor() {\r\n        this.startTime = 0;\r\n        this.messagesSentCount = 0;\r\n        this.messagesReceivedCount = 0;\r\n        this.bytesSentSum = 0;\r\n        this.bytesReceivedSum = 0;\r\n        this.reconnectionsCount = 0;\r\n        this.currentLatency = 0;\r\n        this.minLatency = 0;\r\n        this.maxLatency = 0;\r\n        this.latencySum = 0;\r\n        this.latencyCount = 0;\r\n        this.messageSentEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onMessageSent = this.messageSentEmitter.event;\r\n        this.messageReceivedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onMessageReceived = this.messageReceivedEmitter.event;\r\n        this.latencyUpdatedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onLatencyUpdated = this.latencyUpdatedEmitter.event;\r\n        this.sessionClosedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onSessionClosed = this.sessionClosedEmitter.event;\r\n        if (typeof performance === 'object' && typeof performance.now === 'function') {\r\n            Object.defineProperty(this, 'time', { get: this.browserTime });\r\n        }\r\n        else if (typeof process === 'object' && typeof process.hrtime === 'function') {\r\n            Object.defineProperty(this, 'time', { get: this.nodejsTime });\r\n        }\r\n        this.startTime = this.time;\r\n    }\r\n    /**\r\n     * Gets the current stopwatch value in milliseconds (possibly including fractional milliseconds),\r\n     * used for measuring latency.\r\n     */\r\n    /* @internal */\r\n    get time() {\r\n        // The SessionMetrics constructor may replace this with either of the below\r\n        // high-precision implementations, depending on availability of platform APIs.\r\n        return Date.now() - this.startTime;\r\n    }\r\n    browserTime() {\r\n        // Use the browser high-resolution time API.\r\n        // Note the precision may be reduced for pricacy depending on browser and page policy.\r\n        return performance.now() - this.startTime;\r\n    }\r\n    nodejsTime() {\r\n        // Use Node.js high-resolution time API.\r\n        const [s, ns] = process.hrtime();\r\n        return s * 1000 + ns / 1000000 - this.startTime;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of messages sent for the duration of the session,\r\n     * including all channels and non-channel protocol messages.\r\n     */\r\n    get messagesSent() {\r\n        return this.messagesSentCount;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of messages received for the duration of the session,\r\n     * including all channels and non-channel protocol messages.\r\n     */\r\n    get messagesReceived() {\r\n        return this.messagesReceivedCount;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of bytes sent for the duration of the session,\r\n     * including all channels and non-channel protocol messages, and including message\r\n     * framing, padding, and MAC bytes.\r\n     */\r\n    get bytesSent() {\r\n        return this.bytesSentSum;\r\n    }\r\n    /**\r\n     * Gets the total cumulative number of bytes received for the duration of the session,\r\n     * including all channels and non-channel protocol messages, and including message\r\n     * framing, padding, and MAC bytes.\r\n     */\r\n    get bytesReceived() {\r\n        return this.bytesReceivedSum;\r\n    }\r\n    /**\r\n     * Gets the number of times the session has reconnected.\r\n     * </summary>\r\n     * <remarks>\r\n     * Reconnection requires both sides to support the\r\n     * <see cref=\"SshProtocolExtensionNames.SessionReconnect\" /> protocol extension.\r\n     */\r\n    get reconnections() {\r\n        return this.reconnectionsCount;\r\n    }\r\n    /**\r\n     * Gets the average measured round-trip connection latency between client and server\r\n     * over the duration of the session, in milliseconds.\r\n     * </summary>\r\n     * <remarks>\r\n     * Latency measurement requires both sides to support the\r\n     * <see cref=\"SshProtocolExtensionNames.SessionLatency\" /> protocol extension.\r\n     * If not supported, this Sum will be 0.\r\n     */\r\n    get latencyAverageMs() {\r\n        return this.latencyCount === 0 ? 0 : this.latencySum / this.latencyCount;\r\n    }\r\n    /**\r\n     * Gets the minimum measured round-trip connection latency between client and server\r\n     * over the duration of the session, in milliseconds.\r\n     * </summary>\r\n     * <remarks>\r\n     * Latency measurement requires both sides to support the\r\n     * <see cref=\"SshProtocolExtensionNames.SessionLatency\" /> protocol extension.\r\n     * If not supported, this Sum will be 0.\r\n     */\r\n    get latencyMinMs() {\r\n        return this.minLatency;\r\n    }\r\n    /**\r\n     * Gets the maximum measured round-trip connection latency between client and server\r\n     * over the duration of the session, in milliseconds.\r\n     * </summary>\r\n     * <remarks>\r\n     * Latency measurement requires both sides to support the\r\n     * <see cref=\"SshProtocolExtensionNames.SessionLatency\" /> protocol extension.\r\n     * If not supported, this Sum will be 0.\r\n     */\r\n    get latencyMaxMs() {\r\n        return this.maxLatency;\r\n    }\r\n    /**\r\n     * Gets the most recent measurement of round-trip connection latency between client and\r\n     * server, in milliseconds.\r\n     * </summary>\r\n     * <remarks>\r\n     * Latency measurement requires both sides to support the\r\n     * <see cref=\"SshProtocolExtensionNames.SessionLatency\" /> protocol extension.\r\n     * If not supported or the session is not currently connected, this Sum will be 0.\r\n     */\r\n    get latencyCurrentMs() {\r\n        return this.currentLatency;\r\n    }\r\n    /* @internal */\r\n    addMessageSent(size) {\r\n        this.messagesSentCount++;\r\n        this.bytesSentSum += size;\r\n        this.messageSentEmitter.fire({ time: this.time, size });\r\n    }\r\n    /* @internal */\r\n    addMessageReceived(size) {\r\n        this.messagesReceivedCount++;\r\n        this.bytesReceivedSum += size;\r\n        this.messageReceivedEmitter.fire({ time: this.time, size });\r\n    }\r\n    /* @internal */\r\n    addReconnection() {\r\n        this.reconnectionsCount++;\r\n    }\r\n    /* @internal */\r\n    updateLatency(latencyMs, trace) {\r\n        if (latencyMs < 0) {\r\n            if (trace) {\r\n                trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.metricsError, `Measured latency was negative: ${latencyMs} us`);\r\n            }\r\n            return;\r\n        }\r\n        this.currentLatency = latencyMs;\r\n        if (latencyMs === 0) {\r\n            // Disconnected.\r\n            return;\r\n        }\r\n        if (this.minLatency === 0 || latencyMs < this.minLatency) {\r\n            this.minLatency = latencyMs;\r\n        }\r\n        if (this.maxLatency === 0 || latencyMs > this.maxLatency) {\r\n            this.maxLatency = latencyMs;\r\n        }\r\n        // Enable computing the average.\r\n        this.latencySum += latencyMs;\r\n        this.latencyCount++;\r\n        this.latencyUpdatedEmitter.fire({ time: this.time, latency: latencyMs });\r\n    }\r\n    /* @internal */\r\n    close() {\r\n        this.currentLatency = 0;\r\n        this.sessionClosedEmitter.fire();\r\n    }\r\n    toString() {\r\n        let s = `Messages S/R: ${this.messagesSent} / ${this.messagesReceived}; ` +\r\n            `Bytes S/R: ${this.bytesSent} / ${this.bytesReceived}; ` +\r\n            `Reconnections: ${this.reconnections}; `;\r\n        // Show extra precision for a low-latency connection.\r\n        const precision = this.minLatency >= 10 ? 1 : this.minLatency >= 1 ? 10 : 100;\r\n        if (this.maxLatency > 0) {\r\n            const min = Math.round(this.minLatency * precision) / precision;\r\n            const avg = Math.round((this.latencySum / this.latencyCount) * precision) / precision;\r\n            const max = Math.round(this.maxLatency * precision) / precision;\r\n            s += `Latency Min-Avg-Max: ${min} - ${avg} - ${max} ms; `;\r\n        }\r\n        if (this.currentLatency > 0) {\r\n            const current = Math.round(this.currentLatency * precision) / precision;\r\n            s += `Current Latency: ${current} ms; `;\r\n        }\r\n        return s;\r\n    }\r\n}\r\nexports.SessionMetrics = SessionMetrics;\r\n//# sourceMappingURL=sessionMetrics.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MultiChannelStream = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst sshChannel_1 = require(\"./sshChannel\");\r\nconst sshStream_1 = require(\"./sshStream\");\r\nconst sshSession_1 = require(\"./sshSession\");\r\nconst sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst trace_1 = require(\"./trace\");\r\nconst connectionMessages_1 = require(\"./messages/connectionMessages\");\r\n/**\r\n * Multiplexes multiple virtual streams (channels) over a single transport stream, using the\r\n * SSH protocol while providing a simplified interface without any encryption or authentication.\r\n *\r\n * This class is a complement to `SecureStream`, which provides only the encryption and\r\n * authentication functions of SSH.\r\n *\r\n * To communicate over multiple channels, two sides first establish a transport stream\r\n * over a pipe, socket, or anything else. Then one side accepts a channel while the\r\n * other side opens a channel. Either side can both open and accept channels over the\r\n * same transport stream, as long as the other side does the complementary action.\r\n */\r\nclass MultiChannelStream {\r\n    /**\r\n     * Creates a new multi-channel stream over an underlying transport stream.\r\n     * @param transportStream Stream that is used to multiplex all the channels.\r\n     */\r\n    constructor(transportStream) {\r\n        this.transportStream = transportStream;\r\n        this.disposed = false;\r\n        this.disposables = [];\r\n        /**\r\n         * Gets or sets the maximum window size for channels within the multi-channel stream.\r\n         * @see `SshChannel.maxWindowSize`\r\n         */\r\n        this.channelMaxWindowSize = sshChannel_1.SshChannel.defaultMaxWindowSize;\r\n        this.closedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onClosed = this.closedEmitter.event;\r\n        this.channelOpeningEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onChannelOpening = this.channelOpeningEmitter.event;\r\n        if (!transportStream)\r\n            throw new TypeError('transportStream is required.');\r\n        const noSecurityConfig = new sshSessionConfiguration_1.SshSessionConfiguration(false);\r\n        this.session = new sshSession_1.SshSession(noSecurityConfig);\r\n        this.session.onClosed(this.onSessionClosed, this, this.disposables);\r\n        this.session.onChannelOpening(this.onSessionChannelOpening, this, this.disposables);\r\n    }\r\n    get trace() {\r\n        return this.session.trace;\r\n    }\r\n    set trace(trace) {\r\n        this.session.trace = trace;\r\n    }\r\n    get isClosed() {\r\n        return this.disposed || this.session.isClosed;\r\n    }\r\n    /**\r\n     * Initiates the SSH session over the transport stream by exchanging initial messages with the\r\n     * remote peer. Waits for the protocol version exchange and key exchange. Additional message\r\n     * processing is kicked off as a background promise chain.\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async connect(cancellation) {\r\n        await this.session.connect(this.transportStream, cancellation);\r\n    }\r\n    /**\r\n     * Asynchronously waits for the other side to open a channel.\r\n     * @param channelType optional channel type\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async acceptChannel(channelType, cancellation) {\r\n        await this.session.connect(this.transportStream, cancellation);\r\n        const channel = await this.session.acceptChannel(channelType, cancellation);\r\n        return channel;\r\n    }\r\n    /**\r\n     * Asynchronously waits for the other side to open a channel.\r\n     * @param channelType optional channel type\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async acceptStream(channelType, cancellation) {\r\n        return this.createStream(await this.acceptChannel(channelType, cancellation));\r\n    }\r\n    /**\r\n     * Opens a channel and asynchronously waits for the other side to accept it.\r\n     * @param channelType optional channel type\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async openChannel(channelType, cancellation) {\r\n        await this.session.connect(this.transportStream, cancellation);\r\n        const openMessage = new connectionMessages_1.ChannelOpenMessage();\r\n        openMessage.channelType = channelType !== null && channelType !== void 0 ? channelType : sshChannel_1.SshChannel.sessionChannelType;\r\n        openMessage.maxWindowSize = this.channelMaxWindowSize;\r\n        const channel = await this.session.openChannel(openMessage, null, cancellation);\r\n        return channel;\r\n    }\r\n    /**\r\n     * Opens a channel and asynchronously waits for the other side to accept it.\r\n     * @param channelType optional channel type\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async openStream(channelType, cancellation) {\r\n        return this.createStream(await this.openChannel(channelType, cancellation));\r\n    }\r\n    /**\r\n     * Creates a stream instance for a channel. May be overridden to create a `SshStream` subclass.\r\n     */\r\n    createStream(channel) {\r\n        return new sshStream_1.SshStream(channel);\r\n    }\r\n    /**\r\n     * Connects, waits until the session closes or `cancellation` is cancelled, and then disposes the\r\n     * session and the transport stream.\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async connectAndRunUntilClosed(cancellation) {\r\n        const disposables = [];\r\n        const sessionClosedPromise = new Promise((resolve, reject) => {\r\n            cancellation === null || cancellation === void 0 ? void 0 : cancellation.onCancellationRequested(reject, null, disposables);\r\n            this.session.onClosed(resolve, null, disposables);\r\n        });\r\n        try {\r\n            await this.connect(cancellation);\r\n            await sessionClosedPromise;\r\n        }\r\n        finally {\r\n            disposables.forEach((d) => d.dispose());\r\n            await this.close();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true;\r\n            this.session.dispose();\r\n            this.unsubscribe();\r\n            try {\r\n                if (this.transportStream)\r\n                    this.transportStream.close().catch((e) => {\r\n                        this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing transport stream: ${e.message}`, e);\r\n                    });\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing transport stream: ${e.message}`, e);\r\n            }\r\n        }\r\n    }\r\n    async close() {\r\n        if (!this.disposed) {\r\n            this.disposed = true;\r\n            await this.session.close(transportMessages_1.SshDisconnectReason.none, 'SshSession disposed');\r\n            this.session.dispose();\r\n            this.unsubscribe();\r\n            await this.transportStream.close();\r\n        }\r\n    }\r\n    onSessionClosed(e) {\r\n        this.unsubscribe();\r\n        this.closedEmitter.fire(e);\r\n    }\r\n    onSessionChannelOpening(e) {\r\n        if (e.isRemoteRequest) {\r\n            e.channel.maxWindowSize = this.channelMaxWindowSize;\r\n        }\r\n        this.channelOpeningEmitter.fire(e);\r\n    }\r\n    unsubscribe() {\r\n        this.disposables.forEach((d) => d.dispose());\r\n        this.disposables = [];\r\n    }\r\n}\r\nexports.MultiChannelStream = MultiChannelStream;\r\n//# sourceMappingURL=multiChannelStream.js.map","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PipeExtensions = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst connectionMessages_1 = require(\"./messages/connectionMessages\");\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nconst errors_1 = require(\"./errors\");\r\nconst trace_1 = require(\"./trace\");\r\n/**\r\n * Extension methods for piping sessions and channels.\r\n *\r\n * Note this class is not exported from the package. Instead, the piping APIs are exposed via\r\n * public methods on the `SshSession` and `SshChannel` classes. See those respective methods\r\n * for API documentation.\r\n */\r\nclass PipeExtensions {\r\n    static async pipeSession(session, toSession) {\r\n        if (!session)\r\n            throw new TypeError('Session is required.');\r\n        if (!toSession)\r\n            throw new TypeError('Target session is required');\r\n        const endCompletion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        session.onRequest((e) => {\r\n            e.responsePromise = PipeExtensions.forwardSessionRequest(e, toSession, e.cancellation);\r\n        });\r\n        toSession.onRequest((e) => {\r\n            e.responsePromise = PipeExtensions.forwardSessionRequest(e, session, e.cancellation);\r\n        });\r\n        session.onChannelOpening((e) => {\r\n            if (e.isRemoteRequest) {\r\n                e.openingPromise = PipeExtensions.forwardChannel(e, toSession, e.cancellation);\r\n            }\r\n        });\r\n        toSession.onChannelOpening((e) => {\r\n            if (e.isRemoteRequest) {\r\n                e.openingPromise = PipeExtensions.forwardChannel(e, session, e.cancellation);\r\n            }\r\n        });\r\n        session.onClosed((e) => {\r\n            endCompletion.resolve(PipeExtensions.forwardSessionClose(toSession, e));\r\n        });\r\n        toSession.onClosed((e) => {\r\n            endCompletion.resolve(PipeExtensions.forwardSessionClose(session, e));\r\n        });\r\n        const endPromise = await endCompletion.promise;\r\n        await endPromise;\r\n    }\r\n    static async pipeChannel(channel, toChannel) {\r\n        if (!channel)\r\n            throw new TypeError('Channel is required.');\r\n        if (!toChannel)\r\n            throw new TypeError('Target channel is required');\r\n        const endCompletion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        let closed = false;\r\n        channel.onRequest((e) => {\r\n            e.responsePromise = PipeExtensions.forwardChannelRequest(e, toChannel, e.cancellation);\r\n        });\r\n        toChannel.onRequest((e) => {\r\n            e.responsePromise = PipeExtensions.forwardChannelRequest(e, channel, e.cancellation);\r\n        });\r\n        channel.onDataReceived((data) => {\r\n            void PipeExtensions.forwardData(channel, toChannel, data).catch();\r\n        });\r\n        toChannel.onDataReceived((data) => {\r\n            void PipeExtensions.forwardData(toChannel, channel, data).catch();\r\n        });\r\n        channel.onEof(() => {\r\n            void PipeExtensions.forwardData(channel, toChannel, buffer_1.Buffer.alloc(0)).catch();\r\n        });\r\n        toChannel.onEof(() => {\r\n            void PipeExtensions.forwardData(toChannel, channel, buffer_1.Buffer.alloc(0)).catch();\r\n        });\r\n        channel.onExtendedDataReceived((data) => {\r\n            void PipeExtensions.forwardExtendedData(channel, toChannel, data.dataTypeCode, data.data).catch();\r\n        });\r\n        toChannel.onExtendedDataReceived((data) => {\r\n            void PipeExtensions.forwardExtendedData(toChannel, channel, data.dataTypeCode, data.data).catch();\r\n        });\r\n        channel.onClosed((e) => {\r\n            if (!closed) {\r\n                closed = true;\r\n                endCompletion.resolve(PipeExtensions.forwardChannelClose(channel, toChannel, e));\r\n            }\r\n        });\r\n        toChannel.onClosed((e) => {\r\n            if (!closed) {\r\n                closed = true;\r\n                endCompletion.resolve(PipeExtensions.forwardChannelClose(toChannel, channel, e));\r\n            }\r\n        });\r\n        const endTask = await endCompletion.promise;\r\n        await endTask;\r\n    }\r\n    static async forwardSessionRequest(e, toSession, cancellation) {\r\n        // `SshSession.requestResponse()` always set `wantReply` to `true` internally and waits for a\r\n        // response, but since the message buffer is cached the updated `wantReply` value is not sent.\r\n        // Anyway, it's better to forward a no-reply message as another no-reply message, using\r\n        // `SshSession.request()` instead.\r\n        if (!e.request.wantReply) {\r\n            return toSession\r\n                .request(e.request, cancellation)\r\n                .then(() => new transportMessages_1.SessionRequestSuccessMessage());\r\n        }\r\n        return toSession.requestResponse(e.request, transportMessages_1.SessionRequestSuccessMessage, transportMessages_1.SessionRequestFailureMessage, cancellation);\r\n    }\r\n    static async forwardChannel(e, toSession, cancellation) {\r\n        var _a;\r\n        try {\r\n            const toChannel = await toSession.openChannel(e.request, null, cancellation);\r\n            void PipeExtensions.pipeChannel(e.channel, toChannel).catch();\r\n            return new connectionMessages_1.ChannelOpenConfirmationMessage();\r\n        }\r\n        catch (err) {\r\n            if (!(err instanceof Error))\r\n                throw err;\r\n            const failureMessage = new connectionMessages_1.ChannelOpenFailureMessage();\r\n            if (err instanceof errors_1.SshChannelError) {\r\n                failureMessage.reasonCode = (_a = err.reason) !== null && _a !== void 0 ? _a : connectionMessages_1.SshChannelOpenFailureReason.connectFailed;\r\n            }\r\n            else {\r\n                failureMessage.reasonCode = connectionMessages_1.SshChannelOpenFailureReason.connectFailed;\r\n            }\r\n            failureMessage.description = err.message;\r\n            return failureMessage;\r\n        }\r\n    }\r\n    static async forwardChannelRequest(e, toChannel, cancellation) {\r\n        e.request.recipientChannel = toChannel.remoteChannelId;\r\n        const result = await toChannel.request(e.request, cancellation);\r\n        return result ? new connectionMessages_1.ChannelSuccessMessage() : new connectionMessages_1.ChannelFailureMessage();\r\n    }\r\n    static async forwardSessionClose(session, e) {\r\n        var _a;\r\n        return session.close(e.reason, e.message, (_a = e.error) !== null && _a !== void 0 ? _a : undefined);\r\n    }\r\n    static async forwardData(channel, toChannel, data) {\r\n        // Make a copy of the buffer before sending because SshChannel.send() is an async operation\r\n        // (it may need to wait for the window to open), while the buffer will be re-used for the\r\n        // next message as sson as this task yields.\r\n        const buffer = buffer_1.Buffer.alloc(data.length);\r\n        data.copy(buffer);\r\n        const promise = toChannel.send(buffer, vscode_jsonrpc_1.CancellationToken.None);\r\n        channel.adjustWindow(buffer.length);\r\n        return promise;\r\n    }\r\n    static async forwardExtendedData(channel, toChannel, dataTypeCode, data) {\r\n        // Make a copy of the buffer before sending because SshChannel.send() is an async operation\r\n        // (it may need to wait for the window to open), while the buffer will be re-used for the\r\n        // next message as sson as this task yields.\r\n        const buffer = buffer_1.Buffer.alloc(data.length);\r\n        data.copy(buffer);\r\n        const promise = toChannel.sendExtendedData(dataTypeCode, buffer, vscode_jsonrpc_1.CancellationToken.None);\r\n        channel.adjustWindow(buffer.length);\r\n        return promise;\r\n    }\r\n    static async forwardChannelClose(fromChannel, toChannel, e) {\r\n        const message = `Piping channel closure.\\n` +\r\n            `Source: ${fromChannel.session} ${fromChannel}\\n` +\r\n            `Destination: ${toChannel.session} ${toChannel}\\n`;\r\n        toChannel.session.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.channelClosed, message);\r\n        if (e.error) {\r\n            toChannel.close(e.error);\r\n            return Promise.resolve();\r\n        }\r\n        else if (e.exitSignal) {\r\n            return toChannel.close(e.exitSignal, e.errorMessage);\r\n        }\r\n        else if (typeof e.exitStatus === 'number') {\r\n            return toChannel.close(e.exitStatus);\r\n        }\r\n        else {\r\n            return toChannel.close();\r\n        }\r\n    }\r\n}\r\nexports.PipeExtensions = PipeExtensions;\r\n//# sourceMappingURL=pipeExtensions.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SecureStream = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst streams_1 = require(\"./streams\");\r\nconst sshStream_1 = require(\"./sshStream\");\r\nconst sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst trace_1 = require(\"./trace\");\r\nconst sshClientSession_1 = require(\"./sshClientSession\");\r\nconst sshServerSession_1 = require(\"./sshServerSession\");\r\nconst errors_1 = require(\"./errors\");\r\nconst stream_1 = require(\"stream\");\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\n/**\r\n * Establishes an end-to-end encrypted two-way authenticated data stream over an underlying\r\n * transport stream, using the SSH protocol but providing simplified interface that is limited to\r\n * a single duplex stream (channel).\r\n *\r\n * This class is a complement to `MultiChannelStream`, which provides only the channel-multiplexing\r\n * functions of SSH.\r\n *\r\n * To establish a secure connection, the two sides first establish an insecure transport stream\r\n * over a pipe, socket, or anything else. Then they encrypt and authenticate the connection\r\n * before beginning to send and receive data.\r\n */\r\nclass SecureStream extends stream_1.Duplex {\r\n    /**\r\n     * Creates a new encrypted and authenticated stream over an underlying transport stream.\r\n     * @param transportStream Stream that is used to multiplex all the channels.\r\n     * @param credentials Client or server credentials for authenticating the secure connection.\r\n     * @param reconnectableSessions Optional parameter that enables the stream to be reconnected\r\n     * with a new transport stream after a temporary disconnection. For a stream client it is\r\n     * a boolean value; for a stream server it must be an array.\r\n     */\r\n    constructor(transportStream, credentials, reconnectableSessions) {\r\n        super({\r\n            write(chunk, encoding, cb) {\r\n                this.connectCompletion.promise.then((stream) => {\r\n                    if (!stream) {\r\n                        cb(new errors_1.ObjectDisposedError('SecureStream'));\r\n                    }\r\n                    else {\r\n                        // eslint-disable-next-line no-underscore-dangle\r\n                        stream._write(chunk, encoding, cb);\r\n                    }\r\n                }, cb);\r\n            },\r\n            writev(chunks, cb) {\r\n                this.connectCompletion.promise.then((stream) => {\r\n                    if (!stream) {\r\n                        cb(new errors_1.ObjectDisposedError('SecureStream'));\r\n                    }\r\n                    else {\r\n                        // eslint-disable-next-line no-underscore-dangle\r\n                        stream._writev(chunks, cb);\r\n                    }\r\n                }, cb);\r\n            },\r\n            final(cb) {\r\n                this.connectCompletion.promise.then((stream) => {\r\n                    if (!stream) {\r\n                        cb(new errors_1.ObjectDisposedError('SecureStream'));\r\n                    }\r\n                    else {\r\n                        // eslint-disable-next-line no-underscore-dangle\r\n                        stream._final(cb);\r\n                    }\r\n                }, cb);\r\n            },\r\n            read(size) {\r\n                this.connectCompletion.promise.then((stream) => {\r\n                    if (!stream) {\r\n                        this.push(null); // EOF\r\n                    }\r\n                    else {\r\n                        // eslint-disable-next-line no-underscore-dangle\r\n                        stream._read(size);\r\n                    }\r\n                }, (e) => {\r\n                    // The error will be thrown from the connect() method.\r\n                });\r\n            },\r\n        });\r\n        this.transportStream = transportStream;\r\n        this.clientCredentials = null;\r\n        this.serverCredentials = null;\r\n        this.connectCompletion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        this.disposed = false;\r\n        this.disposables = [];\r\n        this.disconnectedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onDisconnected = this.disconnectedEmitter.event;\r\n        this.closedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onClosed = this.closedEmitter.event;\r\n        if (!transportStream)\r\n            throw new TypeError('A transport stream is required.');\r\n        if (!credentials)\r\n            throw new TypeError('Client or server credentials are required.');\r\n        const sessionConfig = new sshSessionConfiguration_1.SshSessionConfiguration(true);\r\n        if (reconnectableSessions) {\r\n            sessionConfig.protocolExtensions.push(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect);\r\n        }\r\n        if ('username' in credentials) {\r\n            if (typeof reconnectableSessions !== 'undefined' &&\r\n                typeof reconnectableSessions !== 'boolean') {\r\n                throw new TypeError('SecureStream client reconnectable sessions must be a boolean.');\r\n            }\r\n            this.clientCredentials = credentials;\r\n            this.session = new sshClientSession_1.SshClientSession(sessionConfig);\r\n        }\r\n        else if (credentials.publicKeys) {\r\n            if (typeof reconnectableSessions !== 'undefined' &&\r\n                !Array.isArray(reconnectableSessions)) {\r\n                throw new TypeError('SecureStream server reconnectable sessions must be an array.');\r\n            }\r\n            this.serverCredentials = credentials;\r\n            this.session = new sshServerSession_1.SshServerSession(sessionConfig, reconnectableSessions);\r\n        }\r\n        else {\r\n            throw new TypeError('Client or server credentials are required.');\r\n        }\r\n        this.session.onDisconnected(this.onSessionDisconnected, this, this.disposables);\r\n        this.session.onClosed(this.onSessionClosed, this, this.disposables);\r\n    }\r\n    get trace() {\r\n        return this.session.trace;\r\n    }\r\n    set trace(trace) {\r\n        this.session.trace = trace;\r\n    }\r\n    get isClosed() {\r\n        return this.disposed || this.session.isClosed;\r\n    }\r\n    onAuthenticating(listener, thisArgs, disposables) {\r\n        return this.session.onAuthenticating(listener, thisArgs, disposables);\r\n    }\r\n    /**\r\n     * Initiates the SSH session over the transport stream by exchanging initial messages with the\r\n     * remote peer. Waits for the protocol version exchange and key exchange. Additional message\r\n     * processing is kicked off as a background promise chain.\r\n     * @param cancellation optional cancellation token.\r\n     */\r\n    async connect(cancellation) {\r\n        let sessionConnected = false;\r\n        try {\r\n            if (this.serverCredentials) {\r\n                const serverSession = this.session;\r\n                serverSession.credentials = this.serverCredentials;\r\n            }\r\n            let stream = this.transportStream;\r\n            if (stream instanceof stream_1.Duplex) {\r\n                stream = new streams_1.NodeStream(stream);\r\n            }\r\n            await this.session.connect(stream, cancellation);\r\n            sessionConnected = true;\r\n            let channel = null;\r\n            if (this.clientCredentials) {\r\n                const clientSession = this.session;\r\n                if (!(await clientSession.authenticateServer(cancellation))) {\r\n                    throw new errors_1.SshConnectionError('Server authentication failed.', transportMessages_1.SshDisconnectReason.hostKeyNotVerifiable);\r\n                }\r\n                if (!(await clientSession.authenticateClient(this.clientCredentials, cancellation))) {\r\n                    throw new errors_1.SshConnectionError('Client authentication failed.', transportMessages_1.SshDisconnectReason.noMoreAuthMethodsAvailable);\r\n                }\r\n                channel = await this.session.openChannel(cancellation);\r\n            }\r\n            else {\r\n                channel = await this.session.acceptChannel(cancellation);\r\n            }\r\n            this.stream = this.createStream(channel);\r\n            // Do not forward the 'readable' event because adding a listener causes a read.\r\n            this.stream.on('data', (data) => this.emit('data', data));\r\n            this.stream.on('end', () => this.emit('end'));\r\n            this.stream.on('close', () => this.emit('close'));\r\n            this.stream.on('error', () => this.emit('error'));\r\n            channel.onClosed(() => this.dispose());\r\n            this.connectCompletion.resolve(this.stream);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            if (e instanceof errors_1.ObjectDisposedError && this.session.isClosed) {\r\n                // The session was closed while waiting for the channel.\r\n                // This can happen in reconnect scenarios.\r\n                this.connectCompletion.resolve(null);\r\n            }\r\n            else {\r\n                let disconnectReason = e instanceof errors_1.SshConnectionError ? e.reason : undefined;\r\n                disconnectReason !== null && disconnectReason !== void 0 ? disconnectReason : (disconnectReason = transportMessages_1.SshDisconnectReason.protocolError);\r\n                await this.session.close(disconnectReason, e.message, e);\r\n                this.connectCompletion.reject(e);\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Re-initiates the SSH session over a NEW transport stream by exchanging initial messages\r\n     * with the remote server. Waits for the secure reconnect handshake to complete. Additional\r\n     * message processing is kicked off as a background task chain.\r\n     *\r\n     * Applies only to a secure stream client. (The secure stream server handles reconnections\r\n     * automatically during the session handshake.)\r\n     */\r\n    async reconnect(transportStream, cancellation) {\r\n        if (!(this.session instanceof sshClientSession_1.SshClientSession)) {\r\n            throw new Error('Cannot reconnect SecureStream server.');\r\n        }\r\n        if (!transportStream)\r\n            throw new TypeError('A transport stream is required.');\r\n        this.transportStream = transportStream;\r\n        let stream = this.transportStream;\r\n        if (stream instanceof stream_1.Duplex) {\r\n            stream = new streams_1.NodeStream(stream);\r\n        }\r\n        await this.session.reconnect(stream, cancellation);\r\n    }\r\n    /**\r\n     * Creates a stream instance for a channel. May be overridden to create a `SshStream` subclass.\r\n     */\r\n    createStream(channel) {\r\n        return new sshStream_1.SshStream(channel);\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            const sessionWasConnected = this.session.isConnected || this.session.isClosed;\r\n            this.disposed = true;\r\n            this.session.dispose();\r\n            this.unsubscribe();\r\n            try {\r\n                // If the session did not connect yet, it doesn't know about the stream and\r\n                // won't dispose it. So dispose it here.\r\n                if (!sessionWasConnected && this.transportStream) {\r\n                    if (this.transportStream instanceof stream_1.Duplex) {\r\n                        this.transportStream.end();\r\n                        this.transportStream.destroy();\r\n                    }\r\n                    else {\r\n                        this.transportStream.close().catch((e) => {\r\n                            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing transport stream: ${e.message}`, e);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.streamCloseError, `Error closing transport stream: ${e.message}`, e);\r\n            }\r\n        }\r\n    }\r\n    async close() {\r\n        if (!this.disposed) {\r\n            this.disposed = true;\r\n            await this.session.close(transportMessages_1.SshDisconnectReason.none, this.session.constructor.name + ' disposed.');\r\n            this.session.dispose();\r\n            this.unsubscribe();\r\n            if (this.transportStream instanceof stream_1.Duplex) {\r\n                await new Promise((resolve) => {\r\n                    this.transportStream.end(resolve);\r\n                });\r\n            }\r\n            else {\r\n                await this.transportStream.close();\r\n            }\r\n        }\r\n    }\r\n    onSessionDisconnected() {\r\n        this.disconnectedEmitter.fire();\r\n    }\r\n    onSessionClosed(e) {\r\n        this.unsubscribe();\r\n        this.closedEmitter.fire(e);\r\n    }\r\n    unsubscribe() {\r\n        this.disposables.forEach((d) => d.dispose());\r\n        this.disposables = [];\r\n    }\r\n}\r\nexports.SecureStream = SecureStream;\r\n//# sourceMappingURL=secureStream.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar AuthenticationService_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AuthenticationService = void 0;\r\nconst sshService_1 = require(\"./sshService\");\r\nconst authenticationMessages_1 = require(\"../messages/authenticationMessages\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nconst transportMessages_1 = require(\"../messages/transportMessages\");\r\nconst sshAuthenticatingEventArgs_1 = require(\"../events/sshAuthenticatingEventArgs\");\r\nconst connectionService_1 = require(\"./connectionService\");\r\nconst serviceActivation_1 = require(\"./serviceActivation\");\r\nconst queue_1 = require(\"../util/queue\");\r\nconst trace_1 = require(\"../trace\");\r\n/**\r\n * Handles SSH protocol messages related to client authentication.\r\n */\r\nlet AuthenticationService = AuthenticationService_1 = class AuthenticationService extends sshService_1.SshService {\r\n    constructor(session) {\r\n        var _a;\r\n        super(session);\r\n        this.authenticationFailureCount = 0;\r\n        this.disposeCancellationSource = new vscode_jsonrpc_1.CancellationTokenSource();\r\n        const algorithmName = (_a = session.algorithms) === null || _a === void 0 ? void 0 : _a.publicKeyAlgorithmName;\r\n        if (!algorithmName) {\r\n            throw new Error('Algorithms not initialized.');\r\n        }\r\n        this.publicKeyAlgorithmName = algorithmName;\r\n    }\r\n    handleMessage(message, cancellation) {\r\n        if (message instanceof authenticationMessages_1.AuthenticationSuccessMessage) {\r\n            return this.handleSuccessMessage(message);\r\n        }\r\n        else if (message instanceof authenticationMessages_1.AuthenticationFailureMessage) {\r\n            return this.handleFailureMessage(message);\r\n        }\r\n        else if (message instanceof authenticationMessages_1.AuthenticationRequestMessage) {\r\n            return this.handleAuthenticationRequestMessage(message, cancellation);\r\n        }\r\n        else {\r\n            throw new Error(`Message not implemented: ${message}`);\r\n        }\r\n    }\r\n    async handleAuthenticationRequestMessage(message, cancellation) {\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionAuthenticating, `Authentication request: ${message.methodName}`);\r\n        if (message.methodName === \"publickey\" /* AuthenticationMethod.publicKey */ ||\r\n            message.methodName === \"hostbased\" /* AuthenticationMethod.hostBased */) {\r\n            return this.handlePublicKeyRequestMessage(message.convertTo(new authenticationMessages_1.PublicKeyRequestMessage()), cancellation);\r\n        }\r\n        else if (message.methodName === \"password\" /* AuthenticationMethod.password */) {\r\n            return this.handlePasswordRequestMessage(message.convertTo(new authenticationMessages_1.PasswordRequestMessage()), cancellation);\r\n        }\r\n        else if (message.methodName === \"none\" /* AuthenticationMethod.none */) {\r\n            return this.handleAuthenticating(message, new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.clientNone, { username: message.username }, cancellation));\r\n        }\r\n        else {\r\n            const failureMessage = new authenticationMessages_1.AuthenticationFailureMessage();\r\n            failureMessage.methodNames = [\r\n                \"publickey\" /* AuthenticationMethod.publicKey */,\r\n                \"password\" /* AuthenticationMethod.password */,\r\n                \"hostbased\" /* AuthenticationMethod.hostBased */,\r\n            ];\r\n            await this.session.sendMessage(failureMessage, cancellation);\r\n        }\r\n    }\r\n    async handlePublicKeyRequestMessage(message, cancellation) {\r\n        var _a, _b, _c;\r\n        const publicKeyAlg = this.session.config.getPublicKeyAlgorithm(message.keyAlgorithmName);\r\n        if (!publicKeyAlg) {\r\n            const failureMessage = new authenticationMessages_1.AuthenticationFailureMessage();\r\n            failureMessage.methodNames = [\r\n                \"publickey\" /* AuthenticationMethod.publicKey */,\r\n                \"password\" /* AuthenticationMethod.password */,\r\n            ];\r\n            await this.session.sendMessage(failureMessage, cancellation);\r\n            return;\r\n        }\r\n        const publicKey = publicKeyAlg.createKeyPair();\r\n        await publicKey.setPublicKeyBytes(message.publicKey);\r\n        let args;\r\n        if (message.methodName === \"hostbased\" /* AuthenticationMethod.hostBased */) {\r\n            args = new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.clientHostBased, {\r\n                username: (_a = message.username) !== null && _a !== void 0 ? _a : '',\r\n                publicKey: publicKey,\r\n                clientHostname: message.clientHostname,\r\n                clientUsername: message.clientUsername,\r\n            });\r\n        }\r\n        else if (!message.hasSignature) {\r\n            args = new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.clientPublicKeyQuery, {\r\n                username: (_b = message.username) !== null && _b !== void 0 ? _b : '',\r\n                publicKey: publicKey,\r\n            });\r\n        }\r\n        else {\r\n            // Verify that the signature matches the public key.\r\n            const signature = publicKeyAlg.readSignatureData(message.signature);\r\n            const sessionId = this.session.sessionId;\r\n            if (sessionId == null) {\r\n                throw new Error('Session ID not initialized.');\r\n            }\r\n            const writer = new sshData_1.SshDataWriter(Buffer.alloc(sessionId.length + message.payloadWithoutSignature.length + 20));\r\n            writer.writeBinary(sessionId);\r\n            writer.write(message.payloadWithoutSignature);\r\n            const signedData = writer.toBuffer();\r\n            const verifier = publicKeyAlg.createVerifier(publicKey);\r\n            const verified = await verifier.verify(signedData, signature);\r\n            if (!verified) {\r\n                await this.handleAuthenticationFailure('Public key authentication failed: invalid signature.', cancellation);\r\n            }\r\n            args = new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.clientPublicKey, {\r\n                username: (_c = message.username) !== null && _c !== void 0 ? _c : '',\r\n                publicKey: publicKey,\r\n            });\r\n        }\r\n        // Raise an Authenticating event that allows handlers to do additional verification\r\n        // of the client's username and public key.\r\n        await this.handleAuthenticating(message, args, cancellation);\r\n    }\r\n    async handlePasswordRequestMessage(message, cancellation) {\r\n        var _a, _b;\r\n        // Raise an Authenticating event that allows handlers to do verification\r\n        // of the client's username and password.\r\n        const args = new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.clientPassword, {\r\n            username: (_a = message.username) !== null && _a !== void 0 ? _a : '',\r\n            password: (_b = message.password) !== null && _b !== void 0 ? _b : '',\r\n        });\r\n        await this.handleAuthenticating(message, args, cancellation);\r\n    }\r\n    async handleAuthenticating(requestMessage, args, cancellation) {\r\n        var _a;\r\n        args.cancellation = this.disposeCancellationSource.token;\r\n        let authenticatedPrincipal = null;\r\n        try {\r\n            authenticatedPrincipal = await this.session.raiseAuthenticatingEvent(args);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.authenticationError, `Error while authenticating client: ${e.message}`, e);\r\n            authenticatedPrincipal = null;\r\n        }\r\n        if (authenticatedPrincipal) {\r\n            if (args.authenticationType === sshAuthenticatingEventArgs_1.SshAuthenticationType.clientPublicKeyQuery) {\r\n                const publicKeyRequest = requestMessage;\r\n                const okMessage = new authenticationMessages_1.PublicKeyOKMessage();\r\n                okMessage.keyAlgorithmName = publicKeyRequest.keyAlgorithmName;\r\n                okMessage.publicKey = publicKeyRequest.publicKey;\r\n                await this.session.sendMessage(okMessage, cancellation);\r\n            }\r\n            else {\r\n                this.session.principal = authenticatedPrincipal;\r\n                if (requestMessage.serviceName) {\r\n                    this.session.activateService(requestMessage.serviceName);\r\n                }\r\n                this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionAuthenticated, `${sshAuthenticatingEventArgs_1.SshAuthenticationType[args.authenticationType]} authentication succeeded.`);\r\n                await this.session.sendMessage(new authenticationMessages_1.AuthenticationSuccessMessage(), cancellation);\r\n                (_a = this.session) === null || _a === void 0 ? void 0 : _a.handleClientAuthenticated();\r\n            }\r\n        }\r\n        else {\r\n            await this.handleAuthenticationFailure(`${sshAuthenticatingEventArgs_1.SshAuthenticationType[args.authenticationType]} authentication failed.`);\r\n        }\r\n    }\r\n    async handleAuthenticationFailure(message, cancellation) {\r\n        this.authenticationFailureCount++;\r\n        this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.clientAuthenticationFailed, message);\r\n        const failureMessage = new authenticationMessages_1.AuthenticationFailureMessage();\r\n        failureMessage.methodNames = [\r\n            \"publickey\" /* AuthenticationMethod.publicKey */,\r\n            \"password\" /* AuthenticationMethod.password */,\r\n            \"hostbased\" /* AuthenticationMethod.hostBased */,\r\n        ];\r\n        await this.session.sendMessage(failureMessage, cancellation);\r\n        // Allow trying again with another authentication method. But prevent unlimited tries.\r\n        if (this.authenticationFailureCount >= this.session.config.maxClientAuthenticationAttempts) {\r\n            await this.session.close(transportMessages_1.SshDisconnectReason.noMoreAuthMethodsAvailable, 'Authentication failed.');\r\n        }\r\n    }\r\n    async authenticateClient(credentials, cancellation) {\r\n        var _a, _b, _c, _d;\r\n        this.clientAuthenticationMethods = new queue_1.Queue();\r\n        for (const publicKey of (_a = credentials.publicKeys) !== null && _a !== void 0 ? _a : []) {\r\n            if (!publicKey)\r\n                continue;\r\n            const username = (_b = credentials.username) !== null && _b !== void 0 ? _b : '';\r\n            let privateKey = publicKey;\r\n            const privateKeyProvider = credentials.privateKeyProvider;\r\n            this.clientAuthenticationMethods.enqueue(async (cancellation2) => {\r\n                if (!privateKey.hasPrivateKey) {\r\n                    if (privateKeyProvider == null) {\r\n                        throw new Error('A private key provider is required.');\r\n                    }\r\n                    privateKey = await privateKeyProvider(publicKey, cancellation2 !== null && cancellation2 !== void 0 ? cancellation2 : vscode_jsonrpc_1.CancellationToken.None);\r\n                }\r\n                if (privateKey) {\r\n                    await this.requestPublicKeyAuthentication(username, privateKey, cancellation2);\r\n                }\r\n                else {\r\n                    await this.session.close(transportMessages_1.SshDisconnectReason.authCancelledByUser);\r\n                }\r\n            });\r\n        }\r\n        const passwordCredentialProvider = credentials.passwordProvider;\r\n        if (passwordCredentialProvider) {\r\n            this.clientAuthenticationMethods.enqueue(async (cancellation2) => {\r\n                var _a;\r\n                const passwordCredentialPromise = passwordCredentialProvider(cancellation2 !== null && cancellation2 !== void 0 ? cancellation2 : vscode_jsonrpc_1.CancellationToken.None);\r\n                const passwordCredential = passwordCredentialPromise\r\n                    ? await passwordCredentialPromise\r\n                    : null;\r\n                if (passwordCredential) {\r\n                    await this.requestPasswordAuthentication((_a = passwordCredential[0]) !== null && _a !== void 0 ? _a : '', passwordCredential[1], cancellation2);\r\n                }\r\n                else {\r\n                    await this.session.close(transportMessages_1.SshDisconnectReason.authCancelledByUser);\r\n                }\r\n            });\r\n        }\r\n        else if (credentials.password) {\r\n            const username = (_c = credentials.username) !== null && _c !== void 0 ? _c : '';\r\n            const password = credentials.password;\r\n            this.clientAuthenticationMethods.enqueue(async (cancellation2) => {\r\n                await this.requestPasswordAuthentication(username, password, cancellation2);\r\n            });\r\n        }\r\n        if (this.clientAuthenticationMethods.size === 0) {\r\n            const username = (_d = credentials.username) !== null && _d !== void 0 ? _d : '';\r\n            this.clientAuthenticationMethods.enqueue(async (cancellation2) => {\r\n                await this.requestUsernameAuthentication(username, cancellation2);\r\n            });\r\n        }\r\n        const firstAuthMethod = this.clientAuthenticationMethods.dequeue();\r\n        await firstAuthMethod(cancellation);\r\n    }\r\n    async requestUsernameAuthentication(username, cancellation) {\r\n        const authMessage = new authenticationMessages_1.AuthenticationRequestMessage();\r\n        authMessage.serviceName = connectionService_1.ConnectionService.serviceName;\r\n        authMessage.methodName = \"none\" /* AuthenticationMethod.none */;\r\n        authMessage.username = username;\r\n        await this.session.sendMessage(authMessage, cancellation);\r\n        // Assume the included service request succeeds, without waiting for an auth success\r\n        // message. If not, a following channel open request will fail anyway.\r\n        this.session.activateService(connectionService_1.ConnectionService);\r\n    }\r\n    async requestPublicKeyAuthentication(username, key, cancellation) {\r\n        const algorithm = this.session.config.publicKeyAlgorithms.find((a) => (a === null || a === void 0 ? void 0 : a.keyAlgorithmName) === key.keyAlgorithmName);\r\n        if (!algorithm) {\r\n            throw new Error(`Public key algorithm '${key.keyAlgorithmName}' is not in session config.`);\r\n        }\r\n        const authMessage = new authenticationMessages_1.PublicKeyRequestMessage();\r\n        authMessage.serviceName = connectionService_1.ConnectionService.serviceName;\r\n        authMessage.username = username;\r\n        authMessage.keyAlgorithmName = algorithm.name;\r\n        authMessage.publicKey = (await key.getPublicKeyBytes(algorithm.name));\r\n        authMessage.signature = await this.createAuthenticationSignature(authMessage, algorithm, key);\r\n        await this.session.sendMessage(authMessage, cancellation);\r\n        if (this.clientAuthenticationMethods.size === 0) {\r\n            // There are no remaining auth methods. Assume the service request\r\n            // included here succeeds, without waiting for an auth success message\r\n            // If not, a following channel open request will fail anyway.\r\n            this.session.activateService(connectionService_1.ConnectionService);\r\n        }\r\n    }\r\n    async requestPasswordAuthentication(username, password, cancellation) {\r\n        const authMessage = new authenticationMessages_1.PasswordRequestMessage();\r\n        authMessage.serviceName = connectionService_1.ConnectionService.serviceName;\r\n        authMessage.username = username;\r\n        authMessage.password = password;\r\n        await this.session.sendMessage(authMessage, cancellation);\r\n        // Assume the included service request succeeds, without waiting for an auth success\r\n        // message. If not, a following channel open request will fail anyway.\r\n        this.session.activateService(connectionService_1.ConnectionService);\r\n    }\r\n    handleFailureMessage(message) {\r\n        this.session.onAuthenticationComplete(false);\r\n    }\r\n    handleSuccessMessage(message) {\r\n        // The authentication request included the connection service name.\r\n        // So it should be registered when authentication succeeded.\r\n        this.session.activateService(connectionService_1.ConnectionService);\r\n        this.session.onAuthenticationComplete(true);\r\n    }\r\n    async createAuthenticationSignature(requestMessage, algorithm, key) {\r\n        const sessionId = this.session.sessionId;\r\n        if (sessionId == null) {\r\n            throw new Error('Session ID not initialized.');\r\n        }\r\n        const writer = new sshData_1.SshDataWriter(Buffer.alloc(requestMessage.publicKey.length + (requestMessage.username || '').length + 400));\r\n        writer.writeBinary(sessionId);\r\n        writer.writeByte(requestMessage.messageType);\r\n        writer.writeString(requestMessage.username || '', 'utf8');\r\n        writer.writeString(requestMessage.serviceName || '', 'ascii');\r\n        writer.writeString(\"publickey\" /* AuthenticationMethod.publicKey */, 'ascii');\r\n        writer.writeBoolean(true);\r\n        writer.writeString(requestMessage.keyAlgorithmName, 'ascii');\r\n        writer.writeBinary(requestMessage.publicKey);\r\n        const signer = algorithm.createSigner(key);\r\n        const signature = await signer.sign(writer.toBuffer());\r\n        return algorithm.createSignatureData(signature);\r\n    }\r\n    dispose() {\r\n        try {\r\n            this.disposeCancellationSource.cancel();\r\n            this.disposeCancellationSource.dispose();\r\n        }\r\n        catch (_a) { }\r\n        super.dispose();\r\n    }\r\n};\r\nAuthenticationService.serviceName = 'ssh-userauth';\r\nAuthenticationService = AuthenticationService_1 = __decorate([\r\n    (0, serviceActivation_1.serviceActivation)({ serviceRequest: AuthenticationService_1.serviceName })\r\n], AuthenticationService);\r\nexports.AuthenticationService = AuthenticationService;\r\n//# sourceMappingURL=authenticationService.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar ConnectionService_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ConnectionService = void 0;\r\nconst sshService_1 = require(\"./sshService\");\r\nconst connectionMessages_1 = require(\"../messages/connectionMessages\");\r\nconst promiseCompletionSource_1 = require(\"../util/promiseCompletionSource\");\r\nconst sshChannel_1 = require(\"../sshChannel\");\r\nconst cancellation_1 = require(\"../util/cancellation\");\r\nconst errors_1 = require(\"../errors\");\r\nconst sshChannelOpeningEventArgs_1 = require(\"../events/sshChannelOpeningEventArgs\");\r\nconst serviceActivation_1 = require(\"./serviceActivation\");\r\nconst trace_1 = require(\"../trace\");\r\nconst sshExtendedDataEventArgs_1 = require(\"../events/sshExtendedDataEventArgs\");\r\nlet ConnectionService = ConnectionService_1 = class ConnectionService extends sshService_1.SshService {\r\n    constructor(session) {\r\n        super(session);\r\n        this.channelCounter = 0;\r\n        this.channelMap = new Map();\r\n        this.nonAcceptedChannels = new Map();\r\n        this.pendingChannels = new Map();\r\n        this.pendingAcceptChannels = new Map();\r\n    }\r\n    get channels() {\r\n        return Array.from(this.channelMap.values());\r\n    }\r\n    close(e) {\r\n        let channelCompletions = [...this.pendingChannels.values()].map((pc) => pc.completionSource);\r\n        if (this.pendingAcceptChannels.size > 0) {\r\n            channelCompletions = channelCompletions.concat([...this.pendingAcceptChannels.values()].reduce((a, b) => a.concat(b)));\r\n        }\r\n        for (const channel of this.channelMap.values()) {\r\n            channel.close(e);\r\n        }\r\n        for (const channelCompletion of channelCompletions) {\r\n            channelCompletion.reject(e);\r\n        }\r\n    }\r\n    dispose() {\r\n        const channels = [...this.channelMap.values()];\r\n        let channelCompletions = [...this.pendingChannels.values()].map((pc) => pc.completionSource);\r\n        if (this.pendingAcceptChannels.size > 0) {\r\n            channelCompletions = channelCompletions.concat([...this.pendingAcceptChannels.values()].reduce((a, b) => a.concat(b)));\r\n        }\r\n        for (const channel of channels) {\r\n            channel.dispose();\r\n        }\r\n        for (const channelCompletion of channelCompletions) {\r\n            channelCompletion.reject(new errors_1.ObjectDisposedError('Session closed.'));\r\n        }\r\n        super.dispose();\r\n    }\r\n    async acceptChannel(channelType, cancellation) {\r\n        const completionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        let cancellationRegistration;\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellationRegistration = cancellation.onCancellationRequested(() => {\r\n                const list = this.pendingAcceptChannels.get(channelType);\r\n                if (list) {\r\n                    const index = list.findIndex((item) => Object.is(item, completionSource));\r\n                    if (index >= 0) {\r\n                        list.splice(index, 1);\r\n                    }\r\n                }\r\n                completionSource.reject(new cancellation_1.CancellationError());\r\n            });\r\n        }\r\n        let channel = null;\r\n        channel =\r\n            Array.from(this.nonAcceptedChannels.values()).find((c) => c.channelType === channelType) ||\r\n                null;\r\n        if (channel) {\r\n            // Found a channel that was already opened but not accepted.\r\n            this.nonAcceptedChannels.delete(channel.channelId);\r\n        }\r\n        else {\r\n            // Set up the completion source to wait for a channel of the requested type.\r\n            let list = this.pendingAcceptChannels.get(channelType);\r\n            if (!list) {\r\n                list = [];\r\n                this.pendingAcceptChannels.set(channelType, list);\r\n            }\r\n            list.push(completionSource);\r\n        }\r\n        try {\r\n            return channel || (await completionSource.promise);\r\n        }\r\n        finally {\r\n            if (cancellationRegistration)\r\n                cancellationRegistration.dispose();\r\n        }\r\n    }\r\n    async openChannel(openMessage, completionSource, cancellation) {\r\n        const channelId = ++this.channelCounter;\r\n        openMessage.senderChannel = channelId;\r\n        let cancellationRegistration = null;\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellationRegistration = cancellation.onCancellationRequested(() => {\r\n                if (this.pendingChannels.delete(channelId)) {\r\n                    completionSource.reject(new cancellation_1.CancellationError());\r\n                }\r\n            });\r\n        }\r\n        this.pendingChannels.set(channelId, {\r\n            openMessage: openMessage,\r\n            completionSource: completionSource,\r\n            cancellationRegistration: cancellationRegistration,\r\n        });\r\n        await this.session.sendMessage(openMessage);\r\n        return channelId;\r\n    }\r\n    handleMessage(message, cancellation) {\r\n        if (message instanceof connectionMessages_1.ChannelDataMessage) {\r\n            return this.handleDataMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelExtendedDataMessage) {\r\n            return this.handleExtendedDataMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelWindowAdjustMessage) {\r\n            return this.handleAdjustWindowMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelEofMessage) {\r\n            return this.handleEofMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelOpenMessage) {\r\n            return this.handleOpenMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelCloseMessage) {\r\n            return this.handleCloseMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelOpenConfirmationMessage) {\r\n            return this.handleOpenConfirmationMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelOpenFailureMessage) {\r\n            return this.handleOpenFailureMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelRequestMessage) {\r\n            return this.handleRequestMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelSuccessMessage) {\r\n            return this.handleSuccessMessage(message);\r\n        }\r\n        else if (message instanceof connectionMessages_1.ChannelFailureMessage) {\r\n            return this.handleFailureMessage(message);\r\n        }\r\n        else {\r\n            throw new Error(`Message not implemented: ${message}`);\r\n        }\r\n    }\r\n    async handleOpenMessage(message, cancellation) {\r\n        var _a;\r\n        const senderChannel = message.senderChannel;\r\n        if (!this.session.canAcceptRequests) {\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.channelOpenFailed, 'Channel open request blocked because the session is not yet authenticated.');\r\n            const openFailureMessage = new connectionMessages_1.ChannelOpenFailureMessage();\r\n            openFailureMessage.recipientChannel = senderChannel;\r\n            openFailureMessage.reasonCode = connectionMessages_1.SshChannelOpenFailureReason.administrativelyProhibited;\r\n            openFailureMessage.description = 'Authenticate before opening channels.';\r\n            await this.session.sendMessage(openFailureMessage, cancellation);\r\n            return;\r\n        }\r\n        else if (!message.channelType) {\r\n            const openFailureMessage = new connectionMessages_1.ChannelOpenFailureMessage();\r\n            openFailureMessage.recipientChannel = senderChannel;\r\n            openFailureMessage.reasonCode = connectionMessages_1.SshChannelOpenFailureReason.unknownChannelType;\r\n            openFailureMessage.description = 'Channel type not specified.';\r\n            await this.session.sendMessage(openFailureMessage, cancellation);\r\n            return;\r\n        }\r\n        // Save a copy of the message because its buffer will be overwitten by the next receive.\r\n        message = message.convertTo(new connectionMessages_1.ChannelOpenMessage(), true);\r\n        // The confirmation message may be reassigned if the opening task returns a custom message.\r\n        let confirmationMessage = new connectionMessages_1.ChannelOpenConfirmationMessage();\r\n        const channelId = ++this.channelCounter;\r\n        const channel = new sshChannel_1.SshChannel(this, message.channelType, channelId, senderChannel, message.maxWindowSize, message.maxPacketSize, message, confirmationMessage);\r\n        let responseMessage;\r\n        const args = new sshChannelOpeningEventArgs_1.SshChannelOpeningEventArgs(message, channel, true);\r\n        try {\r\n            await this.session.handleChannelOpening(args, cancellation);\r\n            if (args.openingPromise) {\r\n                responseMessage = await args.openingPromise;\r\n            }\r\n            else if (args.failureReason !== connectionMessages_1.SshChannelOpenFailureReason.none) {\r\n                const failureMessage = new connectionMessages_1.ChannelOpenFailureMessage();\r\n                failureMessage.reasonCode = args.failureReason;\r\n                failureMessage.description = (_a = args.failureDescription) !== null && _a !== void 0 ? _a : undefined;\r\n                responseMessage = failureMessage;\r\n            }\r\n            else {\r\n                responseMessage = confirmationMessage;\r\n            }\r\n        }\r\n        catch (e) {\r\n            channel.dispose();\r\n            throw e;\r\n        }\r\n        if (responseMessage instanceof connectionMessages_1.ChannelOpenFailureMessage) {\r\n            responseMessage.recipientChannel = senderChannel;\r\n            try {\r\n                await this.session.sendMessage(responseMessage, cancellation);\r\n            }\r\n            finally {\r\n                channel.dispose();\r\n            }\r\n            return;\r\n        }\r\n        // The session might have been closed while opening the channel.\r\n        if (this.session.isClosed) {\r\n            channel.dispose();\r\n            return;\r\n        }\r\n        // Prevent any changes to the channel max window size after sending the value in the\r\n        // open confirmation message.\r\n        channel.isMaxWindowSizeLocked = true;\r\n        this.channelMap.set(channel.channelId, channel);\r\n        confirmationMessage = responseMessage;\r\n        confirmationMessage.recipientChannel = channel.remoteChannelId;\r\n        confirmationMessage.senderChannel = channel.channelId;\r\n        confirmationMessage.maxWindowSize = channel.maxWindowSize;\r\n        confirmationMessage.maxPacketSize = channel.maxPacketSize;\r\n        confirmationMessage.rewrite();\r\n        channel.openConfirmationMessage = confirmationMessage;\r\n        await this.session.sendMessage(confirmationMessage, cancellation);\r\n        // Check if there are any accept operations waiting on this channel type.\r\n        let accepted = false;\r\n        const list = this.pendingAcceptChannels.get(channel.channelType);\r\n        while (list && list.length > 0) {\r\n            const acceptCompletionSource = list.shift();\r\n            acceptCompletionSource.resolve(channel);\r\n            accepted = true;\r\n            break;\r\n        }\r\n        if (!accepted) {\r\n            this.nonAcceptedChannels.set(channel.channelId, channel);\r\n        }\r\n        this.onChannelOpenCompleted(channel.channelId, channel);\r\n        channel.enableSending();\r\n    }\r\n    handleCloseMessage(message) {\r\n        const channel = this.findChannelById(message.recipientChannel);\r\n        if (channel) {\r\n            channel.handleClose();\r\n        }\r\n    }\r\n    async handleOpenConfirmationMessage(message, cancellation) {\r\n        var _a;\r\n        let completionSource = null;\r\n        let openMessage;\r\n        const pendingChannel = this.pendingChannels.get(message.recipientChannel);\r\n        if (pendingChannel) {\r\n            openMessage = pendingChannel.openMessage;\r\n            completionSource = pendingChannel.completionSource;\r\n            if (pendingChannel.cancellationRegistration) {\r\n                pendingChannel.cancellationRegistration.dispose();\r\n            }\r\n            this.pendingChannels.delete(message.recipientChannel);\r\n        }\r\n        else if (this.channelMap.has(message.recipientChannel)) {\r\n            throw new Error('Duplicate channel ID.');\r\n        }\r\n        else {\r\n            throw new Error('Channel confirmation was not requested.');\r\n        }\r\n        // Save a copy of the message because its buffer will be overwitten by the next receive.\r\n        message = message.convertTo(new connectionMessages_1.ChannelOpenConfirmationMessage(), true);\r\n        const channel = new sshChannel_1.SshChannel(this, openMessage.channelType || sshChannel_1.SshChannel.sessionChannelType, message.recipientChannel, message.senderChannel, message.maxWindowSize, message.maxPacketSize, openMessage, message);\r\n        // Set the channel max window size property to match the value sent in the open message,\r\n        // (if specified) and lock it to prevent any further changes.\r\n        if (typeof openMessage.maxWindowSize === 'number') {\r\n            channel.maxWindowSize = openMessage.maxWindowSize;\r\n        }\r\n        channel.isMaxWindowSizeLocked = true;\r\n        this.channelMap.set(channel.channelId, channel);\r\n        const args = new sshChannelOpeningEventArgs_1.SshChannelOpeningEventArgs(openMessage, channel, false);\r\n        await this.session.handleChannelOpening(args, cancellation);\r\n        if (completionSource) {\r\n            if (args.failureReason === connectionMessages_1.SshChannelOpenFailureReason.none) {\r\n                completionSource.resolve(channel);\r\n            }\r\n            else {\r\n                completionSource.reject(new errors_1.SshChannelError((_a = args.failureDescription) !== null && _a !== void 0 ? _a : 'Channel open failure.', args.failureReason));\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            this.onChannelOpenCompleted(channel.channelId, channel);\r\n        }\r\n        channel.enableSending();\r\n    }\r\n    handleOpenFailureMessage(message) {\r\n        let completionSource = null;\r\n        const pendingChannel = this.pendingChannels.get(message.recipientChannel);\r\n        if (pendingChannel) {\r\n            completionSource = pendingChannel.completionSource;\r\n            if (pendingChannel.cancellationRegistration) {\r\n                pendingChannel.cancellationRegistration.dispose();\r\n            }\r\n            this.pendingChannels.delete(message.recipientChannel);\r\n        }\r\n        if (completionSource != null) {\r\n            completionSource.reject(new errors_1.SshChannelError(message.description || 'Channel open rejected.', message.reasonCode));\r\n        }\r\n        else {\r\n            this.onChannelOpenCompleted(message.recipientChannel, null);\r\n        }\r\n    }\r\n    async handleRequestMessage(message, cancellation) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        if (!channel)\r\n            return;\r\n        await channel.handleRequest(message, cancellation);\r\n    }\r\n    handleSuccessMessage(message) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        channel === null || channel === void 0 ? void 0 : channel.handleResponse(true);\r\n    }\r\n    handleFailureMessage(message) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        channel === null || channel === void 0 ? void 0 : channel.handleResponse(false);\r\n    }\r\n    handleDataMessage(message) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        channel === null || channel === void 0 ? void 0 : channel.handleDataReceived(message.data);\r\n    }\r\n    handleExtendedDataMessage(message) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        channel === null || channel === void 0 ? void 0 : channel.handleExtendedDataReceived(new sshExtendedDataEventArgs_1.SshExtendedDataEventArgs(message.dataTypeCode, message.data));\r\n    }\r\n    handleAdjustWindowMessage(message) {\r\n        const channel = this.tryGetChannelForMessage(message);\r\n        channel === null || channel === void 0 ? void 0 : channel.adjustRemoteWindow(message.bytesToAdd);\r\n    }\r\n    handleEofMessage(message) {\r\n        const channel = this.findChannelById(message.recipientChannel);\r\n        channel === null || channel === void 0 ? void 0 : channel.handleEof();\r\n    }\r\n    onChannelOpenCompleted(channelId, channel) {\r\n        if (channel) {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.channelOpened, `${this.session} ChannelOpenCompleted(${channel})`);\r\n        }\r\n        else {\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.channelOpenFailed, `${this.session} ChannelOpenCompleted(${channelId} failed)`);\r\n        }\r\n    }\r\n    /**\r\n     * Gets the channel object based on the message `recipientChannel` property.\r\n     * Logs a warning if the channel was not found.\r\n     */\r\n    tryGetChannelForMessage(channelMessage) {\r\n        const channel = this.findChannelById(channelMessage.recipientChannel);\r\n        if (!channel) {\r\n            const messageString = channelMessage instanceof connectionMessages_1.ChannelDataMessage\r\n                ? 'channel data message'\r\n                : channelMessage.toString();\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.channelRequestFailed, `Invalid channel ID ${channelMessage.recipientChannel} in ${messageString}.`);\r\n        }\r\n        return channel;\r\n    }\r\n    findChannelById(id) {\r\n        var _a;\r\n        const channel = (_a = this.channelMap.get(id)) !== null && _a !== void 0 ? _a : null;\r\n        return channel;\r\n    }\r\n    /* @internal */\r\n    removeChannel(channel) {\r\n        this.channelMap.delete(channel.channelId);\r\n        this.pendingChannels.delete(channel.channelId);\r\n    }\r\n};\r\nConnectionService.serviceName = 'ssh-connection';\r\nConnectionService = ConnectionService_1 = __decorate([\r\n    (0, serviceActivation_1.serviceActivation)({ serviceRequest: ConnectionService_1.serviceName })\r\n], ConnectionService);\r\nexports.ConnectionService = ConnectionService;\r\n//# sourceMappingURL=connectionService.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar KeyExchangeService_1;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyExchangeService = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshSession_1 = require(\"../sshSession\");\r\nconst sshService_1 = require(\"./sshService\");\r\nconst bigInt_1 = require(\"../io/bigInt\");\r\nconst kexMessages_1 = require(\"../messages/kexMessages\");\r\nconst sshAlgorithms_1 = require(\"../algorithms/sshAlgorithms\");\r\nconst sshData_1 = require(\"../io/sshData\");\r\nconst errors_1 = require(\"../errors\");\r\nconst transportMessages_1 = require(\"../messages/transportMessages\");\r\nconst sshSessionAlgorithms_1 = require(\"../sshSessionAlgorithms\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst connectionService_1 = require(\"./connectionService\");\r\nconst serviceActivation_1 = require(\"./serviceActivation\");\r\nconst trace_1 = require(\"../trace\");\r\nclass ExchangeContext {\r\n}\r\nconst serverExtensionInfoSignal = 'ext-info-s';\r\nconst clientExtensionInfoSignal = 'ext-info-c';\r\nlet KeyExchangeService = KeyExchangeService_1 = class KeyExchangeService extends sshService_1.SshService {\r\n    constructor(session, isClientSession) {\r\n        super(session);\r\n        this.isClientSession = isClientSession;\r\n        this.isInitialExchange = false;\r\n        this.exchangeContext = null;\r\n    }\r\n    get exchanging() {\r\n        return !!this.exchangeContext;\r\n    }\r\n    async startKeyExchange(isInitialExchange) {\r\n        this.isInitialExchange = isInitialExchange;\r\n        this.exchangeContext = new ExchangeContext();\r\n        const kexInitMessage = this.createKeyExchangeInitMessage();\r\n        let kexGuessMessage = null;\r\n        if (this.isClientSession) {\r\n            if (isInitialExchange && this.session.config.enableKeyExchangeGuess) {\r\n                kexGuessMessage = await this.createKeyExchangeGuessMessage();\r\n                kexInitMessage.firstKexPacketFollows = !!kexGuessMessage;\r\n            }\r\n            this.exchangeContext.clientKexInitPayload = kexInitMessage.toBuffer();\r\n        }\r\n        else {\r\n            this.exchangeContext.serverKexInitPayload = kexInitMessage.toBuffer();\r\n        }\r\n        return [kexInitMessage, kexGuessMessage];\r\n    }\r\n    finishKeyExchange() {\r\n        var _a;\r\n        if (!this.exchangeContext) {\r\n            throw new errors_1.SshConnectionError('Key exchange not started.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        const newAlgorithms = this.exchangeContext.newAlgorithms;\r\n        if (!newAlgorithms) {\r\n            throw new errors_1.SshConnectionError('Key exchange not completed.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        newAlgorithms.isExtensionInfoRequested = (_a = this.exchangeContext) === null || _a === void 0 ? void 0 : _a.isExtensionInfoRequested;\r\n        this.exchangeContext = null;\r\n        return newAlgorithms;\r\n    }\r\n    abortKeyExchange() {\r\n        this.exchangeContext = null;\r\n    }\r\n    createKeyExchangeInitMessage() {\r\n        // Reference RFC 8308: Signaling of Extension Negotiation in Key Exchange.\r\n        const extinfo = this.isClientSession ? clientExtensionInfoSignal : serverExtensionInfoSignal;\r\n        const config = this.session.config;\r\n        const message = new kexMessages_1.KeyExchangeInitMessage();\r\n        message.keyExchangeAlgorithms = (0, sshAlgorithms_1.algorithmNames)(config.keyExchangeAlgorithms).concat(extinfo);\r\n        message.serverHostKeyAlgorithms = this.getPublicKeyAlgorithms();\r\n        message.encryptionAlgorithmsClientToServer = message.encryptionAlgorithmsServerToClient =\r\n            (0, sshAlgorithms_1.algorithmNames)(config.encryptionAlgorithms);\r\n        message.macAlgorithmsClientToServer = message.macAlgorithmsServerToClient = (0, sshAlgorithms_1.algorithmNames)(config.hmacAlgorithms);\r\n        message.compressionAlgorithmsClientToServer = message.compressionAlgorithmsServerToClient =\r\n            (0, sshAlgorithms_1.algorithmNames)(config.compressionAlgorithms);\r\n        message.languagesClientToServer = [''];\r\n        message.languagesServerToClient = [''];\r\n        message.firstKexPacketFollows = false;\r\n        message.reserved = 0;\r\n        return message;\r\n    }\r\n    /**\r\n     * Gets the list of public key algorithms that the current session can support.\r\n     * For a server session the list is filtered based on the available private keys.\r\n     */\r\n    getPublicKeyAlgorithms() {\r\n        var _a, _b;\r\n        let publicKeyAlgorithms = [...this.session.config.publicKeyAlgorithms];\r\n        if (publicKeyAlgorithms.length > 1 && !this.isClientSession) {\r\n            const privateKeyAlgorithms = (_b = (_a = this.session.credentials) === null || _a === void 0 ? void 0 : _a.publicKeys) === null || _b === void 0 ? void 0 : _b.map((k) => k.keyAlgorithmName);\r\n            if (privateKeyAlgorithms) {\r\n                publicKeyAlgorithms = publicKeyAlgorithms.filter((a) => a && privateKeyAlgorithms.includes(a.keyAlgorithmName));\r\n            }\r\n        }\r\n        const publicKeyAlgorithmNames = (0, sshAlgorithms_1.algorithmNames)(publicKeyAlgorithms);\r\n        return publicKeyAlgorithmNames;\r\n    }\r\n    async createKeyExchangeGuessMessage() {\r\n        if (!this.exchangeContext) {\r\n            throw new Error('Key exchange was not started.');\r\n        }\r\n        // Select the first key exchange algorithm as the \"guess\". (They are in preferential order.)\r\n        const kexAlgorithm = this.session.config.keyExchangeAlgorithms[0];\r\n        if (!kexAlgorithm) {\r\n            return null;\r\n        }\r\n        this.exchangeContext.keyExchange = kexAlgorithm.name;\r\n        this.exchangeContext.exchange = kexAlgorithm.createKeyExchange();\r\n        this.exchangeContext.exchangeValue = await this.exchangeContext.exchange.startKeyExchange();\r\n        const guess = new kexMessages_1.KeyExchangeDhInitMessage();\r\n        guess.e = this.exchangeContext.exchangeValue;\r\n        return guess;\r\n    }\r\n    handleMessage(message, cancellation) {\r\n        if (message instanceof kexMessages_1.KeyExchangeInitMessage) {\r\n            return this.handleInitMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof kexMessages_1.KeyExchangeDhInitMessage) {\r\n            return this.handleDhInitMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof kexMessages_1.KeyExchangeDhReplyMessage) {\r\n            return this.handleDhReplyMessage(message, cancellation);\r\n        }\r\n        else {\r\n            throw new Error(`Message not implemented: ${message}`);\r\n        }\r\n    }\r\n    async handleInitMessage(message, cancellation) {\r\n        var _a, _b, _c, _d;\r\n        if (!this.exchangeContext) {\r\n            throw new Error('Key exchange was not started.');\r\n        }\r\n        const config = this.session.config;\r\n        this.exchangeContext.keyExchange = this.chooseAlgorithm('KeyExchange', (0, sshAlgorithms_1.algorithmNames)(config.keyExchangeAlgorithms), message.keyExchangeAlgorithms);\r\n        if (this.exchangeContext.keyExchange === 'none') {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.algorithmNegotiation, 'Client and server negotiated no security. Cancelling key-exchange.');\r\n            // The connection service is normally activated after authentication. But when there is\r\n            // no key-exchange there will be no authentication, so connections must be enabled now.\r\n            this.session.activateService(connectionService_1.ConnectionService);\r\n            this.exchangeContext.newAlgorithms = new sshSessionAlgorithms_1.SshSessionAlgorithms();\r\n            await this.session.handleNewKeysMessage(new kexMessages_1.NewKeysMessage(), cancellation);\r\n            return;\r\n        }\r\n        this.exchangeContext.publicKey = this.chooseAlgorithm('PublicKey', this.getPublicKeyAlgorithms(), message.serverHostKeyAlgorithms);\r\n        this.exchangeContext.clientEncryption = this.chooseAlgorithm('ClientEncryption', (0, sshAlgorithms_1.algorithmNames)(config.encryptionAlgorithms), message.encryptionAlgorithmsClientToServer);\r\n        this.exchangeContext.serverEncryption = this.chooseAlgorithm('ServerEncryption', (0, sshAlgorithms_1.algorithmNames)(config.encryptionAlgorithms), message.encryptionAlgorithmsServerToClient);\r\n        this.exchangeContext.clientHmac = this.chooseAlgorithm('ClientHmac', (0, sshAlgorithms_1.algorithmNames)(config.hmacAlgorithms), message.macAlgorithmsClientToServer);\r\n        this.exchangeContext.serverHmac = this.chooseAlgorithm('ServerHmac', (0, sshAlgorithms_1.algorithmNames)(config.hmacAlgorithms), message.macAlgorithmsServerToClient);\r\n        this.exchangeContext.clientCompression = this.chooseAlgorithm('ClientCompression', (0, sshAlgorithms_1.algorithmNames)(config.compressionAlgorithms), message.compressionAlgorithmsClientToServer);\r\n        this.exchangeContext.serverCompression = this.chooseAlgorithm('ServerCompression', (0, sshAlgorithms_1.algorithmNames)(config.compressionAlgorithms), message.compressionAlgorithmsServerToClient);\r\n        let extensionInfoSignal;\r\n        if (this.isClientSession) {\r\n            this.exchangeContext.serverKexInitPayload = message.toBuffer();\r\n            // If the exchange value is already initialized then this side sent a guess.\r\n            const alreadySentGuess = !!this.exchangeContext.exchangeValue;\r\n            // Check if the negotiated algorithm is the one preferred by THIS side.\r\n            // This means if there was a \"guess\" at kex initialization then it was correct.\r\n            const negotiatedKexAlgorithmIsPreferred = this.exchangeContext.keyExchange === ((_a = config.keyExchangeAlgorithms[0]) === null || _a === void 0 ? void 0 : _a.name);\r\n            // If a guess was not sent, or the guess was wrong, send the init message now.\r\n            if (!alreadySentGuess || !negotiatedKexAlgorithmIsPreferred) {\r\n                const kexAlgorithm = config.getKeyExchangeAlgorithm(this.exchangeContext.keyExchange);\r\n                this.exchangeContext.exchange = kexAlgorithm.createKeyExchange();\r\n                this.exchangeContext.exchangeValue =\r\n                    await this.exchangeContext.exchange.startKeyExchange();\r\n                const reply = new kexMessages_1.KeyExchangeDhInitMessage();\r\n                reply.e = this.exchangeContext.exchangeValue;\r\n                await this.session.sendMessage(reply, cancellation);\r\n            }\r\n            else {\r\n                this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.algorithmNegotiation, 'Already sent correct guess for key-exchange init.');\r\n            }\r\n            this.exchangeContext.isExtensionInfoRequested =\r\n                this.isInitialExchange &&\r\n                    ((_b = message.keyExchangeAlgorithms) === null || _b === void 0 ? void 0 : _b.includes(serverExtensionInfoSignal));\r\n        }\r\n        else {\r\n            if (message.firstKexPacketFollows) {\r\n                // The remote side indicated it is sending a guess immediately following.\r\n                // Check if the negotiated algorithm is the one preferred by the OTHER side.\r\n                // If so, the following \"guess\" will be correct. Otherwise it must be ignored.\r\n                const negotiatedKexAlgorithmIsPreferred = this.exchangeContext.keyExchange === ((_c = message.keyExchangeAlgorithms) === null || _c === void 0 ? void 0 : _c[0]);\r\n                const guessResult = negotiatedKexAlgorithmIsPreferred ? 'correct' : 'incorrect';\r\n                this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.algorithmNegotiation, `Client's KeyExchange guess was ${guessResult}.`);\r\n                this.exchangeContext.discardGuessedInit = !negotiatedKexAlgorithmIsPreferred;\r\n            }\r\n            this.exchangeContext.clientKexInitPayload = message.toBuffer();\r\n            this.exchangeContext.isExtensionInfoRequested =\r\n                this.isInitialExchange &&\r\n                    ((_d = message.keyExchangeAlgorithms) === null || _d === void 0 ? void 0 : _d.includes(clientExtensionInfoSignal));\r\n        }\r\n    }\r\n    async handleDhInitMessage(message, cancellation) {\r\n        var _a, _b, _c, _d, _e;\r\n        if (this.isClientSession) {\r\n            return;\r\n        }\r\n        const serverSession = this.session;\r\n        if (!this.exchangeContext ||\r\n            !this.exchangeContext.keyExchange ||\r\n            !this.exchangeContext.publicKey) {\r\n            throw new errors_1.SshConnectionError('Key exchange not started.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        if (this.exchangeContext.discardGuessedInit) {\r\n            // Algorithm negotiation determined that an incorrect guess would be received.\r\n            this.exchangeContext.discardGuessedInit = false;\r\n            return;\r\n        }\r\n        const kexAlg = this.session.config.getKeyExchangeAlgorithm(this.exchangeContext.keyExchange);\r\n        if (!kexAlg) {\r\n            throw new errors_1.SshConnectionError('Key exchange not supported for algorithm: ' + this.exchangeContext.keyExchange, transportMessages_1.SshDisconnectReason.keyExchangeFailed);\r\n        }\r\n        const publicKeyAlg = this.session.config.getPublicKeyAlgorithm(this.exchangeContext.publicKey);\r\n        if (!publicKeyAlg) {\r\n            throw new errors_1.SshConnectionError('Public key algorithm not supported: ' + this.exchangeContext.publicKey, transportMessages_1.SshDisconnectReason.keyExchangeFailed);\r\n        }\r\n        let privateKey = null;\r\n        if ((_a = serverSession.credentials) === null || _a === void 0 ? void 0 : _a.publicKeys) {\r\n            const publicKey = serverSession.credentials.publicKeys.find((k) => k.keyAlgorithmName === publicKeyAlg.keyAlgorithmName);\r\n            privateKey = publicKey !== null && publicKey !== void 0 ? publicKey : null;\r\n            if ((privateKey === null || privateKey === void 0 ? void 0 : privateKey.hasPrivateKey) === false) {\r\n                if (!serverSession.credentials.privateKeyProvider) {\r\n                    throw new Error('A private key provider is required.');\r\n                }\r\n                privateKey = await serverSession.credentials.privateKeyProvider(publicKey, cancellation !== null && cancellation !== void 0 ? cancellation : vscode_jsonrpc_1.CancellationToken.None);\r\n            }\r\n        }\r\n        if (privateKey == null) {\r\n            throw new errors_1.SshConnectionError('Private key not found for algorithm: ' + this.exchangeContext.publicKey, transportMessages_1.SshDisconnectReason.keyExchangeFailed);\r\n        }\r\n        const clientEncryption = this.session.config.getEncryptionAlgorithm(this.exchangeContext.clientEncryption);\r\n        const serverEncryption = this.session.config.getEncryptionAlgorithm(this.exchangeContext.serverEncryption);\r\n        const serverHmac = this.session.config.getHmacAlgorithm(this.exchangeContext.serverHmac);\r\n        const clientHmac = this.session.config.getHmacAlgorithm(this.exchangeContext.clientHmac);\r\n        const keyExchange = kexAlg.createKeyExchange();\r\n        const clientExchangeValue = message.e || buffer_1.Buffer.alloc(0);\r\n        const serverExchangeValue = await keyExchange.startKeyExchange();\r\n        const sharedSecret = await keyExchange.decryptKeyExchange(clientExchangeValue);\r\n        const hostKeyAndCerts = await privateKey.getPublicKeyBytes(publicKeyAlg.name);\r\n        if (!hostKeyAndCerts) {\r\n            throw new errors_1.SshConnectionError('Public key not set.', transportMessages_1.SshDisconnectReason.keyExchangeFailed);\r\n        }\r\n        const exchangeHash = await this.computeExchangeHash(keyExchange, hostKeyAndCerts, clientExchangeValue, serverExchangeValue, sharedSecret);\r\n        if (!this.session.sessionId) {\r\n            this.session.sessionId = exchangeHash;\r\n        }\r\n        const [clientCipherIV, serverCipherIV, clientCipherKey, serverCipherKey, clientHmacKey, serverHmacKey,] = await this.computeKeys(keyExchange, sharedSecret, exchangeHash, clientEncryption, serverEncryption, clientHmac, serverHmac);\r\n        const cipher = (_b = (await (serverEncryption === null || serverEncryption === void 0 ? void 0 : serverEncryption.createCipher(true, serverCipherKey, serverCipherIV)))) !== null && _b !== void 0 ? _b : null;\r\n        const decipher = (_c = (await (clientEncryption === null || clientEncryption === void 0 ? void 0 : clientEncryption.createCipher(false, clientCipherKey, clientCipherIV)))) !== null && _c !== void 0 ? _c : null;\r\n        const signer = (_d = (await (serverHmac === null || serverHmac === void 0 ? void 0 : serverHmac.createSigner(serverHmacKey)))) !== null && _d !== void 0 ? _d : null;\r\n        const verifier = (_e = (await (clientHmac === null || clientHmac === void 0 ? void 0 : clientHmac.createVerifier(clientHmacKey)))) !== null && _e !== void 0 ? _e : null;\r\n        const algorithms = new sshSessionAlgorithms_1.SshSessionAlgorithms();\r\n        algorithms.publicKeyAlgorithmName = this.exchangeContext.publicKey;\r\n        algorithms.cipher = cipher;\r\n        algorithms.decipher = decipher;\r\n        algorithms.signer = signer;\r\n        algorithms.verifier = verifier;\r\n        algorithms.messageSigner = (cipher === null || cipher === void 0 ? void 0 : cipher.authenticatedEncryption)\r\n            ? cipher\r\n            : signer;\r\n        algorithms.messageVerifier = (decipher === null || decipher === void 0 ? void 0 : decipher.authenticatedEncryption)\r\n            ? decipher\r\n            : verifier;\r\n        algorithms.compressor = this.session.config.getCompressionAlgorithm(this.exchangeContext.serverCompression);\r\n        algorithms.decompressor = this.session.config.getCompressionAlgorithm(this.exchangeContext.clientCompression);\r\n        this.exchangeContext.newAlgorithms = algorithms;\r\n        // Wipe the keys from memory after they are stored in native key objects.\r\n        if (clientCipherIV)\r\n            clientCipherIV.fill(0);\r\n        if (clientCipherKey)\r\n            clientCipherKey.fill(0);\r\n        if (clientHmacKey)\r\n            clientHmacKey.fill(0);\r\n        if (serverCipherIV)\r\n            serverCipherIV.fill(0);\r\n        if (serverCipherKey)\r\n            serverCipherKey.fill(0);\r\n        if (serverHmacKey)\r\n            serverHmacKey.fill(0);\r\n        const exchangeSigner = publicKeyAlg.createSigner(privateKey);\r\n        let signature = await exchangeSigner.sign(exchangeHash);\r\n        signature = publicKeyAlg.createSignatureData(signature);\r\n        const reply = new kexMessages_1.KeyExchangeDhReplyMessage();\r\n        reply.hostKey = hostKeyAndCerts;\r\n        reply.f = serverExchangeValue;\r\n        reply.signature = signature;\r\n        await this.session.sendMessage(reply, cancellation);\r\n        await this.session.sendMessage(new kexMessages_1.NewKeysMessage(), cancellation);\r\n    }\r\n    async handleDhReplyMessage(message, cancellation) {\r\n        var _a, _b, _c, _d;\r\n        if (!this.isClientSession) {\r\n            return;\r\n        }\r\n        if (!this.exchangeContext) {\r\n            throw new errors_1.SshConnectionError('Key exchange was not started.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        const config = this.session.config;\r\n        const keyExchange = this.exchangeContext.exchange;\r\n        const publicKeyAlgorithmName = this.exchangeContext.publicKey;\r\n        const publicKeyAlg = config.getPublicKeyAlgorithm(publicKeyAlgorithmName);\r\n        const clientEncryption = config.getEncryptionAlgorithm(this.exchangeContext.clientEncryption);\r\n        const serverEncryption = config.getEncryptionAlgorithm(this.exchangeContext.serverEncryption);\r\n        const serverHmac = config.getHmacAlgorithm(this.exchangeContext.serverHmac);\r\n        const clientHmac = config.getHmacAlgorithm(this.exchangeContext.clientHmac);\r\n        const clientExchangeValue = this.exchangeContext.exchangeValue;\r\n        const serverExchangeValue = message.f;\r\n        if (!keyExchange || !clientExchangeValue) {\r\n            throw new errors_1.SshConnectionError('Failed to initialize crypto after key exchange.', transportMessages_1.SshDisconnectReason.keyExchangeFailed);\r\n        }\r\n        // Load the server's public key bytes into a key-pair instance.\r\n        this.hostKey = publicKeyAlg.createKeyPair();\r\n        await this.hostKey.setPublicKeyBytes(message.hostKey);\r\n        const sharedSecret = await keyExchange.decryptKeyExchange(serverExchangeValue);\r\n        const hostKeyAndCerts = message.hostKey;\r\n        const exchangeHash = await this.computeExchangeHash(keyExchange, hostKeyAndCerts, clientExchangeValue, serverExchangeValue, sharedSecret);\r\n        const signature = publicKeyAlg.readSignatureData(message.signature);\r\n        const exchangeVerifier = publicKeyAlg.createVerifier(this.hostKey);\r\n        let verified;\r\n        try {\r\n            verified = await exchangeVerifier.verify(exchangeHash, signature);\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.serverAuthenticationFailed, `Server public key verification error: ${e.message}`, e);\r\n            throw new errors_1.SshConnectionError(`Server public key verification failed: ${e.message}`, transportMessages_1.SshDisconnectReason.hostKeyNotVerifiable);\r\n        }\r\n        if (verified) {\r\n            this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.sessionAuthenticated, 'Server public key verification succeeded.');\r\n        }\r\n        else {\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.serverAuthenticationFailed, 'Server public key verification failed.');\r\n            throw new errors_1.SshConnectionError('Server public key verification failed.', transportMessages_1.SshDisconnectReason.hostKeyNotVerifiable);\r\n        }\r\n        if (this.session.sessionId == null) {\r\n            this.session.sessionId = exchangeHash;\r\n        }\r\n        const [clientCipherIV, serverCipherIV, clientCipherKey, serverCipherKey, clientHmacKey, serverHmacKey,] = await this.computeKeys(keyExchange, sharedSecret, exchangeHash, clientEncryption, serverEncryption, clientHmac, serverHmac);\r\n        const cipher = (_a = (await (clientEncryption === null || clientEncryption === void 0 ? void 0 : clientEncryption.createCipher(true, clientCipherKey, clientCipherIV)))) !== null && _a !== void 0 ? _a : null;\r\n        const decipher = (_b = (await (serverEncryption === null || serverEncryption === void 0 ? void 0 : serverEncryption.createCipher(false, serverCipherKey, serverCipherIV)))) !== null && _b !== void 0 ? _b : null;\r\n        const signer = (_c = (await (clientHmac === null || clientHmac === void 0 ? void 0 : clientHmac.createSigner(clientHmacKey)))) !== null && _c !== void 0 ? _c : null;\r\n        const verifier = (_d = (await (serverHmac === null || serverHmac === void 0 ? void 0 : serverHmac.createVerifier(serverHmacKey)))) !== null && _d !== void 0 ? _d : null;\r\n        const algorithms = new sshSessionAlgorithms_1.SshSessionAlgorithms();\r\n        algorithms.publicKeyAlgorithmName = publicKeyAlgorithmName;\r\n        algorithms.cipher = cipher;\r\n        algorithms.decipher = decipher;\r\n        algorithms.signer = signer;\r\n        algorithms.verifier = verifier;\r\n        algorithms.messageSigner = (cipher === null || cipher === void 0 ? void 0 : cipher.authenticatedEncryption)\r\n            ? cipher\r\n            : signer;\r\n        algorithms.messageVerifier = (decipher === null || decipher === void 0 ? void 0 : decipher.authenticatedEncryption)\r\n            ? decipher\r\n            : verifier;\r\n        algorithms.compressor = config.getCompressionAlgorithm(this.exchangeContext.clientCompression);\r\n        algorithms.decompressor = config.getCompressionAlgorithm(this.exchangeContext.serverCompression);\r\n        this.exchangeContext.newAlgorithms = algorithms;\r\n        // Wipe the keys from memory after they are stored in native key objects.\r\n        if (clientCipherIV)\r\n            clientCipherIV.fill(0);\r\n        if (clientCipherKey)\r\n            clientCipherKey.fill(0);\r\n        if (clientHmacKey)\r\n            clientHmacKey.fill(0);\r\n        if (serverCipherIV)\r\n            serverCipherIV.fill(0);\r\n        if (serverCipherKey)\r\n            serverCipherKey.fill(0);\r\n        if (serverHmacKey)\r\n            serverHmacKey.fill(0);\r\n        await this.session.sendMessage(new kexMessages_1.NewKeysMessage(), cancellation);\r\n    }\r\n    chooseAlgorithm(label, localAlgorithms, remoteAlgorithms) {\r\n        // Ensure consistent results if the client and server list the same algorithms\r\n        // in different order of preference.\r\n        let serverAlgorithms;\r\n        let clientAlgorithms;\r\n        if (this.isClientSession) {\r\n            serverAlgorithms = remoteAlgorithms || [];\r\n            clientAlgorithms = localAlgorithms;\r\n        }\r\n        else {\r\n            serverAlgorithms = localAlgorithms;\r\n            clientAlgorithms = remoteAlgorithms || [];\r\n        }\r\n        const negotiationDetail = `${label} negotiation: ` +\r\n            `Server (${serverAlgorithms.join(', ')}) ` +\r\n            `Client (${clientAlgorithms.join(', ')})`;\r\n        for (const client of clientAlgorithms) {\r\n            for (const server of serverAlgorithms) {\r\n                if (server === client) {\r\n                    const result = server;\r\n                    this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.algorithmNegotiation, `${negotiationDetail} => ${result}`);\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        throw new Error(`Failed ${negotiationDetail}`);\r\n    }\r\n    async computeExchangeHash(kex, hostKeyAndCerts, clientExchangeValue, serverExchangeValue, sharedSecret) {\r\n        if (!this.session.remoteVersion) {\r\n            throw new Error('Key exchange not completed.');\r\n        }\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(2048));\r\n        if (this.isClientSession) {\r\n            writer.writeString(sshSession_1.SshSession.localVersion.toString(), 'ascii');\r\n            writer.writeString(this.session.remoteVersion.toString(), 'ascii');\r\n        }\r\n        else {\r\n            writer.writeString(this.session.remoteVersion.toString(), 'ascii');\r\n            writer.writeString(sshSession_1.SshSession.localVersion.toString(), 'ascii');\r\n        }\r\n        writer.writeBinary(this.exchangeContext.clientKexInitPayload);\r\n        writer.writeBinary(this.exchangeContext.serverKexInitPayload);\r\n        writer.writeBinary(hostKeyAndCerts);\r\n        // These values are formatted as bigints (with leading zeroes if the first bit is high)\r\n        // even though they might not really be bigints, depending on the key-exchange algorithm.\r\n        writer.writeBigInt(bigInt_1.BigInt.fromBytes(clientExchangeValue, { unsigned: true }));\r\n        writer.writeBigInt(bigInt_1.BigInt.fromBytes(serverExchangeValue, { unsigned: true }));\r\n        writer.writeBigInt(bigInt_1.BigInt.fromBytes(sharedSecret, { unsigned: true }));\r\n        const hash = await kex.sign(writer.toBuffer());\r\n        return hash;\r\n    }\r\n    async computeKeys(keyExchange, sharedSecret, exchangeHash, clientEncryption, serverEncryption, clientHmac, serverHmac) {\r\n        var _a, _b;\r\n        const writer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(4 /* mpint header */ +\r\n            sharedSecret.length +\r\n            exchangeHash.length +\r\n            Math.max(1 /* letter */ + ((_b = (_a = this.session.sessionId) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0), keyExchange.digestLength)));\r\n        writer.writeBinary(sharedSecret);\r\n        writer.write(exchangeHash);\r\n        const offset = writer.position;\r\n        const clientCipherIV = clientEncryption &&\r\n            (await this.computeKey(keyExchange, writer, offset, clientEncryption.blockLength, 'A'));\r\n        const serverCipherIV = serverEncryption &&\r\n            (await this.computeKey(keyExchange, writer, offset, serverEncryption.blockLength, 'B'));\r\n        const clientCipherKey = clientEncryption &&\r\n            (await this.computeKey(keyExchange, writer, offset, clientEncryption.keyLength, 'C'));\r\n        const serverCipherKey = serverEncryption &&\r\n            (await this.computeKey(keyExchange, writer, offset, serverEncryption.keyLength, 'D'));\r\n        const clientHmacKey = clientHmac &&\r\n            (await this.computeKey(keyExchange, writer, offset, clientHmac.keyLength, 'E'));\r\n        const serverHmacKey = serverHmac &&\r\n            (await this.computeKey(keyExchange, writer, offset, serverHmac.keyLength, 'F'));\r\n        return [\r\n            clientCipherIV,\r\n            serverCipherIV,\r\n            clientCipherKey,\r\n            serverCipherKey,\r\n            clientHmacKey,\r\n            serverHmacKey,\r\n        ];\r\n    }\r\n    async computeKey(keyExchange, writer, writerOffset, blockSize, letter) {\r\n        const keyBuffer = buffer_1.Buffer.alloc(blockSize);\r\n        let keyBufferIndex = 0;\r\n        let currentHashLength = 0;\r\n        let currentHash = null;\r\n        if (!this.session.sessionId) {\r\n            throw new Error('Session ID not set.');\r\n        }\r\n        while (keyBufferIndex < blockSize) {\r\n            writer.position = writerOffset;\r\n            if (!currentHash) {\r\n                writer.writeByte(letter.charCodeAt(0));\r\n                writer.write(this.session.sessionId);\r\n            }\r\n            else {\r\n                writer.write(currentHash);\r\n            }\r\n            currentHash = await keyExchange.sign(writer.toBuffer());\r\n            currentHashLength = Math.min(currentHash.length, blockSize - keyBufferIndex);\r\n            currentHash.copy(keyBuffer, keyBufferIndex);\r\n            keyBufferIndex += currentHashLength;\r\n        }\r\n        if (currentHash) {\r\n            currentHash.fill(0);\r\n        }\r\n        return keyBuffer;\r\n    }\r\n};\r\nKeyExchangeService.serviceName = 'ssh-keyexchange';\r\nKeyExchangeService = KeyExchangeService_1 = __decorate([\r\n    (0, serviceActivation_1.serviceActivation)({ serviceRequest: KeyExchangeService_1.serviceName })\r\n], KeyExchangeService);\r\nexports.KeyExchangeService = KeyExchangeService;\r\n//# sourceMappingURL=keyExchangeService.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.findService = exports.serviceActivation = void 0;\r\n/**\r\n * Decorator applied to suclasses of `SshService` that declares how the service gets activated.\r\n */\r\nfunction serviceActivation(activation) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    return (constructor) => {\r\n        if (!constructor.activations) {\r\n            constructor.activations = [];\r\n        }\r\n        constructor.activations.push(activation);\r\n    };\r\n}\r\nexports.serviceActivation = serviceActivation;\r\n/**\r\n * Locates a service type in configuration, using a predicate to check service activation\r\n * attributes.\r\n *\r\n * @param serviceConfigs Service configuration dictionary from `SshSessionConfiguration.services`.\r\n * @param predicate Function to test whether a service activation attribute matches some condition.\r\n * @returns Service type (constructor), or null if no service type satisfies the predicate.\r\n */\r\nfunction findService(serviceConfigs, predicate) {\r\n    for (const serviceType of serviceConfigs.keys()) {\r\n        const activations = serviceType.activations;\r\n        let foundActivation = false;\r\n        for (const activation of activations) {\r\n            foundActivation = true;\r\n            if (predicate(activation)) {\r\n                return serviceType;\r\n            }\r\n        }\r\n        if (!foundActivation) {\r\n            throw new Error(`SSH service type '${serviceType.name}' must have one or more ` +\r\n                '\\'serviceActivation\\' decorators.');\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findService = findService;\r\n//# sourceMappingURL=serviceActivation.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshService = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst sshSession_1 = require(\"../sshSession\");\r\n/**\r\n * Base class for SSH session services that handle incoming requests.\r\n *\r\n * Services can be on either the server side or the client side, because either side may\r\n * send requests to the other's services.\r\n *\r\n * Service subclasses must have one or more `serviceActivation` decorators applied to them to\r\n * declare the type(s) of requests that cause the service to be activated. Only one instance\r\n * of each service type gets activated for a session, even if there are multiple activation\r\n * rules. After activation, a service remains active for the duration of the session,\r\n * handling any additional requests, until it is disposed when the session is disposed.\r\n *\r\n * To enable activation of a service, add the service type to\r\n * `SshSessionConfiguration.services`. When a service is activated, the session raises a\r\n * `SshSession.serviceActivated` event.\r\n */\r\nclass SshService {\r\n    constructor(session) {\r\n        this.session = session;\r\n        this.disposed = false;\r\n        this.disposedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onDisposed = this.disposedEmitter.event;\r\n        if (!(session instanceof sshSession_1.SshSession)) {\r\n            // Other packages provide services that inherit from SshService. When they do, they\r\n            // reference the SshSession type from a specific version of this package. But at runtime,\r\n            // the service may be activated with a session from a different version of this package,\r\n            // if there are multiple instances due to version mismatches. Multiple instances of SSH\r\n            // types causes problems, so it's best to detect the error at initialization time.\r\n            throw new TypeError('Session is not an instance of SshSession. ' +\r\n                '(This may be due to a version mismatch between SSH packages.)');\r\n        }\r\n    }\r\n    get trace() {\r\n        return this.session.trace;\r\n    }\r\n    dispose() {\r\n        if (this.disposed)\r\n            return;\r\n        this.disposed = true;\r\n        this.disposedEmitter.fire();\r\n    }\r\n    /**\r\n     * Services that are activated via session requests must override this method to handle\r\n     * incoming session requests.\r\n     *\r\n     * Implementations must set `SshRequestEventArgs.isAuthorized` or\r\n     * `SshRequestEventArgs.responsePromise` to indicate whether the request was allowed.\r\n     */\r\n    async onSessionRequest(request, cancellation) {\r\n        this.session.raiseSessionRequest(request);\r\n    }\r\n    /**\r\n     * Services that are activated via channel types must override this method to handle\r\n     * incoming requests to open a channel.\r\n     *\r\n     * Implementations may set `SshChannelOpeningEventArgs.failureReason` or\r\n     * `SshChannelOpeningEventArgs.openingPromise` to block opening of the channel.\r\n     * The default behavior allows the channel to open.\r\n     *\r\n     * Requests on the opened channel will not be directed to `onChannelRequest`\r\n     * unless the service also declares activation on specific channel request(s). Otherwise,\r\n     * an implementation of this method may add any event-handlers to the\r\n     * `SshChannelOpeningEventArgs.channel` including a request event handler.\r\n     */\r\n    async onChannelOpening(request, cancellation) {\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        return this.session.handleChannelOpening(request, cancellation, false);\r\n    }\r\n    /**\r\n     * Services that are activated via channel requests must override this method to handle\r\n     * incoming channel requests.\r\n     *\r\n     * Implementations must set `SshRequestEventArgs.isAuthorized` or\r\n     * `SshRequestEventArgs.responsePromise` to indicate whether the request was allowed.\r\n     */\r\n    async onChannelRequest(channel, request, cancellation) { }\r\n    /**\r\n     * Sends any message.\r\n     */\r\n    async sendMessage(message, cancellation) {\r\n        await this.session.sendMessage(message, cancellation);\r\n    }\r\n}\r\nexports.SshService = SshService;\r\n//# sourceMappingURL=sshService.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshChannel = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst serviceActivation_1 = require(\"./services/serviceActivation\");\r\nconst connectionMessages_1 = require(\"./messages/connectionMessages\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst channelMetrics_1 = require(\"./metrics/channelMetrics\");\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nconst errors_1 = require(\"./errors\");\r\nconst sshRequestEventArgs_1 = require(\"./events/sshRequestEventArgs\");\r\nconst sshChannelClosedEventArgs_1 = require(\"./events/sshChannelClosedEventArgs\");\r\nconst cancellation_1 = require(\"./util/cancellation\");\r\nconst semaphore_1 = require(\"./util/semaphore\");\r\nconst trace_1 = require(\"./trace\");\r\nconst pipeExtensions_1 = require(\"./pipeExtensions\");\r\n/**\r\n * Represents a channel on an SSH session. A session may include multiple channels, which\r\n * are multiplexed over the connection. Each channel within a session has a unique integer ID.\r\n */\r\nclass SshChannel {\r\n    /* @internal */\r\n    constructor(connectionService, channelType, channelId, remoteChannelId, remoteMaxWindowSize, remoteMaxPacketSize, openMessage, openConfirmationMessage) {\r\n        this.connectionService = connectionService;\r\n        this.channelType = channelType;\r\n        this.channelId = channelId;\r\n        this.remoteChannelId = remoteChannelId;\r\n        this.openMessage = openMessage;\r\n        this.openConfirmationMessage = openConfirmationMessage;\r\n        this.remoteClosed = false;\r\n        this.localClosed = false;\r\n        this.sentEof = false;\r\n        this.disposed = false;\r\n        this.openSendingWindowCompletionSource = null;\r\n        this.requestCompletionSource = null;\r\n        this.sendSemaphore = new semaphore_1.Semaphore(0);\r\n        /**\r\n         * Gets an object that reports measurements about the channel.\r\n         */\r\n        this.metrics = new channelMetrics_1.ChannelMetrics();\r\n        this.dataReceivedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.extendedDataReceivedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event raised when a data message is received on the channel.\r\n         *\r\n         * Users of a channel MUST add a `onDataReceived` event handler immediately after a\r\n         * channel is opened/accepted, or else all session communication will be blocked.\r\n         * (The `SshStream` class does this automatically.)\r\n         *\r\n         * The event handler must call `adjustWindow` when the data has been consumed,\r\n         * to notify the remote side that it may send more data.\r\n         */\r\n        this.onDataReceived = this.dataReceivedEmitter.event;\r\n        this.onExtendedDataReceived = this.extendedDataReceivedEmitter.event;\r\n        this.eofEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event raised when an EOF message is received on the channel.\r\n         */\r\n        this.onEof = this.eofEmitter.event;\r\n        this.closedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onClosed = this.closedEmitter.event;\r\n        this.requestEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onRequest = this.requestEmitter.event;\r\n        /**\r\n         * Gets or sets a value indicating whether `maxWindowSize is locked, so that it cannot be\r\n         * changed after the channel is opened.\r\n         */\r\n        /* @internal */\r\n        this.isMaxWindowSizeLocked = false;\r\n        this.remoteWindowSize = remoteMaxWindowSize;\r\n        this.maxWindowSizeValue = SshChannel.defaultMaxWindowSize;\r\n        this.windowSize = this.maxWindowSizeValue;\r\n        this.maxPacketSize = Math.min(remoteMaxPacketSize, SshChannel.defaultMaxPacketSize);\r\n    }\r\n    get session() {\r\n        return this.connectionService.session;\r\n    }\r\n    get isClosed() {\r\n        return this.localClosed || this.remoteClosed;\r\n    }\r\n    /**\r\n     * Gets the maximum window size for received data. The other side will not send more\r\n     * data than the window size until it receives an acknowledgement that some of the data was\r\n     * received and processed by this side.\r\n     */\r\n    get maxWindowSize() {\r\n        return this.maxWindowSizeValue;\r\n    }\r\n    /**\r\n     * Sets the maximum window size for received data. The other side will not send more\r\n     * data than the window size until it receives an acknowledgement that some of the data was\r\n     * received and processed by this side.\r\n     *\r\n     * The default value is `defaultMaxWindowSize`. The value may be configured for a channel\r\n     * opened by this side by setting `ChannelOpenMessage.maxWindowSize` in the message object\r\n     * passed to `SshSession.openChannel()`, or for a channel opened by the other side by\r\n     * assigning to this property while handling the `SshSession.onChannelOpening` event.\r\n     * Changing the maximum window size at any other time is not valid because the other\r\n     * side would not be aware of the change.\r\n     */\r\n    set maxWindowSize(value) {\r\n        if (this.isMaxWindowSizeLocked) {\r\n            throw new Error('Cannot change the max window size after opening the channel.');\r\n        }\r\n        if (value < this.maxPacketSize) {\r\n            throw new Error('Maximum window size cannot be less than maximum packet size.');\r\n        }\r\n        this.maxWindowSizeValue = value;\r\n    }\r\n    /**\r\n     * Sends a channel request and waits for a response.\r\n     *\r\n     * Note if `wantReply` is `false`, this method returns `true` immediately after sending the\r\n     * request, without waiting for a reply.\r\n     *\r\n     * @returns The authorization status of the response; if false, the other side denied the\r\n     * request.\r\n     * @throws `ObjectDisposedError` if the channel was closed before sending the request.\r\n     * @throws `SshChannelError` if the channel was closed while waiting for a reply to the request.\r\n     */\r\n    async request(request, cancellation) {\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        request.recipientChannel = this.remoteChannelId;\r\n        if (!request.wantReply) {\r\n            // If a reply is not requested, there's no need to set up a completion source.\r\n            await this.session.sendMessage(request, cancellation);\r\n            return true;\r\n        }\r\n        // TODO: enable sending multiple requests in TS\r\n        // see https://dev.azure.com/devdiv/DevDiv/_git/SSH/commit/0b84a48811e2f015107c73bf4584b6c3b676a6de\r\n        if (this.requestCompletionSource != null) {\r\n            throw new Error('Another request is already pending.');\r\n        }\r\n        // Capture as a local variable because the member may change.\r\n        const requestCompletionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        this.requestCompletionSource = requestCompletionSource;\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellation.onCancellationRequested(() => {\r\n                requestCompletionSource.reject(new cancellation_1.CancellationError());\r\n            });\r\n        }\r\n        await this.session.sendMessage(request, cancellation);\r\n        return await requestCompletionSource.promise;\r\n    }\r\n    async send(data, cancellation) {\r\n        return this.sendCommon(data, undefined, cancellation);\r\n    }\r\n    async sendExtendedData(dataTypeCode, data, cancellation) {\r\n        return this.sendCommon(data, dataTypeCode, cancellation);\r\n    }\r\n    async sendCommon(data, extendedDataType, cancellation) {\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if (data.length === 0) {\r\n            await this.sendEof();\r\n            return;\r\n        }\r\n        else if (this.sentEof) {\r\n            throw new Error('Cannot send more data after EOF.');\r\n        }\r\n        // Prevent out-of-order message chunks even if the caller does not await.\r\n        // Also don't send until the channel is fully opened.\r\n        await this.sendSemaphore.wait(cancellation);\r\n        try {\r\n            let offset = 0;\r\n            let count = data.length;\r\n            while (count > 0) {\r\n                let packetSize = Math.min(Math.min(this.remoteWindowSize, this.maxPacketSize), count);\r\n                while (packetSize === 0) {\r\n                    if (!this.openSendingWindowCompletionSource) {\r\n                        this.openSendingWindowCompletionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n                    }\r\n                    this.session.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.channelWaitForWindowAdjust, `${this} send window is full. Waiting for window adjustment before sending.`);\r\n                    await (0, cancellation_1.withCancellation)(this.openSendingWindowCompletionSource.promise, cancellation);\r\n                    this.openSendingWindowCompletionSource = null;\r\n                    packetSize = Math.min(Math.min(this.remoteWindowSize, this.maxPacketSize), count);\r\n                }\r\n                let msg;\r\n                if (extendedDataType !== undefined) {\r\n                    msg = new connectionMessages_1.ChannelExtendedDataMessage();\r\n                    msg.dataTypeCode = extendedDataType;\r\n                }\r\n                else {\r\n                    msg = new connectionMessages_1.ChannelDataMessage();\r\n                }\r\n                msg.recipientChannel = this.remoteChannelId;\r\n                // Unfortunately the data must be copied to a new buffer at this point\r\n                // to ensure it is still available to be re-sent later in case of disconnect.\r\n                msg.data = Buffer.from(data.slice(offset, offset + packetSize));\r\n                await this.session.sendMessage(msg, cancellation);\r\n                this.remoteWindowSize -= packetSize;\r\n                count -= packetSize;\r\n                offset += packetSize;\r\n                this.metrics.addBytesSent(packetSize);\r\n            }\r\n        }\r\n        finally {\r\n            this.sendSemaphore.tryRelease();\r\n        }\r\n    }\r\n    /* @internal */\r\n    enableSending() {\r\n        this.sendSemaphore.tryRelease();\r\n    }\r\n    async sendEof(cancellation) {\r\n        if (this.sentEof) {\r\n            return;\r\n        }\r\n        await this.sendSemaphore.wait(cancellation);\r\n        try {\r\n            this.sentEof = true;\r\n            const msg = new connectionMessages_1.ChannelEofMessage();\r\n            msg.recipientChannel = this.remoteChannelId;\r\n            await this.session.sendMessage(msg, cancellation);\r\n        }\r\n        finally {\r\n            this.sendSemaphore.tryRelease();\r\n        }\r\n    }\r\n    /* @internal */\r\n    async handleRequest(request, cancellation) {\r\n        if (!request.requestType) {\r\n            throw new errors_1.SshConnectionError('Channel request type not specified.', transportMessages_1.SshDisconnectReason.protocolError);\r\n        }\r\n        if (request.requestType === connectionMessages_1.ChannelRequestType.exitStatus) {\r\n            const signal = new connectionMessages_1.ChannelSignalMessage();\r\n            request.convertTo(signal);\r\n            this.exitStatus = signal.exitStatus;\r\n            return true;\r\n        }\r\n        else if (request.requestType === connectionMessages_1.ChannelRequestType.exitSignal) {\r\n            const signal = new connectionMessages_1.ChannelSignalMessage();\r\n            request.convertTo(signal);\r\n            this.exitSignal = signal.exitSignal;\r\n            this.exitErrorMessage = signal.errorMessage;\r\n            return true;\r\n        }\r\n        else if (request.requestType === connectionMessages_1.ChannelRequestType.signal) {\r\n            const signal = new connectionMessages_1.ChannelSignalMessage();\r\n            request.convertTo(signal);\r\n        }\r\n        const args = new sshRequestEventArgs_1.SshRequestEventArgs(request.requestType, request, this.session.principal, cancellation);\r\n        const serviceType = (0, serviceActivation_1.findService)(this.session.config.services, (a) => (!a.channelType || a.channelType === this.channelType) &&\r\n            a.channelRequest === request.requestType);\r\n        await this.sendSemaphore.wait(cancellation);\r\n        try {\r\n            let response = null;\r\n            if (serviceType) {\r\n                // A service was configured for activation via this session request type.\r\n                const service = this.session.activateService(serviceType);\r\n                // `onChannelRequest` should really be 'protected internal'.\r\n                await service.onChannelRequest(this, args, cancellation);\r\n            }\r\n            else {\r\n                this.requestEmitter.fire(args);\r\n            }\r\n            // TODO: do not block requests in TS (similar to CS)\r\n            // see https://dev.azure.com/devdiv/DevDiv/_git/SSH/commit/0b84a48811e2f015107c73bf4584b6c3b676a6de\r\n            if (args.responsePromise) {\r\n                response = await args.responsePromise;\r\n                args.isAuthorized = response instanceof connectionMessages_1.ChannelSuccessMessage;\r\n            }\r\n            if (request.wantReply) {\r\n                if (args.isAuthorized) {\r\n                    response = response !== null && response !== void 0 ? response : new connectionMessages_1.ChannelSuccessMessage();\r\n                    response.recipientChannel = this.remoteChannelId;\r\n                }\r\n                else {\r\n                    response = response !== null && response !== void 0 ? response : new connectionMessages_1.ChannelFailureMessage();\r\n                    response.recipientChannel = this.remoteChannelId;\r\n                }\r\n                await this.session.sendMessage(response, cancellation);\r\n            }\r\n        }\r\n        finally {\r\n            this.sendSemaphore.tryRelease();\r\n        }\r\n        return args.isAuthorized || false;\r\n    }\r\n    /* @internal */\r\n    handleResponse(result) {\r\n        if (this.requestCompletionSource) {\r\n            this.requestCompletionSource.resolve(result);\r\n            this.requestCompletionSource = null;\r\n        }\r\n    }\r\n    /* @internal */\r\n    handleDataReceived(data) {\r\n        this.metrics.addBytesReceived(data.length);\r\n        // DataReceived handler is to adjust the window when it's done with the data.\r\n        this.dataReceivedEmitter.fire(data);\r\n    }\r\n    handleExtendedDataReceived(data) {\r\n        this.metrics.addBytesReceived(data.data.length);\r\n        this.extendedDataReceivedEmitter.fire(data);\r\n    }\r\n    /**\r\n     * Adjusts the local receiving window size by the specified amount, notifying\r\n     * the remote side that it is free to send more data.\r\n     *\r\n     * This method MUST be called either immediately or eventually by the\r\n     * `onDataReceived` event handler as incoming data is processed.\r\n     */\r\n    adjustWindow(messageLength) {\r\n        if (this.disposed)\r\n            return;\r\n        this.windowSize -= messageLength;\r\n        if (this.windowSize <= this.maxWindowSizeValue / 2) {\r\n            const windowAdjustMessage = new connectionMessages_1.ChannelWindowAdjustMessage();\r\n            windowAdjustMessage.recipientChannel = this.remoteChannelId;\r\n            windowAdjustMessage.bytesToAdd = this.maxWindowSizeValue - this.windowSize;\r\n            this.windowSize = this.maxWindowSizeValue;\r\n            this.session.sendMessage(windowAdjustMessage).catch((e) => {\r\n                this.session.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.channelWindowAdjustFailed, `Error sending window adjust message: ${e.message}`, e);\r\n            });\r\n        }\r\n    }\r\n    /* @internal */\r\n    adjustRemoteWindow(bytesToAdd) {\r\n        this.remoteWindowSize += bytesToAdd;\r\n        if (this.openSendingWindowCompletionSource) {\r\n            this.openSendingWindowCompletionSource.resolve(undefined);\r\n        }\r\n    }\r\n    /* @internal */\r\n    handleEof() {\r\n        this.session.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.channelEofReceived, `${this} EOF received.`);\r\n        this.eofEmitter.fire();\r\n    }\r\n    close(exitStatusOrSignal, errorMessage, cancellation) {\r\n        if (exitStatusOrSignal instanceof Error) {\r\n            const error = exitStatusOrSignal;\r\n            if (!this.localClosed) {\r\n                this.localClosed = true;\r\n                this.session.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.channelClosed, `${this} Closed: ${error.message}`);\r\n                this.closedEmitter.fire(new sshChannelClosedEventArgs_1.SshChannelClosedEventArgs(error));\r\n            }\r\n            this.disposeInternal();\r\n            return;\r\n        }\r\n        if (typeof exitStatusOrSignal === 'number') {\r\n            return this.closeWithStatus(exitStatusOrSignal, errorMessage);\r\n        }\r\n        else if (typeof exitStatusOrSignal === 'string') {\r\n            return this.closeWithSignal(exitStatusOrSignal, errorMessage, cancellation);\r\n        }\r\n        else {\r\n            return this.closeDefault(exitStatusOrSignal);\r\n        }\r\n    }\r\n    async closeDefault(cancellation) {\r\n        var _a;\r\n        if (!this.remoteClosed && !this.localClosed) {\r\n            this.remoteClosed = true;\r\n            await this.sendSemaphore.wait(cancellation);\r\n            try {\r\n                const closeMessage = new connectionMessages_1.ChannelCloseMessage();\r\n                closeMessage.recipientChannel = this.remoteChannelId;\r\n                await this.session.sendMessage(closeMessage);\r\n            }\r\n            catch (e) {\r\n                // The session was already closed.\r\n            }\r\n            finally {\r\n                this.sendSemaphore.tryRelease();\r\n            }\r\n        }\r\n        if (!this.localClosed) {\r\n            this.localClosed = true;\r\n            const closedMessage = this.raiseClosedEvent();\r\n            (_a = this.requestCompletionSource) === null || _a === void 0 ? void 0 : _a.reject(new errors_1.SshChannelError(closedMessage));\r\n        }\r\n        this.disposeInternal();\r\n    }\r\n    async closeWithStatus(exitStatus, cancellation) {\r\n        if (!this.remoteClosed && !this.localClosed) {\r\n            this.exitStatus = exitStatus;\r\n            const signalMessage = new connectionMessages_1.ChannelSignalMessage();\r\n            signalMessage.recipientChannel = this.remoteChannelId;\r\n            signalMessage.exitStatus = exitStatus;\r\n            await this.session.sendMessage(signalMessage);\r\n        }\r\n        await this.closeDefault(cancellation);\r\n    }\r\n    async closeWithSignal(exitSignal, errorMessage, cancellation) {\r\n        if (!this.remoteClosed && !this.localClosed) {\r\n            this.exitSignal = exitSignal;\r\n            this.exitErrorMessage = errorMessage;\r\n            const signalMessage = new connectionMessages_1.ChannelSignalMessage();\r\n            signalMessage.recipientChannel = this.remoteChannelId;\r\n            signalMessage.exitSignal = exitSignal;\r\n            signalMessage.errorMessage = errorMessage;\r\n            await this.session.sendMessage(signalMessage);\r\n        }\r\n        await this.closeDefault(cancellation);\r\n    }\r\n    /* @internal */\r\n    handleClose() {\r\n        var _a;\r\n        if (!this.localClosed) {\r\n            this.localClosed = true;\r\n            const closedMessage = this.raiseClosedEvent(true);\r\n            (_a = this.requestCompletionSource) === null || _a === void 0 ? void 0 : _a.reject(new errors_1.SshChannelError(closedMessage));\r\n        }\r\n        this.disposeInternal();\r\n    }\r\n    raiseClosedEvent(closedByRemote = false) {\r\n        const metricsMessage = ` (S: ${this.metrics.bytesSent}, R: ${this.metrics.bytesReceived})`;\r\n        const originMessage = closedByRemote ? 'remotely' : 'locally';\r\n        let closedMessage;\r\n        let args;\r\n        if (typeof this.exitStatus !== 'undefined') {\r\n            args = new sshChannelClosedEventArgs_1.SshChannelClosedEventArgs(this.exitStatus);\r\n            closedMessage = `${this} closed ${originMessage}: status=${this.exitStatus}`;\r\n        }\r\n        else if (typeof this.exitSignal !== 'undefined') {\r\n            args = new sshChannelClosedEventArgs_1.SshChannelClosedEventArgs(this.exitSignal, this.exitErrorMessage);\r\n            closedMessage = `${this} closed ${originMessage}: signal=${this.exitSignal} ${this.exitErrorMessage}`;\r\n        }\r\n        else {\r\n            args = new sshChannelClosedEventArgs_1.SshChannelClosedEventArgs();\r\n            closedMessage = `${this} closed ${originMessage}.`;\r\n        }\r\n        this.session.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.channelClosed, closedMessage + metricsMessage);\r\n        this.closedEmitter.fire(args);\r\n        return closedMessage;\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        if (!this.disposed && !this.localClosed) {\r\n            if (!this.remoteClosed) {\r\n                this.remoteClosed = true;\r\n                const closeMessage = new connectionMessages_1.ChannelCloseMessage();\r\n                closeMessage.recipientChannel = this.remoteChannelId;\r\n                this.session.sendMessage(closeMessage).catch((e) => {\r\n                    // The session was already closed, or some other sending error occurred.\r\n                    // The details have already been traced.\r\n                });\r\n            }\r\n            const message = this.session.isClosed ? `${this.session} closed.` : `${this} disposed.`;\r\n            this.session.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.channelClosed, message);\r\n            const args = new sshChannelClosedEventArgs_1.SshChannelClosedEventArgs('SIGABRT', message);\r\n            this.localClosed = true;\r\n            this.closedEmitter.fire(args);\r\n            (_a = this.requestCompletionSource) === null || _a === void 0 ? void 0 : _a.reject(new errors_1.SshChannelError(message));\r\n        }\r\n        this.disposeInternal();\r\n    }\r\n    disposeInternal() {\r\n        var _a;\r\n        if (this.disposed)\r\n            return;\r\n        this.disposed = true;\r\n        (_a = this.requestCompletionSource) === null || _a === void 0 ? void 0 : _a.reject(new errors_1.ObjectDisposedError(this));\r\n        this.connectionService.removeChannel(this);\r\n        this.sendSemaphore.dispose();\r\n    }\r\n    /**\r\n     * Pipes one SSH channel into another, relaying all data between them.\r\n     * @param toChannel Channel to which the current channel will be connected via the pipe.\r\n     * @returns A promise that resolves when the channels are closed.\r\n     */\r\n    pipe(toChannel) {\r\n        return pipeExtensions_1.PipeExtensions.pipeChannel(this, toChannel);\r\n    }\r\n    toString() {\r\n        return `SshChannel(Type: ${this.channelType}, Id: ${this.channelId}, RemoteId: ${this.remoteChannelId})`;\r\n    }\r\n}\r\nexports.SshChannel = SshChannel;\r\nSshChannel.sessionChannelType = 'session';\r\n/**\r\n * Default maximum packet size. Channel data payloads larger than the max packet size will\r\n * be broken into chunks before sending. The actual `maxPacketSize` may be smaller (but\r\n * never larger) than the default if requested by the other side.\r\n */\r\nSshChannel.defaultMaxPacketSize = connectionMessages_1.ChannelOpenMessage.defaultMaxPacketSize;\r\n/**\r\n * Default maximum window size for received data. The other side will not send more data than\r\n * the window size until it receives an acknowledgement that some of the data was received and\r\n * processed by this side. A non-default `maxWindowSize` may be configured at the time of\r\n * opening the channel.\r\n */\r\nSshChannel.defaultMaxWindowSize = connectionMessages_1.ChannelOpenMessage.defaultMaxWindowSize;\r\n//# sourceMappingURL=sshChannel.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshClientSession = void 0;\r\nconst sshSession_1 = require(\"./sshSession\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst sshAuthenticatingEventArgs_1 = require(\"./events/sshAuthenticatingEventArgs\");\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nconst cancellation_1 = require(\"./util/cancellation\");\r\nconst sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nconst authenticationService_1 = require(\"./services/authenticationService\");\r\nconst connectionService_1 = require(\"./services/connectionService\");\r\nconst errors_1 = require(\"./errors\");\r\nconst trace_1 = require(\"./trace\");\r\n/**\r\n * The client side of an SSH session. Extends the base `SshSession` class to\r\n * support client authentication.\r\n */\r\nclass SshClientSession extends sshSession_1.SshSession {\r\n    constructor(config) {\r\n        super(config, true);\r\n        this.serviceRequests = new Map();\r\n        this.clientAuthCompletion = null;\r\n    }\r\n    /**\r\n     * Attempts to authenticate both the server and client.\r\n     *\r\n     * This method must be called only after encrypting the session. It is equivalent\r\n     * to calling both `authenticateServer()` and `authenticateClient()` and waiting on\r\n     * both results.\r\n     *\r\n     * @returns `true` if authentication succeeded, `false` if it failed.\r\n     */\r\n    async authenticate(clientCredentials, cancellation) {\r\n        const serverAuthenticated = await this.authenticateServer(cancellation);\r\n        if (!serverAuthenticated) {\r\n            return false;\r\n        }\r\n        const clientAuthenticated = await this.authenticateClient(clientCredentials, cancellation);\r\n        if (!clientAuthenticated) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Triggers server authentication by invoking the `authenticating` event with\r\n     * the verified server host key.\r\n     *\r\n     * This method must be called only after encrypting the session. It does not wait for any\r\n     * further message exchange with the server, since the server host key would have already\r\n     * been obtained during the key-exchange.\r\n     *\r\n     * @returns `true` if authentication succeeded, `false` if it failed.\r\n     */\r\n    async authenticateServer(cancellation) {\r\n        if (!(this.kexService && this.kexService.hostKey)) {\r\n            throw new Error('Encrypt the session before authenticating.');\r\n        }\r\n        try {\r\n            // Raise an Authenticating event that allows handlers to do verification\r\n            // of the host key and return a principal for the server.\r\n            this.principal = await this.raiseAuthenticatingEvent(new sshAuthenticatingEventArgs_1.SshAuthenticatingEventArgs(sshAuthenticatingEventArgs_1.SshAuthenticationType.serverPublicKey, {\r\n                publicKey: this.kexService.hostKey,\r\n            }, cancellation));\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.authenticationError, `Error while authenticating server: ${e.message}`, e);\r\n            throw e;\r\n        }\r\n        if (!this.principal) {\r\n            await this.close(transportMessages_1.SshDisconnectReason.hostKeyNotVerifiable, 'Server authentication failed.');\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.serverAuthenticationFailed, `${this} server authentication failed.`);\r\n            return false;\r\n        }\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionAuthenticated, `${this} server authenticated.`);\r\n        return true;\r\n    }\r\n    /* @internal */\r\n    authenticateClient(credentials, callbackOrCancellation, cancellation) {\r\n        if (!credentials) {\r\n            throw new TypeError('A credentials object is required.');\r\n        }\r\n        if (typeof callbackOrCancellation === 'function') {\r\n            return this.authenticateClientWithCompletion(credentials, callbackOrCancellation, cancellation);\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => this.authenticateClientWithCompletion(credentials, (err, result) => {\r\n                if (err)\r\n                    reject(err);\r\n                else\r\n                    resolve(result);\r\n            }, callbackOrCancellation));\r\n        }\r\n    }\r\n    async authenticateClientWithCompletion(credentials, callback, cancellation) {\r\n        this.clientAuthCompletion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        this.clientAuthCompletion.promise.then((result) => callback(undefined, result), (err) => callback(err));\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellation.onCancellationRequested((e) => {\r\n                if (this.clientAuthCompletion) {\r\n                    this.clientAuthCompletion.reject(new cancellation_1.CancellationError());\r\n                }\r\n            });\r\n        }\r\n        let authService = this.getService(authenticationService_1.AuthenticationService);\r\n        if (!authService) {\r\n            const serviceRequestMessage = new transportMessages_1.ServiceRequestMessage();\r\n            serviceRequestMessage.serviceName = authenticationService_1.AuthenticationService.serviceName;\r\n            await this.sendMessage(serviceRequestMessage, cancellation);\r\n            // Assume the service request is accepted, without waiting for an accept message.\r\n            // (If not, the following auth requests will fail anyway.)\r\n            authService = this.activateService(authenticationService_1.AuthenticationService);\r\n        }\r\n        await authService.authenticateClient(credentials, cancellation);\r\n    }\r\n    /* @internal */\r\n    onAuthenticationComplete(success) {\r\n        if (success) {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionAuthenticated, `${this} client authenticated.`);\r\n        }\r\n        else {\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.clientAuthenticationFailed, `${this} client authentication failed.`);\r\n        }\r\n        if (this.clientAuthCompletion) {\r\n            this.clientAuthCompletion.resolve(success);\r\n            this.clientAuthCompletion = null;\r\n        }\r\n    }\r\n    /**\r\n     * Sends a request for a service and waits for a response.\r\n     *\r\n     * @param serviceName Name of the service to be requested.\r\n     * @param cancellation Optional cancellation token.\r\n     * @returns A promise that resolves when the service request has been accepted.\r\n     *\r\n     * If the server does not accept the service request, it will disconnect the session.\r\n     */\r\n    async requestService(serviceName, cancellation) {\r\n        let sendRequest = false;\r\n        let completion = this.serviceRequests.get(serviceName);\r\n        if (!completion) {\r\n            completion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n            this.serviceRequests.set(serviceName, completion);\r\n            sendRequest = true;\r\n        }\r\n        if (sendRequest) {\r\n            const requestMessage = new transportMessages_1.ServiceRequestMessage();\r\n            requestMessage.serviceName = serviceName;\r\n            await this.sendMessage(requestMessage, cancellation);\r\n        }\r\n        await completion.promise;\r\n    }\r\n    /* @internal */\r\n    async handleServiceAcceptMessage(message, cancellation) {\r\n        const completion = this.serviceRequests.get(message.serviceName);\r\n        completion === null || completion === void 0 ? void 0 : completion.resolve(true);\r\n    }\r\n    async openChannel(channelTypeOrOpenMessageOrCancellation, initialRequestOrCancellation, cancellation) {\r\n        if (!this.connectionService) {\r\n            // Authentication must have been skipped, meaning there was no\r\n            // connection service request sent yet. Send it now, and assume\r\n            // it is accepted without waiting for a response.\r\n            const serviceRequestMessage = new transportMessages_1.ServiceRequestMessage();\r\n            serviceRequestMessage.serviceName = connectionService_1.ConnectionService.serviceName;\r\n            await this.sendMessage(serviceRequestMessage, cancellation);\r\n        }\r\n        return await super.openChannel(channelTypeOrOpenMessageOrCancellation, initialRequestOrCancellation, cancellation);\r\n    }\r\n    /* @internal */\r\n    handleDisconnected() {\r\n        if (this.reconnecting) {\r\n            this.reconnecting = false;\r\n            return false;\r\n        }\r\n        return super.handleDisconnected();\r\n    }\r\n    /**\r\n     * Call instead of `connect()` to reconnect to a prior session instead of connecting\r\n     * a new session.\r\n     * @param stream A new stream that has just (re-) connected to the server.\r\n     * @param cancellation Optional cancellation token.\r\n     * @returns True if reconnect succeeded, false if the server declined the reconnect\r\n     * request or reconnect session validation failed. In the case of a false return value,\r\n     * retrying is unlikely to succeed.\r\n     * @throws {SshConnectionError} There was a problem connecting to or communicating with\r\n     * the server; retrying may still succeed if connectivity is restored.\r\n     * @throws {SshReconnectError} Reconnect failed for some reason other than a communication\r\n     * issue: see the `failureReason` property of the error. Retrying is unlikely to succeed,\r\n     * unless the specific error condition can be addressed.\r\n     */\r\n    async reconnect(stream, cancellation) {\r\n        this.trace(trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.clientSessionReconnecting, 'Attempting to reconnect...');\r\n        if (this.isClosed) {\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        }\r\n        else if (this.isConnected) {\r\n            throw new Error('Already connected.');\r\n        }\r\n        if (!this.protocol) {\r\n            throw new Error('The session was never previously connected.');\r\n        }\r\n        if (this.reconnecting) {\r\n            throw new Error('Already reconnecting.');\r\n        }\r\n        this.reconnecting = true;\r\n        try {\r\n            await this.reconnectInternal(stream, cancellation);\r\n        }\r\n        finally {\r\n            this.reconnecting = false;\r\n        }\r\n    }\r\n    async reconnectInternal(stream, cancellation) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const previousSessionId = this.sessionId;\r\n        const previousProtocolInstance = this.protocol;\r\n        const previousHostKey = (_a = this.kexService) === null || _a === void 0 ? void 0 : _a.hostKey;\r\n        if (!previousSessionId ||\r\n            !previousProtocolInstance ||\r\n            !this.kexService ||\r\n            !previousHostKey ||\r\n            !((_b = previousProtocolInstance.extensions) === null || _b === void 0 ? void 0 : _b.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n            throw new Error('Reconnect was not enabled for this session.');\r\n        }\r\n        let newSessionId;\r\n        try {\r\n            // Reconnecting will temporarily create a new session ID.\r\n            this.sessionId = null;\r\n            await this.connect(stream, cancellation);\r\n            if (!this.sessionId || !this.algorithms || !this.algorithms.signer) {\r\n                throw new Error('Session is not encrypted.');\r\n            }\r\n            // Ensure the client is not reconnecting to a different server.\r\n            const newHostKey = this.kexService.hostKey;\r\n            const newHostPublicKey = !newHostKey ? null : await newHostKey.getPublicKeyBytes();\r\n            const previousHostPublicKey = await previousHostKey.getPublicKeyBytes();\r\n            if (!newHostPublicKey ||\r\n                !previousHostPublicKey ||\r\n                !newHostPublicKey.equals(previousHostPublicKey)) {\r\n                const message = 'The server host key is different.';\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.clientSessionReconnectFailed, `Reconnection failed: ${message}`);\r\n                throw new errors_1.SshReconnectError(message, transportMessages_1.SshReconnectFailureReason.differentServerHostKey);\r\n            }\r\n            newSessionId = this.sessionId;\r\n        }\r\n        catch (e) {\r\n            // Restore the previous protocol instance so reconnect may be attempted again.\r\n            this.protocol = previousProtocolInstance;\r\n            super.handleDisconnected();\r\n            throw e;\r\n        }\r\n        finally {\r\n            // Restore the previous session ID and host key for the reconnected session.\r\n            this.sessionId = previousSessionId;\r\n            this.kexService.hostKey = previousHostKey;\r\n        }\r\n        const reconnectToken = await this.createReconnectToken(previousSessionId, newSessionId);\r\n        const reconnectRequest = new transportMessages_1.SessionReconnectRequestMessage();\r\n        reconnectRequest.requestType = \"session-reconnect@microsoft.com\" /* ExtensionRequestTypes.sessionReconnect */;\r\n        reconnectRequest.clientReconnectToken = reconnectToken;\r\n        reconnectRequest.lastReceivedSequenceNumber = previousProtocolInstance.lastIncomingSequence;\r\n        reconnectRequest.wantReply = true;\r\n        const response = await this.requestResponse(reconnectRequest, transportMessages_1.SessionReconnectResponseMessage, transportMessages_1.SessionReconnectFailureMessage, cancellation);\r\n        if (response instanceof transportMessages_1.SessionReconnectFailureMessage) {\r\n            const reason = (_c = response.reasonCode) !== null && _c !== void 0 ? _c : transportMessages_1.SshReconnectFailureReason.unknownServerFailure;\r\n            const message = (_d = response.description) !== null && _d !== void 0 ? _d : 'The server rejected the reconnect request.';\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.clientSessionReconnectFailed, `Reconnection failed: ${message}`);\r\n            // Restore the previous protocol instance so reconnect may be attempted again.\r\n            this.protocol = previousProtocolInstance;\r\n            throw new errors_1.SshReconnectError(message, reason);\r\n        }\r\n        if (!this.verifyReconnectToken(previousSessionId, newSessionId, (_e = response.serverReconnectToken) !== null && _e !== void 0 ? _e : Buffer.alloc(0))) {\r\n            const message = 'The reconnect token provided by the server was invalid.';\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.clientSessionReconnectFailed, `Reconnection failed: ${message}`);\r\n            throw new errors_1.SshReconnectError(message, transportMessages_1.SshReconnectFailureReason.invalidServerReconnectToken);\r\n        }\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.clientSessionReconnecting, 'Reconnect request was accepted by the server.');\r\n        // Re-send lost messages.\r\n        const messagesToResend = previousProtocolInstance.getSentMessages(((_f = response.lastReceivedSequenceNumber) !== null && _f !== void 0 ? _f : 0) + 1);\r\n        if (!messagesToResend) {\r\n            const message = 'Client is unable to re-send messages requested by the server.';\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.clientSessionReconnectFailed, `Reconnection failed: ${message}`);\r\n            throw new errors_1.SshReconnectError(message, transportMessages_1.SshReconnectFailureReason.clientDroppedMessages);\r\n        }\r\n        let count = 0;\r\n        for (const message of messagesToResend) {\r\n            await this.sendMessage(message, cancellation);\r\n            count++;\r\n        }\r\n        // Now the session is fully reconnected!\r\n        previousProtocolInstance.dispose();\r\n        this.metrics.addReconnection();\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.clientSessionReconnecting, `${this} reconnected. Re-sent ${count} dropped messages.`);\r\n    }\r\n    dispose() {\r\n        if (this.clientAuthCompletion) {\r\n            this.clientAuthCompletion.reject(new errors_1.ObjectDisposedError(this));\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexports.SshClientSession = SshClientSession;\r\n//# sourceMappingURL=sshClientSession.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshRpcMessageStream = void 0;\r\nconst rpc = require(\"vscode-jsonrpc\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst sshData_1 = require(\"./io/sshData\");\r\nconst contentLengthHeaderPrefix = 'Content-Length: ';\r\nconst headersSeparator = '\\r\\n\\r\\n';\r\nclass SshRpcMessageReader {\r\n    constructor(channel) {\r\n        this.channel = channel;\r\n        this.errorEmitter = new rpc.Emitter();\r\n        this.closeEmitter = new rpc.Emitter();\r\n        this.partialMessageEmitter = new rpc.Emitter();\r\n        this.callback = null;\r\n        this.messageBuffer = new sshData_1.SshDataWriter(buffer_1.Buffer.alloc(1024));\r\n        this.headersLength = null;\r\n        this.messageLength = null;\r\n        this.onError = this.errorEmitter.event;\r\n        this.onClose = this.closeEmitter.event;\r\n        this.onPartialMessage = this.partialMessageEmitter.event;\r\n        this.eventRegistration = this.channel.onDataReceived(this.onDataReceived.bind(this));\r\n        this.channel.onClosed((e) => {\r\n            if (e.error) {\r\n                this.errorEmitter.fire(e.error);\r\n            }\r\n            // Note: we always want to fire a close event to avoid the rpc connection\r\n            // to be used. After the event any usage of the rpc message connection will\r\n            // throw an error with this code: ConnectionErrors.Closed\r\n            this.closeEmitter.fire();\r\n        });\r\n    }\r\n    listen(callback) {\r\n        this.callback = callback;\r\n        return rpc.Disposable.create(() => {\r\n            this.callback = null;\r\n        });\r\n    }\r\n    dispose() {\r\n        if (this.eventRegistration) {\r\n            this.eventRegistration.dispose();\r\n        }\r\n    }\r\n    onDataReceived(data) {\r\n        this.messageBuffer.write(data);\r\n        this.channel.adjustWindow(data.length);\r\n        // In case of recursion, the `data` might have already been a slice of the message buffer,\r\n        // but it could have been invalidated by expansion during write() above.\r\n        data = this.messageBuffer.toBuffer();\r\n        if (this.messageLength === null) {\r\n            const headersEnd = data.indexOf(headersSeparator);\r\n            if (headersEnd < 0) {\r\n                return; // Wait for more data.\r\n            }\r\n            const headers = data.slice(0, headersEnd).toString();\r\n            if (!headers.startsWith(contentLengthHeaderPrefix)) {\r\n                throw new Error(`Message does not start with JSON-RPC headers.\\n${headers}`);\r\n            }\r\n            this.headersLength = headersEnd + headersSeparator.length;\r\n            this.messageLength = parseInt(headers.substr(contentLengthHeaderPrefix.length, headersEnd - contentLengthHeaderPrefix.length), 10);\r\n        }\r\n        const position = this.messageBuffer.position;\r\n        const totalLength = this.headersLength + this.messageLength;\r\n        if (position >= totalLength) {\r\n            if (this.callback) {\r\n                const messageJson = data.slice(this.headersLength, totalLength).toString();\r\n                let message;\r\n                try {\r\n                    message = JSON.parse(messageJson);\r\n                }\r\n                catch (e) {\r\n                    if (!(e instanceof Error))\r\n                        throw e;\r\n                    throw new Error(`Failed to parse JSON-RPC message: ${e.message}\\n${messageJson}`);\r\n                }\r\n                this.callback(message);\r\n            }\r\n            this.messageLength = null;\r\n            this.messageBuffer.position = 0;\r\n            if (position > totalLength) {\r\n                // Recursively receive the remaining data, which will cause it\r\n                // to be copied to the beginning of the buffer;\r\n                this.onDataReceived(data.slice(totalLength));\r\n            }\r\n        }\r\n    }\r\n}\r\nclass SshRpcMessageWriter {\r\n    constructor(channel) {\r\n        this.channel = channel;\r\n        this.errorEmitter = new rpc.Emitter();\r\n        this.closeEmitter = new rpc.Emitter();\r\n        this.onError = this.errorEmitter.event;\r\n        this.onClose = this.closeEmitter.event;\r\n        this.channel.onClosed((e) => {\r\n            if (e.error) {\r\n                this.errorEmitter.fire([\r\n                    e.error,\r\n                    (e.errorMessage && { jsonrpc: e.errorMessage }) || undefined,\r\n                    e.exitStatus,\r\n                ]);\r\n            }\r\n            this.closeEmitter.fire();\r\n        });\r\n    }\r\n    write(message) {\r\n        const messageJson = JSON.stringify(message);\r\n        const messageData = buffer_1.Buffer.from(messageJson);\r\n        const headerData = buffer_1.Buffer.from(contentLengthHeaderPrefix + messageData.length + headersSeparator);\r\n        const data = buffer_1.Buffer.alloc(headerData.length + messageData.length);\r\n        headerData.copy(data, 0);\r\n        messageData.copy(data, headerData.length);\r\n        return this.channel.send(data).catch((e) => {\r\n            this.errorEmitter.fire([e, undefined, undefined]);\r\n        });\r\n    }\r\n    end() { }\r\n    dispose() { }\r\n}\r\nclass SshRpcMessageStream {\r\n    constructor(channel) {\r\n        this.reader = new SshRpcMessageReader(channel);\r\n        this.writer = new SshRpcMessageWriter(channel);\r\n    }\r\n}\r\nexports.SshRpcMessageStream = SshRpcMessageStream;\r\n//# sourceMappingURL=sshRpcMessageStream.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshServerSession = void 0;\r\nconst sshSession_1 = require(\"./sshSession\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst errors_1 = require(\"./errors\");\r\nconst sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nconst trace_1 = require(\"./trace\");\r\n/**\r\n * The server side of an SSH session. Extends the base `SshSession` class\r\n * to support host authentication.\r\n */\r\nclass SshServerSession extends sshSession_1.SshSession {\r\n    constructor(config, reconnectableSessions) {\r\n        super(config, false);\r\n        this.clientAuthenticatedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onClientAuthenticated = this.clientAuthenticatedEmitter.event;\r\n        this.reconnectedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onReconnected = this.reconnectedEmitter.event;\r\n        /**\r\n         * Gets or sets credentials and/or credential callbacks for authenticating the session.\r\n         */\r\n        this.credentials = { publicKeys: [] };\r\n        const enableReconnect = config.protocolExtensions.includes(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect);\r\n        if (enableReconnect && !reconnectableSessions) {\r\n            throw new Error('When reconnect is enabled, server sessions require a reference to a ' +\r\n                'shared collection to track reconnectable sessions.');\r\n        }\r\n        else if (!enableReconnect && reconnectableSessions) {\r\n            throw new Error('When reconnect is not enabled, the reconnectable sessions collection ' +\r\n                'is not applicable.');\r\n        }\r\n        this.reconnectableSessions = reconnectableSessions;\r\n    }\r\n    /* @internal */\r\n    async handleServiceRequestMessage(message, cancellation) {\r\n        const service = this.activateService(message.serviceName);\r\n        if (service) {\r\n            const acceptMessage = new transportMessages_1.ServiceAcceptMessage();\r\n            acceptMessage.serviceName = message.serviceName;\r\n            await this.sendMessage(acceptMessage, cancellation);\r\n        }\r\n        else {\r\n            throw new errors_1.SshConnectionError(`Service \"${message.serviceName}\" not available.`, transportMessages_1.SshDisconnectReason.serviceNotAvailable);\r\n        }\r\n    }\r\n    /* @internal */\r\n    async handleRequestMessage(message, cancellation) {\r\n        var _a;\r\n        if (message.requestType === \"session-reconnect@microsoft.com\" /* ExtensionRequestTypes.sessionReconnect */ &&\r\n            ((_a = this.config.protocolExtensions) === null || _a === void 0 ? void 0 : _a.includes(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n            const reconnectRequest = message.convertTo(new transportMessages_1.SessionReconnectRequestMessage());\r\n            await this.reconnect(reconnectRequest, cancellation);\r\n            // reconnect() handles sending the response message.\r\n            return;\r\n        }\r\n        await super.handleRequestMessage(message, cancellation);\r\n    }\r\n    /* @internal */\r\n    handleClientAuthenticated() {\r\n        this.clientAuthenticatedEmitter.fire();\r\n    }\r\n    /* @internal */\r\n    async enableReconnect(cancellation) {\r\n        await super.enableReconnect(cancellation);\r\n        if (!this.reconnectableSessions.includes(this)) {\r\n            this.reconnectableSessions.push(this);\r\n        }\r\n    }\r\n    /* @internal */\r\n    handleDisconnected() {\r\n        if (this.reconnecting) {\r\n            // Prevent closing the session while reconnecting.\r\n            return true;\r\n        }\r\n        return super.handleDisconnected();\r\n    }\r\n    /**\r\n     * Attempts to reconnect the client to a disconnected server session.\r\n     *\r\n     * If reconnection is successful, the current server session is disposed because the client\r\n     * gets reconnected to a different server session.\r\n     */\r\n    /* @internal */\r\n    async reconnect(reconnectRequest, cancellation) {\r\n        var _a, _b, _c;\r\n        if (!this.reconnectableSessions) {\r\n            throw new Error('Disconnected sessions collection ' +\r\n                'should have been initialized when reconnect is enabled.');\r\n        }\r\n        // Try to find the requested server session in the list of available disconnected\r\n        // server sessions, by validating the reconnect token.\r\n        let reconnectSession;\r\n        for (const reconnectableSession of this.reconnectableSessions) {\r\n            if (reconnectableSession !== this &&\r\n                (await this.verifyReconnectToken(reconnectableSession.sessionId, this.sessionId, (_a = reconnectRequest.clientReconnectToken) !== null && _a !== void 0 ? _a : Buffer.alloc(0)))) {\r\n                reconnectSession = reconnectableSession;\r\n                this.reconnectableSessions.splice(this.reconnectableSessions.indexOf(reconnectSession), 1);\r\n                break;\r\n            }\r\n        }\r\n        if (!reconnectSession || reconnectSession.isClosed) {\r\n            const message = 'Requested reconnect session was not found or ' +\r\n                'the reconnect token provided by the client was invalid.';\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.serverSessionReconnectFailed, `Reconnect failed: ${message}`);\r\n            const failure = new transportMessages_1.SessionReconnectFailureMessage();\r\n            failure.reasonCode = transportMessages_1.SshReconnectFailureReason.sessionNotFound;\r\n            failure.description = message;\r\n            await this.sendMessage(failure, cancellation);\r\n            return;\r\n        }\r\n        const messagesToResend = reconnectSession.protocol.getSentMessages(((_b = reconnectRequest.lastReceivedSequenceNumber) !== null && _b !== void 0 ? _b : 0) + 1);\r\n        if (!messagesToResend) {\r\n            // Messages are not available from requested sequence number.\r\n            // Restore the current session protocol and put the old session back in the collection.\r\n            this.reconnectableSessions.push(reconnectSession);\r\n            const message = 'Server is unable to re-send messages requested by the client.';\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.serverSessionReconnectFailed, `Reconnect failed: ${message}`);\r\n            const failure = new transportMessages_1.SessionReconnectFailureMessage();\r\n            failure.reasonCode = transportMessages_1.SshReconnectFailureReason.serverDroppedMessages;\r\n            failure.description = message;\r\n            await this.sendMessage(failure, cancellation);\r\n            return;\r\n        }\r\n        const responseMessage = new transportMessages_1.SessionReconnectResponseMessage();\r\n        responseMessage.serverReconnectToken = await this.createReconnectToken(reconnectSession.sessionId, this.sessionId);\r\n        responseMessage.lastReceivedSequenceNumber = reconnectSession.protocol.lastIncomingSequence;\r\n        await this.sendMessage(responseMessage, cancellation);\r\n        try {\r\n            reconnectSession.reconnecting = true;\r\n            // Ensure the old connection is disconnected before switching over to the new one.\r\n            (_c = reconnectSession.protocol) === null || _c === void 0 ? void 0 : _c.dispose();\r\n            while (reconnectSession.isConnected) {\r\n                await new Promise((resolve) => setTimeout(() => resolve(), 5));\r\n            }\r\n            // Move this session's protocol instance over to the reconnected session.\r\n            reconnectSession.protocol = this.protocol;\r\n            reconnectSession.protocol.kexService = reconnectSession.kexService;\r\n            this.protocol = undefined;\r\n            // Re-send the lost messages that the client requested.\r\n            for (const message of messagesToResend) {\r\n                await reconnectSession.sendMessage(message, cancellation);\r\n            }\r\n            // Now this server session is invalid because the client reconnected to another one.\r\n            this.dispose(new errors_1.SshConnectionError('Reconnected.', transportMessages_1.SshDisconnectReason.none));\r\n        }\r\n        finally {\r\n            reconnectSession.reconnecting = false;\r\n        }\r\n        this.reconnectableSessions.push(reconnectSession);\r\n        reconnectSession.metrics.addReconnection();\r\n        // Restart the message loop for the reconnected session.\r\n        reconnectSession.processMessages().catch((e) => {\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.unknownError, `Unhandled error processing messages: ${e.message}`, e);\r\n        });\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.serverSessionReconnecting, `${reconnectSession} reconnected. Re-sent ${messagesToResend.length} dropped messages.`);\r\n        // Notify event listeners about the successful reconnection.\r\n        reconnectSession.reconnectedEmitter.fire();\r\n    }\r\n    dispose(error) {\r\n        if (this.reconnectableSessions) {\r\n            const index = this.reconnectableSessions.indexOf(this);\r\n            if (index >= 0) {\r\n                this.reconnectableSessions.splice(index, 1);\r\n            }\r\n        }\r\n        super.dispose(error);\r\n    }\r\n}\r\nexports.SshServerSession = SshServerSession;\r\n//# sourceMappingURL=sshServerSession.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshSession = void 0;\r\nconst trace_1 = require(\"./trace\");\r\nconst buffer_1 = require(\"buffer\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst sshSessionConfiguration_1 = require(\"./sshSessionConfiguration\");\r\nconst sshChannel_1 = require(\"./sshChannel\");\r\nconst sshVersionInfo_1 = require(\"./sshVersionInfo\");\r\nconst sshProtocol_1 = require(\"./io/sshProtocol\");\r\nconst keyExchangeService_1 = require(\"./services/keyExchangeService\");\r\nconst serviceActivation_1 = require(\"./services/serviceActivation\");\r\nconst connectionService_1 = require(\"./services/connectionService\");\r\nconst authenticationService_1 = require(\"./services/authenticationService\");\r\nconst sshMessage_1 = require(\"./messages/sshMessage\");\r\nconst kexMessages_1 = require(\"./messages/kexMessages\");\r\nconst connectionMessages_1 = require(\"./messages/connectionMessages\");\r\nconst authenticationMessages_1 = require(\"./messages/authenticationMessages\");\r\nconst transportMessages_1 = require(\"./messages/transportMessages\");\r\nconst sessionMetrics_1 = require(\"./metrics/sessionMetrics\");\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nconst sshSessionClosedEventArgs_1 = require(\"./events/sshSessionClosedEventArgs\");\r\nconst sshRequestEventArgs_1 = require(\"./events/sshRequestEventArgs\");\r\nconst sshAlgorithms_1 = require(\"./algorithms/sshAlgorithms\");\r\nconst cancellation_1 = require(\"./util/cancellation\");\r\nconst errors_1 = require(\"./errors\");\r\nconst semaphore_1 = require(\"./util/semaphore\");\r\nconst pipeExtensions_1 = require(\"./pipeExtensions\");\r\n/**\r\n * Base class for an SSH server or client connection; coordinates high-level SSH\r\n * protocol details and dispatches messages to registered internal services.\r\n * Enables opening and accepting `SshChannel` instances.\r\n */\r\nclass SshSession {\r\n    get algorithms() {\r\n        return this.protocol ? this.protocol.algorithms : null;\r\n    }\r\n    /**\r\n     * Gets an object containing claims about the server or client on the\r\n     * other end of the session, or `null` if the session is not authenticated.\r\n     *\r\n     * This property is initially `null` for an unauthenticated session. On\r\n     * successful authentication, the session Authenticating event handler\r\n     * provides a Task that returns a principal that is stored here.\r\n     */\r\n    get principal() {\r\n        return this.principalValue;\r\n    }\r\n    /* @internal */\r\n    set principal(value) {\r\n        this.principalValue = value;\r\n    }\r\n    constructor(config, isClientSession) {\r\n        this.config = config;\r\n        this.remoteVersion = null;\r\n        this.activatedServices = new Map();\r\n        this.connectionService = null;\r\n        this.requestHandler = null;\r\n        this.blockedMessages = [];\r\n        this.blockedMessagesSemaphore = new semaphore_1.Semaphore(1);\r\n        this.connected = false;\r\n        this.disposed = false;\r\n        /**\r\n         * Gets an object that reports current and cumulative measurements about the session.\r\n         */\r\n        this.metrics = new sessionMetrics_1.SessionMetrics();\r\n        /* @internal */\r\n        this.reconnecting = false;\r\n        this.sessionId = null;\r\n        this.principalValue = null;\r\n        this.authenticatingEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /**\r\n         * Event that is raised when a client or server is requesting authentication.\r\n         *\r\n         * See `SshAuthenticationType` for a description of the different authentication\r\n         * methods and how they map to the event-args object.\r\n         *\r\n         * After validating the credentials, the event handler must set the\r\n         * `SshAuthenticatingEventArgs.authenticationPromise` property to a task that\r\n         * resolves to a principal object to indicate successful authentication. That principal will\r\n         * then be associated with the sesssion as the `principal` property.\r\n         */\r\n        this.onAuthenticating = this.authenticatingEmitter.event;\r\n        this.closedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onClosed = this.closedEmitter.event;\r\n        this.disconnectedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onDisconnected = this.disconnectedEmitter.event;\r\n        this.serviceActivatedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onServiceActivated = this.serviceActivatedEmitter.event;\r\n        this.channelOpeningEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onChannelOpening = this.channelOpeningEmitter.event;\r\n        this.requestEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.onRequest = this.requestEmitter.event;\r\n        /**\r\n         * Gets or sets a function that handles trace messages associated with the session.\r\n         *\r\n         * By default, no messages are traced. To enable tracing, set this property to a function\r\n         * that routes the message to console.log, a file, or anywhere else.\r\n         *\r\n         * @param level Level of message: error, warning, info, or verbose\r\n         * @param eventId Integer identifier of the event being traced.\r\n         * @param msg Message (non-localized) describing the event.\r\n         */\r\n        this.trace = (level, eventId, msg, err) => { };\r\n        if (!config)\r\n            throw new TypeError('Session configuration is required.');\r\n        if (!config.keyExchangeAlgorithms.find((a) => !!a)) {\r\n            if (config.encryptionAlgorithms.length > 0 &&\r\n                config.encryptionAlgorithms.indexOf(null) < 0) {\r\n                throw new Error('Encryption requires a key-exchange algorithm to be configured.');\r\n            }\r\n            else if (config.hmacAlgorithms.length > 0 && config.hmacAlgorithms.indexOf(null) < 0) {\r\n                throw new Error('HMAC requires a key-exchange algorithm to be configured.');\r\n            }\r\n            else if (config.publicKeyAlgorithms.length > 0 &&\r\n                config.publicKeyAlgorithms.indexOf(null) < 0) {\r\n                throw new Error('Host authentication requires a key-exchange algorithm to be configured.');\r\n            }\r\n            // No key exchange, no encryption, no HMAC.\r\n            this.kexService = null;\r\n            this.activateService(connectionService_1.ConnectionService);\r\n        }\r\n        else {\r\n            this.kexService = new keyExchangeService_1.KeyExchangeService(this, isClientSession !== null && isClientSession !== void 0 ? isClientSession : false);\r\n        }\r\n        config.onConfigurationChanged(() => {\r\n            const protocol = this.protocol;\r\n            if (protocol) {\r\n                protocol.traceChannelData = config.traceChannelData;\r\n            }\r\n        });\r\n    }\r\n    get isConnected() {\r\n        return this.connected;\r\n    }\r\n    get isClosed() {\r\n        return this.disposed;\r\n    }\r\n    get services() {\r\n        return [...this.activatedServices.values()];\r\n    }\r\n    get channels() {\r\n        var _a, _b;\r\n        return (_b = (_a = this.connectionService) === null || _a === void 0 ? void 0 : _a.channels) !== null && _b !== void 0 ? _b : [];\r\n    }\r\n    get protocolExtensions() {\r\n        var _a;\r\n        return ((_a = this.protocol) === null || _a === void 0 ? void 0 : _a.extensions) || null;\r\n    }\r\n    /**\r\n     * Gets an activated service instance by type.\r\n     *\r\n     * @returns The service instance, or `null` if the service has not been activated.\r\n     */\r\n    getService(serviceType) {\r\n        const service = this.activatedServices.get(serviceType);\r\n        return service ? service : null;\r\n    }\r\n    /* @internal */\r\n    activateService(serviceTypeOrName) {\r\n        let serviceType;\r\n        if (typeof serviceTypeOrName === 'function') {\r\n            serviceType = serviceTypeOrName;\r\n        }\r\n        else {\r\n            const serviceName = serviceTypeOrName;\r\n            serviceType = (0, serviceActivation_1.findService)(this.config.services, (a) => a.serviceRequest === serviceName);\r\n            if (!serviceType) {\r\n                return null;\r\n            }\r\n        }\r\n        let activatedService = this.activatedServices.get(serviceType);\r\n        if (!activatedService) {\r\n            if (!this.config.services.has(serviceType)) {\r\n                throw new Error(`Service type not configured: ${serviceType.name}`);\r\n            }\r\n            const serviceConfig = this.config.services.get(serviceType);\r\n            activatedService = new serviceType(this, serviceConfig);\r\n            // This service is maintained in a separate member because it is accessed frequently.\r\n            if (serviceType === connectionService_1.ConnectionService) {\r\n                this.connectionService = activatedService;\r\n            }\r\n            this.activatedServices.set(serviceType, activatedService);\r\n            this.serviceActivatedEmitter.fire(activatedService);\r\n        }\r\n        return activatedService;\r\n    }\r\n    async connect(stream, cancellation) {\r\n        if (!stream)\r\n            throw new TypeError('A session stream is required.');\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if (!this.connectPromise) {\r\n            this.connectPromise = this.doConnect(stream, cancellation);\r\n        }\r\n        await this.connectPromise;\r\n    }\r\n    async doConnect(stream, cancellation) {\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionConnecting, `${this} ${this.reconnecting ? 're' : ''}connecting...`);\r\n        this.protocol = new sshProtocol_1.SshProtocol(stream, this.config, this.metrics, this.trace);\r\n        this.protocol.kexService = this.kexService;\r\n        await this.exchangeVersions(cancellation);\r\n        if (this.kexService) {\r\n            await this.encrypt(cancellation);\r\n        }\r\n        else {\r\n            // When there's no key-exchange service configured, send a key-exchange init message\r\n            // that specifies \"none\" for all algorithms.\r\n            await this.sendMessage(kexMessages_1.KeyExchangeInitMessage.none, cancellation);\r\n            // When encrypting, the key-exchange step will wait on the version-exchange.\r\n            // When not encrypting, it must be directly awaited.\r\n            await (0, cancellation_1.withCancellation)(this.versionExchangePromise, cancellation);\r\n            this.connected = true;\r\n        }\r\n        this.processMessages().catch((e) => {\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.unknownError, `Unhandled error processing messages: ${e.message}`, e);\r\n        });\r\n    }\r\n    async exchangeVersions(cancellation) {\r\n        const writePromise = this.protocol.writeProtocolVersion(SshSession.localVersion.toString(), cancellation);\r\n        const readPromise = this.protocol.readProtocolVersion(cancellation);\r\n        // Don't wait for and verify the other side's version info yet.\r\n        // Instead save a promise that can be awaited later.\r\n        this.versionExchangePromise = readPromise.then(async (remoteVersion) => {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.protocolVersion, `Local version: ${SshSession.localVersion}, remote version: ${remoteVersion}`);\r\n            let errorMessage;\r\n            const remoteVersionInfo = sshVersionInfo_1.SshVersionInfo.tryParse(remoteVersion);\r\n            if (remoteVersionInfo) {\r\n                this.remoteVersion = remoteVersionInfo;\r\n                if (remoteVersionInfo.protocolVersion === '2.0') {\r\n                    return;\r\n                }\r\n                errorMessage =\r\n                    `Remote SSH version ${this.remoteVersion} is not supported. ` +\r\n                        'This library only supports SSH v2.0.';\r\n            }\r\n            else {\r\n                errorMessage = `Could not parse remote SSH version ${remoteVersion}`;\r\n            }\r\n            await this.close(transportMessages_1.SshDisconnectReason.protocolVersionNotSupported, errorMessage, new Error(errorMessage));\r\n        });\r\n        await writePromise;\r\n    }\r\n    async encrypt(cancellation) {\r\n        var _a, _b;\r\n        const protocol = this.protocol;\r\n        if (!protocol)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        await protocol.considerReExchange(true, cancellation);\r\n        // Ensure the protocol version has been received before receiving any messages.\r\n        await (0, cancellation_1.withCancellation)(this.versionExchangePromise, cancellation);\r\n        this.connected = true;\r\n        let message = null;\r\n        while (!this.isClosed &&\r\n            !((_a = this.protocol) === null || _a === void 0 ? void 0 : _a.algorithms) &&\r\n            !(message instanceof transportMessages_1.DisconnectMessage)) {\r\n            message = await protocol.receiveMessage(cancellation);\r\n            if (!message) {\r\n                break;\r\n            }\r\n            await this.handleMessage(message, cancellation);\r\n        }\r\n        if (!((_b = this.protocol) === null || _b === void 0 ? void 0 : _b.algorithms)) {\r\n            throw new errors_1.SshConnectionError('Session closed while encrypting.', transportMessages_1.SshDisconnectReason.connectionLost);\r\n        }\r\n        else if (this.protocol.algorithms.cipher) {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionEncrypted, `${this} encrypted.`);\r\n        }\r\n    }\r\n    /* @internal */\r\n    async processMessages() {\r\n        var _a;\r\n        this.connected = true;\r\n        while (!this.disposed) {\r\n            const protocol = this.protocol;\r\n            if (!protocol) {\r\n                break;\r\n            }\r\n            let message = null;\r\n            try {\r\n                message = await protocol.receiveMessage();\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                let reason = transportMessages_1.SshDisconnectReason.protocolError;\r\n                if (e instanceof errors_1.SshConnectionError) {\r\n                    reason = (_a = e.reason) !== null && _a !== void 0 ? _a : reason;\r\n                }\r\n                else {\r\n                    this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.receiveMessageFailed, `Error receiving message: ${e.message}`, e);\r\n                }\r\n                await this.close(reason, e.message, e);\r\n            }\r\n            if (!message) {\r\n                await this.close(transportMessages_1.SshDisconnectReason.connectionLost, 'Connection lost.');\r\n                break;\r\n            }\r\n            try {\r\n                await this.handleMessage(message);\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.handleMessageFailed, `Error handling ${message}: ${e.message}`, e);\r\n                await this.close(transportMessages_1.SshDisconnectReason.protocolError, e.message, e);\r\n            }\r\n        }\r\n        this.connected = false;\r\n    }\r\n    /**\r\n     * Checks whether the session is in a state that allows requests, such as session requests\r\n     * and open-channel requests.\r\n     *\r\n     * A session with disabled crypto (no key-exchange service) always allows requests. A\r\n     * session with enabled crypto does not allow requests until the first key-exchange has\r\n     * completed (algorithms are negotiated). If the negotiated algorithms enabled encryption,\r\n     * then the session must be authenticated (have a principal) before allowing requests.\r\n     */\r\n    /* @internal */\r\n    get canAcceptRequests() {\r\n        var _a;\r\n        return (!this.kexService ||\r\n            (!!((_a = this.protocol) === null || _a === void 0 ? void 0 : _a.algorithms) && (!this.protocol.algorithms.cipher || !!this.principal)));\r\n    }\r\n    async sendMessage(message, cancellation) {\r\n        var _a, _b;\r\n        if (!message)\r\n            throw new TypeError('Message expected.');\r\n        if (cancellation && cancellation.isCancellationRequested)\r\n            throw new cancellation_1.CancellationError();\r\n        const protocol = this.protocol;\r\n        if (!protocol || this.disposed) {\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        }\r\n        // Delay sending messages if in the middle of a key (re-)exchange.\r\n        if (this.kexService &&\r\n            this.kexService.exchanging &&\r\n            message.messageType > 4 &&\r\n            (message.messageType < 20 || message.messageType > 49)) {\r\n            this.blockedMessages.push(message);\r\n            return;\r\n        }\r\n        await this.blockedMessagesSemaphore.wait(cancellation);\r\n        let result;\r\n        try {\r\n            result = await protocol.sendMessage(message, cancellation);\r\n            this.blockedMessagesSemaphore.release();\r\n        }\r\n        catch (e) {\r\n            this.blockedMessagesSemaphore.release();\r\n            if (e instanceof errors_1.SshConnectionError) {\r\n                const ce = e;\r\n                if (ce.reason === transportMessages_1.SshDisconnectReason.connectionLost &&\r\n                    ((_a = this.protocolExtensions) === null || _a === void 0 ? void 0 : _a.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n                    // Connection-lost error when reconnect is enabled. Don't throw an error;\r\n                    // the message will remain in the reconnect message cache and will be re-sent\r\n                    // upon reconnection.\r\n                    return;\r\n                }\r\n            }\r\n            if (!(e instanceof Error))\r\n                throw e;\r\n            this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.sendMessageFailed, `Error sending ${message}: ${e.message}`, e);\r\n            throw e;\r\n        }\r\n        if (!result) {\r\n            // Sending failed due to a closed stream, but don't throw when reconnect is enabled.\r\n            // In that case the sent message is buffered and will be re-sent after reconnecting.\r\n            if (!((_b = this.protocolExtensions) === null || _b === void 0 ? void 0 : _b.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n                throw new errors_1.SshConnectionError('Session disconnected.', transportMessages_1.SshDisconnectReason.connectionLost);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handles an incoming message. Can be overridden by subclasses to handle additional\r\n     * message types that are registered via `SshSessionConfiguration.messages`.\r\n     */\r\n    handleMessage(message, cancellation) {\r\n        var _a;\r\n        if (message instanceof connectionMessages_1.ConnectionMessage && this.connectionService) {\r\n            return this.connectionService.handleMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof kexMessages_1.NewKeysMessage) {\r\n            return this.handleNewKeysMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof kexMessages_1.KeyExchangeMessage) {\r\n            return this.handleKeyExchangeMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof authenticationMessages_1.AuthenticationMessage) {\r\n            return (_a = this.getService(authenticationService_1.AuthenticationService)) === null || _a === void 0 ? void 0 : _a.handleMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.ServiceRequestMessage) {\r\n            return this.handleServiceRequestMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.ServiceAcceptMessage) {\r\n            return this.handleServiceAcceptMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.SessionRequestMessage) {\r\n            return this.handleRequestMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.SessionRequestSuccessMessage) {\r\n            return this.handleRequestSuccessMessage(message);\r\n        }\r\n        else if (message instanceof transportMessages_1.SessionRequestFailureMessage) {\r\n            return this.handleRequestFailureMessage(message);\r\n        }\r\n        else if (message instanceof transportMessages_1.ExtensionInfoMessage) {\r\n            return this.handleExtensionInfoMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.DisconnectMessage) {\r\n            return this.handleDisconnectMessage(message);\r\n        }\r\n        else if (message instanceof transportMessages_1.UnimplementedMessage) {\r\n            return this.handleUnimplementedMessage(message, cancellation);\r\n        }\r\n        else if (message instanceof transportMessages_1.DebugMessage) {\r\n            return this.handleDebugMessage(message);\r\n        }\r\n        else if (message instanceof transportMessages_1.IgnoreMessage) {\r\n            // Do nothing for ignore message\r\n            return;\r\n        }\r\n        else if (message instanceof sshMessage_1.SshMessage) {\r\n            throw new Error(`Unhandled message type: ${message.constructor.name}`);\r\n        }\r\n        else {\r\n            throw new TypeError('Message argument was ' + (message ? 'invalid type.' : 'null.'));\r\n        }\r\n    }\r\n    /* @internal */\r\n    async handleRequestMessage(message, cancellation) {\r\n        var _a;\r\n        let result = false;\r\n        let response = null;\r\n        if (message.requestType === \"initial-channel-request@microsoft.com\" /* ExtensionRequestTypes.initialChannelRequest */ &&\r\n            this.config.protocolExtensions.includes(sshSessionConfiguration_1.SshProtocolExtensionNames.openChannelRequest)) {\r\n            const sessionChannelRequest = message.convertTo(new transportMessages_1.SessionChannelRequestMessage());\r\n            const remoteChannelId = sessionChannelRequest.senderChannel;\r\n            const channel = this.channels.find((c) => c.remoteChannelId === remoteChannelId);\r\n            if (channel && sessionChannelRequest.request) {\r\n                sessionChannelRequest.request.wantReply = false; // Avoid redundant reply\r\n                result = await channel.handleRequest(sessionChannelRequest.request, cancellation);\r\n            }\r\n        }\r\n        else if (message.requestType === \"enable-session-reconnect@microsoft.com\" /* ExtensionRequestTypes.enableSessionReconnect */ &&\r\n            ((_a = this.config.protocolExtensions) === null || _a === void 0 ? void 0 : _a.includes(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n            if (!this.protocol.incomingMessagesHaveReconnectInfo) {\r\n                // Starting immediately after this message, all incoming messages include\r\n                // an extra field or two after the payload.\r\n                this.protocol.incomingMessagesHaveReconnectInfo = true;\r\n                this.protocol.incomingMessagesHaveLatencyInfo = this.protocol.extensions.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionLatency);\r\n                result = true;\r\n            }\r\n        }\r\n        else if (!this.canAcceptRequests) {\r\n            this.trace(trace_1.TraceLevel.Warning, trace_1.SshTraceEventIds.sessionRequestFailed, 'Session request blocked because the session is not yet authenticated.');\r\n            result = false;\r\n        }\r\n        else {\r\n            const args = new sshRequestEventArgs_1.SshRequestEventArgs(message.requestType || '', message, this.principal, cancellation);\r\n            const serviceType = (0, serviceActivation_1.findService)(this.config.services, (a) => a.sessionRequest === message.requestType);\r\n            if (serviceType) {\r\n                // A service was configured for activation via this session request type.\r\n                const service = this.activateService(serviceType);\r\n                // `onSessionRequest` should really be 'protected internal'.\r\n                await service.onSessionRequest(args, cancellation);\r\n            }\r\n            else {\r\n                // Raise a request event to let an event listener handle this request.\r\n                this.raiseSessionRequest(args);\r\n            }\r\n            // TODO: do not block requests in TS (similar to CS)\r\n            // see https://dev.azure.com/devdiv/DevDiv/_git/SSH/commit/0b84a48811e2f015107c73bf4584b6c3b676a6de\r\n            if (args.responsePromise) {\r\n                response = await args.responsePromise;\r\n                result = response instanceof transportMessages_1.SessionRequestSuccessMessage;\r\n            }\r\n            else {\r\n                result = args.isAuthorized || false;\r\n            }\r\n        }\r\n        if (message.wantReply) {\r\n            if (result) {\r\n                if (!(response instanceof transportMessages_1.SessionRequestSuccessMessage)) {\r\n                    response = new transportMessages_1.SessionRequestSuccessMessage();\r\n                }\r\n            }\r\n            else {\r\n                if (!(response instanceof transportMessages_1.SessionRequestFailureMessage)) {\r\n                    response = new transportMessages_1.SessionRequestFailureMessage();\r\n                }\r\n            }\r\n            await this.sendMessage(response, cancellation);\r\n        }\r\n    }\r\n    /* @internal */\r\n    raiseSessionRequest(args) {\r\n        this.requestEmitter.fire(args);\r\n    }\r\n    /* @internal */\r\n    async handleServiceRequestMessage(message, cancellation) {\r\n        // Do nothing. Subclasses may override.\r\n    }\r\n    /* @internal */\r\n    async handleServiceAcceptMessage(message, cancellation) {\r\n        // Do nothing. Subclasses may override.\r\n    }\r\n    async handleKeyExchangeMessage(message, cancellation) {\r\n        if (this.kexService) {\r\n            await this.kexService.handleMessage(message, cancellation);\r\n        }\r\n        else if (!(message instanceof kexMessages_1.KeyExchangeInitMessage && message.allowsNone)) {\r\n            // The other side required some security, but it's not configured here.\r\n            await this.close(transportMessages_1.SshDisconnectReason.keyExchangeFailed, 'Encryption is disabled.');\r\n        }\r\n    }\r\n    /* @internal */\r\n    async handleNewKeysMessage(message, cancellation) {\r\n        var _a;\r\n        try {\r\n            await this.blockedMessagesSemaphore.wait(cancellation);\r\n            await this.protocol.handleNewKeys(cancellation);\r\n            if ((_a = this.algorithms) === null || _a === void 0 ? void 0 : _a.isExtensionInfoRequested) {\r\n                await this.sendExtensionInfo(cancellation);\r\n            }\r\n            try {\r\n                // Send messages that were blocked during key exchange.\r\n                while (this.blockedMessages.length > 0) {\r\n                    const blockedMessage = this.blockedMessages.shift();\r\n                    if (!this.protocol)\r\n                        throw new errors_1.ObjectDisposedError(this);\r\n                    await this.protocol.sendMessage(blockedMessage, cancellation);\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!(e instanceof Error))\r\n                    throw e;\r\n                await this.close(transportMessages_1.SshDisconnectReason.protocolError, undefined, e);\r\n            }\r\n        }\r\n        finally {\r\n            this.blockedMessagesSemaphore.release();\r\n        }\r\n    }\r\n    async handleUnimplementedMessage(message, cancellation) {\r\n        if (message.unimplementedMessageType !== undefined) {\r\n            // Received a message type that is unimplemented by this side.\r\n            // Send a reply to inform the other side.\r\n            await this.sendMessage(message, cancellation);\r\n        }\r\n        else {\r\n            // This is a reply indicating this side previously sent a message type\r\n            // that is not implemented by the other side. It has already been traced.\r\n        }\r\n    }\r\n    handleDebugMessage(message) {\r\n        if (message.message) {\r\n            this.trace(message.alwaysDisplay ? trace_1.TraceLevel.Info : trace_1.TraceLevel.Verbose, trace_1.SshTraceEventIds.debugMessage, message.message);\r\n        }\r\n    }\r\n    /* @internal */\r\n    async raiseAuthenticatingEvent(args) {\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionAuthenticating, `${this} Authenticating(${args})`);\r\n        this.authenticatingEmitter.fire(args);\r\n        let authPromise = args.authenticationPromise;\r\n        if (!authPromise) {\r\n            authPromise = Promise.resolve(null);\r\n        }\r\n        const principal = await authPromise;\r\n        return principal;\r\n    }\r\n    /**\r\n     * Sends a session request and waits for a response.\r\n     *\r\n     * Note if `wantReply` is `false`, this method returns `true` immediately after sending\r\n     * the request, without waiting for a response.\r\n     *\r\n     * @returns The authorization status of the response; if `false`, the other side denied the\r\n     * request.\r\n     */\r\n    async request(request, cancellation) {\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        if (!request.wantReply) {\r\n            await this.sendMessage(request, cancellation);\r\n            return true;\r\n        }\r\n        const response = await this.requestResponse(request, transportMessages_1.SessionRequestSuccessMessage, transportMessages_1.SessionRequestFailureMessage, cancellation);\r\n        return response instanceof transportMessages_1.SessionRequestSuccessMessage;\r\n    }\r\n    /**\r\n     * Sends a session request and waits for a specific type of success or failure message.\r\n     *\r\n     * @returns The success or failure response message.\r\n     */\r\n    async requestResponse(request, successType, failureType, cancellation) {\r\n        if (!request)\r\n            throw new TypeError('Request is required.');\r\n        if (!successType)\r\n            throw new TypeError('Success response type is required.');\r\n        if (!failureType)\r\n            throw new TypeError('Failure response type is required.');\r\n        // TODO: enable sending multiple requests in TS\r\n        // see https://dev.azure.com/devdiv/DevDiv/_git/SSH/commit/0b84a48811e2f015107c73bf4584b6c3b676a6de\r\n        if (this.requestHandler) {\r\n            throw new Error('Another request is already pending.');\r\n        }\r\n        request.wantReply = true;\r\n        // Capture as a local variable because the member may change.\r\n        const requestCompletionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellation.onCancellationRequested(() => {\r\n                this.requestHandler = null;\r\n                requestCompletionSource.reject(new cancellation_1.CancellationError());\r\n            });\r\n        }\r\n        this.requestHandler = (err, result) => {\r\n            var _a, _b;\r\n            this.requestHandler = null;\r\n            if (err) {\r\n                requestCompletionSource.reject(err);\r\n            }\r\n            else if (result instanceof transportMessages_1.SessionRequestFailureMessage) {\r\n                const failure = (_a = result === null || result === void 0 ? void 0 : result.convertTo(new failureType(), true)) !== null && _a !== void 0 ? _a : null;\r\n                requestCompletionSource.resolve(failure);\r\n            }\r\n            else if (result instanceof transportMessages_1.SessionRequestSuccessMessage) {\r\n                // Make a copy of the response message because the continuation may be\r\n                // asynchronous; meanwhile the receive buffer will be re-used.\r\n                const success = (_b = result === null || result === void 0 ? void 0 : result.convertTo(new successType(), true)) !== null && _b !== void 0 ? _b : null;\r\n                requestCompletionSource.resolve(success);\r\n            }\r\n            else {\r\n                requestCompletionSource.reject(new Error('Unknown response message type.'));\r\n            }\r\n        };\r\n        await this.sendMessage(request, cancellation);\r\n        return await requestCompletionSource.promise;\r\n    }\r\n    handleRequestSuccessMessage(message) {\r\n        if (this.requestHandler) {\r\n            this.requestHandler(undefined, message);\r\n        }\r\n    }\r\n    handleRequestFailureMessage(message) {\r\n        if (this.requestHandler) {\r\n            this.requestHandler(undefined, message);\r\n        }\r\n    }\r\n    async acceptChannel(channelTypeOrCancellation, cancellation) {\r\n        const channelType = typeof channelTypeOrCancellation === 'string' ? channelTypeOrCancellation : undefined;\r\n        if (!cancellation && typeof channelTypeOrCancellation === 'object')\r\n            cancellation = channelTypeOrCancellation;\r\n        this.activateService(connectionService_1.ConnectionService);\r\n        // Prepare to accept the channel before connecting. This ensures that if the channel\r\n        // open request comes in immediately after connecting then the channel won't be missed\r\n        // in case of a task scheduling delay.\r\n        const acceptPromise = this.connectionService.acceptChannel(channelType || sshChannel_1.SshChannel.sessionChannelType, cancellation);\r\n        return await acceptPromise;\r\n    }\r\n    async openChannel(channelTypeOrOpenMessageOrCancellation, initialRequestOrCancellation, cancellation) {\r\n        let openMessage;\r\n        if (typeof channelTypeOrOpenMessageOrCancellation === 'string' ||\r\n            channelTypeOrOpenMessageOrCancellation === null) {\r\n            openMessage = new connectionMessages_1.ChannelOpenMessage();\r\n            openMessage.channelType =\r\n                channelTypeOrOpenMessageOrCancellation !== null && channelTypeOrOpenMessageOrCancellation !== void 0 ? channelTypeOrOpenMessageOrCancellation : sshChannel_1.SshChannel.sessionChannelType;\r\n        }\r\n        else if (channelTypeOrOpenMessageOrCancellation instanceof connectionMessages_1.ChannelOpenMessage) {\r\n            openMessage = channelTypeOrOpenMessageOrCancellation;\r\n        }\r\n        else {\r\n            openMessage = new connectionMessages_1.ChannelOpenMessage();\r\n            openMessage.channelType = sshChannel_1.SshChannel.sessionChannelType;\r\n            cancellation = channelTypeOrOpenMessageOrCancellation;\r\n        }\r\n        if (initialRequestOrCancellation instanceof connectionMessages_1.ChannelRequestMessage) {\r\n            return await this.openChannelWithInitialRequest(openMessage, initialRequestOrCancellation, cancellation);\r\n        }\r\n        else if (!cancellation && initialRequestOrCancellation !== null) {\r\n            cancellation = initialRequestOrCancellation;\r\n        }\r\n        this.activateService(connectionService_1.ConnectionService);\r\n        const completionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        await this.connectionService.openChannel(openMessage, completionSource, cancellation);\r\n        return await completionSource.promise;\r\n    }\r\n    async openChannelWithInitialRequest(openMessage, initialRequest, cancellation) {\r\n        var _a;\r\n        this.activateService(connectionService_1.ConnectionService);\r\n        const completionSource = new promiseCompletionSource_1.PromiseCompletionSource();\r\n        const channelId = await this.connectionService.openChannel(openMessage, completionSource, cancellation);\r\n        if (cancellation) {\r\n            if (cancellation.isCancellationRequested)\r\n                throw new cancellation_1.CancellationError();\r\n            cancellation.onCancellationRequested(() => completionSource.reject(new cancellation_1.CancellationError()));\r\n        }\r\n        let channel;\r\n        let requestResult;\r\n        const isExtensionSupported = this.config.protocolExtensions.includes(sshSessionConfiguration_1.SshProtocolExtensionNames.openChannelRequest) &&\r\n            ((_a = this.protocolExtensions) === null || _a === void 0 ? void 0 : _a.has(sshSessionConfiguration_1.SshProtocolExtensionNames.openChannelRequest));\r\n        if (isExtensionSupported === false) {\r\n            // The local or remote side definitely doesn't support this extension. Just send a\r\n            // normal channel request after waiting for the channel open confirmation.\r\n            channel = await completionSource.promise;\r\n            requestResult = await channel.request(initialRequest, cancellation);\r\n        }\r\n        else {\r\n            // The remote side does or might support this extension. If uncertain then a reply\r\n            // is required.\r\n            const wantReply = initialRequest.wantReply || isExtensionSupported === undefined;\r\n            // Send the initial channel request message BEFORE waiting for the\r\n            // channel open confirmation.\r\n            const sessionRequest = new transportMessages_1.SessionChannelRequestMessage();\r\n            sessionRequest.requestType = \"initial-channel-request@microsoft.com\" /* ExtensionRequestTypes.initialChannelRequest */;\r\n            sessionRequest.senderChannel = channelId;\r\n            sessionRequest.request = initialRequest;\r\n            sessionRequest.wantReply = wantReply;\r\n            const requestPromise = this.request(sessionRequest, cancellation);\r\n            // Wait for the channel open confirmation.\r\n            channel = await completionSource.promise;\r\n            if (!wantReply) {\r\n                requestResult = true;\r\n            }\r\n            else {\r\n                // Wait for the response to the initial channel request.\r\n                requestResult = await requestPromise;\r\n                if (!requestResult && isExtensionSupported === undefined) {\r\n                    // The initial request failed. This could be because the other side doesn't\r\n                    // support the initial-request extension or because the request was denied.\r\n                    // Try sending the request again as a regular channel request.\r\n                    requestResult = await channel.request(initialRequest);\r\n                }\r\n            }\r\n        }\r\n        if (!requestResult) {\r\n            // The regular request still failed, so close the channel and throw.\r\n            await channel.close();\r\n            throw new Error('The initial channel request was denied.');\r\n        }\r\n        return channel;\r\n    }\r\n    /* @internal */\r\n    async handleChannelOpening(args, cancellation, resolveService = true) {\r\n        if (resolveService) {\r\n            const serviceType = (0, serviceActivation_1.findService)(this.config.services, (a) => a.channelType === args.channel.channelType && !a.channelRequest);\r\n            if (serviceType) {\r\n                // A service was configured for activation via this channel type.\r\n                const service = this.activateService(serviceType);\r\n                // `onChannelOpening` should really be 'protected internal'.\r\n                await service.onChannelOpening(args, cancellation);\r\n                return;\r\n            }\r\n        }\r\n        args.cancellation = cancellation !== null && cancellation !== void 0 ? cancellation : vscode_jsonrpc_1.CancellationToken.None;\r\n        this.channelOpeningEmitter.fire(args);\r\n    }\r\n    /* @internal */\r\n    async sendExtensionInfo(cancellation) {\r\n        if (!this.protocol)\r\n            return;\r\n        const message = new transportMessages_1.ExtensionInfoMessage();\r\n        message.extensionInfo = {};\r\n        for (const extensionName of this.config.protocolExtensions) {\r\n            if (extensionName === sshSessionConfiguration_1.SshProtocolExtensionNames.serverSignatureAlgorithms) {\r\n                // Send the list of enabled host key signature algorithms.\r\n                const publicKeyAlgorithms = Array.from(new Set((0, sshAlgorithms_1.algorithmNames)(this.config.publicKeyAlgorithms))).join(',');\r\n                message.extensionInfo[extensionName] = publicKeyAlgorithms;\r\n            }\r\n            else {\r\n                message.extensionInfo[extensionName] = '';\r\n            }\r\n        }\r\n        await this.protocol.sendMessage(message, cancellation);\r\n    }\r\n    async handleExtensionInfoMessage(message, cancellation) {\r\n        if (!this.protocol) {\r\n            return;\r\n        }\r\n        this.protocol.extensions = new Map();\r\n        const proposedExtensions = message.extensionInfo;\r\n        if (!proposedExtensions) {\r\n            return;\r\n        }\r\n        for (const extensionName of this.config.protocolExtensions) {\r\n            const proposedExtension = message.extensionInfo[extensionName];\r\n            if (typeof proposedExtension === 'string') {\r\n                this.protocol.extensions.set(extensionName, proposedExtension);\r\n            }\r\n        }\r\n        if (this.protocol.extensions.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect)) {\r\n            await this.enableReconnect(cancellation);\r\n        }\r\n    }\r\n    async close(reason, message, error) {\r\n        var _a, _b, _c;\r\n        if (this.disposed || !this.connected) {\r\n            return;\r\n        }\r\n        this.connected = false;\r\n        this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionClosing, `${this} Close(${transportMessages_1.SshDisconnectReason[reason]}, \"${message || ''}\")`);\r\n        if (reason !== transportMessages_1.SshDisconnectReason.connectionLost) {\r\n            try {\r\n                const disconnectMessage = new transportMessages_1.DisconnectMessage();\r\n                disconnectMessage.reasonCode = reason;\r\n                disconnectMessage.description = message || '';\r\n                await ((_a = this.protocol) === null || _a === void 0 ? void 0 : _a.sendMessage(disconnectMessage));\r\n            }\r\n            catch (e) {\r\n                // Already disconnected.\r\n            }\r\n        }\r\n        else if (this.handleDisconnected()) {\r\n            // Keep the session in a disconnected (but not closed) state.\r\n            (_b = this.protocol) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionDisconnected, `${this} disconnected.`);\r\n            this.disconnectedEmitter.fire();\r\n            return;\r\n        }\r\n        this.disposed = true;\r\n        this.closedError = error;\r\n        error = error !== null && error !== void 0 ? error : new errors_1.SshConnectionError(message, reason);\r\n        if (error) {\r\n            (_c = this.connectionService) === null || _c === void 0 ? void 0 : _c.close(error);\r\n        }\r\n        this.closedEmitter.fire(new sshSessionClosedEventArgs_1.SshSessionClosedEventArgs(reason, message || 'Disconnected.', error));\r\n        this.dispose();\r\n    }\r\n    /* @internal */\r\n    handleDisconnected() {\r\n        var _a, _b;\r\n        this.connectPromise = undefined;\r\n        (_a = this.kexService) === null || _a === void 0 ? void 0 : _a.abortKeyExchange();\r\n        if (!((_b = this.protocolExtensions) === null || _b === void 0 ? void 0 : _b.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionReconnect))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    async handleDisconnectMessage(message) {\r\n        var _a;\r\n        const description = message.description || 'Received disconnect message.';\r\n        await this.close((_a = message.reasonCode) !== null && _a !== void 0 ? _a : transportMessages_1.SshDisconnectReason.none, description);\r\n    }\r\n    dispose(error) {\r\n        var _a, _b;\r\n        const closedError = error !== null && error !== void 0 ? error : (this.closedError instanceof errors_1.SshConnectionError\r\n            ? this.closedError\r\n            : new errors_1.SshConnectionError(this.constructor.name + ' disposed.'));\r\n        if (!this.disposed) {\r\n            this.trace(trace_1.TraceLevel.Info, trace_1.SshTraceEventIds.sessionClosing, `${this} disposed.`);\r\n            this.disposed = true;\r\n            this.closedEmitter.fire(new sshSessionClosedEventArgs_1.SshSessionClosedEventArgs(transportMessages_1.SshDisconnectReason.none, closedError.message, closedError));\r\n        }\r\n        if (this.requestHandler) {\r\n            this.requestHandler(closedError);\r\n        }\r\n        this.metrics.close();\r\n        // Dispose the connection service before other services, to ensure\r\n        // channels are disposed before services that work with them.\r\n        (_a = this.connectionService) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        for (const service of this.activatedServices.values()) {\r\n            if (service !== this.connectionService) {\r\n                service.dispose();\r\n            }\r\n        }\r\n        this.activatedServices.clear();\r\n        (_b = this.protocol) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this.protocol = undefined;\r\n    }\r\n    /* @internal */\r\n    async enableReconnect(cancellation) {\r\n        var _a;\r\n        try {\r\n            // Ensure no other messages are sent in the middle of turning this on.\r\n            await this.blockedMessagesSemaphore.wait();\r\n            // This should not be done during a key-exchange, however that should never\r\n            // be the case since the EnableSessionReconnectRequest is sent in response\r\n            // to an ExtensionInfo message which is sent in response to a NewKeys message.\r\n            // So a key exchange just finished and won't be restarted again soon.\r\n            if ((_a = this.kexService) === null || _a === void 0 ? void 0 : _a.exchanging) {\r\n                this.trace(trace_1.TraceLevel.Error, trace_1.SshTraceEventIds.sessionReconnectInitFailed, 'Failed to initialize session reconnect because a key-exchange was in-progress.');\r\n            }\r\n            else {\r\n                // Send the message indicating reconnect message tracking is starting.\r\n                const enableReconnectMessage = new transportMessages_1.SessionRequestMessage(\"enable-session-reconnect@microsoft.com\" /* ExtensionRequestTypes.enableSessionReconnect */, false);\r\n                await this.protocol.sendMessage(enableReconnectMessage, cancellation);\r\n                // Start using the protocol extensions that include an extra field or two\r\n                // with every sent message.\r\n                if (this.protocol) {\r\n                    this.protocol.outgoingMessagesHaveReconnectInfo = true;\r\n                    this.protocol.outgoingMessagesHaveLatencyInfo = this.protocol.extensions.has(sshSessionConfiguration_1.SshProtocolExtensionNames.sessionLatency);\r\n                }\r\n            }\r\n            this.blockedMessagesSemaphore.release();\r\n        }\r\n        catch (e) {\r\n            // This is not in a finally block because the semaphore must be released before\r\n            // the call to close() which tries to send a message.\r\n            this.blockedMessagesSemaphore.release();\r\n            if (e instanceof Error) {\r\n                await this.close(transportMessages_1.SshDisconnectReason.protocolError, undefined, e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /* @internal */\r\n    async createReconnectToken(previousSessionId, newSessionId) {\r\n        // To generate the reconnect token, combine the old session ID and new (re-negotiated)\r\n        // session ID and sign the result using the new negotiated HMAC algorithm and key. This\r\n        // proves that the old (secret) session ID is known while not disclosing it, and also\r\n        // prevents replay attacks.\r\n        const reconnectToken = await this.algorithms.signer.sign(buffer_1.Buffer.concat([previousSessionId, newSessionId]));\r\n        return reconnectToken;\r\n    }\r\n    /* @internal */\r\n    async verifyReconnectToken(previousSessionId, newSessionId, reconnectToken) {\r\n        const result = await this.algorithms.verifier.verify(buffer_1.Buffer.concat([previousSessionId, newSessionId]), reconnectToken);\r\n        return result;\r\n    }\r\n    /**\r\n     * Pipes one SSH session into another, relaying all data between them.\r\n     *\r\n     * Any new channels opened from the remote side of either session will be piped into a\r\n     * new channel in the other session. Any channels opened before connecting the session pipe,\r\n     * or any channels opened from the local side, will not be piped.\r\n     *\r\n     * @param toSession Session to which the current session will be connected via the pipe.\r\n     * @returns A promise that resolves when the sessions are closed.\r\n     */\r\n    pipe(toSession) {\r\n        return pipeExtensions_1.PipeExtensions.pipeSession(this, toSession);\r\n    }\r\n    toString() {\r\n        return this.constructor.name;\r\n    }\r\n}\r\nexports.SshSession = SshSession;\r\nSshSession.localVersion = sshVersionInfo_1.SshVersionInfo.getLocalVersion();\r\n//# sourceMappingURL=sshSession.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshSessionAlgorithms = void 0;\r\nclass SshSessionAlgorithms {\r\n    dispose() {\r\n        if (this.cipher)\r\n            this.cipher.dispose();\r\n        if (this.decipher)\r\n            this.decipher.dispose();\r\n        if (this.signer)\r\n            this.signer.dispose();\r\n        if (this.verifier)\r\n            this.verifier.dispose();\r\n    }\r\n}\r\nexports.SshSessionAlgorithms = SshSessionAlgorithms;\r\n//# sourceMappingURL=sshSessionAlgorithms.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshSessionConfiguration = exports.SshProtocolExtensionNames = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst sshAlgorithms_1 = require(\"./algorithms/sshAlgorithms\");\r\nconst keyExchangeService_1 = require(\"./services/keyExchangeService\");\r\nconst connectionService_1 = require(\"./services/connectionService\");\r\nconst authenticationService_1 = require(\"./services/authenticationService\");\r\nconst sshMessage_1 = require(\"./messages/sshMessage\");\r\nvar SshProtocolExtensionNames;\r\n(function (SshProtocolExtensionNames) {\r\n    /**\r\n     * Lists host key signature algorithms enabled by the sender.\r\n     *\r\n     * This is a \"standard\" protocol extension supported by most SSH implementations.\r\n     */\r\n    SshProtocolExtensionNames[\"serverSignatureAlgorithms\"] = \"server-sig-algs\";\r\n    /**\r\n     * An optimization that enables sending an initial channel request without\r\n     * waiting for a channel open confirmation message.\r\n     */\r\n    SshProtocolExtensionNames[\"openChannelRequest\"] = \"open-channel-request@microsoft.com\";\r\n    /**\r\n     * Enables reconnecting to a session that was recently disconnected.\r\n     */\r\n    SshProtocolExtensionNames[\"sessionReconnect\"] = \"session-reconnect@microsoft.com\";\r\n    /**\r\n     * Enables continual latency measurements between client and server.\r\n     *\r\n     * This extension requires that the reconnect extension is also enabled, because\r\n     * it leverages some of the session history info for reconnect to compute latency.\r\n     */\r\n    SshProtocolExtensionNames[\"sessionLatency\"] = \"session-latency@microsoft.com\";\r\n})(SshProtocolExtensionNames = exports.SshProtocolExtensionNames || (exports.SshProtocolExtensionNames = {}));\r\n/**\r\n * Specifies the sets of algorithms and other configuration for an SSH session.\r\n *\r\n * Each collection of algorithms is in order of preference. Server and client\r\n * negotiate the most-preferred algorithm that is supported by both.\r\n */\r\nclass SshSessionConfiguration {\r\n    constructor(useSecurity = true) {\r\n        /**\r\n         * Gets the protocol extensions that are enabled for the session.\r\n         */\r\n        this.protocolExtensions = [];\r\n        /**\r\n         * Gets a dictionary that maps from service types to service configuration objects.\r\n         *\r\n         * Service types must extend the `SshService` abstract class.\r\n         *\r\n         * The service configuration object is passed to the service constructor upon activation.\r\n         */\r\n        this.services = new Map();\r\n        /**\r\n         * Gets a dictionary that maps from known message numbers to message types.\r\n         *\r\n         * Message types must extend the `SshMessage` abstract class. Message subclasses that do\r\n         * not have a distinct message type from their base class must not be included in this map.\r\n         */\r\n        this.messages = new Map();\r\n        /**\r\n         * Gets the collection of algorithms that are enabled for key exchange.\r\n         *\r\n         * Client and server sides negotiate which of these algorithms will be used.\r\n         *\r\n         * If this collection includes `null`, and if negotiation selects it, then the session is\r\n         * allowed to skip key exchange and connect with no security of any kind: No key exchange,\r\n         * no authentication, no encryption, no HMAC, and no compression.\r\n         */\r\n        this.keyExchangeAlgorithms = [];\r\n        /**\r\n         * Gets the collection of algorithms that are enabled for server (host) and client\r\n         * public-key authentication.\r\n         *\r\n         * Client and server sides negotiate which of these algorithms will be used.\r\n         */\r\n        this.publicKeyAlgorithms = [];\r\n        /*\r\n         * Gets the collection of algorithms that are enabled for encryption.\r\n         *\r\n         * Client and server sides negotiate which of these algorithms will be used.\r\n         */\r\n        this.encryptionAlgorithms = [];\r\n        /**\r\n         * Gets the collection of algorithms that are enabled for message integrity (HMAC).\r\n         *\r\n         * Client and server sides negotiate which of these algorithms will be used.\r\n         */\r\n        this.hmacAlgorithms = [];\r\n        /**\r\n         * Gets the collection of algorithms that are enabled for message compression.\r\n         *\r\n         * Client and server sides negotiate which of these algorithms will be used.\r\n         */\r\n        this.compressionAlgorithms = [];\r\n        this.traceChannelDataValue = false;\r\n        this.configurationChangedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        /* @internal */\r\n        this.onConfigurationChanged = this.configurationChangedEmitter.event;\r\n        /**\r\n         * Gets or sets the number of times the server will allow a client to attempt to\r\n         * authenticate.\r\n         *\r\n         * The default value is 5.\r\n         *\r\n         * This setting applies only to server sessions. If the client has failed to authenticate\r\n         * after the maximum number of atttempts, the server will close the session.\r\n         *\r\n         * The SSH protocol allows a client to make multiple attempts to authenticate with\r\n         * the server, e.g. to find which public key algorithm a server will support, or to\r\n         * retry a mis-typed password. This maximum prevents unlimited retries, which would\r\n         * make it easier to \"guess\" a password.\r\n         *\r\n         * In certain applications the server may only support a single authentication method\r\n         * (which is not a typed password). Then it could be appropriate to set this value to 1.\r\n         */\r\n        this.maxClientAuthenticationAttempts = 5;\r\n        /**\r\n         * Gets or sets whether the client sends a key-exchange \"guess\" message before receiving\r\n         * the server's key-exchange algorithm preferences, slightly reducing the time to connect.\r\n         *\r\n         * This setting only applies to client sessions. (The server always supports the option when\r\n         * used by a client.)\r\n         *\r\n         * The \"guess\" mechanism is somewhat ambiguously defined in the SSH protocol spec, and as\r\n         * a result is not implemented or incorrectly implemented by some server implementations,\r\n         * including older versions of this library. Therefore it is disabled in the default\r\n         * configuration, and should only be enabled when connecting to a known-good server.\r\n         */\r\n        this.enableKeyExchangeGuess = false;\r\n        /* @internal */\r\n        this.keyRotationThreshold = 512 * 1024 * 1024; // 0.5 GiB;\r\n        this.protocolExtensions.push(SshProtocolExtensionNames.serverSignatureAlgorithms);\r\n        this.protocolExtensions.push(SshProtocolExtensionNames.openChannelRequest);\r\n        this.services.set(keyExchangeService_1.KeyExchangeService, null);\r\n        this.services.set(connectionService_1.ConnectionService, null);\r\n        this.services.set(authenticationService_1.AuthenticationService, null);\r\n        for (const [messageNumber, messageType] of sshMessage_1.SshMessage.index) {\r\n            this.messages.set(messageNumber, messageType);\r\n        }\r\n        if (useSecurity) {\r\n            this.keyExchangeAlgorithms.push(sshAlgorithms_1.SshAlgorithms.keyExchange.ecdhNistp384Sha384);\r\n            this.keyExchangeAlgorithms.push(sshAlgorithms_1.SshAlgorithms.keyExchange.ecdhNistp256Sha256);\r\n            this.keyExchangeAlgorithms.push(sshAlgorithms_1.SshAlgorithms.keyExchange.dhGroup16Sha512);\r\n            this.keyExchangeAlgorithms.push(sshAlgorithms_1.SshAlgorithms.keyExchange.dhGroup14Sha256);\r\n            this.publicKeyAlgorithms.push(sshAlgorithms_1.SshAlgorithms.publicKey.rsaWithSha512);\r\n            this.publicKeyAlgorithms.push(sshAlgorithms_1.SshAlgorithms.publicKey.rsaWithSha256);\r\n            this.publicKeyAlgorithms.push(sshAlgorithms_1.SshAlgorithms.publicKey.ecdsaSha2Nistp384);\r\n            this.publicKeyAlgorithms.push(sshAlgorithms_1.SshAlgorithms.publicKey.ecdsaSha2Nistp256);\r\n            ////this.encryptionAlgorithms.push(SshAlgorithms.encryption.aes256Cbc);\r\n            this.encryptionAlgorithms.push(sshAlgorithms_1.SshAlgorithms.encryption.aes256Gcm);\r\n            this.encryptionAlgorithms.push(sshAlgorithms_1.SshAlgorithms.encryption.aes256Ctr);\r\n            this.hmacAlgorithms.push(sshAlgorithms_1.SshAlgorithms.hmac.hmacSha512Etm);\r\n            this.hmacAlgorithms.push(sshAlgorithms_1.SshAlgorithms.hmac.hmacSha256Etm);\r\n            this.hmacAlgorithms.push(sshAlgorithms_1.SshAlgorithms.hmac.hmacSha512);\r\n            this.hmacAlgorithms.push(sshAlgorithms_1.SshAlgorithms.hmac.hmacSha256);\r\n        }\r\n        else {\r\n            this.keyExchangeAlgorithms.push(sshAlgorithms_1.SshAlgorithms.keyExchange.none);\r\n            this.publicKeyAlgorithms.push(sshAlgorithms_1.SshAlgorithms.publicKey.none);\r\n            this.encryptionAlgorithms.push(sshAlgorithms_1.SshAlgorithms.encryption.none);\r\n            this.hmacAlgorithms.push(sshAlgorithms_1.SshAlgorithms.hmac.none);\r\n        }\r\n        this.compressionAlgorithms.push(sshAlgorithms_1.SshAlgorithms.compression.none);\r\n    }\r\n    /**\r\n     * Adds a service to the configuration.\r\n     */\r\n    addService(serviceType, serviceConfig) {\r\n        if (this.services.has(serviceType)) {\r\n            throw new Error('Duplicate service entry.');\r\n        }\r\n        this.services.set(serviceType, serviceConfig);\r\n    }\r\n    getKeyExchangeAlgorithm(name) {\r\n        return this.getAlgorithm(name, this.keyExchangeAlgorithms);\r\n    }\r\n    getPublicKeyAlgorithm(name) {\r\n        return this.getAlgorithm(name, this.publicKeyAlgorithms);\r\n    }\r\n    getEncryptionAlgorithm(name) {\r\n        return this.getAlgorithm(name, this.encryptionAlgorithms);\r\n    }\r\n    getHmacAlgorithm(name) {\r\n        return this.getAlgorithm(name, this.hmacAlgorithms);\r\n    }\r\n    getCompressionAlgorithm(name) {\r\n        return this.getAlgorithm(name, this.compressionAlgorithms);\r\n    }\r\n    getAlgorithm(name, collection) {\r\n        const algorithm = collection.find((a) => (a ? a.name === name : false));\r\n        if (!algorithm) {\r\n            if (name === 'none') {\r\n                return null;\r\n            }\r\n            throw new Error('Algorithm not found: ' + name);\r\n        }\r\n        return algorithm;\r\n    }\r\n    get traceChannelData() {\r\n        return this.traceChannelDataValue;\r\n    }\r\n    /**\r\n     * Enables tracing of all channel data messages.\r\n     *\r\n     * Unlike other configuration, this option may be adjusted any time while the session\r\n     * is active. Channel data tracing produces a large volume of trace events, so it is\r\n     * primarily meant only for debugging.\r\n     */\r\n    set traceChannelData(value) {\r\n        if (value !== this.traceChannelDataValue) {\r\n            this.traceChannelDataValue = value;\r\n            this.configurationChangedEmitter.fire();\r\n        }\r\n    }\r\n}\r\nexports.SshSessionConfiguration = SshSessionConfiguration;\r\n//# sourceMappingURL=sshSessionConfiguration.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshStream = void 0;\r\nconst promiseCompletionSource_1 = require(\"./util/promiseCompletionSource\");\r\nconst stream_1 = require(\"stream\");\r\n/**\r\n * Adapts an SshChannel as a Readable+Writable stream.\r\n */\r\nclass SshStream extends stream_1.Duplex {\r\n    constructor(channel) {\r\n        let readPaused = null;\r\n        super({\r\n            async write(chunk, encoding, cb) {\r\n                let error;\r\n                try {\r\n                    let buffer;\r\n                    if (typeof chunk === 'string') {\r\n                        buffer = Buffer.from(chunk, encoding);\r\n                    }\r\n                    else if (chunk instanceof Buffer || chunk instanceof Uint8Array) {\r\n                        buffer = chunk;\r\n                    }\r\n                    else {\r\n                        throw new Error('Unsupported chunk type: ' + typeof chunk);\r\n                    }\r\n                    await channel.send(buffer);\r\n                }\r\n                catch (e) {\r\n                    if (!(e instanceof Error))\r\n                        throw e;\r\n                    error = e;\r\n                }\r\n                if (cb) {\r\n                    cb(error);\r\n                }\r\n            },\r\n            async writev(chunks, cb) {\r\n                let error;\r\n                try {\r\n                    if (chunks.length === 1) {\r\n                        return this.write(chunks[0].chunk, chunks[0].encoding, cb);\r\n                    }\r\n                    else {\r\n                        function BufferReduce(accumulator, chunk) {\r\n                            if (chunk.chunk instanceof Buffer || chunk.chunk instanceof Uint8Array) {\r\n                                return accumulator + chunk.chunk.length;\r\n                            }\r\n                            else {\r\n                                throw new Error('Unsupported chunk type: ' + typeof chunk.chunk);\r\n                            }\r\n                        }\r\n                        const totalLength = chunks.reduce(BufferReduce, 0);\r\n                        const singleBuffer = Buffer.alloc(totalLength);\r\n                        let singleBufferIndex = 0;\r\n                        for (let i = 0; i < chunks.length; i++) {\r\n                            chunks[i].chunk.copy(singleBuffer, singleBufferIndex);\r\n                            singleBufferIndex += chunks[i].chunk.length;\r\n                        }\r\n                        await channel.send(singleBuffer);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!(e instanceof Error))\r\n                        throw e;\r\n                    error = e;\r\n                }\r\n                if (cb) {\r\n                    cb(error);\r\n                }\r\n            },\r\n            async final(cb) {\r\n                let error;\r\n                try {\r\n                    await channel.close();\r\n                }\r\n                catch (e) {\r\n                    if (!(e instanceof Error))\r\n                        throw e;\r\n                    error = e;\r\n                }\r\n                if (cb) {\r\n                    cb(error);\r\n                }\r\n            },\r\n            read() {\r\n                if (readPaused) {\r\n                    readPaused.resolve();\r\n                    readPaused = null;\r\n                }\r\n            },\r\n        });\r\n        channel.onDataReceived(async (data) => {\r\n            const buffer = Buffer.alloc(data.length);\r\n            data.copy(buffer);\r\n            const result = this.push(buffer);\r\n            // Our flow control isn't great. Once we hit the highWaterMark,\r\n            // we stop adjusting the SSH window until our own reader has caught up,\r\n            // and then *all* the data received and buffered in the interim suddenly\r\n            // gets 'adjusted' so that we tend to be somewhat choppy about adjusting the window.\r\n            // Improving this would require that we know when the data we push gets passed to\r\n            // the Duplex reader, and I don't think there's a way to get that notification.\r\n            // So I suspect we'd have to dump Duplex and implement the stream ourselves.\r\n            if (!result) {\r\n                if (!readPaused) {\r\n                    readPaused = new promiseCompletionSource_1.PromiseCompletionSource();\r\n                }\r\n                await readPaused.promise;\r\n            }\r\n            // Notify the channel that the data has been consumed and more data may be sent.\r\n            channel.adjustWindow(buffer.length);\r\n        });\r\n        channel.onClosed(() => {\r\n            this.push(null);\r\n        });\r\n        this.channel = channel;\r\n    }\r\n    /**\r\n     * Destroys the stream and closes the underlying SSH channel.\r\n     */\r\n    destroy(error) {\r\n        void this.channel.close().catch();\r\n        super.destroy(error);\r\n        return this;\r\n    }\r\n    toString() {\r\n        return `SshStream(Channel Type: ${this.channel.channelType}, Id: ${this.channel.channelId}, RemoteId: ${this.channel.remoteChannelId})`;\r\n    }\r\n}\r\nexports.SshStream = SshStream;\r\n//# sourceMappingURL=sshStream.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshVersionInfo = void 0;\r\nconst packageJson = require(\"./package.json\");\r\nconst packageName = packageJson.name.replace(/^@\\w+\\//, ''); // Strip scope from name.\r\nconst packageVersion = packageJson.version;\r\n/**\r\n * Parses the SSH software name and version from the version string exchanged via the\r\n * initial packets sent between client and server.\r\n */\r\nclass SshVersionInfo {\r\n    /**\r\n     * Attempts to parse an SSH version string into a version info object.\r\n     */\r\n    static tryParse(versionString) {\r\n        if (!versionString) {\r\n            throw new TypeError('Version string expected.');\r\n        }\r\n        if (!versionString.startsWith('SSH-')) {\r\n            return null;\r\n        }\r\n        const firstDashIndex = 3;\r\n        const secondDashIndex = versionString.indexOf('-', firstDashIndex + 1);\r\n        if (secondDashIndex <= 0) {\r\n            return null;\r\n        }\r\n        const protocolVersion = versionString.substring(firstDashIndex + 1, secondDashIndex);\r\n        if (!/^\\d+\\.\\d+$/.test(protocolVersion)) {\r\n            return null;\r\n        }\r\n        let name;\r\n        let version;\r\n        const nameAndVersion = versionString.substring(secondDashIndex + 1);\r\n        const spaceIndex = nameAndVersion.indexOf(' ');\r\n        const lastUnderscoreBeforeSpace = nameAndVersion.lastIndexOf('_', spaceIndex >= 0 ? spaceIndex : nameAndVersion.length - 1);\r\n        if (lastUnderscoreBeforeSpace >= 0) {\r\n            name = nameAndVersion.substring(0, lastUnderscoreBeforeSpace).replace(/_/g, ' ');\r\n            // Ignore any non-digit characters after the version.\r\n            version = nameAndVersion.substring(lastUnderscoreBeforeSpace + 1);\r\n            for (let i = 0; i < version.length; i++) {\r\n                const c = version[i];\r\n                if (!(c >= '0' && c <= '9') && c !== '.') {\r\n                    version = version.substring(0, i);\r\n                    break;\r\n                }\r\n            }\r\n            if (!/^\\d+(\\.\\d+)*$/.test(version)) {\r\n                version = null;\r\n            }\r\n        }\r\n        else {\r\n            name = nameAndVersion;\r\n            version = null;\r\n        }\r\n        return new SshVersionInfo(versionString, protocolVersion, name, version);\r\n    }\r\n    /**\r\n     * Gets the version info for the current SSH library.\r\n     */\r\n    static getLocalVersion() {\r\n        const protocolVersion = '2.0';\r\n        const versionString = `SSH-${protocolVersion}-${packageName}_${packageVersion}`;\r\n        return new SshVersionInfo(versionString, protocolVersion, packageName, packageVersion);\r\n    }\r\n    constructor(versionString, protocolVersion, name, version) {\r\n        this.versionString = versionString;\r\n        this.protocolVersion = protocolVersion;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n    /** Returns the original SSH version string that was parsed. */\r\n    toString() {\r\n        return this.versionString;\r\n    }\r\n    /**\r\n     * Gets a value indicating whether this version info represents some version of\r\n     * this library.\r\n     */\r\n    get isVsSsh() {\r\n        return this.isVsSshCS || this.isVsSshTS;\r\n    }\r\n    get isVsSshCS() {\r\n        return this.name === 'Microsoft.VisualStudio.Ssh' || this.name === 'Microsoft.DevTunnels.Ssh';\r\n    }\r\n    get isVsSshTS() {\r\n        return this.name === 'vs-ssh' || this.name === 'dev-tunnels-ssh';\r\n    }\r\n}\r\nexports.SshVersionInfo = SshVersionInfo;\r\n//# sourceMappingURL=sshVersionInfo.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebSocketStream = exports.NodeStream = exports.BaseStream = void 0;\r\nconst buffer_1 = require(\"buffer\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst cancellation_1 = require(\"./util/cancellation\");\r\nconst errors_1 = require(\"./errors\");\r\nfunction handleCancellation(reject, cancellation) {\r\n    if (cancellation) {\r\n        if (cancellation.isCancellationRequested) {\r\n            reject(new cancellation_1.CancellationError());\r\n        }\r\n        else {\r\n            cancellation.onCancellationRequested(() => {\r\n                reject(new cancellation_1.CancellationError());\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class for stream adapters.\r\n */\r\nclass BaseStream {\r\n    constructor() {\r\n        this.incomingData = [];\r\n        this.pendingReads = [];\r\n        this.error = null;\r\n        this.disposed = false;\r\n        this.closedEmitter = new vscode_jsonrpc_1.Emitter();\r\n        this.closed = this.closedEmitter.event;\r\n    }\r\n    onData(data) {\r\n        while (this.pendingReads.length > 0) {\r\n            const read = this.pendingReads.shift();\r\n            if (read.count >= data.length) {\r\n                // This read operation consumes all of the incoming data.\r\n                read.resolve(data);\r\n                return;\r\n            }\r\n            else {\r\n                // This read operation consumes part of the incoming data.\r\n                const readData = data.slice(0, read.count);\r\n                data = data.slice(read.count);\r\n                read.resolve(readData);\r\n            }\r\n        }\r\n        this.incomingData.push(data);\r\n    }\r\n    onEnd() {\r\n        while (this.pendingReads.length > 0) {\r\n            const read = this.pendingReads.shift();\r\n            read.resolve(null);\r\n        }\r\n        this.incomingData.push(buffer_1.Buffer.alloc(0));\r\n    }\r\n    onError(error) {\r\n        if (!this.error) {\r\n            this.error = error;\r\n        }\r\n        while (this.pendingReads.length > 0) {\r\n            const read = this.pendingReads.shift();\r\n            read.reject(error);\r\n        }\r\n    }\r\n    async read(count, cancellation) {\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if (this.incomingData.length > 0) {\r\n            // Consume data that has already arrived.\r\n            let data = this.incomingData[0];\r\n            if (data.length === 0) {\r\n                // Reached the end of the stream.\r\n                return null;\r\n            }\r\n            else if (count >= data.length) {\r\n                // Consuming the whole chunk.\r\n                this.incomingData.shift();\r\n            }\r\n            else {\r\n                // Consuming part of the chunk.\r\n                this.incomingData[0] = data.slice(count);\r\n                data = data.slice(0, count);\r\n            }\r\n            return data;\r\n        }\r\n        else if (this.error) {\r\n            throw this.error;\r\n        }\r\n        else {\r\n            // Wait for more data to arrive.\r\n            return await new Promise((resolve, reject) => {\r\n                if (cancellation) {\r\n                    if (cancellation.isCancellationRequested) {\r\n                        reject(new cancellation_1.CancellationError());\r\n                        return;\r\n                    }\r\n                    cancellation.onCancellationRequested(() => {\r\n                        // Discard any pending reads that use this cancellation token.\r\n                        for (let i = 0; i < this.pendingReads.length; i++) {\r\n                            if (Object.is(cancellation, this.pendingReads[i].cancellation)) {\r\n                                const read = this.pendingReads.splice(i--, 1)[0];\r\n                                read.reject(new cancellation_1.CancellationError());\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                this.pendingReads.push({ count, resolve, reject, cancellation });\r\n            });\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true;\r\n            const error = new errors_1.ObjectDisposedError(this);\r\n            this.onError(error);\r\n            this.fireOnClose(error);\r\n        }\r\n    }\r\n    fireOnClose(error) {\r\n        this.closedEmitter.fire({ error });\r\n    }\r\n    get isDisposed() {\r\n        return this.disposed;\r\n    }\r\n}\r\nexports.BaseStream = BaseStream;\r\n/**\r\n * Stream adapter for a Node.js Socket, Duplex stream, or Readable/Writable stream pair.\r\n */\r\nclass NodeStream extends BaseStream {\r\n    constructor(duplexOrReadStream, writeStream) {\r\n        super();\r\n        if (!duplexOrReadStream)\r\n            throw new TypeError('Duplex or Readable/Writable stream are required.');\r\n        this.readStream = duplexOrReadStream;\r\n        this.writeStream = writeStream || duplexOrReadStream;\r\n        this.readStream.on('data', this.onData.bind(this));\r\n        this.readStream.on('end', this.onEnd.bind(this));\r\n        this.readStream.on('error', this.onError.bind(this));\r\n        this.readStream.on('close', () => {\r\n            this.onEnd();\r\n            this.fireOnClose();\r\n        });\r\n    }\r\n    async write(data, cancellation) {\r\n        if (!data)\r\n            throw new TypeError('Data is required.');\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        return new Promise((resolve, reject) => {\r\n            handleCancellation(reject, cancellation);\r\n            this.writeStream.write(data, (err) => {\r\n                if (!err) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async close(error, cancellation) {\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        await new Promise((resolve, reject) => {\r\n            handleCancellation(reject, cancellation);\r\n            this.writeStream.end(resolve);\r\n        });\r\n        this.disposed = true;\r\n        this.onError(error || new errors_1.ObjectDisposedError(this));\r\n        this.closedEmitter.fire({ error });\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            const error = new errors_1.ObjectDisposedError(this);\r\n            this.readStream.destroy(error);\r\n            this.writeStream.destroy(error);\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexports.NodeStream = NodeStream;\r\n/**\r\n * Stream adapter for a browser websocket.\r\n */\r\nclass WebSocketStream extends BaseStream {\r\n    constructor(websocket) {\r\n        super();\r\n        this.websocket = websocket;\r\n        if (!websocket)\r\n            throw new TypeError('WebSocket is required.');\r\n        if (typeof websocket.binaryType === 'string' &&\r\n            websocket.binaryType !== 'arraybuffer') {\r\n            throw new Error('WebSocket must use arraybuffer binary type.');\r\n        }\r\n        websocket.onmessage = (e) => {\r\n            this.onData(buffer_1.Buffer.from(e.data));\r\n        };\r\n        websocket.onclose = (e) => {\r\n            if (e.wasClean) {\r\n                this.onEnd();\r\n            }\r\n            else {\r\n                const error = new Error(e.reason);\r\n                error.code = e.code;\r\n                this.onError(error);\r\n            }\r\n        };\r\n    }\r\n    get protocol() {\r\n        return this.websocket.protocol;\r\n    }\r\n    async write(data, cancellation) {\r\n        if (!data)\r\n            throw new TypeError('Data is required.');\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if ('readyState' in this.websocket) {\r\n            if (this.websocket.readyState === 2 /* WebSocketReadyState.Closing */ ||\r\n                this.websocket.readyState === 3 /* WebSocketReadyState.Closed */) {\r\n                throw new DOMException('WebSocket is already in CLOSING or CLOSED state.', 'InvalidStateError');\r\n            }\r\n        }\r\n        this.websocket.send(data);\r\n    }\r\n    async close(error, cancellation) {\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if (!error) {\r\n            this.websocket.close();\r\n        }\r\n        else {\r\n            const code = typeof error.code === 'number' ? error.code : undefined;\r\n            this.websocket.close(code, error.message);\r\n        }\r\n        this.disposed = true;\r\n        this.closedEmitter.fire({ error });\r\n        this.onError(error || new Error('Stream closed.'));\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.websocket.close();\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexports.WebSocketStream = WebSocketStream;\r\n//# sourceMappingURL=streams.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SshTraceEventIds = exports.TraceLevel = void 0;\r\n/**\r\n * SSH trace event level.\r\n */\r\nvar TraceLevel;\r\n(function (TraceLevel) {\r\n    TraceLevel[\"Error\"] = \"error\";\r\n    TraceLevel[\"Warning\"] = \"warning\";\r\n    TraceLevel[\"Info\"] = \"info\";\r\n    TraceLevel[\"Verbose\"] = \"verbose\";\r\n})(TraceLevel = exports.TraceLevel || (exports.TraceLevel = {}));\r\n// Events defined below should stay in sync with those in C#.\r\nconst baseEventId = 9000;\r\nclass SshTraceEventIds {\r\n}\r\nexports.SshTraceEventIds = SshTraceEventIds;\r\n// Error / Warning events\r\nSshTraceEventIds.unknownError = baseEventId + 0;\r\nSshTraceEventIds.streamReadError = baseEventId + 1;\r\nSshTraceEventIds.streamWriteError = baseEventId + 2;\r\nSshTraceEventIds.streamCloseError = baseEventId + 3;\r\nSshTraceEventIds.sendMessageFailed = baseEventId + 4;\r\nSshTraceEventIds.receiveMessageFailed = baseEventId + 5;\r\nSshTraceEventIds.handleMessageFailed = baseEventId + 6;\r\nSshTraceEventIds.serverAuthenticationFailed = baseEventId + 7;\r\nSshTraceEventIds.clientAuthenticationFailed = baseEventId + 8;\r\nSshTraceEventIds.authenticationError = baseEventId + 9;\r\nSshTraceEventIds.channelWindowAdjustFailed = baseEventId + 10;\r\nSshTraceEventIds.channelWaitForWindowAdjust = baseEventId + 11;\r\nSshTraceEventIds.sessionReconnectInitFailed = baseEventId + 20;\r\nSshTraceEventIds.serverSessionReconnectFailed = baseEventId + 21;\r\nSshTraceEventIds.clientSessionReconnectFailed = baseEventId + 22;\r\nSshTraceEventIds.sessionRequestFailed = baseEventId + 23;\r\nSshTraceEventIds.channelRequestFailed = baseEventId + 24;\r\nSshTraceEventIds.serverListenFailed = baseEventId + 50;\r\nSshTraceEventIds.portForwardServerListenFailed = baseEventId + 51;\r\nSshTraceEventIds.portForwardRequestInvalid = baseEventId + 52;\r\nSshTraceEventIds.portForwardChannelInvalid = baseEventId + 53;\r\nSshTraceEventIds.portForwardChannelOpenFailed = baseEventId + 54;\r\nSshTraceEventIds.portForwardConnectionFailed = baseEventId + 55;\r\nSshTraceEventIds.metricsError = baseEventId + 61;\r\n// Info / Verbose events\r\nSshTraceEventIds.protocolVersion = baseEventId + 100;\r\nSshTraceEventIds.sendingMessage = baseEventId + 101;\r\nSshTraceEventIds.receivingMessage = baseEventId + 102;\r\nSshTraceEventIds.sendingChannelData = baseEventId + 103;\r\nSshTraceEventIds.receivingChannelData = baseEventId + 104;\r\nSshTraceEventIds.sessionEncrypted = baseEventId + 110;\r\nSshTraceEventIds.sessionAuthenticating = baseEventId + 111;\r\nSshTraceEventIds.sessionAuthenticated = baseEventId + 112;\r\nSshTraceEventIds.sessionClosing = baseEventId + 113;\r\nSshTraceEventIds.sessionConnecting = baseEventId + 114;\r\nSshTraceEventIds.channelOpened = baseEventId + 120;\r\nSshTraceEventIds.channelOpenFailed = baseEventId + 121;\r\nSshTraceEventIds.channelEofReceived = baseEventId + 122;\r\nSshTraceEventIds.channelClosed = baseEventId + 123;\r\nSshTraceEventIds.serverListening = baseEventId + 150;\r\nSshTraceEventIds.serverClientConnected = baseEventId + 151;\r\nSshTraceEventIds.portForwardServerListening = baseEventId + 152;\r\nSshTraceEventIds.portForwardConnectionAccepted = baseEventId + 153;\r\nSshTraceEventIds.portForwardChannelOpened = baseEventId + 154;\r\nSshTraceEventIds.portForwardChannelClosed = baseEventId + 155;\r\nSshTraceEventIds.portForwardConnectionOpened = baseEventId + 156;\r\nSshTraceEventIds.portForwardConnectionClosed = baseEventId + 157;\r\nSshTraceEventIds.sessionDisconnected = baseEventId + 160;\r\nSshTraceEventIds.clientSessionReconnecting = baseEventId + 161;\r\nSshTraceEventIds.serverSessionReconnecting = baseEventId + 162;\r\nSshTraceEventIds.clientSessionStartReconnecting = baseEventId + 163;\r\nSshTraceEventIds.algorithmNegotiation = baseEventId + 170;\r\nSshTraceEventIds.debugMessage = baseEventId + 200;\r\n//# sourceMappingURL=trace.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.withCancellation = exports.CancellationError = exports.CancellationTokenSource = exports.CancellationToken = void 0;\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return vscode_jsonrpc_1.CancellationToken; } });\r\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return vscode_jsonrpc_1.CancellationTokenSource; } });\r\n/**\r\n * Error thrown when an operation is cancelled via a CancellationToken.\r\n */\r\nclass CancellationError extends Error {\r\n    constructor(message) {\r\n        super(message || 'Operation cancelled.');\r\n    }\r\n}\r\nexports.CancellationError = CancellationError;\r\nfunction withCancellation(promise, cancellation) {\r\n    if (!cancellation) {\r\n        return promise;\r\n    }\r\n    return Promise.race([\r\n        promise,\r\n        new Promise((resolve, reject) => {\r\n            if (cancellation.isCancellationRequested) {\r\n                reject(new CancellationError());\r\n            }\r\n            else {\r\n                cancellation.onCancellationRequested(() => {\r\n                    reject(new CancellationError());\r\n                });\r\n            }\r\n        }),\r\n    ]);\r\n}\r\nexports.withCancellation = withCancellation;\r\n//# sourceMappingURL=cancellation.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PromiseCompletionSource = void 0;\r\nclass PromiseCompletionSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    resolve(result) { }\r\n    reject(e) { }\r\n}\r\nexports.PromiseCompletionSource = PromiseCompletionSource;\r\n//# sourceMappingURL=promiseCompletionSource.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Queue = void 0;\r\n/**\r\n * Generic iterable queue implementation using an auto-expanding circular array buffer.\r\n * Designed to be more efficient for high-volume use compared to a simpler JS queue using\r\n * `Array.shift()` (which would cause a lot of allocations).\r\n */\r\nclass Queue {\r\n    constructor() {\r\n        this.array = new Array();\r\n        this.first = 0;\r\n        this.count = 0;\r\n        /**\r\n         * The version is incremented upon any changes to the queue, so that any iterators can detect the\r\n         * change and become invalid. `MAX_SAFE_INTEGER` is 2^53-1 so this isn't likely to ever overflow.\r\n         */\r\n        this.version = 0;\r\n    }\r\n    /**\r\n     * Gets the current size of the queue.\r\n     */\r\n    get size() {\r\n        return this.count;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the queue.\r\n     */\r\n    enqueue(item) {\r\n        if (this.count === this.array.length) {\r\n            const newArray = new Array(Math.max(16, this.count * 2));\r\n            for (let i = 0; i < this.count; i++) {\r\n                newArray[i] = this.array[(this.first + i) % this.count];\r\n            }\r\n            this.array = newArray;\r\n            this.first = 0;\r\n        }\r\n        this.array[(this.first + this.count) % this.array.length] = item;\r\n        this.count++;\r\n        this.version++;\r\n    }\r\n    /**\r\n     * Removes an item from the front of the queue.\r\n     * @returns The removed item, or `undefined` if the queue is empty.\r\n     */\r\n    dequeue() {\r\n        if (this.count === 0)\r\n            return undefined;\r\n        const item = this.array[this.first];\r\n        this.array[this.first] = undefined; // Allow the item to be GC'd.\r\n        this.first = (this.first + 1) % this.array.length;\r\n        this.count--;\r\n        this.version++;\r\n        return item;\r\n    }\r\n    /**\r\n     * Gets the item at the front of the queue without removing it.\r\n     * @returns The front item, or `undefined` if the queue is empty.\r\n     */\r\n    peek() {\r\n        if (this.count === 0)\r\n            return undefined;\r\n        const item = this.array[this.first];\r\n        return item;\r\n    }\r\n    /**\r\n     * Clears the queue.\r\n     */\r\n    clear() {\r\n        this.first = 0;\r\n        this.count = 0;\r\n        this.array.fill(undefined); // Allow items to be GC'd.\r\n        this.version++;\r\n    }\r\n    /**\r\n     * Creates an iterator over the items in the queue.\r\n     * (Any changes to the queue will invalidate the iterator.)\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const iteratorVersion = this.version;\r\n        for (let i = 0; i < this.count; i++) {\r\n            const item = this.array[(this.first + i) % this.array.length];\r\n            yield item;\r\n            if (this.version !== iteratorVersion) {\r\n                throw new Error('Iterator is invalid due to changes in the collection.');\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Queue = Queue;\r\n//# sourceMappingURL=queue.js.map","\"use strict\";\r\n//\r\n//  Copyright (c) Microsoft Corporation. All rights reserved.\r\n//\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Semaphore = void 0;\r\nconst promiseCompletionSource_1 = require(\"./promiseCompletionSource\");\r\nconst cancellation_1 = require(\"./cancellation\");\r\nconst errors_1 = require(\"../errors\");\r\n/**\r\n * Semaphore-like object that allows multiple awaiters to coordinate exclusive access to a resource.\r\n */\r\nclass Semaphore {\r\n    /**\r\n     * Creates a new semaphore instance.\r\n     * @param initialCount Optional initial count. Defaults to 0.\r\n     */\r\n    constructor(initialCount = 0) {\r\n        this.completions = [];\r\n        this.disposed = false;\r\n        this.count = initialCount;\r\n    }\r\n    /**\r\n     * Gets the current available count of the semaphore.\r\n     */\r\n    get currentCount() {\r\n        return this.count;\r\n    }\r\n    /**\r\n     * Releases the semaphore, increasing the available count or unblicking one or more awaiters.\r\n     * @param releaseCount Optional specified count to release. Defaults to 1.\r\n     * @returns The previous count (before release).\r\n     */\r\n    release(releaseCount = 1) {\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        const previousCount = this.count;\r\n        for (; releaseCount > 0; releaseCount--) {\r\n            if (this.completions.length > 0) {\r\n                // Something is waiting on the semaphore.\r\n                // Remove and complete the wait without incrementing the count.\r\n                const completion = this.completions.shift();\r\n                completion.resolve(true);\r\n            }\r\n            else {\r\n                // Nothing is currently waiting on the semaphore. Increment the available count.\r\n                this.count++;\r\n            }\r\n        }\r\n        return previousCount;\r\n    }\r\n    /**\r\n     * Releases the semaphore, but does not throw an `ObjectDisposedError` if it is already disposed.\r\n     */\r\n    tryRelease() {\r\n        try {\r\n            this.release();\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof errors_1.ObjectDisposedError)) {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    async wait(timeoutOrCancellation, cancellation) {\r\n        const millisecondsTimeout = typeof timeoutOrCancellation === 'number' ? timeoutOrCancellation : undefined;\r\n        if (typeof cancellation === 'undefined' && typeof timeoutOrCancellation === 'object') {\r\n            cancellation = timeoutOrCancellation;\r\n        }\r\n        if (this.disposed)\r\n            throw new errors_1.ObjectDisposedError(this);\r\n        if (cancellation === null || cancellation === void 0 ? void 0 : cancellation.isCancellationRequested)\r\n            throw new cancellation_1.CancellationError();\r\n        if (this.count > 0) {\r\n            // The semaphore is available now.\r\n            this.count--;\r\n            return true;\r\n        }\r\n        else if (millisecondsTimeout === 0) {\r\n            // The semaphore is not available and the caller doesn't want to wait.\r\n            return false;\r\n        }\r\n        else {\r\n            const completion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n            this.completions.push(completion);\r\n            // Start with a promise that completes with `true` when the wait succeeds.\r\n            const promises = [completion.promise];\r\n            if (millisecondsTimeout) {\r\n                // Race against a promise that completes with `false` when the timeout expires.\r\n                promises.push(new Promise((resolve) => setTimeout(() => resolve(false), millisecondsTimeout)));\r\n            }\r\n            if (cancellation) {\r\n                // Race against a promise that throws when the cancellation token is cancelled.\r\n                const cancellationCompletion = new promiseCompletionSource_1.PromiseCompletionSource();\r\n                cancellation.onCancellationRequested(() => {\r\n                    cancellationCompletion.reject(new cancellation_1.CancellationError());\r\n                });\r\n                promises.push(cancellationCompletion.promise);\r\n            }\r\n            if (await Promise.race(promises)) {\r\n                // The wait succeeded.\r\n                return true;\r\n            }\r\n            else {\r\n                // The wait timed out. Remove the (not-completed) completion from the array.\r\n                const completionIndex = this.completions.indexOf(completion);\r\n                if (completionIndex >= 0)\r\n                    this.completions.splice(completionIndex, 1);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Disposes the semaphore and throws a diposed error to any awaiters.\r\n     */\r\n    dispose() {\r\n        if (this.disposed)\r\n            return;\r\n        this.disposed = true;\r\n        for (const completion of this.completions) {\r\n            completion.reject(new errors_1.ObjectDisposedError(this));\r\n        }\r\n        this.completions.splice(0, this.completions.length);\r\n        this.count = 0;\r\n    }\r\n}\r\nexports.Semaphore = Semaphore;\r\n//# sourceMappingURL=semaphore.js.map","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dispatch = exports.getDelay = void 0;\nvar tslib_1 = require(\"tslib\");\nvar callback_1 = require(\"../callback\");\n/* The amount of time in ms to wait before invoking the callback. */\nvar getDelay = function (startTimeInEpochMS, timeoutInMS) {\n    var elapsedTime = Date.now() - startTimeInEpochMS;\n    // increasing the timeout increases the delay by almost the same amount -- this is weird legacy behavior.\n    return Math.max((timeoutInMS !== null && timeoutInMS !== void 0 ? timeoutInMS : 300) - elapsedTime, 0);\n};\nexports.getDelay = getDelay;\n/**\n * Push an event into the dispatch queue and invoke any callbacks.\n *\n * @param event - Segment event to enqueue.\n * @param queue - Queue to dispatch against.\n * @param emitter - This is typically an instance of \"Analytics\" -- used for metrics / progress information.\n * @param options\n */\nfunction dispatch(ctx, queue, emitter, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var startTime, dispatched;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    emitter.emit('dispatch_start', ctx);\n                    startTime = Date.now();\n                    if (!queue.isEmpty()) return [3 /*break*/, 2];\n                    return [4 /*yield*/, queue.dispatchSingle(ctx)];\n                case 1:\n                    dispatched = _a.sent();\n                    return [3 /*break*/, 4];\n                case 2: return [4 /*yield*/, queue.dispatch(ctx)];\n                case 3:\n                    dispatched = _a.sent();\n                    _a.label = 4;\n                case 4:\n                    if (!(options === null || options === void 0 ? void 0 : options.callback)) return [3 /*break*/, 6];\n                    return [4 /*yield*/, (0, callback_1.invokeCallback)(dispatched, options.callback, (0, exports.getDelay)(startTime, options.timeout))];\n                case 5:\n                    dispatched = _a.sent();\n                    _a.label = 6;\n                case 6:\n                    if (options === null || options === void 0 ? void 0 : options.debug) {\n                        dispatched.flush();\n                    }\n                    return [2 /*return*/, dispatched];\n            }\n        });\n    });\n}\nexports.dispatch = dispatch;\n//# sourceMappingURL=dispatch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invokeCallback = exports.sleep = exports.pTimeout = void 0;\nfunction pTimeout(promise, timeout) {\n    return new Promise(function (resolve, reject) {\n        var timeoutId = setTimeout(function () {\n            reject(Error('Promise timed out'));\n        }, timeout);\n        promise\n            .then(function (val) {\n            clearTimeout(timeoutId);\n            return resolve(val);\n        })\n            .catch(reject);\n    });\n}\nexports.pTimeout = pTimeout;\nfunction sleep(timeoutInMs) {\n    return new Promise(function (resolve) { return setTimeout(resolve, timeoutInMs); });\n}\nexports.sleep = sleep;\n/**\n * @param ctx\n * @param callback - the function to invoke\n * @param delay - aka \"timeout\". The amount of time in ms to wait before invoking the callback.\n */\nfunction invokeCallback(ctx, callback, delay) {\n    var cb = function () {\n        try {\n            return Promise.resolve(callback(ctx));\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    };\n    return (sleep(delay)\n        // pTimeout ensures that the callback can't cause the context to hang\n        .then(function () { return pTimeout(cb(), 1000); })\n        .catch(function (err) {\n        ctx === null || ctx === void 0 ? void 0 : ctx.log('warn', 'Callback Error', { error: err });\n        ctx === null || ctx === void 0 ? void 0 : ctx.stats.increment('callback_error');\n    })\n        .then(function () { return ctx; }));\n}\nexports.invokeCallback = invokeCallback;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isOffline = exports.isOnline = void 0;\nvar environment_1 = require(\"../utils/environment\");\nfunction isOnline() {\n    if ((0, environment_1.isBrowser)()) {\n        return window.navigator.onLine;\n    }\n    return true;\n}\nexports.isOnline = isOnline;\nfunction isOffline() {\n    return !isOnline();\n}\nexports.isOffline = isOffline;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreContext = exports.ContextCancelation = void 0;\nvar uuid_1 = require(\"@lukeed/uuid\");\nvar dset_1 = require(\"dset\");\nvar logger_1 = require(\"../logger\");\nvar stats_1 = require(\"../stats\");\nvar ContextCancelation = /** @class */ (function () {\n    function ContextCancelation(options) {\n        var _a, _b, _c;\n        this.retry = (_a = options.retry) !== null && _a !== void 0 ? _a : true;\n        this.type = (_b = options.type) !== null && _b !== void 0 ? _b : 'plugin Error';\n        this.reason = (_c = options.reason) !== null && _c !== void 0 ? _c : '';\n    }\n    return ContextCancelation;\n}());\nexports.ContextCancelation = ContextCancelation;\nvar CoreContext = /** @class */ (function () {\n    function CoreContext(event, id, stats, logger) {\n        if (id === void 0) { id = (0, uuid_1.v4)(); }\n        if (stats === void 0) { stats = new stats_1.NullStats(); }\n        if (logger === void 0) { logger = new logger_1.CoreLogger(); }\n        this.attempts = 0;\n        this.event = event;\n        this._id = id;\n        this.logger = logger;\n        this.stats = stats;\n    }\n    CoreContext.system = function () {\n        // This should be overridden by the subclass to return an instance of the subclass.\n    };\n    CoreContext.prototype.isSame = function (other) {\n        return other.id === this.id;\n    };\n    CoreContext.prototype.cancel = function (error) {\n        if (error) {\n            throw error;\n        }\n        throw new ContextCancelation({ reason: 'Context Cancel' });\n    };\n    CoreContext.prototype.log = function (level, message, extras) {\n        this.logger.log(level, message, extras);\n    };\n    Object.defineProperty(CoreContext.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CoreContext.prototype.updateEvent = function (path, val) {\n        var _a;\n        // Don't allow integrations that are set to false to be overwritten with integration settings.\n        if (path.split('.')[0] === 'integrations') {\n            var integrationName = path.split('.')[1];\n            if (((_a = this.event.integrations) === null || _a === void 0 ? void 0 : _a[integrationName]) === false) {\n                return this.event;\n            }\n        }\n        (0, dset_1.dset)(this.event, path, val);\n        return this.event;\n    };\n    CoreContext.prototype.failedDelivery = function () {\n        return this._failedDelivery;\n    };\n    CoreContext.prototype.setFailedDelivery = function (options) {\n        this._failedDelivery = options;\n    };\n    CoreContext.prototype.logs = function () {\n        return this.logger.logs;\n    };\n    CoreContext.prototype.flush = function () {\n        this.logger.flush();\n        this.stats.flush();\n    };\n    CoreContext.prototype.toJSON = function () {\n        return {\n            id: this._id,\n            event: this.event,\n            logs: this.logger.logs,\n            metrics: this.stats.metrics,\n        };\n    };\n    return CoreContext;\n}());\nexports.CoreContext = CoreContext;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = void 0;\n/**\n * Event Emitter that takes the expected contract as a generic\n * @example\n * ```ts\n *  type Contract = {\n *    delivery_success: [DeliverySuccessResponse, Metrics],\n *    delivery_failure: [DeliveryError]\n * }\n *  new Emitter<Contract>()\n *  .on('delivery_success', (res, metrics) => ...)\n *  .on('delivery_failure', (err) => ...)\n * ```\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter() {\n        this.callbacks = {};\n    }\n    Emitter.prototype.on = function (event, callback) {\n        if (!this.callbacks[event]) {\n            this.callbacks[event] = [callback];\n        }\n        else {\n            this.callbacks[event].push(callback);\n        }\n        return this;\n    };\n    Emitter.prototype.once = function (event, callback) {\n        var _this = this;\n        var on = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this.off(event, on);\n            callback.apply(_this, args);\n        };\n        this.on(event, on);\n        return this;\n    };\n    Emitter.prototype.off = function (event, callback) {\n        var _a;\n        var fns = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n        var without = fns.filter(function (fn) { return fn !== callback; });\n        this.callbacks[event] = without;\n        return this;\n    };\n    Emitter.prototype.emit = function (event) {\n        var _this = this;\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var callbacks = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n        callbacks.forEach(function (callback) {\n            callback.apply(_this, args);\n        });\n        return this;\n    };\n    return Emitter;\n}());\nexports.Emitter = Emitter;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interface.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventFactory = void 0;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./interfaces\"), exports);\nvar dset_1 = require(\"dset\");\nvar pick_1 = require(\"../utils/pick\");\nvar assertions_1 = require(\"../validation/assertions\");\nvar EventFactory = /** @class */ (function () {\n    function EventFactory(settings) {\n        this.user = settings.user;\n        this.createMessageId = settings.createMessageId;\n    }\n    EventFactory.prototype.track = function (event, properties, options, globalIntegrations) {\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), { event: event, type: 'track', properties: properties !== null && properties !== void 0 ? properties : {}, options: tslib_1.__assign({}, options), integrations: tslib_1.__assign({}, globalIntegrations) }));\n    };\n    EventFactory.prototype.page = function (category, page, properties, options, globalIntegrations) {\n        var _a;\n        var event = {\n            type: 'page',\n            properties: tslib_1.__assign({}, properties),\n            options: tslib_1.__assign({}, options),\n            integrations: tslib_1.__assign({}, globalIntegrations),\n        };\n        if (category !== null) {\n            event.category = category;\n            event.properties = (_a = event.properties) !== null && _a !== void 0 ? _a : {};\n            event.properties.category = category;\n        }\n        if (page !== null) {\n            event.name = page;\n        }\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), event));\n    };\n    EventFactory.prototype.screen = function (category, screen, properties, options, globalIntegrations) {\n        var event = {\n            type: 'screen',\n            properties: tslib_1.__assign({}, properties),\n            options: tslib_1.__assign({}, options),\n            integrations: tslib_1.__assign({}, globalIntegrations),\n        };\n        if (category !== null) {\n            event.category = category;\n        }\n        if (screen !== null) {\n            event.name = screen;\n        }\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), event));\n    };\n    EventFactory.prototype.identify = function (userId, traits, options, globalIntegrations) {\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), { type: 'identify', userId: userId, traits: traits !== null && traits !== void 0 ? traits : {}, options: tslib_1.__assign({}, options), integrations: globalIntegrations }));\n    };\n    EventFactory.prototype.group = function (groupId, traits, options, globalIntegrations) {\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), { type: 'group', traits: traits !== null && traits !== void 0 ? traits : {}, options: tslib_1.__assign({}, options), integrations: tslib_1.__assign({}, globalIntegrations), //\n            groupId: groupId }));\n    };\n    EventFactory.prototype.alias = function (to, from, // TODO: can we make this undefined?\n    options, globalIntegrations) {\n        var base = {\n            userId: to,\n            type: 'alias',\n            options: tslib_1.__assign({}, options),\n            integrations: tslib_1.__assign({}, globalIntegrations),\n        };\n        if (from !== null) {\n            base.previousId = from;\n        }\n        if (to === undefined) {\n            return this.normalize(tslib_1.__assign(tslib_1.__assign({}, base), this.baseEvent()));\n        }\n        return this.normalize(tslib_1.__assign(tslib_1.__assign({}, this.baseEvent()), base));\n    };\n    EventFactory.prototype.baseEvent = function () {\n        var base = {\n            integrations: {},\n            options: {},\n        };\n        if (!this.user)\n            return base;\n        var user = this.user;\n        if (user.id()) {\n            base.userId = user.id();\n        }\n        if (user.anonymousId()) {\n            base.anonymousId = user.anonymousId();\n        }\n        return base;\n    };\n    /**\n     * Builds the context part of an event based on \"foreign\" keys that\n     * are provided in the `Options` parameter for an Event\n     */\n    EventFactory.prototype.context = function (options) {\n        var _a;\n        /**\n         * If the event options are known keys from this list, we move them to the top level of the event.\n         * Any other options are moved to context.\n         */\n        var eventOverrideKeys = [\n            'userId',\n            'anonymousId',\n            'timestamp',\n        ];\n        delete options['integrations'];\n        var providedOptionsKeys = Object.keys(options);\n        var context = (_a = options.context) !== null && _a !== void 0 ? _a : {};\n        var eventOverrides = {};\n        providedOptionsKeys.forEach(function (key) {\n            if (key === 'context') {\n                return;\n            }\n            if (eventOverrideKeys.includes(key)) {\n                (0, dset_1.dset)(eventOverrides, key, options[key]);\n            }\n            else {\n                (0, dset_1.dset)(context, key, options[key]);\n            }\n        });\n        return [context, eventOverrides];\n    };\n    EventFactory.prototype.normalize = function (event) {\n        var _a, _b;\n        var integrationBooleans = Object.keys((_a = event.integrations) !== null && _a !== void 0 ? _a : {}).reduce(function (integrationNames, name) {\n            var _a;\n            var _b;\n            return tslib_1.__assign(tslib_1.__assign({}, integrationNames), (_a = {}, _a[name] = Boolean((_b = event.integrations) === null || _b === void 0 ? void 0 : _b[name]), _a));\n        }, {});\n        // filter out any undefined options\n        event.options = (0, pick_1.pickBy)(event.options || {}, function (_, value) {\n            return value !== undefined;\n        });\n        // This is pretty trippy, but here's what's going on:\n        // - a) We don't pass initial integration options as part of the event, only if they're true or false\n        // - b) We do accept per integration overrides (like integrations.Amplitude.sessionId) at the event level\n        // Hence the need to convert base integration options to booleans, but maintain per event integration overrides\n        var allIntegrations = tslib_1.__assign(tslib_1.__assign({}, integrationBooleans), (_b = event.options) === null || _b === void 0 ? void 0 : _b.integrations);\n        var _c = event.options\n            ? this.context(event.options)\n            : [], context = _c[0], overrides = _c[1];\n        var options = event.options, rest = tslib_1.__rest(event, [\"options\"]);\n        var body = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ timestamp: new Date() }, rest), { integrations: allIntegrations, context: context }), overrides);\n        var evt = tslib_1.__assign(tslib_1.__assign({}, body), { messageId: this.createMessageId() });\n        (0, assertions_1.validateEvent)(evt);\n        return evt;\n    };\n    return EventFactory;\n}());\nexports.EventFactory = EventFactory;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreLogger = exports.backoff = void 0;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./emitter\"), exports);\ntslib_1.__exportStar(require(\"./emitter/interface\"), exports);\ntslib_1.__exportStar(require(\"./plugins\"), exports);\ntslib_1.__exportStar(require(\"./events/interfaces\"), exports);\ntslib_1.__exportStar(require(\"./events\"), exports);\ntslib_1.__exportStar(require(\"./callback\"), exports);\ntslib_1.__exportStar(require(\"./priority-queue\"), exports);\nvar backoff_1 = require(\"./priority-queue/backoff\");\nObject.defineProperty(exports, \"backoff\", { enumerable: true, get: function () { return backoff_1.backoff; } });\ntslib_1.__exportStar(require(\"./context\"), exports);\ntslib_1.__exportStar(require(\"./queue/event-queue\"), exports);\ntslib_1.__exportStar(require(\"./analytics\"), exports);\ntslib_1.__exportStar(require(\"./analytics/dispatch\"), exports);\ntslib_1.__exportStar(require(\"./validation/helpers\"), exports);\ntslib_1.__exportStar(require(\"./validation/assertions\"), exports);\ntslib_1.__exportStar(require(\"./utils/bind-all\"), exports);\ntslib_1.__exportStar(require(\"./stats\"), exports);\nvar logger_1 = require(\"./logger\");\nObject.defineProperty(exports, \"CoreLogger\", { enumerable: true, get: function () { return logger_1.CoreLogger; } });\ntslib_1.__exportStar(require(\"./queue/delivery\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreLogger = void 0;\nvar tslib_1 = require(\"tslib\");\nvar CoreLogger = /** @class */ (function () {\n    function CoreLogger() {\n        this._logs = [];\n    }\n    CoreLogger.prototype.log = function (level, message, extras) {\n        var time = new Date();\n        this._logs.push({\n            level: level,\n            message: message,\n            time: time,\n            extras: extras,\n        });\n    };\n    Object.defineProperty(CoreLogger.prototype, \"logs\", {\n        get: function () {\n            return this._logs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CoreLogger.prototype.flush = function () {\n        if (this.logs.length > 1) {\n            var formatted = this._logs.reduce(function (logs, log) {\n                var _a;\n                var _b, _c;\n                var line = tslib_1.__assign(tslib_1.__assign({}, log), { json: JSON.stringify(log.extras, null, ' '), extras: log.extras });\n                delete line['time'];\n                var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n                if (logs[key]) {\n                    key = \"\".concat(key, \"-\").concat(Math.random());\n                }\n                return tslib_1.__assign(tslib_1.__assign({}, logs), (_a = {}, _a[key] = line, _a));\n            }, {});\n            // ie doesn't like console.table\n            if (console.table) {\n                console.table(formatted);\n            }\n            else {\n                console.log(formatted);\n            }\n        }\n        else {\n            this.logs.forEach(function (logEntry) {\n                var level = logEntry.level, message = logEntry.message, extras = logEntry.extras;\n                if (level === 'info' || level === 'debug') {\n                    console.log(message, extras !== null && extras !== void 0 ? extras : '');\n                }\n                else {\n                    console[level](message, extras !== null && extras !== void 0 ? extras : '');\n                }\n            });\n        }\n        this._logs = [];\n    };\n    return CoreLogger;\n}());\nexports.CoreLogger = CoreLogger;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.backoff = void 0;\nfunction backoff(params) {\n    var random = Math.random() + 1;\n    var _a = params.minTimeout, minTimeout = _a === void 0 ? 500 : _a, _b = params.factor, factor = _b === void 0 ? 2 : _b, attempt = params.attempt, _c = params.maxTimeout, maxTimeout = _c === void 0 ? Infinity : _c;\n    return Math.min(random * minTimeout * Math.pow(factor, attempt), maxTimeout);\n}\nexports.backoff = backoff;\n//# sourceMappingURL=backoff.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PriorityQueue = exports.ON_REMOVE_FROM_FUTURE = void 0;\nvar tslib_1 = require(\"tslib\");\nvar emitter_1 = require(\"../emitter\");\nvar backoff_1 = require(\"./backoff\");\n/**\n * @internal\n */\nexports.ON_REMOVE_FROM_FUTURE = 'onRemoveFromFuture';\nvar PriorityQueue = /** @class */ (function (_super) {\n    tslib_1.__extends(PriorityQueue, _super);\n    function PriorityQueue(maxAttempts, queue, seen) {\n        var _this = _super.call(this) || this;\n        _this.future = [];\n        _this.maxAttempts = maxAttempts;\n        _this.queue = queue;\n        _this.seen = seen !== null && seen !== void 0 ? seen : {};\n        return _this;\n    }\n    PriorityQueue.prototype.push = function () {\n        var _this = this;\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var accepted = items.map(function (operation) {\n            var attempts = _this.updateAttempts(operation);\n            if (attempts > _this.maxAttempts || _this.includes(operation)) {\n                return false;\n            }\n            _this.queue.push(operation);\n            return true;\n        });\n        this.queue = this.queue.sort(function (a, b) { return _this.getAttempts(a) - _this.getAttempts(b); });\n        return accepted;\n    };\n    PriorityQueue.prototype.pushWithBackoff = function (item) {\n        var _this = this;\n        if (this.getAttempts(item) === 0) {\n            return this.push(item)[0];\n        }\n        var attempt = this.updateAttempts(item);\n        if (attempt > this.maxAttempts || this.includes(item)) {\n            return false;\n        }\n        var timeout = (0, backoff_1.backoff)({ attempt: attempt - 1 });\n        setTimeout(function () {\n            _this.queue.push(item);\n            // remove from future list\n            _this.future = _this.future.filter(function (f) { return f.id !== item.id; });\n            // Lets listeners know that a 'future' message is now available in the queue\n            _this.emit(exports.ON_REMOVE_FROM_FUTURE);\n        }, timeout);\n        this.future.push(item);\n        return true;\n    };\n    PriorityQueue.prototype.getAttempts = function (item) {\n        var _a;\n        return (_a = this.seen[item.id]) !== null && _a !== void 0 ? _a : 0;\n    };\n    PriorityQueue.prototype.updateAttempts = function (item) {\n        this.seen[item.id] = this.getAttempts(item) + 1;\n        return this.getAttempts(item);\n    };\n    PriorityQueue.prototype.includes = function (item) {\n        return (this.queue.includes(item) ||\n            this.future.includes(item) ||\n            Boolean(this.queue.find(function (i) { return i.id === item.id; })) ||\n            Boolean(this.future.find(function (i) { return i.id === item.id; })));\n    };\n    PriorityQueue.prototype.pop = function () {\n        return this.queue.shift();\n    };\n    Object.defineProperty(PriorityQueue.prototype, \"length\", {\n        get: function () {\n            return this.queue.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PriorityQueue.prototype, \"todo\", {\n        get: function () {\n            return this.queue.length + this.future.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return PriorityQueue;\n}(emitter_1.Emitter));\nexports.PriorityQueue = PriorityQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensure = exports.attempt = void 0;\nvar tslib_1 = require(\"tslib\");\nvar context_1 = require(\"../context\");\nfunction tryAsync(fn) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var err_1;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, fn()];\n                case 1: return [2 /*return*/, _a.sent()];\n                case 2:\n                    err_1 = _a.sent();\n                    return [2 /*return*/, Promise.reject(err_1)];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction attempt(ctx, plugin) {\n    ctx.log('debug', 'plugin', { plugin: plugin.name });\n    var start = new Date().getTime();\n    var hook = plugin[ctx.event.type];\n    if (hook === undefined) {\n        return Promise.resolve(ctx);\n    }\n    var newCtx = tryAsync(function () { return hook.apply(plugin, [ctx]); })\n        .then(function (ctx) {\n        var done = new Date().getTime() - start;\n        ctx.stats.gauge('plugin_time', done, [\"plugin:\".concat(plugin.name)]);\n        return ctx;\n    })\n        .catch(function (err) {\n        if (err instanceof context_1.ContextCancelation &&\n            err.type === 'middleware_cancellation') {\n            throw err;\n        }\n        if (err instanceof context_1.ContextCancelation) {\n            ctx.log('warn', err.type, {\n                plugin: plugin.name,\n                error: err,\n            });\n            return err;\n        }\n        ctx.log('error', 'plugin Error', {\n            plugin: plugin.name,\n            error: err,\n        });\n        ctx.stats.increment('plugin_error', 1, [\"plugin:\".concat(plugin.name)]);\n        return err;\n    });\n    return newCtx;\n}\nexports.attempt = attempt;\nfunction ensure(ctx, plugin) {\n    return attempt(ctx, plugin).then(function (newContext) {\n        if (newContext instanceof context_1.CoreContext) {\n            return newContext;\n        }\n        ctx.log('debug', 'Context canceled');\n        ctx.stats.increment('context_canceled');\n        ctx.cancel(newContext);\n    });\n}\nexports.ensure = ensure;\n//# sourceMappingURL=delivery.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreEventQueue = void 0;\nvar tslib_1 = require(\"tslib\");\nvar group_by_1 = require(\"../utils/group-by\");\nvar priority_queue_1 = require(\"../priority-queue\");\nvar context_1 = require(\"../context\");\nvar emitter_1 = require(\"../emitter\");\nvar task_group_1 = require(\"../task/task-group\");\nvar delivery_1 = require(\"./delivery\");\nvar connection_1 = require(\"../connection\");\nvar CoreEventQueue = /** @class */ (function (_super) {\n    tslib_1.__extends(CoreEventQueue, _super);\n    function CoreEventQueue(priorityQueue) {\n        var _this = _super.call(this) || this;\n        /**\n         * All event deliveries get suspended until all the tasks in this task group are complete.\n         * For example: a middleware that augments the event object should be loaded safely as a\n         * critical task, this way, event queue will wait for it to be ready before sending events.\n         *\n         * This applies to all the events already in the queue, and the upcoming ones\n         */\n        _this.criticalTasks = (0, task_group_1.createTaskGroup)();\n        _this.plugins = [];\n        _this.failedInitializations = [];\n        _this.flushing = false;\n        _this.queue = priorityQueue;\n        _this.queue.on(priority_queue_1.ON_REMOVE_FROM_FUTURE, function () {\n            _this.scheduleFlush(0);\n        });\n        return _this;\n    }\n    CoreEventQueue.prototype.register = function (ctx, plugin, instance) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve(plugin.load(ctx, instance))\n                            .then(function () {\n                            _this.plugins.push(plugin);\n                        })\n                            .catch(function (err) {\n                            if (plugin.type === 'destination') {\n                                _this.failedInitializations.push(plugin.name);\n                                console.warn(plugin.name, err);\n                                ctx.log('warn', 'Failed to load destination', {\n                                    plugin: plugin.name,\n                                    error: err,\n                                });\n                                return;\n                            }\n                            throw err;\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CoreEventQueue.prototype.deregister = function (ctx, plugin, instance) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!plugin.unload) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.resolve(plugin.unload(ctx, instance))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        this.plugins = this.plugins.filter(function (p) { return p.name !== plugin.name; });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        ctx.log('warn', 'Failed to unload destination', {\n                            plugin: plugin.name,\n                            error: e_1,\n                        });\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CoreEventQueue.prototype.dispatch = function (ctx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var willDeliver;\n            return tslib_1.__generator(this, function (_a) {\n                ctx.log('debug', 'Dispatching');\n                ctx.stats.increment('message_dispatched');\n                this.queue.push(ctx);\n                willDeliver = this.subscribeToDelivery(ctx);\n                this.scheduleFlush(0);\n                return [2 /*return*/, willDeliver];\n            });\n        });\n    };\n    CoreEventQueue.prototype.subscribeToDelivery = function (ctx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) {\n                        var onDeliver = function (flushed, delivered) {\n                            if (flushed.isSame(ctx)) {\n                                _this.off('flush', onDeliver);\n                                if (delivered) {\n                                    resolve(flushed);\n                                }\n                                else {\n                                    resolve(flushed);\n                                }\n                            }\n                        };\n                        _this.on('flush', onDeliver);\n                    })];\n            });\n        });\n    };\n    CoreEventQueue.prototype.dispatchSingle = function (ctx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                ctx.log('debug', 'Dispatching');\n                ctx.stats.increment('message_dispatched');\n                this.queue.updateAttempts(ctx);\n                ctx.attempts = 1;\n                return [2 /*return*/, this.deliver(ctx).catch(function (err) {\n                        var accepted = _this.enqueuRetry(err, ctx);\n                        if (!accepted) {\n                            ctx.setFailedDelivery({ reason: err });\n                            return ctx;\n                        }\n                        return _this.subscribeToDelivery(ctx);\n                    })];\n            });\n        });\n    };\n    CoreEventQueue.prototype.isEmpty = function () {\n        return this.queue.length === 0;\n    };\n    CoreEventQueue.prototype.scheduleFlush = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = 500; }\n        if (this.flushing) {\n            return;\n        }\n        this.flushing = true;\n        setTimeout(function () {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            _this.flush().then(function () {\n                setTimeout(function () {\n                    _this.flushing = false;\n                    if (_this.queue.length) {\n                        _this.scheduleFlush(0);\n                    }\n                }, 0);\n            });\n        }, timeout);\n    };\n    CoreEventQueue.prototype.deliver = function (ctx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var start, done, err_1, error;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.criticalTasks.done()];\n                    case 1:\n                        _a.sent();\n                        start = Date.now();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.flushOne(ctx)];\n                    case 3:\n                        ctx = _a.sent();\n                        done = Date.now() - start;\n                        this.emit('delivery_success', ctx);\n                        ctx.stats.gauge('delivered', done);\n                        ctx.log('debug', 'Delivered', ctx.event);\n                        return [2 /*return*/, ctx];\n                    case 4:\n                        err_1 = _a.sent();\n                        error = err_1;\n                        ctx.log('error', 'Failed to deliver', error);\n                        this.emit('delivery_failure', ctx, error);\n                        ctx.stats.increment('delivery_failed');\n                        throw err_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CoreEventQueue.prototype.enqueuRetry = function (err, ctx) {\n        var retriable = !(err instanceof context_1.ContextCancelation) || err.retry;\n        if (!retriable) {\n            return false;\n        }\n        return this.queue.pushWithBackoff(ctx);\n    };\n    CoreEventQueue.prototype.flush = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var ctx, err_2, accepted;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.queue.length === 0 || (0, connection_1.isOffline)()) {\n                            return [2 /*return*/, []];\n                        }\n                        ctx = this.queue.pop();\n                        if (!ctx) {\n                            return [2 /*return*/, []];\n                        }\n                        ctx.attempts = this.queue.getAttempts(ctx);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.deliver(ctx)];\n                    case 2:\n                        ctx = _a.sent();\n                        this.emit('flush', ctx, true);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _a.sent();\n                        accepted = this.enqueuRetry(err_2, ctx);\n                        if (!accepted) {\n                            ctx.setFailedDelivery({ reason: err_2 });\n                            this.emit('flush', ctx, false);\n                        }\n                        return [2 /*return*/, []];\n                    case 4: return [2 /*return*/, [ctx]];\n                }\n            });\n        });\n    };\n    CoreEventQueue.prototype.isReady = function () {\n        // return this.plugins.every((p) => p.isLoaded())\n        // should we wait for every plugin to load?\n        return true;\n    };\n    CoreEventQueue.prototype.availableExtensions = function (denyList) {\n        var available = this.plugins.filter(function (p) {\n            var _a, _b, _c;\n            // Only filter out destination plugins or the Segment.io plugin\n            if (p.type !== 'destination' && p.name !== 'Segment.io') {\n                return true;\n            }\n            var alternativeNameMatch = undefined;\n            (_a = p.alternativeNames) === null || _a === void 0 ? void 0 : _a.forEach(function (name) {\n                if (denyList[name] !== undefined) {\n                    alternativeNameMatch = denyList[name];\n                }\n            });\n            // Explicit integration option takes precedence, `All: false` does not apply to Segment.io\n            return ((_c = (_b = denyList[p.name]) !== null && _b !== void 0 ? _b : alternativeNameMatch) !== null && _c !== void 0 ? _c : (p.name === 'Segment.io' ? true : denyList.All) !== false);\n        });\n        var _a = (0, group_by_1.groupBy)(available, 'type'), _b = _a.before, before = _b === void 0 ? [] : _b, _c = _a.enrichment, enrichment = _c === void 0 ? [] : _c, _d = _a.destination, destination = _d === void 0 ? [] : _d, _e = _a.after, after = _e === void 0 ? [] : _e;\n        return {\n            before: before,\n            enrichment: enrichment,\n            destinations: destination,\n            after: after,\n        };\n    };\n    CoreEventQueue.prototype.flushOne = function (ctx) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _c, before, enrichment, _i, before_1, beforeWare, temp, _d, enrichment_1, enrichmentWare, temp, _e, destinations, after, afterCalls;\n            return tslib_1.__generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        if (!this.isReady()) {\n                            throw new Error('Not ready');\n                        }\n                        if (ctx.attempts > 1) {\n                            this.emit('delivery_retry', ctx);\n                        }\n                        _c = this.availableExtensions((_a = ctx.event.integrations) !== null && _a !== void 0 ? _a : {}), before = _c.before, enrichment = _c.enrichment;\n                        _i = 0, before_1 = before;\n                        _f.label = 1;\n                    case 1:\n                        if (!(_i < before_1.length)) return [3 /*break*/, 4];\n                        beforeWare = before_1[_i];\n                        return [4 /*yield*/, (0, delivery_1.ensure)(ctx, beforeWare)];\n                    case 2:\n                        temp = _f.sent();\n                        if (temp instanceof context_1.CoreContext) {\n                            ctx = temp;\n                        }\n                        this.emit('message_enriched', ctx, beforeWare);\n                        _f.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        _d = 0, enrichment_1 = enrichment;\n                        _f.label = 5;\n                    case 5:\n                        if (!(_d < enrichment_1.length)) return [3 /*break*/, 8];\n                        enrichmentWare = enrichment_1[_d];\n                        return [4 /*yield*/, (0, delivery_1.attempt)(ctx, enrichmentWare)];\n                    case 6:\n                        temp = _f.sent();\n                        if (temp instanceof context_1.CoreContext) {\n                            ctx = temp;\n                        }\n                        this.emit('message_enriched', ctx, enrichmentWare);\n                        _f.label = 7;\n                    case 7:\n                        _d++;\n                        return [3 /*break*/, 5];\n                    case 8:\n                        _e = this.availableExtensions((_b = ctx.event.integrations) !== null && _b !== void 0 ? _b : {}), destinations = _e.destinations, after = _e.after;\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                setTimeout(function () {\n                                    var attempts = destinations.map(function (destination) {\n                                        return (0, delivery_1.attempt)(ctx, destination);\n                                    });\n                                    Promise.all(attempts).then(resolve).catch(reject);\n                                }, 0);\n                            })];\n                    case 9:\n                        _f.sent();\n                        ctx.stats.increment('message_delivered');\n                        this.emit('message_delivered', ctx);\n                        afterCalls = after.map(function (after) { return (0, delivery_1.attempt)(ctx, after); });\n                        return [4 /*yield*/, Promise.all(afterCalls)];\n                    case 10:\n                        _f.sent();\n                        return [2 /*return*/, ctx];\n                }\n            });\n        });\n    };\n    return CoreEventQueue;\n}(emitter_1.Emitter));\nexports.CoreEventQueue = CoreEventQueue;\n//# sourceMappingURL=event-queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NullStats = exports.CoreStats = void 0;\nvar tslib_1 = require(\"tslib\");\nvar compactMetricType = function (type) {\n    var enums = {\n        gauge: 'g',\n        counter: 'c',\n    };\n    return enums[type];\n};\nvar CoreStats = /** @class */ (function () {\n    function CoreStats() {\n        this.metrics = [];\n    }\n    CoreStats.prototype.increment = function (metric, by, tags) {\n        if (by === void 0) { by = 1; }\n        this.metrics.push({\n            metric: metric,\n            value: by,\n            tags: tags !== null && tags !== void 0 ? tags : [],\n            type: 'counter',\n            timestamp: Date.now(),\n        });\n    };\n    CoreStats.prototype.gauge = function (metric, value, tags) {\n        this.metrics.push({\n            metric: metric,\n            value: value,\n            tags: tags !== null && tags !== void 0 ? tags : [],\n            type: 'gauge',\n            timestamp: Date.now(),\n        });\n    };\n    CoreStats.prototype.flush = function () {\n        var formatted = this.metrics.map(function (m) { return (tslib_1.__assign(tslib_1.__assign({}, m), { tags: m.tags.join(',') })); });\n        // ie doesn't like console.table\n        if (console.table) {\n            console.table(formatted);\n        }\n        else {\n            console.log(formatted);\n        }\n        this.metrics = [];\n    };\n    /**\n     * compact keys for smaller payload\n     */\n    CoreStats.prototype.serialize = function () {\n        return this.metrics.map(function (m) {\n            return {\n                m: m.metric,\n                v: m.value,\n                t: m.tags,\n                k: compactMetricType(m.type),\n                e: m.timestamp,\n            };\n        });\n    };\n    return CoreStats;\n}());\nexports.CoreStats = CoreStats;\nvar NullStats = /** @class */ (function (_super) {\n    tslib_1.__extends(NullStats, _super);\n    function NullStats() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NullStats.prototype.gauge = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n    };\n    NullStats.prototype.increment = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n    };\n    NullStats.prototype.flush = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n    };\n    NullStats.prototype.serialize = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n        return [];\n    };\n    return NullStats;\n}(CoreStats));\nexports.NullStats = NullStats;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTaskGroup = void 0;\nvar is_thenable_1 = require(\"../utils/is-thenable\");\nvar createTaskGroup = function () {\n    var taskCompletionPromise;\n    var resolvePromise;\n    var count = 0;\n    return {\n        done: function () { return taskCompletionPromise; },\n        run: function (op) {\n            var returnValue = op();\n            if ((0, is_thenable_1.isThenable)(returnValue)) {\n                if (++count === 1) {\n                    taskCompletionPromise = new Promise(function (res) { return (resolvePromise = res); });\n                }\n                returnValue.finally(function () { return --count === 0 && resolvePromise(); });\n            }\n            return returnValue;\n        },\n    };\n};\nexports.createTaskGroup = createTaskGroup;\n//# sourceMappingURL=task-group.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindAll = void 0;\nfunction bindAll(obj) {\n    var proto = obj.constructor.prototype;\n    for (var _i = 0, _a = Object.getOwnPropertyNames(proto); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (key !== 'constructor') {\n            var desc = Object.getOwnPropertyDescriptor(obj.constructor.prototype, key);\n            if (!!desc && typeof desc.value === 'function') {\n                obj[key] = obj[key].bind(obj);\n            }\n        }\n    }\n    return obj;\n}\nexports.bindAll = bindAll;\n//# sourceMappingURL=bind-all.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isServer = exports.isBrowser = void 0;\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\nexports.isBrowser = isBrowser;\nfunction isServer() {\n    return !isBrowser();\n}\nexports.isServer = isServer;\n//# sourceMappingURL=environment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.groupBy = void 0;\nvar tslib_1 = require(\"tslib\");\nfunction groupBy(collection, grouper) {\n    var results = {};\n    collection.forEach(function (item) {\n        var _a;\n        var key = undefined;\n        if (typeof grouper === 'string') {\n            var suggestedKey = item[grouper];\n            key =\n                typeof suggestedKey !== 'string'\n                    ? JSON.stringify(suggestedKey)\n                    : suggestedKey;\n        }\n        else if (grouper instanceof Function) {\n            key = grouper(item);\n        }\n        if (key === undefined) {\n            return;\n        }\n        results[key] = tslib_1.__spreadArray(tslib_1.__spreadArray([], ((_a = results[key]) !== null && _a !== void 0 ? _a : []), true), [item], false);\n    });\n    return results;\n}\nexports.groupBy = groupBy;\n//# sourceMappingURL=group-by.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isThenable = void 0;\n/**\n *  Check if  thenable\n *  (instanceof Promise doesn't respect realms)\n */\nvar isThenable = function (value) {\n    return typeof value === 'object' &&\n        value !== null &&\n        'then' in value &&\n        typeof value.then === 'function';\n};\nexports.isThenable = isThenable;\n//# sourceMappingURL=is-thenable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pickBy = void 0;\nvar pickBy = function (obj, fn) {\n    return Object.keys(obj)\n        .filter(function (k) { return fn(k, obj[k]); })\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n};\nexports.pickBy = pickBy;\n//# sourceMappingURL=pick.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateEvent = exports.ValidationError = void 0;\nvar tslib_1 = require(\"tslib\");\nvar helpers_1 = require(\"./helpers\");\nvar ValidationError = /** @class */ (function (_super) {\n    tslib_1.__extends(ValidationError, _super);\n    function ValidationError(field, message) {\n        var _this = _super.call(this, message) || this;\n        _this.field = field;\n        return _this;\n    }\n    return ValidationError;\n}(Error));\nexports.ValidationError = ValidationError;\nfunction validateEvent(event) {\n    if (!event || typeof event !== 'object') {\n        throw new ValidationError('event', 'Event is missing');\n    }\n    if (!(0, helpers_1.isString)(event.type)) {\n        throw new ValidationError('type', 'type is not a string');\n    }\n    if (event.type === 'track') {\n        if (!(0, helpers_1.isString)(event.event)) {\n            throw new ValidationError('event', 'Event is not a string');\n        }\n        if (!(0, helpers_1.isPlainObject)(event.properties)) {\n            throw new ValidationError('properties', 'properties is not an object');\n        }\n    }\n    if (['group', 'identify'].includes(event.type)) {\n        if (!(0, helpers_1.isPlainObject)(event.traits)) {\n            throw new ValidationError('traits', 'traits is not an object');\n        }\n    }\n    if (!(0, helpers_1.hasUser)(event)) {\n        throw new ValidationError('userId/anonymousId/previousId/groupId', 'Must have userId or anonymousId or previousId or groupId');\n    }\n}\nexports.validateEvent = validateEvent;\n//# sourceMappingURL=assertions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasUser = exports.isPlainObject = exports.isFunction = exports.isNumber = exports.isString = void 0;\nfunction isString(obj) {\n    return typeof obj === 'string';\n}\nexports.isString = isString;\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nexports.isNumber = isNumber;\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nexports.isFunction = isFunction;\nfunction isPlainObject(obj) {\n    return (Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === 'object');\n}\nexports.isPlainObject = isPlainObject;\nfunction hasUser(event) {\n    var _a, _b, _c;\n    var id = (_c = (_b = (_a = event.userId) !== null && _a !== void 0 ? _a : event.anonymousId) !== null && _b !== void 0 ? _b : event.groupId) !== null && _c !== void 0 ? _c : event.previousId;\n    return isString(id);\n}\nexports.hasUser = hasUser;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Analytics = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst settings_1 = require(\"./settings\");\nconst version_1 = require(\"../generated/version\");\nconst segmentio_1 = require(\"../plugins/segmentio\");\nconst event_factory_1 = require(\"./event-factory\");\nconst dispatch_emit_1 = require(\"./dispatch-emit\");\nconst emitter_1 = require(\"./emitter\");\nconst context_1 = require(\"./context\");\nconst event_queue_1 = require(\"./event-queue\");\nclass Analytics extends emitter_1.NodeEmitter {\n    constructor(settings) {\n        super();\n        this._isClosed = false;\n        this._pendingEvents = 0;\n        (0, settings_1.validateSettings)(settings);\n        this._eventFactory = new event_factory_1.NodeEventFactory();\n        this._queue = new event_queue_1.NodeEventQueue();\n        const flushInterval = settings.flushInterval ?? 10000;\n        this._closeAndFlushDefaultTimeout = flushInterval * 1.25; // add arbitrary multiplier in case an event is in a plugin.\n        const { plugin, publisher } = (0, segmentio_1.createConfiguredNodePlugin)({\n            writeKey: settings.writeKey,\n            host: settings.host,\n            path: settings.path,\n            maxRetries: settings.maxRetries ?? 3,\n            maxEventsInBatch: settings.maxEventsInBatch ?? 15,\n            httpRequestTimeout: settings.httpRequestTimeout,\n            flushInterval,\n        }, this);\n        this._publisher = publisher;\n        this.ready = this.register(plugin).then(() => undefined);\n        this.emit('initialize', settings);\n        (0, analytics_core_1.bindAll)(this);\n    }\n    get VERSION() {\n        return version_1.version;\n    }\n    /**\n     * Call this method to stop collecting new events and flush all existing events.\n     * This method also waits for any event method-specific callbacks to be triggered,\n     * and any of their subsequent promises to be resolved/rejected.\n     */\n    closeAndFlush({ timeout = this._closeAndFlushDefaultTimeout, } = {}) {\n        this._publisher.flushAfterClose(this._pendingEvents);\n        this._isClosed = true;\n        const promise = new Promise((resolve) => {\n            if (!this._pendingEvents) {\n                resolve();\n            }\n            else {\n                this.once('drained', () => resolve());\n            }\n        });\n        return timeout ? (0, analytics_core_1.pTimeout)(promise, timeout).catch(() => undefined) : promise;\n    }\n    _dispatch(segmentEvent, callback) {\n        if (this._isClosed) {\n            this.emit('call_after_close', segmentEvent);\n            return undefined;\n        }\n        this._pendingEvents++;\n        (0, dispatch_emit_1.dispatchAndEmit)(segmentEvent, this._queue, this, callback)\n            .catch((ctx) => ctx)\n            .finally(() => {\n            this._pendingEvents--;\n            if (!this._pendingEvents) {\n                this.emit('drained');\n            }\n        });\n    }\n    /**\n     * Combines two unassociated user identities.\n     * @link https://segment.com/docs/connections/sources/catalog/libraries/server/node/#alias\n     */\n    alias({ userId, previousId, context, timestamp, integrations }, callback) {\n        const segmentEvent = this._eventFactory.alias(userId, previousId, {\n            context,\n            integrations,\n            timestamp,\n        });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * Associates an identified user with a collective.\n     *  @link https://segment.com/docs/connections/sources/catalog/libraries/server/node/#group\n     */\n    group({ timestamp, groupId, userId, anonymousId, traits = {}, context, integrations, }, callback) {\n        const segmentEvent = this._eventFactory.group(groupId, traits, {\n            context,\n            anonymousId,\n            userId,\n            timestamp,\n            integrations,\n        });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * Includes a unique userId and (maybe anonymousId) and any optional traits you know about them.\n     * @link https://segment.com/docs/connections/sources/catalog/libraries/server/node/#identify\n     */\n    identify({ userId, anonymousId, traits = {}, context, timestamp, integrations, }, callback) {\n        const segmentEvent = this._eventFactory.identify(userId, traits, {\n            context,\n            anonymousId,\n            userId,\n            timestamp,\n            integrations,\n        });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     * @link https://segment.com/docs/connections/sources/catalog/libraries/server/node/#page\n     */\n    page({ userId, anonymousId, category, name, properties, context, timestamp, integrations, }, callback) {\n        const segmentEvent = this._eventFactory.page(category ?? null, name ?? null, properties, { context, anonymousId, userId, timestamp, integrations });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * Records screen views on your app, along with optional extra information\n     * about the screen viewed by the user.\n     *\n     * TODO: This is not documented on the segment docs ATM (for node).\n     */\n    screen({ userId, anonymousId, category, name, properties, context, timestamp, integrations, }, callback) {\n        const segmentEvent = this._eventFactory.screen(category ?? null, name ?? null, properties, { context, anonymousId, userId, timestamp, integrations });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * Records actions your users perform.\n     * @link https://segment.com/docs/connections/sources/catalog/libraries/server/node/#track\n     */\n    track({ userId, anonymousId, event, properties, context, timestamp, integrations, }, callback) {\n        const segmentEvent = this._eventFactory.track(event, properties, {\n            context,\n            userId,\n            anonymousId,\n            timestamp,\n            integrations,\n        });\n        this._dispatch(segmentEvent, callback);\n    }\n    /**\n     * Registers one or more plugins to augment Analytics functionality.\n     * @param plugins\n     */\n    register(...plugins) {\n        return this._queue.criticalTasks.run(async () => {\n            const ctx = context_1.Context.system();\n            const registrations = plugins.map((xt) => this._queue.register(ctx, xt, this));\n            await Promise.all(registrations);\n            this.emit('register', plugins.map((el) => el.name));\n        });\n    }\n    /**\n     * Deregisters one or more plugins based on their names.\n     * @param pluginNames - The names of one or more plugins to deregister.\n     */\n    async deregister(...pluginNames) {\n        const ctx = context_1.Context.system();\n        const deregistrations = pluginNames.map((pl) => {\n            const plugin = this._queue.plugins.find((p) => p.name === pl);\n            if (plugin) {\n                return this._queue.deregister(ctx, plugin, this);\n            }\n            else {\n                ctx.log('warn', `plugin ${pl} not found`);\n            }\n        });\n        await Promise.all(deregistrations);\n        this.emit('deregister', pluginNames);\n    }\n}\nexports.Analytics = Analytics;\n//# sourceMappingURL=analytics-node.js.map","\"use strict\";\n// create a derived class since we may want to add node specific things to Context later\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\n// While this is not a type, it is a definition\nclass Context extends analytics_core_1.CoreContext {\n    static system() {\n        return new this({ type: 'track', event: 'system' });\n    }\n}\nexports.Context = Context;\n//# sourceMappingURL=context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dispatchAndEmit = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst context_1 = require(\"./context\");\nconst normalizeDispatchCb = (cb) => (ctx) => {\n    const failedDelivery = ctx.failedDelivery();\n    return failedDelivery ? cb(failedDelivery.reason, ctx) : cb(undefined, ctx);\n};\n/* Dispatch function, but swallow promise rejections and use event emitter instead */\nconst dispatchAndEmit = async (event, queue, emitter, callback) => {\n    try {\n        const context = new context_1.Context(event);\n        const ctx = await (0, analytics_core_1.dispatch)(context, queue, emitter, {\n            ...(callback ? { callback: normalizeDispatchCb(callback) } : {}),\n        });\n        const failedDelivery = ctx.failedDelivery();\n        if (failedDelivery) {\n            emitter.emit('error', {\n                code: 'delivery_failure',\n                reason: failedDelivery.reason,\n                ctx: ctx,\n            });\n        }\n        else {\n            emitter.emit(event.type, ctx);\n        }\n    }\n    catch (err) {\n        emitter.emit('error', {\n            code: 'unknown',\n            reason: err,\n        });\n    }\n};\nexports.dispatchAndEmit = dispatchAndEmit;\n//# sourceMappingURL=dispatch-emit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeEmitter = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nclass NodeEmitter extends analytics_core_1.Emitter {\n}\nexports.NodeEmitter = NodeEmitter;\n//# sourceMappingURL=emitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeEventFactory = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst get_message_id_1 = require(\"../lib/get-message-id\");\nclass NodeEventFactory extends analytics_core_1.EventFactory {\n    constructor() {\n        super({ createMessageId: get_message_id_1.createMessageId });\n    }\n}\nexports.NodeEventFactory = NodeEventFactory;\n//# sourceMappingURL=event-factory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeEventQueue = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nclass NodePriorityQueue extends analytics_core_1.PriorityQueue {\n    constructor() {\n        super(1, []);\n    }\n    // do not use an internal \"seen\" map\n    getAttempts(ctx) {\n        return ctx.attempts ?? 0;\n    }\n    updateAttempts(ctx) {\n        ctx.attempts = this.getAttempts(ctx) + 1;\n        return this.getAttempts(ctx);\n    }\n}\nclass NodeEventQueue extends analytics_core_1.CoreEventQueue {\n    constructor() {\n        super(new NodePriorityQueue());\n    }\n}\nexports.NodeEventQueue = NodeEventQueue;\n//# sourceMappingURL=event-queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSettings = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst validateSettings = (settings) => {\n    if (!settings.writeKey) {\n        throw new analytics_core_1.ValidationError('writeKey', 'writeKey is missing.');\n    }\n};\nexports.validateSettings = validateSettings;\n//# sourceMappingURL=settings.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\n// This file is generated.\nexports.version = '1.0.0-beta.24';\n//# sourceMappingURL=version.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = exports.Analytics = void 0;\nvar analytics_node_1 = require(\"./app/analytics-node\");\nObject.defineProperty(exports, \"Analytics\", { enumerable: true, get: function () { return analytics_node_1.Analytics; } });\nvar context_1 = require(\"./app/context\");\nObject.defineProperty(exports, \"Context\", { enumerable: true, get: function () { return context_1.Context; } });\n// export Analytics as both a named export and a default export (for backwards-compat. reasons)\nconst analytics_node_2 = require(\"./app/analytics-node\");\nexports.default = analytics_node_2.Analytics;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abortSignalAfterTimeout = void 0;\n/**\n * use non-native event emitter for the benefit of non-node runtimes like CF workers.\n */\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst env_1 = require(\"./env\");\n/**\n * adapted from: https://www.npmjs.com/package/node-abort-controller\n */\nclass AbortSignal {\n    constructor() {\n        this.onabort = null;\n        this.aborted = false;\n        this.eventEmitter = new analytics_core_1.Emitter();\n    }\n    toString() {\n        return '[object AbortSignal]';\n    }\n    get [Symbol.toStringTag]() {\n        return 'AbortSignal';\n    }\n    removeEventListener(...args) {\n        this.eventEmitter.off(...args);\n    }\n    addEventListener(...args) {\n        this.eventEmitter.on(...args);\n    }\n    dispatchEvent(type) {\n        const event = { type, target: this };\n        const handlerName = `on${type}`;\n        if (typeof this[handlerName] === 'function') {\n            ;\n            this[handlerName](event);\n        }\n        this.eventEmitter.emit(type, event);\n    }\n}\n/**\n * This polyfill is only neccessary to support versions of node < 14.17.\n * Can be removed once node 14 support is dropped.\n */\nclass AbortController {\n    constructor() {\n        this.signal = new AbortSignal();\n    }\n    abort() {\n        if (this.signal.aborted)\n            return;\n        this.signal.aborted = true;\n        this.signal.dispatchEvent('abort');\n    }\n    toString() {\n        return '[object AbortController]';\n    }\n    get [Symbol.toStringTag]() {\n        return 'AbortController';\n    }\n}\n/**\n * @param timeoutMs - Set a request timeout, after which the request is cancelled.\n */\nconst abortSignalAfterTimeout = (timeoutMs) => {\n    if ((0, env_1.detectRuntime)() === 'cloudflare-worker') {\n        return []; // TODO: this is broken in cloudflare workers, otherwise results in \"A hanging Promise was canceled...\" error.\n    }\n    const ac = new (globalThis.AbortController || AbortController)();\n    const timeoutId = setTimeout(() => {\n        ac.abort();\n    }, timeoutMs);\n    // Allow Node.js processes to exit early if only the timeout is running\n    timeoutId?.unref?.();\n    return [ac.signal, timeoutId];\n};\nexports.abortSignalAfterTimeout = abortSignalAfterTimeout;\n//# sourceMappingURL=abort.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b64encode = void 0;\nconst buffer_1 = require(\"buffer\");\n/**\n * Base64 encoder that works in browser, worker, node runtimes.\n */\nconst b64encode = (str) => {\n    return buffer_1.Buffer.from(str).toString('base64');\n};\nexports.b64encode = b64encode;\n//# sourceMappingURL=base-64-encode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryCreateFormattedUrl = void 0;\nconst stripTrailingSlash = (str) => str.replace(/\\/$/, '');\n/**\n *\n * @param host e.g. \"http://foo.com\"\n * @param path e.g. \"/bar\"\n * @returns \"e.g.\" \"http://foo.com/bar\"\n */\nconst tryCreateFormattedUrl = (host, path) => {\n    return stripTrailingSlash(new URL(path || '', host).href);\n};\nexports.tryCreateFormattedUrl = tryCreateFormattedUrl;\n//# sourceMappingURL=create-url.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectRuntime = void 0;\nconst detectRuntime = () => {\n    if (typeof process === 'object' &&\n        process &&\n        typeof process.env === 'object' &&\n        process.env &&\n        typeof process.version === 'string') {\n        return 'node';\n    }\n    if (typeof window === 'object') {\n        return 'browser';\n    }\n    // @ts-ignore\n    if (typeof WebSocketPair !== 'undefined') {\n        return 'cloudflare-worker';\n    }\n    // @ts-ignore\n    if (typeof EdgeRuntime === 'string') {\n        return 'vercel-edge';\n    }\n    if (\n    // @ts-ignore\n    typeof WorkerGlobalScope !== 'undefined' &&\n        // @ts-ignore\n        typeof importScripts === 'function') {\n        return 'web-worker';\n    }\n    return 'unknown';\n};\nexports.detectRuntime = detectRuntime;\n//# sourceMappingURL=env.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPromiseParts = void 0;\n/**\n * Returns a promise and its associated `resolve` and `reject` methods.\n */\nfunction extractPromiseParts() {\n    let resolver;\n    let rejecter;\n    const promise = new Promise((resolve, reject) => {\n        resolver = resolve;\n        rejecter = reject;\n    });\n    return {\n        promise,\n        resolve: resolver,\n        reject: rejecter,\n    };\n}\nexports.extractPromiseParts = extractPromiseParts;\n//# sourceMappingURL=extract-promise-parts.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetch = void 0;\nconst fetch = async (...args) => {\n    if (globalThis.fetch) {\n        return globalThis.fetch(...args);\n    } // @ts-ignore\n    // This guard causes is important, as it causes dead-code elimination to be enabled inside this block.\n    else if (typeof EdgeRuntime !== 'string') {\n        // @ts-ignore\n        return (await Promise.resolve().then(() => __importStar(require('node-fetch')))).default(...args);\n    }\n    else {\n        throw new Error('Invariant: an edge runtime that does not support fetch should not exist');\n    }\n};\nexports.fetch = fetch;\n//# sourceMappingURL=fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageId = void 0;\nconst uuid_1 = require(\"./uuid\");\n/**\n * get a unique messageId with a very low chance of collisions\n * using @lukeed/uuid/secure uses the node crypto module, which is the fastest\n * @example \"node-next-1668208232027-743be593-7789-4b74-8078-cbcc8894c586\"\n */\nconst createMessageId = () => {\n    return `node-next-${Date.now()}-${(0, uuid_1.uuid)()}`;\n};\nexports.createMessageId = createMessageId;\n//# sourceMappingURL=get-message-id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uuid = void 0;\nvar uuid_1 = require(\"@lukeed/uuid\");\nObject.defineProperty(exports, \"uuid\", { enumerable: true, get: function () { return uuid_1.v4; } });\n//# sourceMappingURL=uuid.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextBatch = void 0;\nconst uuid_1 = require(\"../../lib/uuid\");\nconst MAX_EVENT_SIZE_IN_KB = 32;\nconst MAX_BATCH_SIZE_IN_KB = 480; //  (500 KB is the limit, leaving some padding)\nclass ContextBatch {\n    constructor(maxEventCount) {\n        this.id = (0, uuid_1.uuid)();\n        this.items = [];\n        this.sizeInBytes = 0;\n        this.maxEventCount = Math.max(1, maxEventCount);\n    }\n    tryAdd(item) {\n        if (this.length === this.maxEventCount)\n            return {\n                success: false,\n                message: `Event limit of ${this.maxEventCount} has been exceeded.`,\n            };\n        const eventSize = this.calculateSize(item.context);\n        if (eventSize > MAX_EVENT_SIZE_IN_KB * 1024) {\n            return {\n                success: false,\n                message: `Event exceeds maximum event size of ${MAX_EVENT_SIZE_IN_KB} KB`,\n            };\n        }\n        if (this.sizeInBytes + eventSize > MAX_BATCH_SIZE_IN_KB * 1024) {\n            return {\n                success: false,\n                message: `Event has caused batch size to exceed ${MAX_BATCH_SIZE_IN_KB} KB`,\n            };\n        }\n        this.items.push(item);\n        this.sizeInBytes += eventSize;\n        return { success: true };\n    }\n    get length() {\n        return this.items.length;\n    }\n    calculateSize(ctx) {\n        return encodeURI(JSON.stringify(ctx.event)).split(/%..|i/).length;\n    }\n    getEvents() {\n        const events = this.items.map(({ context }) => context.event);\n        return events;\n    }\n    getContexts() {\n        return this.items.map((item) => item.context);\n    }\n    resolveEvents() {\n        this.items.forEach(({ resolver, context }) => resolver(context));\n    }\n}\nexports.ContextBatch = ContextBatch;\n//# sourceMappingURL=context-batch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConfiguredNodePlugin = exports.createNodePlugin = void 0;\nconst publisher_1 = require(\"./publisher\");\nconst version_1 = require(\"../../generated/version\");\nconst env_1 = require(\"../../lib/env\");\nfunction normalizeEvent(ctx) {\n    ctx.updateEvent('context.library.name', '@segment/analytics-node');\n    ctx.updateEvent('context.library.version', version_1.version);\n    const runtime = (0, env_1.detectRuntime)();\n    if (runtime === 'node') {\n        ctx.updateEvent('_metadata.nodeVersion', process.version);\n    }\n    ctx.updateEvent('_metadata.jsRuntime', runtime);\n}\nfunction createNodePlugin(publisher) {\n    function action(ctx) {\n        normalizeEvent(ctx);\n        return publisher.enqueue(ctx);\n    }\n    return {\n        name: 'Segment.io',\n        type: 'after',\n        version: '1.0.0',\n        isLoaded: () => true,\n        load: () => Promise.resolve(),\n        alias: action,\n        group: action,\n        identify: action,\n        page: action,\n        screen: action,\n        track: action,\n    };\n}\nexports.createNodePlugin = createNodePlugin;\nconst createConfiguredNodePlugin = (props, emitter) => {\n    const publisher = new publisher_1.Publisher(props, emitter);\n    return {\n        publisher: publisher,\n        plugin: createNodePlugin(publisher),\n    };\n};\nexports.createConfiguredNodePlugin = createConfiguredNodePlugin;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Publisher = void 0;\nconst analytics_core_1 = require(\"@segment/analytics-core\");\nconst abort_1 = require(\"../../lib/abort\");\nconst create_url_1 = require(\"../../lib/create-url\");\nconst extract_promise_parts_1 = require(\"../../lib/extract-promise-parts\");\nconst fetch_1 = require(\"../../lib/fetch\");\nconst context_batch_1 = require(\"./context-batch\");\nconst base_64_encode_1 = require(\"../../lib/base-64-encode\");\nfunction sleep(timeoutInMs) {\n    return new Promise((resolve) => setTimeout(resolve, timeoutInMs));\n}\nfunction noop() { }\n/**\n * The Publisher is responsible for batching events and sending them to the Segment API.\n */\nclass Publisher {\n    constructor({ host, path, maxRetries, maxEventsInBatch, flushInterval, writeKey, httpRequestTimeout, }, emitter) {\n        this._emitter = emitter;\n        this._maxRetries = maxRetries;\n        this._maxEventsInBatch = Math.max(maxEventsInBatch, 1);\n        this._flushInterval = flushInterval;\n        this._auth = (0, base_64_encode_1.b64encode)(`${writeKey}:`);\n        this._url = (0, create_url_1.tryCreateFormattedUrl)(host ?? 'https://api.segment.io', path ?? '/v1/batch');\n        this._httpRequestTimeout = httpRequestTimeout ?? 10000;\n    }\n    createBatch() {\n        this.pendingFlushTimeout && clearTimeout(this.pendingFlushTimeout);\n        const batch = new context_batch_1.ContextBatch(this._maxEventsInBatch);\n        this._batch = batch;\n        this.pendingFlushTimeout = setTimeout(() => {\n            if (batch === this._batch) {\n                this._batch = undefined;\n            }\n            this.pendingFlushTimeout = undefined;\n            if (batch.length) {\n                this.send(batch).catch(noop);\n            }\n        }, this._flushInterval);\n        return batch;\n    }\n    clearBatch() {\n        this.pendingFlushTimeout && clearTimeout(this.pendingFlushTimeout);\n        this._batch = undefined;\n    }\n    flushAfterClose(pendingItemsCount) {\n        if (!pendingItemsCount) {\n            // if number of pending items is 0, there will never be anything else entering the batch, since the app is closed.\n            return;\n        }\n        this._closeAndFlushPendingItemsCount = pendingItemsCount;\n        // if batch is empty, there's nothing to flush, and when things come in, enqueue will handle them.\n        if (!this._batch)\n            return;\n        // the number of globally pending items will always be larger or the same as batch size.\n        // Any mismatch is because some globally pending items are in plugins.\n        const isExpectingNoMoreItems = this._batch.length === pendingItemsCount;\n        if (isExpectingNoMoreItems) {\n            this.send(this._batch).catch(noop);\n            this.clearBatch();\n        }\n    }\n    /**\n     * Enqueues the context for future delivery.\n     * @param ctx - Context containing a Segment event.\n     * @returns a promise that resolves with the context after the event has been delivered.\n     */\n    enqueue(ctx) {\n        const batch = this._batch ?? this.createBatch();\n        const { promise: ctxPromise, resolve } = (0, extract_promise_parts_1.extractPromiseParts)();\n        const pendingItem = {\n            context: ctx,\n            resolver: resolve,\n        };\n        /*\n          The following logic ensures that a batch is never orphaned,\n          and is always sent before a new batch is created.\n    \n          Add an event to the existing batch.\n            Success: Check if batch is full or no more items are expected to come in (i.e. closing). If so, send batch.\n            Failure: Assume event is too big to fit in current batch - send existing batch.\n              Add an event to the new batch.\n                Success: Check if batch is full and send if it is.\n                Failure: Event exceeds maximum size (it will never fit), fail the event.\n        */\n        const addStatus = batch.tryAdd(pendingItem);\n        if (addStatus.success) {\n            const isExpectingNoMoreItems = batch.length === this._closeAndFlushPendingItemsCount;\n            const isFull = batch.length === this._maxEventsInBatch;\n            if (isFull || isExpectingNoMoreItems) {\n                this.send(batch).catch(noop);\n                this.clearBatch();\n            }\n            return ctxPromise;\n        }\n        // If the new item causes the maximimum event size to be exceeded, send the current batch and create a new one.\n        if (batch.length) {\n            this.send(batch).catch(noop);\n            this.clearBatch();\n        }\n        const fallbackBatch = this.createBatch();\n        const fbAddStatus = fallbackBatch.tryAdd(pendingItem);\n        if (fbAddStatus.success) {\n            const isExpectingNoMoreItems = fallbackBatch.length === this._closeAndFlushPendingItemsCount;\n            if (isExpectingNoMoreItems) {\n                this.send(fallbackBatch).catch(noop);\n                this.clearBatch();\n            }\n            return ctxPromise;\n        }\n        else {\n            // this should only occur if max event size is exceeded\n            ctx.setFailedDelivery({\n                reason: new Error(fbAddStatus.message),\n            });\n            return Promise.resolve(ctx);\n        }\n    }\n    async send(batch) {\n        if (this._closeAndFlushPendingItemsCount) {\n            this._closeAndFlushPendingItemsCount -= batch.length;\n        }\n        const events = batch.getEvents();\n        const payload = JSON.stringify({ batch: events });\n        const maxAttempts = this._maxRetries + 1;\n        let currentAttempt = 0;\n        while (currentAttempt < maxAttempts) {\n            currentAttempt++;\n            let failureReason;\n            const [signal, timeoutId] = (0, abort_1.abortSignalAfterTimeout)(this._httpRequestTimeout);\n            try {\n                const requestInit = {\n                    signal: signal,\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Basic ${this._auth}`,\n                        'User-Agent': 'analytics-node-next/latest',\n                    },\n                    body: payload,\n                };\n                this._emitter.emit('http_request', {\n                    url: this._url,\n                    method: requestInit.method,\n                    headers: requestInit.headers,\n                    body: requestInit.body,\n                });\n                const response = await (0, fetch_1.fetch)(this._url, requestInit);\n                clearTimeout(timeoutId);\n                if (response.ok) {\n                    // Successfully sent events, so exit!\n                    batch.resolveEvents();\n                    return;\n                }\n                else if (response.status === 400) {\n                    // https://segment.com/docs/connections/sources/catalog/libraries/server/http-api/#max-request-size\n                    // Request either malformed or size exceeded - don't retry.\n                    resolveFailedBatch(batch, new Error(`[${response.status}] ${response.statusText}`));\n                    return;\n                }\n                else {\n                    // Treat other errors as transient and retry.\n                    failureReason = new Error(`[${response.status}] ${response.statusText}`);\n                }\n            }\n            catch (err) {\n                // Network errors get thrown, retry them.\n                failureReason = err;\n            }\n            // Final attempt failed, update context and resolve events.\n            if (currentAttempt === maxAttempts) {\n                resolveFailedBatch(batch, failureReason);\n                return;\n            }\n            // Retry after attempt-based backoff.\n            await sleep((0, analytics_core_1.backoff)({\n                attempt: currentAttempt,\n                minTimeout: 25,\n                maxTimeout: 1000,\n            }));\n        }\n    }\n}\nexports.Publisher = Publisher;\nfunction resolveFailedBatch(batch, reason) {\n    batch.getContexts().forEach((ctx) => ctx.setFailedDelivery({ reason }));\n    batch.resolveEvents();\n}\n//# sourceMappingURL=publisher.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.catchAbortError = exports.rethrowAbortError = exports.throwIfAborted = exports.isAbortError = exports.AbortError = void 0;\n/**\n * Thrown when an abortable function was aborted.\n *\n * **Warning**: do not use `instanceof` with this class. Instead, use\n * `isAbortError` function.\n */\nclass AbortError extends Error {\n    constructor() {\n        super('The operation has been aborted');\n        this.message = 'The operation has been aborted';\n        this.name = 'AbortError';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexports.AbortError = AbortError;\n/**\n * Checks whether given `error` is an `AbortError`.\n */\nfunction isAbortError(error) {\n    return (typeof error === 'object' &&\n        error !== null &&\n        error.name === 'AbortError');\n}\nexports.isAbortError = isAbortError;\n/**\n * If `signal` is aborted, throws `AbortError`. Otherwise does nothing.\n */\nfunction throwIfAborted(signal) {\n    if (signal.aborted) {\n        throw new AbortError();\n    }\n}\nexports.throwIfAborted = throwIfAborted;\n/**\n * If `error` is `AbortError`, throws it. Otherwise does nothing.\n *\n * Useful for `try/catch` blocks around abortable code:\n *\n *    try {\n *      await somethingAbortable(signal);\n *    } catch (err) {\n *      rethrowAbortError(err);\n *\n *      // do normal error handling\n *    }\n */\nfunction rethrowAbortError(error) {\n    if (isAbortError(error)) {\n        throw error;\n    }\n    return;\n}\nexports.rethrowAbortError = rethrowAbortError;\n/**\n * If `error` is `AbortError`, does nothing. Otherwise throws it.\n *\n * Useful for invoking top-level abortable functions:\n *\n *    somethingAbortable(signal).catch(catchAbortError)\n *\n * Without `catchAbortError`, aborting would result in unhandled promise\n * rejection.\n */\nfunction catchAbortError(error) {\n    if (isAbortError(error)) {\n        return;\n    }\n    throw error;\n}\nexports.catchAbortError = catchAbortError;\n//# sourceMappingURL=AbortError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abortable = void 0;\nconst execute_1 = require(\"./execute\");\n/**\n * Wrap a promise to reject with `AbortError` once `signal` is aborted.\n *\n * Useful to wrap non-abortable promises.\n * Note that underlying process will NOT be aborted.\n */\nfunction abortable(signal, promise) {\n    if (signal.aborted) {\n        // prevent unhandled rejection\n        const noop = () => { };\n        promise.then(noop, noop);\n    }\n    return (0, execute_1.execute)(signal, (resolve, reject) => {\n        promise.then(resolve, reject);\n        return () => { };\n    });\n}\nexports.abortable = abortable;\n//# sourceMappingURL=abortable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.all = void 0;\nconst AbortError_1 = require(\"./AbortError\");\nfunction all(signal, executor) {\n    return new Promise((resolve, reject) => {\n        if (signal.aborted) {\n            reject(new AbortError_1.AbortError());\n            return;\n        }\n        const innerAbortController = new AbortController();\n        const promises = executor(innerAbortController.signal);\n        if (promises.length === 0) {\n            resolve([]);\n            return;\n        }\n        const abortListener = () => {\n            innerAbortController.abort();\n        };\n        signal.addEventListener('abort', abortListener);\n        let rejection;\n        const results = new Array(promises.length);\n        let settledCount = 0;\n        function settled() {\n            settledCount += 1;\n            if (settledCount === promises.length) {\n                signal.removeEventListener('abort', abortListener);\n                if (rejection != null) {\n                    reject(rejection.reason);\n                }\n                else {\n                    resolve(results);\n                }\n            }\n        }\n        for (const [i, promise] of promises.entries()) {\n            promise.then(value => {\n                results[i] = value;\n                settled();\n            }, reason => {\n                innerAbortController.abort();\n                if (rejection == null ||\n                    (!(0, AbortError_1.isAbortError)(reason) && (0, AbortError_1.isAbortError)(rejection.reason))) {\n                    rejection = { reason };\n                }\n                settled();\n            });\n        }\n    });\n}\nexports.all = all;\n//# sourceMappingURL=all.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.delay = void 0;\nconst execute_1 = require(\"./execute\");\n/**\n * Returns a promise that fulfills after delay and rejects with\n * `AbortError` once `signal` is aborted.\n *\n * The delay time is specified as a `Date` object or as an integer denoting\n * milliseconds to wait.\n *\n * Example:\n *\n *     // Make requests repeatedly with a delay between consecutive requests\n *     while (true) {\n *       await makeRequest(signal, params);\n *       await delay(signal, 1000);\n *     }\n *\n * Example:\n *\n *     // Make requests repeatedly with a fixed interval\n *     import {addMilliseconds} from 'date-fns';\n *\n *     let date = new Date();\n *\n *     while (true) {\n *       await makeRequest(signal, params);\n *\n *       date = addMilliseconds(date, 1000);\n *       await delay(signal, date);\n *     }\n */\nfunction delay(signal, dueTime) {\n    return (0, execute_1.execute)(signal, resolve => {\n        const ms = typeof dueTime === 'number' ? dueTime : dueTime.getTime() - Date.now();\n        const timer = setTimeout(resolve, ms);\n        return () => {\n            clearTimeout(timer);\n        };\n    });\n}\nexports.delay = delay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.execute = void 0;\nconst AbortError_1 = require(\"./AbortError\");\n/**\n * Similar to `new Promise(executor)`, but allows executor to return abort\n * callback that is called once `signal` is aborted.\n *\n * Returned promise rejects with `AbortError` once `signal` is aborted.\n *\n * Callback can return a promise, e.g. for doing any async cleanup. In this\n * case, the promise returned from `execute` rejects with `AbortError` after\n * that promise fulfills.\n */\nfunction execute(signal, executor) {\n    return new Promise((resolve, reject) => {\n        if (signal.aborted) {\n            reject(new AbortError_1.AbortError());\n            return;\n        }\n        let removeAbortListener;\n        let finished = false;\n        function finish() {\n            if (!finished) {\n                finished = true;\n                if (removeAbortListener != null) {\n                    removeAbortListener();\n                }\n            }\n        }\n        const callback = executor(value => {\n            resolve(value);\n            finish();\n        }, reason => {\n            reject(reason);\n            finish();\n        });\n        if (!finished) {\n            const listener = () => {\n                const callbackResult = callback();\n                if (callbackResult == null) {\n                    reject(new AbortError_1.AbortError());\n                }\n                else {\n                    callbackResult.then(() => {\n                        reject(new AbortError_1.AbortError());\n                    }, reason => {\n                        reject(reason);\n                    });\n                }\n                finish();\n            };\n            signal.addEventListener('abort', listener);\n            removeAbortListener = () => {\n                signal.removeEventListener('abort', listener);\n            };\n        }\n    });\n}\nexports.execute = execute;\n//# sourceMappingURL=execute.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forever = void 0;\nconst execute_1 = require(\"./execute\");\n/**\n * Return a promise that never fulfills and only rejects with `AbortError` once\n * `signal` is aborted.\n */\nfunction forever(signal) {\n    return (0, execute_1.execute)(signal, () => () => { });\n}\nexports.forever = forever;\n//# sourceMappingURL=forever.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./abortable\"), exports);\n__exportStar(require(\"./AbortError\"), exports);\n__exportStar(require(\"./delay\"), exports);\n__exportStar(require(\"./execute\"), exports);\n__exportStar(require(\"./forever\"), exports);\n__exportStar(require(\"./waitForEvent\"), exports);\n__exportStar(require(\"./all\"), exports);\n__exportStar(require(\"./race\"), exports);\n__exportStar(require(\"./retry\"), exports);\n__exportStar(require(\"./spawn\"), exports);\n__exportStar(require(\"./run\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.race = void 0;\nconst AbortError_1 = require(\"./AbortError\");\n/**\n * Abortable version of `Promise.race`.\n *\n * Creates new inner `AbortSignal` and passes it to `executor`. That signal is\n * aborted when `signal` is aborted or any of the promises returned from\n * `executor` are fulfilled or rejected.\n *\n * Returns a promise that fulfills or rejects when any of the promises returned\n * from `executor` are fulfilled or rejected, and rejects with `AbortError` when\n * `signal` is aborted.\n *\n * The promises returned from `executor` must be abortable, i.e. once\n * `innerSignal` is aborted, they must reject with `AbortError` either\n * immediately, or after doing any async cleanup.\n *\n * Example:\n *\n *     const result = await race(signal, signal => [\n *       delay(signal, 1000).then(() => ({status: 'timeout'})),\n *       makeRequest(signal, params).then(value => ({status: 'success', value})),\n *     ]);\n *\n *     if (result.status === 'timeout') {\n *       // request timed out\n *     } else {\n *       const response = result.value;\n *     }\n */\nfunction race(signal, executor) {\n    return new Promise((resolve, reject) => {\n        if (signal.aborted) {\n            reject(new AbortError_1.AbortError());\n            return;\n        }\n        const innerAbortController = new AbortController();\n        const promises = executor(innerAbortController.signal);\n        const abortListener = () => {\n            innerAbortController.abort();\n        };\n        signal.addEventListener('abort', abortListener);\n        let settledCount = 0;\n        function settled(result) {\n            innerAbortController.abort();\n            settledCount += 1;\n            if (settledCount === promises.length) {\n                signal.removeEventListener('abort', abortListener);\n                if (result.status === 'fulfilled') {\n                    resolve(result.value);\n                }\n                else {\n                    reject(result.reason);\n                }\n            }\n        }\n        let result;\n        for (const promise of promises) {\n            promise.then(value => {\n                if (result == null) {\n                    result = { status: 'fulfilled', value };\n                }\n                settled(result);\n            }, reason => {\n                if (result == null ||\n                    (!(0, AbortError_1.isAbortError)(reason) &&\n                        (result.status === 'fulfilled' || (0, AbortError_1.isAbortError)(result.reason)))) {\n                    result = { status: 'rejected', reason };\n                }\n                settled(result);\n            });\n        }\n    });\n}\nexports.race = race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nconst delay_1 = require(\"./delay\");\nconst AbortError_1 = require(\"./AbortError\");\n/**\n * Retry function with exponential backoff.\n *\n * The function receives AbortSignal, attempt number starting with 0, and reset\n * function that sets attempt number to -1 so that the next attempt will be\n * made without delay.\n */\nasync function retry(signal, fn, options = {}) {\n    const { baseMs = 1000, maxDelayMs = 30000, onError, maxAttempts = Infinity, } = options;\n    let attempt = 0;\n    const reset = () => {\n        attempt = -1;\n    };\n    while (true) {\n        try {\n            return await fn(signal, attempt, reset);\n        }\n        catch (error) {\n            (0, AbortError_1.rethrowAbortError)(error);\n            if (attempt >= maxAttempts) {\n                throw error;\n            }\n            let delayMs;\n            if (attempt === -1) {\n                delayMs = 0;\n            }\n            else {\n                // https://aws.amazon.com/ru/blogs/architecture/exponential-backoff-and-jitter/\n                const backoff = Math.min(maxDelayMs, Math.pow(2, attempt) * baseMs);\n                delayMs = Math.round((backoff * (1 + Math.random())) / 2);\n            }\n            if (onError) {\n                onError(error, attempt, delayMs);\n            }\n            if (delayMs !== 0) {\n                await (0, delay_1.delay)(signal, delayMs);\n            }\n            attempt += 1;\n        }\n    }\n}\nexports.retry = retry;\n//# sourceMappingURL=retry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = void 0;\nconst AbortError_1 = require(\"./AbortError\");\n/**\n * Invokes an abortable function with implicitly created `AbortSignal`.\n *\n * Returns a function that aborts that signal and waits until passed function\n * finishes.\n *\n * Any error other than `AbortError` thrown from passed function will result in\n * unhandled promise rejection.\n *\n * Example:\n *\n *    const stop = run(async signal => {\n *      try {\n *        while (true) {\n *          await delay(signal, 1000);\n *          console.log('tick');\n *        }\n *      } finally {\n *        await doCleanup();\n *      }\n *    });\n *\n *    // abort and wait until cleanup is done\n *    await stop();\n */\nfunction run(fn) {\n    const abortController = new AbortController();\n    const promise = fn(abortController.signal).catch(AbortError_1.catchAbortError);\n    return () => {\n        abortController.abort();\n        return promise;\n    };\n}\nexports.run = run;\n//# sourceMappingURL=run.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spawn = void 0;\nconst AbortError_1 = require(\"./AbortError\");\n/**\n * Run an abortable function with `fork` and `defer` effects attached to it.\n *\n * `spawn` allows to write Go-style coroutines.\n *\n * Example:\n *\n *     // Connect to a database, then start a server, then block until abort.\n *     // On abort, gracefully shutdown the server, and once done, disconnect\n *     // from the database.\n *     spawn(signal, async (signal, {defer}) => {\n *       const db = await connectToDb();\n *\n *       defer(async () => {\n *         await db.close();\n *       });\n *\n *       const server = await startServer(db);\n *\n *       defer(async () => {\n *         await server.close();\n *       });\n *\n *       await forever(signal);\n *     });\n *\n * Example:\n *\n *     // Connect to a database, then start an infinite polling loop.\n *     // On abort, disconnect from the database.\n *     spawn(signal, async (signal, {defer}) => {\n *       const db = await connectToDb();\n *\n *       defer(async () => {\n *         await db.close();\n *       });\n *\n *       while (true) {\n *         await poll(signal, db);\n *         await delay(signal, 5000);\n *       }\n *     });\n *\n * Example:\n *\n *     // Acquire a lock and execute a function.\n *     // Extend the lock while the function is running.\n *     // Once the function finishes or the signal is aborted, stop extending\n *     // the lock and release it.\n *     import Redlock = require('redlock');\n *\n *     const lockTtl = 30_000;\n *\n *     function withLock<T>(\n *       signal: AbortSignal,\n *       redlock: Redlock,\n *       key: string,\n *       fn: (signal: AbortSignal) => Promise<T>,\n *     ): Promise<T> {\n *       return spawn(signal, async (signal, {fork, defer}) => {\n *         const lock = await redlock.lock(key, lockTtl);\n *\n *         defer(() => lock.unlock());\n *     ​\n *         fork(async signal => {\n *           while (true) {\n *             await delay(signal, lockTtl / 10);\n *             await lock.extend(lockTtl);\n *           }\n *         });\n *\n *         return await fn(signal);\n *       });\n *     }\n *\n *     const redlock = new Redlock([redis], {\n *       retryCount: -1,\n *     });\n *\n *     await withLock(signal, redlock, 'the-lock-key', async signal => {\n *       // ...\n *     });\n */\nfunction spawn(signal, fn) {\n    if (signal.aborted) {\n        return Promise.reject(new AbortError_1.AbortError());\n    }\n    const deferredFunctions = [];\n    /**\n     * Aborted when spawned function finishes\n     * or one of forked functions throws\n     * or parent signal aborted.\n     */\n    const spawnAbortController = new AbortController();\n    const spawnSignal = spawnAbortController.signal;\n    const abortSpawn = () => {\n        spawnAbortController.abort();\n    };\n    signal.addEventListener('abort', abortSpawn);\n    const removeAbortListener = () => {\n        signal.removeEventListener('abort', abortSpawn);\n    };\n    const tasks = new Set();\n    const abortTasks = () => {\n        for (const task of tasks) {\n            task.abort();\n        }\n    };\n    spawnSignal.addEventListener('abort', abortTasks);\n    const removeSpawnAbortListener = () => {\n        spawnSignal.removeEventListener('abort', abortTasks);\n    };\n    let promise = new Promise((resolve, reject) => {\n        let result;\n        let failure;\n        fork(signal => fn(signal, {\n            defer(fn) {\n                deferredFunctions.push(fn);\n            },\n            fork,\n        }))\n            .join()\n            .then(value => {\n            spawnAbortController.abort();\n            result = { value };\n        }, error => {\n            spawnAbortController.abort();\n            if (!(0, AbortError_1.isAbortError)(error) || failure == null) {\n                failure = { error };\n            }\n        });\n        function fork(forkFn) {\n            if (spawnSignal.aborted) {\n                // return already aborted task\n                return {\n                    abort() { },\n                    async join() {\n                        throw new AbortError_1.AbortError();\n                    },\n                };\n            }\n            const taskAbortController = new AbortController();\n            const taskSignal = taskAbortController.signal;\n            const taskPromise = forkFn(taskSignal);\n            const task = {\n                abort() {\n                    taskAbortController.abort();\n                },\n                join: () => taskPromise,\n            };\n            tasks.add(task);\n            taskPromise\n                .catch(AbortError_1.catchAbortError)\n                .catch(error => {\n                failure = { error };\n                // error in forked function\n                spawnAbortController.abort();\n            })\n                .finally(() => {\n                tasks.delete(task);\n                if (tasks.size === 0) {\n                    if (failure != null) {\n                        reject(failure.error);\n                    }\n                    else {\n                        resolve(result.value);\n                    }\n                }\n            });\n            return task;\n        }\n    });\n    promise = promise.finally(() => {\n        removeAbortListener();\n        removeSpawnAbortListener();\n        let deferPromise = Promise.resolve();\n        for (let i = deferredFunctions.length - 1; i >= 0; i--) {\n            deferPromise = deferPromise.finally(deferredFunctions[i]);\n        }\n        return deferPromise;\n    });\n    return promise;\n}\nexports.spawn = spawn;\n//# sourceMappingURL=spawn.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitForEvent = void 0;\nconst execute_1 = require(\"./execute\");\n/**\n * Returns a promise that fulfills when an event of specific type is emitted\n * from given event target and rejects with `AbortError` once `signal` is\n * aborted.\n *\n * Example:\n *\n *     // Create a WebSocket and wait for connection\n *     const webSocket = new WebSocket(url);\n *\n *     const openEvent = await race(signal, signal => [\n *       waitForEvent<WebSocketEventMap['open']>(signal, webSocket, 'open'),\n *       waitForEvent<WebSocketEventMap['close']>(signal, webSocket, 'close').then(\n *         event => {\n *           throw new Error(`Failed to connect to ${url}: ${event.reason}`);\n *         },\n *       ),\n *     ]);\n */\nfunction waitForEvent(signal, target, eventName, options) {\n    return (0, execute_1.execute)(signal, resolve => {\n        let unlisten;\n        let finished = false;\n        const handler = (...args) => {\n            resolve(args.length > 1 ? args : args[0]);\n            finished = true;\n            if (unlisten != null) {\n                unlisten();\n            }\n        };\n        unlisten = listen(target, eventName, handler, options);\n        if (finished) {\n            unlisten();\n        }\n        return () => {\n            finished = true;\n            if (unlisten != null) {\n                unlisten();\n            }\n        };\n    });\n}\nexports.waitForEvent = waitForEvent;\nfunction listen(target, eventName, handler, options) {\n    if (isEventTarget(target)) {\n        target.addEventListener(eventName, handler, options);\n        return () => target.removeEventListener(eventName, handler, options);\n    }\n    if (isJQueryStyleEventEmitter(target)) {\n        target.on(eventName, handler);\n        return () => target.off(eventName, handler);\n    }\n    if (isNodeStyleEventEmitter(target)) {\n        target.addListener(eventName, handler);\n        return () => target.removeListener(eventName, handler);\n    }\n    throw new Error('Invalid event target');\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return (isFunction(sourceObj.addListener) && isFunction(sourceObj.removeListener));\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return isFunction(sourceObj.on) && isFunction(sourceObj.off);\n}\nfunction isEventTarget(sourceObj) {\n    return (isFunction(sourceObj.addEventListener) &&\n        isFunction(sourceObj.removeEventListener));\n}\nconst isFunction = (obj) => typeof obj === 'function';\n//# sourceMappingURL=waitForEvent.js.map","var crypto = require('crypto')\n\n// getDiffieHellman\nexports.DiffieHellmanGroup = crypto.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = crypto.createDiffieHellmanGroup\nexports.getDiffieHellman = crypto.getDiffieHellman\n\n// createDiffieHellman\nexports.createDiffieHellman = crypto.createDiffieHellman\nexports.DiffieHellman = crypto.DiffieHellman\n","function dset(obj, keys, val) {\n\tkeys.split && (keys=keys.split('.'));\n\tvar i=0, l=keys.length, t=obj, x, k;\n\twhile (i < l) {\n\t\tk = keys[i++];\n\t\tif (k === '__proto__' || k === 'constructor' || k === 'prototype') break;\n\t\tt = t[k] = (i === l) ? val : (typeof(x=t[k])===typeof(keys)) ? x : (keys[i]*0 !== 0 || !!~(''+keys[i]).indexOf('.')) ? {} : [];\n\t}\n}\n\nexports.dset = dset;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = void 0;\nexports.Metadata = function Metadata(init) {\n    const data = new Map();\n    const metadata = {\n        set(key, value) {\n            key = normalizeKey(key);\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    data.delete(key);\n                }\n                else {\n                    for (const item of value) {\n                        validate(key, item);\n                    }\n                    data.set(key, key.endsWith('-bin') ? value : [value.join(', ')]);\n                }\n            }\n            else {\n                validate(key, value);\n                data.set(key, [value]);\n            }\n            return metadata;\n        },\n        append(key, value) {\n            key = normalizeKey(key);\n            validate(key, value);\n            let values = data.get(key);\n            if (values == null) {\n                values = [];\n                data.set(key, values);\n            }\n            values.push(value);\n            if (!key.endsWith('-bin')) {\n                data.set(key, [values.join(', ')]);\n            }\n            return metadata;\n        },\n        delete(key) {\n            key = normalizeKey(key);\n            data.delete(key);\n        },\n        get(key) {\n            var _a;\n            key = normalizeKey(key);\n            return (_a = data.get(key)) === null || _a === void 0 ? void 0 : _a[0];\n        },\n        getAll(key) {\n            var _a;\n            key = normalizeKey(key);\n            return ((_a = data.get(key)) !== null && _a !== void 0 ? _a : []);\n        },\n        has(key) {\n            key = normalizeKey(key);\n            return data.has(key);\n        },\n        [Symbol.iterator]() {\n            return data[Symbol.iterator]();\n        },\n    };\n    if (init != null) {\n        const entries = isIterable(init) ? init : Object.entries(init);\n        for (const [key, value] of entries) {\n            metadata.set(key, value);\n        }\n    }\n    return metadata;\n};\nfunction normalizeKey(key) {\n    return key.toLowerCase();\n}\nfunction validate(key, value) {\n    if (!/^[0-9a-z_.-]+$/.test(key)) {\n        throw new Error(`Metadata key '${key}' contains illegal characters`);\n    }\n    if (key.endsWith('-bin')) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`Metadata key '${key}' ends with '-bin', thus it must have binary value`);\n        }\n    }\n    else {\n        if (typeof value !== 'string') {\n            throw new Error(`Metadata key '${key}' doesn't end with '-bin', thus it must have string value`);\n        }\n        if (!/^[ -~]*$/.test(value)) {\n            throw new Error(`Metadata value '${value}' of key '${key}' contains illegal characters`);\n        }\n    }\n}\nfunction isIterable(value) {\n    return Symbol.iterator in value;\n}\n//# sourceMappingURL=Metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MethodDescriptor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\n/**\n * gRPC status code.\n *\n * See https://grpc.github.io/grpc/core/md_doc_statuscodes.html.\n */\nvar Status;\n(function (Status) {\n    /**\n     * Not an error; returned on success.\n     */\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled, typically by the caller.\n     */\n    Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error.\n     *\n     * For example, this error may be returned when a `Status` value received from\n     * another address space belongs to an error space that is not known in this\n     * address space.\n     *\n     * Also errors raised by APIs that do not return enough error information may\n     * be converted to this error.\n     */\n    Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * The client specified an invalid argument.\n     *\n     * Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT`\n     * indicates arguments that are problematic regardless of the state of the\n     * system (e.g., a malformed file name).\n     */\n    Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * The deadline expired before the operation could complete.\n     *\n     * For operations that change the state of the system, this error may be\n     * returned even if the operation has completed successfully.\n     *\n     * For example, a successful response from a server could have been delayed\n     * long enough for the deadline to expire.\n     */\n    Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     *\n     * Note to server developers: if a request is denied for an entire class of\n     * users, such as gradual feature rollout or undocumented allowlist,\n     * `NOT_FOUND` may be used. If a request is denied for some users within a\n     * class of users, such as user-based access control, `PERMISSION_DENIED` must\n     * be used.\n     */\n    Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * The entity that a client attempted to create (e.g., file or directory)\n     * already exists.\n     */\n    Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     *\n     * `PERMISSION_DENIED` must not be used for rejections caused by exhausting\n     * some resource (use `RESOURCE_EXHAUSTED` instead for those errors).\n     * `PERMISSION_DENIED` must not be used if the caller can not be identified\n     * (use `UNAUTHENTICATED` instead for those errors).\n     *\n     * This error code does not imply the request is valid or the requested entity\n     * exists or satisfies other pre-conditions.\n     */\n    Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * The operation was rejected because the system is not in a state required\n     * for the operation's execution.\n     *\n     * For example, the directory to be deleted is non-empty, an rmdir operation\n     * is applied to a non-directory, etc.\n     *\n     * Service implementors can use the following guidelines to decide between\n     * `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n     *\n     *   (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n     *   (b) Use `ABORTED` if the client should retry at a higher level (e.g.,\n     *       when a client-specified test-and-set fails, indicating the client\n     *       should restart a read-modify-write sequence).\n     *   (c) Use `FAILED_PRECONDITION` if the client should not retry until the\n     *       system state has been explicitly fixed. E.g., if an \"rmdir\" fails\n     *       because the directory is non-empty, `FAILED_PRECONDITION` should be\n     *       returned since the client should not retry unless the files are\n     *       deleted from the directory.\n     */\n    Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue such as a\n     * sequencer check failure or transaction abort.\n     *\n     * See the guidelines above for deciding between `FAILED_PRECONDITION`,\n     * `ABORTED`, and `UNAVAILABLE`.\n     */\n    Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * The operation was attempted past the valid range.\n     *\n     * E.g., seeking or reading past end-of-file.\n     *\n     * Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate `INVALID_ARGUMENT` if asked to read at an offset that is not in\n     * the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read\n     * from an offset past the current file size.\n     *\n     * There is a fair bit of overlap between `FAILED_PRECONDITION` and\n     * `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an `OUT_OF_RANGE` error to detect when they are done.\n     */\n    Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * The operation is not implemented or is not supported/enabled in this\n     * service.\n     */\n    Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors.\n     *\n     * This means that some invariants expected by the underlying system have been\n     * broken. This error code is reserved for serious errors.\n     */\n    Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable.\n     *\n     * This is most likely a transient condition, which can be corrected by\n     * retrying with a backoff.\n     *\n     * Note that it is not always safe to retry non-idempotent operations.\n     */\n    Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status = exports.Status || (exports.Status = {}));\n//# sourceMappingURL=Status.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CallOptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientError = void 0;\nconst ts_error_1 = require(\"ts-error\");\nconst Status_1 = require(\"../Status\");\n/**\n * Represents gRPC errors returned from client calls.\n */\nclass ClientError extends ts_error_1.ExtendableError {\n    constructor(path, code, details) {\n        super(`${path} ${Status_1.Status[code]}: ${details}`);\n        this.path = path;\n        this.code = code;\n        this.details = details;\n        this.name = 'ClientError';\n        Object.defineProperty(this, '@@nice-grpc', {\n            value: true,\n        });\n        Object.defineProperty(this, '@@nice-grpc:ClientError', {\n            value: true,\n        });\n    }\n    static [Symbol.hasInstance](instance) {\n        // allow instances of ClientError from different versions of nice-grpc\n        // to work with `instanceof ClientError`\n        if (this !== ClientError) {\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return (typeof instance === 'object' &&\n            instance !== null &&\n            (instance.constructor === ClientError ||\n                instance['@@nice-grpc:ClientError'] === true ||\n                (instance.name === 'ClientError' && instance['@@nice-grpc'] === true)));\n    }\n}\nexports.ClientError = ClientError;\n//# sourceMappingURL=ClientError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ClientMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.composeClientMiddleware = void 0;\nfunction composeClientMiddleware(middleware1, middleware2) {\n    return (call, options) => {\n        return middleware2(Object.assign(Object.assign({}, call), { next: (request, options2) => {\n                return middleware1(Object.assign(Object.assign({}, call), { request }), options2);\n            } }), options);\n    };\n}\nexports.composeClientMiddleware = composeClientMiddleware;\n//# sourceMappingURL=composeClientMiddleware.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Metadata\"), exports);\n__exportStar(require(\"./Status\"), exports);\n__exportStar(require(\"./MethodDescriptor\"), exports);\n__exportStar(require(\"./client/CallOptions\"), exports);\n__exportStar(require(\"./client/ClientMiddleware\"), exports);\n__exportStar(require(\"./client/composeClientMiddleware\"), exports);\n__exportStar(require(\"./client/ClientError\"), exports);\n__exportStar(require(\"./server/CallContext\"), exports);\n__exportStar(require(\"./server/ServerMiddleware\"), exports);\n__exportStar(require(\"./server/composeServerMiddleware\"), exports);\n__exportStar(require(\"./server/ServerError\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CallContext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerError = void 0;\nconst ts_error_1 = require(\"ts-error\");\nconst Status_1 = require(\"../Status\");\n/**\n * Service implementations may throw this error to report gRPC errors to\n * clients.\n */\nclass ServerError extends ts_error_1.ExtendableError {\n    constructor(code, details) {\n        super(`${Status_1.Status[code]}: ${details}`);\n        this.code = code;\n        this.details = details;\n        this.name = 'ServerError';\n        Object.defineProperty(this, '@@nice-grpc', {\n            value: true,\n        });\n        Object.defineProperty(this, '@@nice-grpc:ServerError', {\n            value: true,\n        });\n    }\n    static [Symbol.hasInstance](instance) {\n        // allow instances of ServerError from different versions of nice-grpc\n        // to work with `instanceof ServerError`\n        if (this !== ServerError) {\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return (typeof instance === 'object' &&\n            instance !== null &&\n            (instance.constructor === ServerError ||\n                instance['@@nice-grpc:ServerError'] === true ||\n                (instance.name === 'ServerError' && instance['@@nice-grpc'] === true)));\n    }\n}\nexports.ServerError = ServerError;\n//# sourceMappingURL=ServerError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ServerMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.composeServerMiddleware = void 0;\nfunction composeServerMiddleware(middleware1, middleware2) {\n    return (call, context) => {\n        return middleware1(Object.assign(Object.assign({}, call), { next: (request, context1) => {\n                return middleware2(Object.assign(Object.assign({}, call), { request }), context1);\n            } }), context);\n    };\n}\nexports.composeServerMiddleware = composeServerMiddleware;\n//# sourceMappingURL=composeServerMiddleware.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClient = exports.createClientFactory = void 0;\nconst grpc_js_1 = require(\"@grpc/grpc-js\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst createBidiStreamingMethod_1 = require(\"./createBidiStreamingMethod\");\nconst createClientStreamingMethod_1 = require(\"./createClientStreamingMethod\");\nconst createServerStreamingMethod_1 = require(\"./createServerStreamingMethod\");\nconst createUnaryMethod_1 = require(\"./createUnaryMethod\");\n/**\n * Create a client factory that can be used to create clients with middleware.\n */\nfunction createClientFactory() {\n    return createClientFactoryWithMiddleware();\n}\nexports.createClientFactory = createClientFactory;\n/**\n * Create a client with no middleware.\n *\n * This is the same as calling `createClientFactory().create()`.\n */\nfunction createClient(definition, channel, defaultCallOptions) {\n    return createClientFactory().create(definition, channel, defaultCallOptions);\n}\nexports.createClient = createClient;\nfunction createClientFactoryWithMiddleware(middleware) {\n    return {\n        use(newMiddleware) {\n            return createClientFactoryWithMiddleware(middleware == null\n                ? newMiddleware\n                : (0, nice_grpc_common_1.composeClientMiddleware)(middleware, newMiddleware));\n        },\n        create(definition, channel, defaultCallOptions = {}) {\n            const constructor = (0, grpc_js_1.makeClientConstructor)({}, '');\n            const grpcClient = new constructor('', null, {\n                channelOverride: channel,\n            });\n            const client = {};\n            const methodEntries = Object.entries((0, service_definitions_1.normalizeServiceDefinition)(definition));\n            for (const [methodName, methodDefinition] of methodEntries) {\n                const defaultOptions = {\n                    ...defaultCallOptions['*'],\n                    ...defaultCallOptions[methodName],\n                };\n                if (!methodDefinition.requestStream) {\n                    if (!methodDefinition.responseStream) {\n                        client[methodName] = (0, createUnaryMethod_1.createUnaryMethod)(methodDefinition, grpcClient, middleware, defaultOptions);\n                    }\n                    else {\n                        client[methodName] = (0, createServerStreamingMethod_1.createServerStreamingMethod)(methodDefinition, grpcClient, middleware, defaultOptions);\n                    }\n                }\n                else {\n                    if (!methodDefinition.responseStream) {\n                        client[methodName] = (0, createClientStreamingMethod_1.createClientStreamingMethod)(methodDefinition, grpcClient, middleware, defaultOptions);\n                    }\n                    else {\n                        client[methodName] = (0, createBidiStreamingMethod_1.createBidiStreamingMethod)(methodDefinition, grpcClient, middleware, defaultOptions);\n                    }\n                }\n            }\n            return client;\n        },\n    };\n}\n//# sourceMappingURL=ClientFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitForChannelReady = exports.createChannel = void 0;\nconst grpc_js_1 = require(\"@grpc/grpc-js\");\nconst knownProtocols = new Set(['http', 'https']);\n/**\n * Creates a new channel. The channel represents a remote endpoint that can be\n * connected to.\n *\n * @param address The address of the server, in the form `protocol://host:port`,\n *     where `protocol` is one of `http` or `https`.\n *     If the protocol is not specified, it will be inferred from the\n *     credentials.\n *     If the port is not specified, it will be inferred from the protocol.\n * @param credentials Optional credentials object that is usually created by\n *     calling `ChannelCredentials.createSsl()` or\n *     `ChannelCredentials.createInsecure()`. If not specified, the credentials\n *     will be inferred from the protocol. If the protocol is not specified,\n *     `ChannelCredentials.createInsecure()` will be used.\n * @param options Optional channel options object.\n * @returns The new channel.\n */\nfunction createChannel(address, credentials, options = {}) {\n    const match = /^(?:([^:]+):\\/\\/)?(.*?)(?::(\\d+))?$/.exec(address);\n    if (match == null)\n        throw new Error(`Invalid address: '${address}'`);\n    let [, protocol, host, port] = match;\n    const knownProtocol = !protocol || knownProtocols.has(protocol);\n    const isSecure = credentials?._isSecure() || protocol?.includes('https');\n    credentials ?? (credentials = isSecure\n        ? grpc_js_1.ChannelCredentials.createSsl()\n        : grpc_js_1.ChannelCredentials.createInsecure());\n    port ?? (port = isSecure ? '443' : '80');\n    let target = knownProtocol ? `${host}:${port}` : address;\n    return new grpc_js_1.Channel(target, credentials, options);\n}\nexports.createChannel = createChannel;\n/**\n * Waits for the channel to be connected.\n *\n * It is not necessary to call this function before making a call on a client.\n */\nasync function waitForChannelReady(channel, deadline) {\n    while (true) {\n        const state = channel.getConnectivityState(true);\n        if (state === grpc_js_1.connectivityState.READY) {\n            return;\n        }\n        await new Promise((resolve, reject) => {\n            channel.watchConnectivityState(state, deadline, err => {\n                if (err != null) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    }\n}\nexports.waitForChannelReady = waitForChannelReady;\n//# sourceMappingURL=channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBidiStreamingMethod = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst patchClientWritableStream_1 = require(\"../utils/patchClientWritableStream\");\nconst readableToAsyncIterable_1 = require(\"../utils/readableToAsyncIterable\");\nconst wrapClientError_1 = require(\"./wrapClientError\");\n/** @internal */\nfunction createBidiStreamingMethod(definition, client, middleware, defaultOptions) {\n    const grpcMethodDefinition = (0, service_definitions_1.toGrpcJsMethodDefinition)(definition);\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* bidiStreamingMethod(request, options) {\n        if (!(0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for bidirectional streaming method');\n        }\n        const { metadata = (0, nice_grpc_common_1.Metadata)(), onHeader, onTrailer } = options;\n        const signal = (options.signal ??\n            new AbortController().signal);\n        const pipeAbortController = new AbortController();\n        const call = client.makeBidiStreamRequest(grpcMethodDefinition.path, grpcMethodDefinition.requestSerialize, grpcMethodDefinition.responseDeserialize, (0, convertMetadata_1.convertMetadataToGrpcJs)(metadata));\n        (0, patchClientWritableStream_1.patchClientWritableStream)(call);\n        call.on('metadata', metadata => {\n            onHeader?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(metadata));\n        });\n        call.on('status', status => {\n            onTrailer?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(status.metadata));\n        });\n        let pipeError;\n        pipeRequest(pipeAbortController.signal, request, call).then(() => {\n            call.end();\n        }, err => {\n            if (!(0, abort_controller_x_1.isAbortError)(err)) {\n                pipeError = err;\n                call.cancel();\n            }\n        });\n        const abortListener = () => {\n            pipeAbortController.abort();\n            call.cancel();\n        };\n        signal.addEventListener('abort', abortListener);\n        try {\n            yield* (0, readableToAsyncIterable_1.readableToAsyncIterable)(call);\n        }\n        catch (err) {\n            throw (0, wrapClientError_1.wrapClientError)(err, definition.path);\n        }\n        finally {\n            pipeAbortController.abort();\n            signal.removeEventListener('abort', abortListener);\n            (0, abort_controller_x_1.throwIfAborted)(signal);\n            call.cancel();\n            if (pipeError) {\n                throw pipeError;\n            }\n        }\n    }\n    const method = middleware == null\n        ? bidiStreamingMethod\n        : (request, options) => middleware({\n            method: methodDescriptor,\n            requestStream: true,\n            request,\n            responseStream: true,\n            next: bidiStreamingMethod,\n        }, options);\n    return (request, options) => {\n        const iterable = method(request, {\n            ...defaultOptions,\n            ...options,\n        });\n        const iterator = iterable[Symbol.asyncIterator]();\n        return {\n            [Symbol.asyncIterator]() {\n                return {\n                    async next() {\n                        const result = await iterator.next();\n                        if (result.done && result.value != null) {\n                            return await iterator.throw(new Error('A middleware returned a message, but expected to return void for bidirectional streaming method'));\n                        }\n                        return result;\n                    },\n                    return() {\n                        return iterator.return();\n                    },\n                    throw(err) {\n                        return iterator.throw(err);\n                    },\n                };\n            },\n        };\n    };\n}\nexports.createBidiStreamingMethod = createBidiStreamingMethod;\nasync function pipeRequest(signal, request, call) {\n    for await (const item of request) {\n        (0, abort_controller_x_1.throwIfAborted)(signal);\n        const shouldContinue = call.write(item);\n        if (!shouldContinue) {\n            await (0, abort_controller_x_1.waitForEvent)(signal, call, 'drain');\n        }\n    }\n}\n//# sourceMappingURL=createBidiStreamingMethod.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClientStreamingMethod = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst patchClientWritableStream_1 = require(\"../utils/patchClientWritableStream\");\nconst wrapClientError_1 = require(\"./wrapClientError\");\n/** @internal */\nfunction createClientStreamingMethod(definition, client, middleware, defaultOptions) {\n    const grpcMethodDefinition = (0, service_definitions_1.toGrpcJsMethodDefinition)(definition);\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* clientStreamingMethod(request, options) {\n        if (!(0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for client streaming method');\n        }\n        const { metadata = (0, nice_grpc_common_1.Metadata)(), signal = new AbortController().signal, onHeader, onTrailer, } = options;\n        return await (0, abort_controller_x_1.execute)(signal, (resolve, reject) => {\n            const pipeAbortController = new AbortController();\n            const call = client.makeClientStreamRequest(grpcMethodDefinition.path, grpcMethodDefinition.requestSerialize, grpcMethodDefinition.responseDeserialize, (0, convertMetadata_1.convertMetadataToGrpcJs)(metadata), (err, response) => {\n                pipeAbortController.abort();\n                if (err != null) {\n                    reject((0, wrapClientError_1.wrapClientError)(err, definition.path));\n                }\n                else {\n                    resolve(response);\n                }\n            });\n            (0, patchClientWritableStream_1.patchClientWritableStream)(call);\n            call.on('metadata', metadata => {\n                onHeader?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(metadata));\n            });\n            call.on('status', status => {\n                onTrailer?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(status.metadata));\n            });\n            pipeRequest(pipeAbortController.signal, request, call).then(() => {\n                call.end();\n            }, err => {\n                if (!(0, abort_controller_x_1.isAbortError)(err)) {\n                    reject(err);\n                    call.cancel();\n                }\n            });\n            return () => {\n                pipeAbortController.abort();\n                call.cancel();\n            };\n        });\n    }\n    const method = middleware == null\n        ? clientStreamingMethod\n        : (request, options) => middleware({\n            method: methodDescriptor,\n            requestStream: true,\n            request,\n            responseStream: false,\n            next: clientStreamingMethod,\n        }, options);\n    return async (request, options) => {\n        const iterable = method(request, {\n            ...defaultOptions,\n            ...options,\n        });\n        const iterator = iterable[Symbol.asyncIterator]();\n        let result = await iterator.next();\n        while (true) {\n            if (!result.done) {\n                result = await iterator.throw(new Error('A middleware yielded a message, but expected to only return a message for client streaming method'));\n                continue;\n            }\n            if (result.value == null) {\n                result = await iterator.throw(new Error('A middleware returned void, but expected to return a message for client streaming method'));\n                continue;\n            }\n            return result.value;\n        }\n    };\n}\nexports.createClientStreamingMethod = createClientStreamingMethod;\nasync function pipeRequest(signal, request, call) {\n    for await (const item of request) {\n        (0, abort_controller_x_1.throwIfAborted)(signal);\n        const shouldContinue = call.write(item);\n        if (!shouldContinue) {\n            await (0, abort_controller_x_1.waitForEvent)(signal, call, 'drain');\n        }\n    }\n}\n//# sourceMappingURL=createClientStreamingMethod.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createServerStreamingMethod = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst readableToAsyncIterable_1 = require(\"../utils/readableToAsyncIterable\");\nconst wrapClientError_1 = require(\"./wrapClientError\");\n/** @internal */\nfunction createServerStreamingMethod(definition, client, middleware, defaultOptions) {\n    const grpcMethodDefinition = (0, service_definitions_1.toGrpcJsMethodDefinition)(definition);\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* serverStreamingMethod(request, options) {\n        if ((0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for server streaming method');\n        }\n        const { metadata = (0, nice_grpc_common_1.Metadata)(), onHeader, onTrailer } = options;\n        const signal = (options.signal ??\n            new AbortController().signal);\n        const call = client.makeServerStreamRequest(grpcMethodDefinition.path, grpcMethodDefinition.requestSerialize, grpcMethodDefinition.responseDeserialize, request, (0, convertMetadata_1.convertMetadataToGrpcJs)(metadata));\n        call.on('metadata', metadata => {\n            onHeader?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(metadata));\n        });\n        call.on('status', status => {\n            onTrailer?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(status.metadata));\n        });\n        const abortListener = () => {\n            call.cancel();\n        };\n        signal.addEventListener('abort', abortListener);\n        try {\n            yield* (0, readableToAsyncIterable_1.readableToAsyncIterable)(call);\n        }\n        catch (err) {\n            throw (0, wrapClientError_1.wrapClientError)(err, definition.path);\n        }\n        finally {\n            signal.removeEventListener('abort', abortListener);\n            (0, abort_controller_x_1.throwIfAborted)(signal);\n            call.cancel();\n        }\n    }\n    const method = middleware == null\n        ? serverStreamingMethod\n        : (request, options) => middleware({\n            method: methodDescriptor,\n            requestStream: false,\n            request,\n            responseStream: true,\n            next: serverStreamingMethod,\n        }, options);\n    return (request, options) => {\n        const iterable = method(request, {\n            ...defaultOptions,\n            ...options,\n        });\n        const iterator = iterable[Symbol.asyncIterator]();\n        return {\n            [Symbol.asyncIterator]() {\n                return {\n                    async next() {\n                        const result = await iterator.next();\n                        if (result.done && result.value != null) {\n                            return await iterator.throw(new Error('A middleware returned a message, but expected to return void for server streaming method'));\n                        }\n                        return result;\n                    },\n                    return() {\n                        return iterator.return();\n                    },\n                    throw(err) {\n                        return iterator.throw(err);\n                    },\n                };\n            },\n        };\n    };\n}\nexports.createServerStreamingMethod = createServerStreamingMethod;\n//# sourceMappingURL=createServerStreamingMethod.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createUnaryMethod = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst wrapClientError_1 = require(\"./wrapClientError\");\n/** @internal */\nfunction createUnaryMethod(definition, client, middleware, defaultOptions) {\n    const grpcMethodDefinition = (0, service_definitions_1.toGrpcJsMethodDefinition)(definition);\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* unaryMethod(request, options) {\n        if ((0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for unary method');\n        }\n        const { metadata = (0, nice_grpc_common_1.Metadata)(), signal = new AbortController().signal, onHeader, onTrailer, } = options;\n        return await (0, abort_controller_x_1.execute)(signal, (resolve, reject) => {\n            const call = client.makeUnaryRequest(grpcMethodDefinition.path, grpcMethodDefinition.requestSerialize, grpcMethodDefinition.responseDeserialize, request, (0, convertMetadata_1.convertMetadataToGrpcJs)(metadata), (err, response) => {\n                if (err != null) {\n                    reject((0, wrapClientError_1.wrapClientError)(err, definition.path));\n                }\n                else {\n                    resolve(response);\n                }\n            });\n            call.on('metadata', metadata => {\n                onHeader?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(metadata));\n            });\n            call.on('status', status => {\n                onTrailer?.((0, convertMetadata_1.convertMetadataFromGrpcJs)(status.metadata));\n            });\n            return () => {\n                call.cancel();\n            };\n        });\n    }\n    const method = middleware == null\n        ? unaryMethod\n        : (request, options) => middleware({\n            method: methodDescriptor,\n            requestStream: false,\n            request,\n            responseStream: false,\n            next: unaryMethod,\n        }, options);\n    return async (request, options) => {\n        const iterable = method(request, {\n            ...defaultOptions,\n            ...options,\n        });\n        const iterator = iterable[Symbol.asyncIterator]();\n        let result = await iterator.next();\n        while (true) {\n            if (!result.done) {\n                result = await iterator.throw(new Error('A middleware yielded a message, but expected to only return a message for unary method'));\n                continue;\n            }\n            if (result.value == null) {\n                result = await iterator.throw(new Error('A middleware returned void, but expected to return a message for unary method'));\n                continue;\n            }\n            return result.value;\n        }\n    };\n}\nexports.createUnaryMethod = createUnaryMethod;\n//# sourceMappingURL=createUnaryMethod.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapClientError = void 0;\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst grpc_js_1 = require(\"@grpc/grpc-js\");\n/** @internal */\nfunction wrapClientError(error, path) {\n    if (isStatusObject(error)) {\n        return new nice_grpc_common_1.ClientError(path, error.code, error.details);\n    }\n    return error;\n}\nexports.wrapClientError = wrapClientError;\nfunction isStatusObject(obj) {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        typeof obj.code === 'number' &&\n        typeof obj.details === 'string' &&\n        obj.metadata instanceof grpc_js_1.Metadata);\n}\n//# sourceMappingURL=wrapClientError.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelCredentials = exports.Channel = exports.waitForChannelReady = exports.createChannel = void 0;\n__exportStar(require(\"nice-grpc-common\"), exports);\n__exportStar(require(\"./server/Server\"), exports);\n__exportStar(require(\"./server/ServiceImplementation\"), exports);\nvar channel_1 = require(\"./client/channel\");\nObject.defineProperty(exports, \"createChannel\", { enumerable: true, get: function () { return channel_1.createChannel; } });\nObject.defineProperty(exports, \"waitForChannelReady\", { enumerable: true, get: function () { return channel_1.waitForChannelReady; } });\nvar grpc_js_1 = require(\"@grpc/grpc-js\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function () { return grpc_js_1.Channel; } });\nObject.defineProperty(exports, \"ChannelCredentials\", { enumerable: true, get: function () { return grpc_js_1.ChannelCredentials; } });\n__exportStar(require(\"./client/ClientFactory\"), exports);\n__exportStar(require(\"./client/Client\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createServer = void 0;\nconst grpc_js_1 = require(\"@grpc/grpc-js\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst service_definitions_1 = require(\"../service-definitions\");\nconst handleBidiStreamingCall_1 = require(\"./handleBidiStreamingCall\");\nconst handleClientStreamingCall_1 = require(\"./handleClientStreamingCall\");\nconst handleServerStreamingCall_1 = require(\"./handleServerStreamingCall\");\nconst handleUnaryCall_1 = require(\"./handleUnaryCall\");\n/**\n * Create a new server.\n *\n * @param options Optional channel options.\n * @returns The new server.\n */\nfunction createServer(options = {}) {\n    return createServerWithMiddleware(options);\n}\nexports.createServer = createServer;\nfunction createServerWithMiddleware(options, middleware) {\n    const services = [];\n    let server;\n    function createAddBuilder(middleware) {\n        return {\n            with(newMiddleware) {\n                return createAddBuilder(middleware == null\n                    ? newMiddleware\n                    : (0, nice_grpc_common_1.composeServerMiddleware)(middleware, newMiddleware));\n            },\n            add(definition, implementation) {\n                if (server != null) {\n                    throw new Error('server.add() must be used before listen()');\n                }\n                services.push({\n                    definition: (0, service_definitions_1.normalizeServiceDefinition)(definition),\n                    middleware,\n                    implementation,\n                });\n            },\n        };\n    }\n    return {\n        use(newMiddleware) {\n            if (server != null) {\n                throw new Error('server.use() must be used before listen()');\n            }\n            if (services.length > 0) {\n                throw new Error('server.use() must be used before adding any services');\n            }\n            return createServerWithMiddleware(options, middleware == null\n                ? newMiddleware\n                : (0, nice_grpc_common_1.composeServerMiddleware)(middleware, newMiddleware));\n        },\n        ...createAddBuilder(middleware),\n        async listen(address, credentials) {\n            if (server != null) {\n                throw new Error('server.listen() has already been called');\n            }\n            server = new grpc_js_1.Server(options);\n            for (const { definition, middleware, implementation } of services) {\n                const grpcImplementation = {};\n                for (const [methodName, methodDefinition] of Object.entries(definition)) {\n                    const methodImplementation = implementation[methodName].bind(implementation);\n                    if (!methodDefinition.requestStream) {\n                        if (!methodDefinition.responseStream) {\n                            grpcImplementation[methodName] = (0, handleUnaryCall_1.createUnaryMethodHandler)(methodDefinition, methodImplementation, middleware);\n                        }\n                        else {\n                            grpcImplementation[methodName] =\n                                (0, handleServerStreamingCall_1.createServerStreamingMethodHandler)(methodDefinition, methodImplementation, middleware);\n                        }\n                    }\n                    else {\n                        if (!methodDefinition.responseStream) {\n                            grpcImplementation[methodName] =\n                                (0, handleClientStreamingCall_1.createClientStreamingMethodHandler)(methodDefinition, methodImplementation, middleware);\n                        }\n                        else {\n                            grpcImplementation[methodName] = (0, handleBidiStreamingCall_1.createBidiStreamingMethodHandler)(methodDefinition, methodImplementation, middleware);\n                        }\n                    }\n                }\n                server.addService((0, service_definitions_1.toGrpcJsServiceDefinition)(definition), grpcImplementation);\n            }\n            const port = await new Promise((resolve, reject) => {\n                server.bindAsync(address, credentials ?? grpc_js_1.ServerCredentials.createInsecure(), (err, port) => {\n                    if (err != null) {\n                        server = undefined;\n                        reject(err);\n                    }\n                    else {\n                        resolve(port);\n                    }\n                });\n            });\n            server.start();\n            return port;\n        },\n        async shutdown() {\n            if (server == null) {\n                return;\n            }\n            await new Promise((resolve, reject) => {\n                server.tryShutdown(err => {\n                    if (err != null) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            });\n            server = undefined;\n        },\n        forceShutdown() {\n            if (server == null) {\n                return;\n            }\n            server.forceShutdown();\n            server = undefined;\n        },\n    };\n}\n//# sourceMappingURL=Server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ServiceImplementation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCallContext = void 0;\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\n/** @internal */\nfunction createCallContext(call) {\n    const header = (0, nice_grpc_common_1.Metadata)();\n    const trailer = (0, nice_grpc_common_1.Metadata)();\n    const abortController = new AbortController();\n    if (call.cancelled) {\n        abortController.abort();\n    }\n    else {\n        call.on('cancelled', () => {\n            abortController.abort();\n        });\n    }\n    let headerSent = false;\n    return {\n        metadata: (0, convertMetadata_1.convertMetadataFromGrpcJs)(call.metadata),\n        peer: call.getPeer(),\n        header,\n        sendHeader() {\n            if (headerSent) {\n                return;\n            }\n            call.sendMetadata((0, convertMetadata_1.convertMetadataToGrpcJs)(header));\n            headerSent = true;\n        },\n        trailer,\n        signal: abortController.signal,\n    };\n}\nexports.createCallContext = createCallContext;\n//# sourceMappingURL=createCallContext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createErrorStatusObject = void 0;\nconst grpc_js_1 = require(\"@grpc/grpc-js\");\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\n/** @internal */\nfunction createErrorStatusObject(path, error, trailer) {\n    if (error instanceof nice_grpc_common_1.ServerError) {\n        return {\n            code: error.code,\n            details: error.details,\n            metadata: trailer,\n        };\n    }\n    else if ((0, abort_controller_x_1.isAbortError)(error)) {\n        return {\n            code: grpc_js_1.status.CANCELLED,\n            details: 'The operation was cancelled',\n            metadata: trailer,\n        };\n    }\n    else {\n        process.emitWarning(`${path}: Uncaught error in server implementation method: ${error instanceof Error ? error.stack : error}`);\n        return {\n            code: grpc_js_1.status.UNKNOWN,\n            details: 'Unknown server error occurred',\n            metadata: trailer,\n        };\n    }\n}\nexports.createErrorStatusObject = createErrorStatusObject;\n//# sourceMappingURL=createErrorStatusObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBidiStreamingMethodHandler = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst readableToAsyncIterable_1 = require(\"../utils/readableToAsyncIterable\");\nconst createCallContext_1 = require(\"./createCallContext\");\nconst createErrorStatusObject_1 = require(\"./createErrorStatusObject\");\n/** @internal */\nfunction createBidiStreamingMethodHandler(definition, implementation, middleware) {\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* bidiStreamingMethodHandler(request, context) {\n        if (!(0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for bidirectional streaming method');\n        }\n        yield* implementation(request, context);\n    }\n    const handler = middleware == null\n        ? bidiStreamingMethodHandler\n        : (request, context) => middleware({\n            method: methodDescriptor,\n            requestStream: true,\n            request,\n            responseStream: true,\n            next: bidiStreamingMethodHandler,\n        }, context);\n    return call => {\n        const context = (0, createCallContext_1.createCallContext)(call);\n        Promise.resolve()\n            .then(async () => {\n            const iterable = handler((0, readableToAsyncIterable_1.readableToAsyncIterable)(call), context);\n            const iterator = iterable[Symbol.asyncIterator]();\n            try {\n                let result = await iterator.next();\n                while (true) {\n                    if (!result.done) {\n                        try {\n                            context.sendHeader();\n                            const shouldContinue = call.write(result.value);\n                            if (!shouldContinue) {\n                                await (0, abort_controller_x_1.waitForEvent)(context.signal, call, 'drain');\n                            }\n                        }\n                        catch (err) {\n                            result = (0, abort_controller_x_1.isAbortError)(err)\n                                ? await iterator.return()\n                                : await iterator.throw(err);\n                            continue;\n                        }\n                        result = await iterator.next();\n                        continue;\n                    }\n                    if (result.value != null) {\n                        result = await iterator.throw(new Error('A middleware returned a message, but expected to return void for bidirectional streaming method'));\n                        continue;\n                    }\n                    break;\n                }\n            }\n            finally {\n                context.sendHeader();\n            }\n        })\n            .then(() => {\n            call.end((0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer));\n        }, err => {\n            call.destroy((0, createErrorStatusObject_1.createErrorStatusObject)(definition.path, err, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer)));\n        });\n    };\n}\nexports.createBidiStreamingMethodHandler = createBidiStreamingMethodHandler;\n//# sourceMappingURL=handleBidiStreamingCall.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClientStreamingMethodHandler = void 0;\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst createCallContext_1 = require(\"./createCallContext\");\nconst createErrorStatusObject_1 = require(\"./createErrorStatusObject\");\nconst readableToAsyncIterable_1 = require(\"../utils/readableToAsyncIterable\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\n/** @internal */\nfunction createClientStreamingMethodHandler(definition, implementation, middleware) {\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* clientStreamingMethodHandler(request, context) {\n        if (!(0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for client streaming method');\n        }\n        return await implementation(request, context);\n    }\n    const handler = middleware == null\n        ? clientStreamingMethodHandler\n        : (request, context) => middleware({\n            method: methodDescriptor,\n            requestStream: true,\n            request,\n            responseStream: false,\n            next: clientStreamingMethodHandler,\n        }, context);\n    return (call, callback) => {\n        const context = (0, createCallContext_1.createCallContext)(call);\n        Promise.resolve()\n            .then(async () => {\n            const iterable = handler((0, readableToAsyncIterable_1.readableToAsyncIterable)(call), context);\n            const iterator = iterable[Symbol.asyncIterator]();\n            try {\n                let result = await iterator.next();\n                while (true) {\n                    if (!result.done) {\n                        result = await iterator.throw(new Error('A middleware yielded a message, but expected to only return a message for client streaming method'));\n                        continue;\n                    }\n                    if (result.value == null) {\n                        result = await iterator.throw(new Error('A middleware returned void, but expected to return a message for client streaming method'));\n                        continue;\n                    }\n                    return result.value;\n                }\n            }\n            finally {\n                context.sendHeader();\n            }\n        })\n            .then(res => {\n            callback(null, res, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer));\n        }, err => {\n            callback((0, createErrorStatusObject_1.createErrorStatusObject)(definition.path, err, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer)));\n        });\n    };\n}\nexports.createClientStreamingMethodHandler = createClientStreamingMethodHandler;\n//# sourceMappingURL=handleClientStreamingCall.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createServerStreamingMethodHandler = void 0;\nconst abort_controller_x_1 = require(\"abort-controller-x\");\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst createCallContext_1 = require(\"./createCallContext\");\nconst createErrorStatusObject_1 = require(\"./createErrorStatusObject\");\n/** @internal */\nfunction createServerStreamingMethodHandler(definition, implementation, middleware) {\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* serverStreamingMethodHandler(request, context) {\n        if ((0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for server streaming method');\n        }\n        yield* implementation(request, context);\n    }\n    const handler = middleware == null\n        ? serverStreamingMethodHandler\n        : (request, context) => middleware({\n            method: methodDescriptor,\n            requestStream: false,\n            request,\n            responseStream: true,\n            next: serverStreamingMethodHandler,\n        }, context);\n    return call => {\n        const context = (0, createCallContext_1.createCallContext)(call);\n        Promise.resolve()\n            .then(async () => {\n            const iterable = handler(call.request, context);\n            const iterator = iterable[Symbol.asyncIterator]();\n            try {\n                let result = await iterator.next();\n                while (true) {\n                    if (!result.done) {\n                        try {\n                            context.sendHeader();\n                            const shouldContinue = call.write(result.value);\n                            if (!shouldContinue) {\n                                await (0, abort_controller_x_1.waitForEvent)(context.signal, call, 'drain');\n                            }\n                        }\n                        catch (err) {\n                            result = (0, abort_controller_x_1.isAbortError)(err)\n                                ? await iterator.return()\n                                : await iterator.throw(err);\n                            continue;\n                        }\n                        result = await iterator.next();\n                        continue;\n                    }\n                    if (result.value != null) {\n                        result = await iterator.throw(new Error('A middleware returned a message, but expected to return void for server streaming method'));\n                        continue;\n                    }\n                    break;\n                }\n            }\n            finally {\n                context.sendHeader();\n            }\n        })\n            .then(() => {\n            call.end((0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer));\n        }, err => {\n            call.destroy((0, createErrorStatusObject_1.createErrorStatusObject)(definition.path, err, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer)));\n        });\n    };\n}\nexports.createServerStreamingMethodHandler = createServerStreamingMethodHandler;\n//# sourceMappingURL=handleServerStreamingCall.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createUnaryMethodHandler = void 0;\nconst convertMetadata_1 = require(\"../utils/convertMetadata\");\nconst isAsyncIterable_1 = require(\"../utils/isAsyncIterable\");\nconst createCallContext_1 = require(\"./createCallContext\");\nconst createErrorStatusObject_1 = require(\"./createErrorStatusObject\");\n/** @internal */\nfunction createUnaryMethodHandler(definition, implementation, middleware) {\n    const methodDescriptor = {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        options: definition.options,\n    };\n    async function* unaryMethodHandler(request, context) {\n        if ((0, isAsyncIterable_1.isAsyncIterable)(request)) {\n            throw new Error('A middleware passed invalid request to next(): expected a single message for unary method');\n        }\n        return await implementation(request, context);\n    }\n    const handler = middleware == null\n        ? unaryMethodHandler\n        : (request, context) => middleware({\n            method: methodDescriptor,\n            requestStream: false,\n            request,\n            responseStream: false,\n            next: unaryMethodHandler,\n        }, context);\n    return (call, callback) => {\n        const context = (0, createCallContext_1.createCallContext)(call);\n        Promise.resolve()\n            .then(async () => {\n            const iterable = handler(call.request, context);\n            const iterator = iterable[Symbol.asyncIterator]();\n            try {\n                let result = await iterator.next();\n                while (true) {\n                    if (!result.done) {\n                        result = await iterator.throw(new Error('A middleware yielded a message, but expected to only return a message for unary method'));\n                        continue;\n                    }\n                    if (result.value == null) {\n                        result = await iterator.throw(new Error('A middleware returned void, but expected to return a message for unary method'));\n                        continue;\n                    }\n                    return result.value;\n                }\n            }\n            finally {\n                context.sendHeader();\n            }\n        })\n            .then(res => {\n            callback(null, res, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer));\n        }, err => {\n            callback((0, createErrorStatusObject_1.createErrorStatusObject)(definition.path, err, (0, convertMetadata_1.convertMetadataToGrpcJs)(context.trailer)));\n        });\n    };\n}\nexports.createUnaryMethodHandler = createUnaryMethodHandler;\n//# sourceMappingURL=handleUnaryCall.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGrpcJsServiceDefinition = exports.fromGrpcJsServiceDefinition = void 0;\nfunction fromGrpcJsServiceDefinition(definition) {\n    const result = {};\n    for (const [key, method] of Object.entries(definition)) {\n        result[key] = {\n            path: method.path,\n            requestStream: method.requestStream,\n            responseStream: method.responseStream,\n            requestDeserialize: bytes => method.requestDeserialize(Buffer.from(bytes)),\n            requestSerialize: method.requestSerialize,\n            responseDeserialize: bytes => method.responseDeserialize(Buffer.from(bytes)),\n            responseSerialize: method.responseSerialize,\n            options: {},\n        };\n    }\n    return result;\n}\nexports.fromGrpcJsServiceDefinition = fromGrpcJsServiceDefinition;\nfunction isGrpcJsServiceDefinition(definition) {\n    return Object.values(definition).every(value => typeof value === 'object' &&\n        value != null &&\n        typeof value.path === 'string');\n}\nexports.isGrpcJsServiceDefinition = isGrpcJsServiceDefinition;\n//# sourceMappingURL=grpc-js.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toGrpcJsMethodDefinition = exports.toGrpcJsServiceDefinition = exports.normalizeServiceDefinition = void 0;\nconst grpc_js_1 = require(\"./grpc-js\");\nconst ts_proto_1 = require(\"./ts-proto\");\n/** @internal */\nfunction normalizeServiceDefinition(definition) {\n    if ((0, grpc_js_1.isGrpcJsServiceDefinition)(definition)) {\n        return (0, grpc_js_1.fromGrpcJsServiceDefinition)(definition);\n    }\n    else if ((0, ts_proto_1.isTsProtoServiceDefinition)(definition)) {\n        return (0, ts_proto_1.fromTsProtoServiceDefinition)(definition);\n    }\n    else {\n        return definition;\n    }\n}\nexports.normalizeServiceDefinition = normalizeServiceDefinition;\n/** @internal */\nfunction toGrpcJsServiceDefinition(definition) {\n    const result = {};\n    for (const [key, method] of Object.entries(definition)) {\n        result[key] = toGrpcJsMethodDefinition(method);\n    }\n    return result;\n}\nexports.toGrpcJsServiceDefinition = toGrpcJsServiceDefinition;\n/** @internal */\nfunction toGrpcJsMethodDefinition(definition) {\n    return {\n        path: definition.path,\n        requestStream: definition.requestStream,\n        responseStream: definition.responseStream,\n        requestDeserialize: definition.requestDeserialize,\n        requestSerialize: value => Buffer.from(definition.requestSerialize(value)),\n        responseDeserialize: definition.responseDeserialize,\n        responseSerialize: value => Buffer.from(definition.responseSerialize(value)),\n    };\n}\nexports.toGrpcJsMethodDefinition = toGrpcJsMethodDefinition;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTsProtoServiceDefinition = exports.fromTsProtoServiceDefinition = void 0;\nfunction fromTsProtoServiceDefinition(definition) {\n    const result = {};\n    for (const [key, method] of Object.entries(definition.methods)) {\n        const requestEncode = method.requestType.encode;\n        const requestFromPartial = method.requestType.fromPartial;\n        const responseEncode = method.responseType.encode;\n        const responseFromPartial = method.responseType.fromPartial;\n        result[key] = {\n            path: `/${definition.fullName}/${method.name}`,\n            requestStream: method.requestStream,\n            responseStream: method.responseStream,\n            requestDeserialize: method.requestType.decode,\n            requestSerialize: requestFromPartial != null\n                ? value => requestEncode(requestFromPartial(value)).finish()\n                : value => requestEncode(value).finish(),\n            responseDeserialize: method.responseType.decode,\n            responseSerialize: responseFromPartial != null\n                ? value => responseEncode(responseFromPartial(value)).finish()\n                : value => responseEncode(value).finish(),\n            options: method.options,\n        };\n    }\n    return result;\n}\nexports.fromTsProtoServiceDefinition = fromTsProtoServiceDefinition;\nfunction isTsProtoServiceDefinition(definition) {\n    return ('name' in definition && 'fullName' in definition && 'methods' in definition);\n}\nexports.isTsProtoServiceDefinition = isTsProtoServiceDefinition;\n//# sourceMappingURL=ts-proto.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertMetadataFromGrpcJs = exports.convertMetadataToGrpcJs = void 0;\nconst grpc = __importStar(require(\"@grpc/grpc-js\"));\nconst nice_grpc_common_1 = require(\"nice-grpc-common\");\n/** @internal */\nfunction convertMetadataToGrpcJs(metadata) {\n    const grpcMetadata = new grpc.Metadata();\n    for (const [key, values] of metadata) {\n        for (const value of values) {\n            grpcMetadata.add(key, typeof value === 'string' ? value : Buffer.from(value));\n        }\n    }\n    return grpcMetadata;\n}\nexports.convertMetadataToGrpcJs = convertMetadataToGrpcJs;\n/** @internal */\nfunction convertMetadataFromGrpcJs(grpcMetadata) {\n    const metadata = (0, nice_grpc_common_1.Metadata)();\n    for (const key of Object.keys(grpcMetadata.getMap())) {\n        const value = grpcMetadata.get(key);\n        metadata.set(key, value);\n    }\n    return metadata;\n}\nexports.convertMetadataFromGrpcJs = convertMetadataFromGrpcJs;\n//# sourceMappingURL=convertMetadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsyncIterable = void 0;\n/** @internal */\nfunction isAsyncIterable(value) {\n    return value != null && Symbol.asyncIterator in value;\n}\nexports.isAsyncIterable = isAsyncIterable;\n//# sourceMappingURL=isAsyncIterable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patchClientWritableStream = void 0;\n/**\n * Workaround for https://github.com/grpc/grpc-node/issues/1094\n *\n * @internal\n */\nfunction patchClientWritableStream(stream) {\n    const http2CallStream = stream.call.call;\n    const origAttachHttp2Stream = http2CallStream.attachHttp2Stream;\n    http2CallStream.attachHttp2Stream = function patchAttachHttp2Stream(stream, ...rest) {\n        const origWrite = stream.write;\n        stream.write = function patchedWrite(...args) {\n            if (this.writableEnded) {\n                return true;\n            }\n            return origWrite.apply(this, args);\n        };\n        return origAttachHttp2Stream.call(this, stream, ...rest);\n    };\n}\nexports.patchClientWritableStream = patchClientWritableStream;\n//# sourceMappingURL=patchClientWritableStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readableToAsyncIterable = void 0;\n/**\n * This is a copy of NodeJS createAsyncIterator(stream), with removed stream\n * destruction.\n *\n * https://github.com/nodejs/node/blob/v15.8.0/lib/internal/streams/readable.js#L1079\n *\n * @internal\n */\nasync function* readableToAsyncIterable(stream) {\n    let callback = nop;\n    function next(resolve) {\n        if (this === stream) {\n            callback();\n            callback = nop;\n        }\n        else {\n            callback = resolve;\n        }\n    }\n    const state = stream._readableState;\n    let error = state.errored;\n    let errorEmitted = state.errorEmitted;\n    let endEmitted = state.endEmitted;\n    let closeEmitted = state.closeEmitted;\n    stream\n        .on('readable', next)\n        .on('error', function (err) {\n        error = err;\n        errorEmitted = true;\n        next.call(this);\n    })\n        .on('end', function () {\n        endEmitted = true;\n        next.call(this);\n    })\n        .on('close', function () {\n        closeEmitted = true;\n        next.call(this);\n    });\n    while (true) {\n        const chunk = stream.destroyed ? null : stream.read();\n        if (chunk !== null) {\n            yield chunk;\n        }\n        else if (errorEmitted) {\n            throw error;\n        }\n        else if (endEmitted) {\n            break;\n        }\n        else if (closeEmitted) {\n            break;\n        }\n        else {\n            await new Promise(next);\n        }\n    }\n}\nexports.readableToAsyncIterable = readableToAsyncIterable;\nconst nop = () => { };\n//# sourceMappingURL=readableToAsyncIterable.js.map","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","/* eslint-disable */\nexports = module.exports = fetch;\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar Stream = require('stream');\nvar buffer = require('buffer');\nvar util = require('util');\nvar url = require('url');\nvar net = require('net');\nvar fs = require('fs');\nvar path = require('path');\nvar DOMException = require('node-domexception');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar http__default = /*#__PURE__*/_interopDefaultLegacy(http);\nvar https__default = /*#__PURE__*/_interopDefaultLegacy(https);\nvar zlib__default = /*#__PURE__*/_interopDefaultLegacy(zlib);\nvar Stream__default = /*#__PURE__*/_interopDefaultLegacy(Stream);\nvar DOMException__default = /*#__PURE__*/_interopDefaultLegacy(DOMException);\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nfunction dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\n\n/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE$1 = 65536;\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process');\n    const { emitWarning } = process;\n    try {\n      process.emitWarning = () => {};\n      Object.assign(globalThis, require('node:stream/web'));\n      process.emitWarning = emitWarning;\n    } catch (error) {\n      process.emitWarning = emitWarning;\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'));\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer');\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0;\n      const blob = this;\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));\n          const buffer = await chunk.arrayBuffer();\n          position += buffer.byteLength;\n          ctrl.enqueue(new Uint8Array(buffer));\n\n          if (position === blob.size) {\n            ctrl.close();\n          }\n        }\n      })\n    };\n  }\n} catch (error) {}\n/* c8 ignore end */\n\n/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536;\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()));\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset;\n        const end = part.byteOffset + part.byteLength;\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE);\n          const chunk = part.buffer.slice(position, position + size);\n          position += chunk.byteLength;\n          yield new Uint8Array(chunk);\n        }\n      } else {\n        yield part;\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part));\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {};\n\n    const encoder = new TextEncoder();\n    for (const element of blobParts) {\n      let part;\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0));\n      } else if (element instanceof Blob) {\n        part = element;\n      } else {\n        part = encoder.encode(`${element}`);\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      this.#parts.push(part);\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`;\n    const type = options.type === undefined ? '' : String(options.type);\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : '';\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder();\n    let str = '';\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true });\n    }\n    // Remaining\n    str += decoder.decode();\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size);\n    let offset = 0;\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset);\n      offset += chunk.length;\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true);\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next();\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);\n      },\n\n      async cancel () {\n        await it.return();\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this;\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const parts = this.#parts;\n    const blobParts = [];\n    let added = 0;\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size;\n        relativeEnd -= size;\n      } else {\n        let chunk;\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.byteLength;\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.size;\n        }\n        relativeEnd -= size;\n        blobParts.push(chunk);\n        relativeStart = 0; // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() });\n    blob.#size = span;\n    blob.#parts = blobParts;\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n};\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n});\n\n/** @type {typeof globalThis.Blob} */\nconst Blob = _Blob;\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options);\n\n    if (options === null) options = {};\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified;\n    }\n\n    this.#name = String(fileName);\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n};\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nconst File = _File;\n\n/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new File([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}};\n\n/** @type {typeof globalThis.FormData} */\nconst FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a));}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a);}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this);}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d);});c&&b.push(a);this.#d=b;}\n*entries(){yield*this.#d;}\n*keys(){for(var[a]of this)yield a;}\n*values(){for(var[,a]of this)yield a;}};\n\n/** @param {FormData} F */\nfunction formDataToBlob (F,B=Blob){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`;\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'));\nc.push(`--${b}--`);\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n\nclass FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n\nconst pipeline = util.promisify(Stream__default[\"default\"].pipeline);\nconst INTERNALS$2 = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = buffer.Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) ; else if (buffer.Buffer.isBuffer(body)) ; else if (util.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = buffer.Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = buffer.Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream__default[\"default\"]) ; else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = buffer.Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (buffer.Buffer.isBuffer(body)) {\n\t\t\tstream = Stream__default[\"default\"].Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream__default[\"default\"].Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream__default[\"default\"]) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS$2].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS$2].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS$2].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await Promise.resolve().then(function () { return require('./multipart-parser-ea55d8f4.js'); });\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS$2].body && this[INTERNALS$2].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = util.deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: util.deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS$2].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS$2].disturbed = true;\n\n\tif (data[INTERNALS$2].error) {\n\t\tthrow data[INTERNALS$2].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn buffer.Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream__default[\"default\"])) {\n\t\treturn buffer.Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn buffer.Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn buffer.Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nconst clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS$2];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream__default[\"default\"]) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new Stream.PassThrough({highWaterMark});\n\t\tp2 = new Stream.PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS$2].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = util.deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (buffer.Buffer.isBuffer(body) || util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream__default[\"default\"]) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = request => {\n\tconst {body} = request[INTERNALS$2];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (buffer.Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nconst writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http__default[\"default\"].validateHeaderName === 'function' ?\n\thttp__default[\"default\"].validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http__default[\"default\"].validateHeaderValue === 'function' ?\n\thttp__default[\"default\"].validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) ; else if (typeof init === 'object' && !util.types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || util.types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS$1].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS$1].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS$1].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nfunction stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nconst ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nconst DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nfunction validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = net.isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nfunction determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nfunction parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = util.deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn url.format(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n\nconst { stat } = fs.promises;\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(fs.statSync(path), path, type);\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(fs.statSync(path), path, type);\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type });\n\n// @ts-ignore\nconst fromFile = (stat, path$1, type = '') => new File([new BlobDataItem({\n  path: path$1,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], path.basename(path$1), { type, lastModified: stat.mtimeMs });\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path;\n    this.#start = options.start;\n    this.size = options.size;\n    this.lastModified = options.lastModified;\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path);\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException__default[\"default\"]('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * fs.createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    });\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nasync function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https__default[\"default\"] : http__default[\"default\"]).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream__default[\"default\"].Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream__default[\"default\"].Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__default[\"default\"].Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__default[\"default\"].Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = Stream.pipeline(body, zlib__default[\"default\"].createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib__default[\"default\"].createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib__default[\"default\"].createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = Stream.pipeline(body, zlib__default[\"default\"].createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = buffer.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = buffer.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tbuffer.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tbuffer.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n\nexports.AbortError = AbortError;\nexports.Blob = Blob;\nexports.FetchError = FetchError;\nexports.File = File;\nexports.FormData = FormData;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.blobFrom = blobFrom;\nexports.blobFromSync = blobFromSync;\nexports[\"default\"] = fetch;\nexports.fileFrom = fileFrom;\nexports.fileFromSync = fileFromSync;\nexports.isRedirect = isRedirect;\n/* eslint-enable */\n//# sourceMappingURL=index.js.map\n","/* eslint-disable */\n'use strict';\n\nrequire('fs');\nrequire('path');\nrequire('node-domexception');\nvar index = require('./index.js');\nrequire('http');\nrequire('https');\nrequire('zlib');\nrequire('stream');\nrequire('buffer');\nrequire('util');\nrequire('url');\nrequire('net');\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nasync function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new index.FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new index.File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n\nexports.toFormData = toFormData;\n/* eslint-enable */\n//# sourceMappingURL=multipart-parser-ea55d8f4.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\nvar helpers = require(\"./helpers\");\nvar setPrototypeOf = helpers.setPrototypeOf;\nvar getPrototypeOf = helpers.getPrototypeOf;\nvar defineProperty = helpers.defineProperty;\nvar objectCreate = helpers.objectCreate;\n\n// Small test for IE6-8, which checks if the environment prints errors \"nicely\"\n// If not, a toString() method to be added to the error objects with formatting\n// like in more modern browsers\nvar uglyErrorPrinting = new Error().toString() === \"[object Error]\";\n\n// For compatibility\nvar extendableErrorName = \"\";\n\nfunction ExtendableError(message) {\n  // Get the constructor\n  var originalConstructor = this.constructor;\n  // Get the constructor name from the non-standard name property. If undefined\n  // (on old IEs), it uses the string representation of the function to extract\n  // the name. This should work in all cases, except for directly instantiated\n  // ExtendableError objects, for which the name of the ExtendableError class /\n  // function is used\n  var constructorName =\n    originalConstructor.name ||\n    (function () {\n      var constructorNameMatch = originalConstructor\n        .toString()\n        .match(/^function\\s*([^\\s(]+)/);\n      return constructorNameMatch === null\n        ? extendableErrorName\n          ? extendableErrorName\n          : \"Error\"\n        : constructorNameMatch[1];\n    })();\n  // If the constructor name is \"Error\", ...\n  var constructorNameIsError = constructorName === \"Error\";\n  // change it to the name of the ExtendableError class / function\n  var name = constructorNameIsError ? extendableErrorName : constructorName;\n\n  // Obtain a new Error instance. This also sets the message property already.\n  var instance = Error.apply(this, arguments);\n\n  // Set the prototype of this to the prototype of instance\n  setPrototypeOf(instance, getPrototypeOf(this));\n\n  // On old IEs, the instance will not extend our subclasses this way. The fix is to use this from the function call instead.\n  if (\n    !(instance instanceof originalConstructor) ||\n    !(instance instanceof ExtendableError)\n  ) {\n    var instance = this;\n    Error.apply(this, arguments);\n    defineProperty(instance, \"message\", {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true,\n    });\n  }\n\n  // define the name property\n  defineProperty(instance, \"name\", {\n    configurable: true,\n    enumerable: false,\n    value: name,\n    writable: true,\n  });\n\n  // Use Error.captureStackTrace on V8 to capture the proper stack trace excluding any of our error classes\n  if (Error.captureStackTrace) {\n    // prettier-ignore\n    Error.captureStackTrace(\n      instance,\n      constructorNameIsError ? ExtendableError : originalConstructor\n    );\n  }\n  // instance.stack can still be undefined, in which case the best solution is to create a new Error object and get it from there\n  if (instance.stack === undefined) {\n    var err = new Error(message);\n    err.name = instance.name;\n    instance.stack = err.stack;\n  }\n\n  // If the environment does not have a proper string representation (IE), provide an alternative toString()\n  if (uglyErrorPrinting) {\n    defineProperty(instance, \"toString\", {\n      configurable: true,\n      enumerable: false,\n      value: function toString() {\n        return (\n          (this.name || \"Error\") +\n          (typeof this.message === \"undefined\" ? \"\" : \": \" + this.message)\n        );\n      },\n      writable: true,\n    });\n  }\n\n  // We're done!\n  return instance;\n}\n\n// Get the name of the ExtendableError function or use the string literal\nextendableErrorName = ExtendableError.name || \"ExtendableError\";\n\n// Set the prototype of ExtendableError to an Error object\nExtendableError.prototype = objectCreate(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\n\n// Export\nexports.ExtendableError = ExtendableError;\nexports[\"default\"] = exports.ExtendableError;\n","\"use strict\";\nexports.__esModule = undefined;\nexports.__esModule = true;\n\n// Misc helpers\n\nvar objectSetPrototypeOfIsDefined = typeof Object.setPrototypeOf === \"function\";\nvar objectGetPrototypeOfIsDefined = typeof Object.getPrototypeOf === \"function\";\nvar objectDefinePropertyIsDefined = typeof Object.defineProperty === \"function\";\nvar objectCreateIsDefined = typeof Object.create === \"function\";\nvar objectHasOwnPropertyIsDefined =\n  typeof Object.prototype.hasOwnProperty === \"function\";\n\nvar setPrototypeOf = function setPrototypeOf(target, prototype) {\n  if (objectSetPrototypeOfIsDefined) {\n    Object.setPrototypeOf(target, prototype);\n  } else {\n    target.__proto__ = prototype;\n  }\n};\nexports.setPrototypeOf = setPrototypeOf;\n\nvar getPrototypeOf = function getPrototypeOf(target) {\n  if (objectGetPrototypeOfIsDefined) {\n    return Object.getPrototypeOf(target);\n  } else {\n    return target.__proto__ || target.prototype;\n  }\n};\nexports.getPrototypeOf = getPrototypeOf;\n\n// Object.defineProperty exists in IE8, but the implementation is buggy, so we\n// need to test if the call fails, and, if so, set a flag to use the shim, as if\n// the function were not defined. When this error is caught the first time, the\n// function is called again recursively, after the flag is set, so the desired\n// effect is achieved anyway.\nvar ie8ObjectDefinePropertyBug = false;\nvar defineProperty = function defineProperty(target, name, propertyDescriptor) {\n  if (objectDefinePropertyIsDefined && !ie8ObjectDefinePropertyBug) {\n    try {\n      Object.defineProperty(target, name, propertyDescriptor);\n    } catch (e) {\n      ie8ObjectDefinePropertyBug = true;\n      defineProperty(target, name, propertyDescriptor);\n    }\n  } else {\n    target[name] = propertyDescriptor.value;\n  }\n};\nexports.defineProperty = defineProperty;\n\nvar hasOwnProperty = function hasOwnProperty(target, name) {\n  if (objectHasOwnPropertyIsDefined) {\n    return target.hasOwnProperty(target, name);\n  } else {\n    return target[name] === undefined;\n  }\n};\nexports.hasOwnProperty = hasOwnProperty;\n\nvar objectCreate = function objectCreate(prototype, propertyDescriptors) {\n  if (objectCreateIsDefined) {\n    return Object.create(prototype, propertyDescriptors);\n  } else {\n    var F = function F() {};\n    F.prototype = prototype;\n    var result = new F();\n    if (typeof propertyDescriptors === \"undefined\") {\n      return result;\n    }\n    if (typeof propertyDescriptors === \"null\") {\n      throw new Error(\"PropertyDescriptors must not be null.\");\n    }\n    if (typeof propertyDescriptors === \"object\") {\n      for (var key in propertyDescriptors) {\n        if (hasOwnProperty(propertyDescriptors, key)) {\n          result[key] = propertyDescriptors[key].value;\n        }\n      }\n    }\n\n    return result;\n  }\n};\nexports.objectCreate = objectCreate;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function timeout(millis: number): Promise<void> {\n\treturn new Promise((resolve) => setTimeout(resolve, millis));\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\nexport async function retryWithStop<T>(task: (stop: () => void) => Promise<T>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\tlet stopped = false;\n\tconst stop = () => {\n\t\tstopped = true;\n\t};\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task(stop);\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\tthrow lastError;\n}\n\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, _) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from '../services/logService';\nimport { isBuiltFromGHA } from './utils';\nimport fetch from 'node-fetch-commonjs';\n\nconst metricsHostMap = new Map<string, string>();\n\nexport async function addCounter(gitpodHost: string, name: string, labels: Record<string, string>, value: number, logService: ILogService) {\n    const data = {\n        name,\n        labels,\n        value,\n    };\n    if (!isBuiltFromGHA) {\n        logService.trace('Local metrics add counter', data);\n        return;\n    }\n    const metricsHost = getMetricsHost(gitpodHost);\n    const resp = await fetch(\n        `https://${metricsHost}/metrics-api/metrics/counter/add/${name}`,\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Client': 'vscode-desktop-extension'\n            },\n            body: JSON.stringify(data)\n        }\n    );\n\n    if (!resp.ok) {\n        throw new Error(`Metrics endpoint responded with ${resp.status} ${resp.statusText}`);\n    }\n}\n\nexport async function addHistogram(gitpodHost: string, name: string, labels: Record<string, string>, count: number, sum: number, buckets: number[], logService: ILogService) {\n    const data = {\n        name,\n        labels,\n        count,\n        sum,\n        buckets,\n    };\n    if (!isBuiltFromGHA) {\n        logService.trace('Local metrics add histogram', data);\n        return;\n    }\n    const metricsHost = getMetricsHost(gitpodHost);\n    const resp = await fetch(\n        `https://${metricsHost}/metrics-api/metrics/histogram/add/${name}`,\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Client': 'vscode-desktop-extension'\n            },\n            body: JSON.stringify(data)\n        }\n    );\n\n    if (!resp.ok) {\n        throw new Error(`Metrics endpoint responded with ${resp.status} ${resp.statusText}`);\n    }\n}\n\nfunction getMetricsHost(gitpodHost: string): string {\n    if (metricsHostMap.has(gitpodHost)) {\n        return metricsHostMap.get(gitpodHost)!;\n    }\n    const serviceUrl = new URL(gitpodHost);\n    const metricsHost = `ide.${serviceUrl.hostname}`;\n    metricsHostMap.set(gitpodHost, metricsHost);\n    return metricsHost;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { Analytics, AnalyticsSettings } from '@segment/analytics-node';\nimport { ILogService } from '../services/logService';\nimport { cloneAndChange, escapeRegExpCharacters, isBuiltFromGHA, mixin } from '../common/utils';\nimport fetch from 'node-fetch-commonjs';\n\nexport const TRUSTED_VALUES = new Set([\n\t'gitpodHost',\n\t'sessionScopes'\n]);\n\nexport interface TelemetryEventProperties {\n\tgitpodHost: string;\n\n\t[key: string]: any;\n}\n\nexport interface UserFlowTelemetryProperties {\n\tflow: string;\n\n\tgitpodHost: string;\n\n\tworkspaceId?: string;\n\tinstanceId?: string;\n\n\tuserId?: string;\n\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\tsendTelemetryEvent(eventName: string, properties?: TelemetryEventProperties): void;\n\tsendTelemetryException(error: Error, properties?: TelemetryEventProperties): void;\n\n\tsendUserFlowStatus(status: string, flow: UserFlowTelemetryProperties): void;\n}\n\nexport function createSegmentAnalyticsClient(settings: AnalyticsSettings, gitpodHost: string, logService: ILogService): Analytics | undefined {\n\tconst serviceUrl = new URL(gitpodHost);\n\n\tconst updatedSettings: AnalyticsSettings = {\n\t\t...settings,\n\t\t// in dev mode we report directly to IDE playground source\n\t\thost: 'https://api.segment.io',\n\t\tpath: '/v1/batch'\n\t};\n\tif (isBuiltFromGHA) {\n\t\tupdatedSettings.host = gitpodHost;\n\t\tupdatedSettings.path = '/analytics/v1/batch';\n\t} else {\n\t\tif (serviceUrl.host !== 'gitpod.io' && !serviceUrl.host.endsWith('.gitpod-dev.com')) {\n\t\t\tlogService.error(`No telemetry: dedicated installations should send data always to own endpoints, host: ${serviceUrl.host}`);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconst client = new Analytics(updatedSettings);\n\treturn client;\n}\n\n\nfunction getErrorMetricsEndpoint(gitpodHost: string): string {\n\ttry {\n\t\tconst serviceUrl = new URL(gitpodHost);\n\t\treturn `https://ide.${serviceUrl.hostname}/metrics-api/reportError`;\n\t} catch {\n\t\tthrow new Error(`Invalid URL: ${gitpodHost}`);\n\t}\n}\n\nexport async function commonSendEventData(logService: ILogService, segmentClient: Analytics | undefined, machineId: string, eventName: string, data?: any): Promise<void> {\n\tconst properties = data ?? {};\n\n\tdelete properties['gitpodHost'];\n\n\tlogService.trace('[TELEMETRY]', eventName, properties);\n\n\tif (!segmentClient) {\n\t\treturn;\n\t}\n\treturn new Promise((resolve) =>\n\t\tsegmentClient.track({\n\t\t\tanonymousId: machineId,\n\t\t\tevent: eventName,\n\t\t\tproperties\n\t\t}, (err) => {\n\t\t\tif (err) {\n\t\t\t\tlogService.error('Failed to log event to app analytics:', err);\n\t\t\t}\n\t\t\tresolve();\n\t\t}));\n}\n\ninterface SendErrorDataOptions {\n\tcleanupPatterns: RegExp[];\n\tcommonProperties: Record<string, any>;\n\tisTrustedValue: isTrustedValueFunc;\n}\n\nexport function getCleanupPatterns(piiPaths: string[]) {\n\t// static cleanup pattern for: `vscode-file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\tconst cleanupPatterns = [/(vscode-)?file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\tpiiPaths.push(os.tmpdir());\n\tpiiPaths.push(os.homedir());\n\tfor (const piiPath of piiPaths) {\n\t\tcleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\n\t\tif (piiPath.indexOf('\\\\') >= 0) {\n\t\t\tcleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath.replace(/\\\\/g, '/')), 'gi'));\n\t\t}\n\t}\n\treturn cleanupPatterns;\n}\n\nexport function commonSendErrorData(logService: ILogService, defaultGitpodHost: string, error: Error, data: any | undefined, options: SendErrorDataOptions) {\n\tconst { cleanupPatterns, commonProperties, isTrustedValue } = options;\n\tlet properties = cleanData(data ?? {}, cleanupPatterns, isTrustedValue);\n\tproperties = mixin(properties, commonProperties);\n\tconst errorProps = cleanData({ message: error.message, stack: error.stack }, cleanupPatterns, isTrustedValue);\n\n\t// Unhandled errors have no data so use host from config\n\tconst gitpodHost = properties['gitpodHost'] ?? defaultGitpodHost;\n\tconst errorMetricsEndpoint = getErrorMetricsEndpoint(gitpodHost);\n\n\tproperties['error_name'] = error.name;\n\tproperties['error_message'] = errorProps.message;\n\tproperties['debug_workspace'] = String(properties['debug_workspace'] ?? false);\n\n\tconst workspaceId = properties['workspaceId'] ?? '';\n\tconst instanceId = properties['instanceId'] ?? '';\n\tconst userId = properties['userId'] ?? '';\n\n\tdelete properties['gitpodHost'];\n\tdelete properties['workspaceId'];\n\tdelete properties['instanceId'];\n\tdelete properties['userId'];\n\n\t// make sure all properties are strings\n\tfor (const key in properties) {\n\t\tif (typeof properties[key] !== 'string') {\n\t\t\tproperties[key] = JSON.stringify(properties[key]);\n\t\t}\n\t}\n\n\tconst jsonData = {\n\t\tcomponent: 'vscode-desktop-extension',\n\t\terrorStack: errorProps.stack || '',\n\t\tversion: properties['common.extversion'],\n\t\tworkspaceId,\n\t\tinstanceId,\n\t\tuserId,\n\t\tproperties,\n\t};\n\n\tif (!isBuiltFromGHA) {\n\t\tlogService.trace('Local error report', jsonData);\n\t\treturn;\n\t}\n\n\tfetch(errorMetricsEndpoint, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(jsonData),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t}).then((resp) => {\n\t\tif (!resp.ok) {\n\t\t\tlogService.error(`Metrics endpoint responded with ${resp.status} ${resp.statusText}`);\n\t\t}\n\t}).catch((e) => {\n\t\tlogService.error('Failed to report error to metrics endpoint!', e);\n\t});\n}\n\n\n//#region Telemetry Cleaning\n\n// Remove when upstream TODO is addressed\n// https://github.com/microsoft/vscode/blob/44ef5cc53127cbaa11dee1728bdf8c24522f8fa0/src/vs/workbench/api/common/extHostTelemetry.ts#L278-L279\n\nexport function getBaseProperties() {\n\tconst commonProperties = Object.create(null);\n\tcommonProperties['common.os'] = os.platform();\n\tcommonProperties['common.nodeArch'] = os.arch();\n\tcommonProperties['common.platformversion'] = os.release().replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\treturn commonProperties;\n}\n\nfunction anonymizeFilePaths(stack: string, cleanupPatterns: RegExp[]): string {\n\n\t// Fast check to see if it is a file path to avoid doing unnecessary heavy regex work\n\tif (!stack || (!stack.includes('/') && !stack.includes('\\\\'))) {\n\t\treturn stack;\n\t}\n\n\tlet updatedStack = stack;\n\n\tconst cleanUpIndexes: [number, number][] = [];\n\tfor (const regexp of cleanupPatterns) {\n\t\twhile (true) {\n\t\t\tconst result = regexp.exec(stack);\n\t\t\tif (!result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t}\n\t}\n\n\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\tlet lastIndex = 0;\n\tupdatedStack = '';\n\n\twhile (true) {\n\t\tconst result = fileRegex.exec(stack);\n\t\tif (!result) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// Check to see if the any cleanupIndexes partially overlap with this match\n\t\tconst overlappingRange = cleanUpIndexes.some(([start, end]) => result.index < end && start < fileRegex.lastIndex);\n\n\t\t// anoynimize user file paths that do not need to be retained or cleaned up.\n\t\tif (!nodeModulesRegex.test(result[0]) && !overlappingRange) {\n\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t}\n\t}\n\tif (lastIndex < stack.length) {\n\t\tupdatedStack += stack.substr(lastIndex);\n\t}\n\n\treturn updatedStack;\n}\n\nfunction removePropertiesWithPossibleUserInfo(property: string): string {\n\t// If for some reason it is undefined we skip it (this shouldn't be possible);\n\tif (!property) {\n\t\treturn property;\n\t}\n\n\tconst userDataRegexes = [\n\t\t{ label: 'Google API Key', regex: /AIza[A-Za-z0-9_\\\\\\-]{35}/ },\n\t\t{ label: 'Slack Token', regex: /xox[pbar]\\-[A-Za-z0-9]/ },\n\t\t{ label: 'Generic Secret', regex: /(key|token|sig|secret|signature|password|passwd|pwd|android:value)[^a-zA-Z0-9]/i },\n\t\t{ label: 'Email', regex: /@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+/ } // Regex which matches @*.site\n\t];\n\n\t// Check for common user data in the telemetry events\n\tfor (const secretRegex of userDataRegexes) {\n\t\tif (secretRegex.regex.test(property)) {\n\t\t\treturn `<REDACTED: ${secretRegex.label}>`;\n\t\t}\n\t}\n\n\treturn property;\n}\n\ntype isTrustedValueFunc = (value: any) => boolean;\n\nexport function cleanData(data: Record<string, any>, cleanUpPatterns: RegExp[], isTrustedValue: isTrustedValueFunc): Record<string, any> {\n\treturn cloneAndChange(data, value => {\n\n\t\t// If it's a trusted value it means it's okay to skip cleaning so we don't clean it\n\t\tif (isTrustedValue(value)) {\n\t\t\treturn value.value;\n\t\t}\n\n\t\t// We only know how to clean strings\n\t\tif (typeof value === 'string') {\n\t\t\tlet updatedProperty = value.replaceAll('%20', ' ');\n\n\t\t\t// First we anonymize any possible file paths\n\t\t\tupdatedProperty = anonymizeFilePaths(updatedProperty, cleanUpPatterns);\n\n\t\t\t// Then we do a simple regex replace with the defined patterns\n\t\t\tfor (const regexp of cleanUpPatterns) {\n\t\t\t\tupdatedProperty = updatedProperty.replace(regexp, '');\n\t\t\t}\n\n\t\t\t// Lastly, remove commonly leaked PII\n\t\t\tupdatedProperty = removePropertiesWithPossibleUserInfo(updatedProperty);\n\n\t\t\treturn updatedProperty;\n\t\t}\n\t\treturn undefined;\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function arrayEquals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (obj === undefined || obj === null) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (_isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!_isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (_isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (_isObject(destination[key]) && _isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function stringCompare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function getServiceURL(gitpodHost: string): string {\n\treturn new URL(gitpodHost).toString().replace(/\\/$/, '');\n}\n\nexport default function isPlainObject(value: any) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null);\n}\n\nexport class WrapError extends Error {\n\tconstructor(\n\t\tmsg: string,\n\t\treadonly cause: any,\n\t\treadonly code?: string\n\t) {\n\t\tsuper();\n\n\t\tlet originalMessage = cause?.message;\n\t\tif (!originalMessage) {\n\t\t\tif (isPlainObject(cause)) {\n\t\t\t\ttry {\n\t\t\t\t\toriginalMessage = JSON.stringify(cause);\n\t\t\t\t} catch {\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginalMessage = cause?.toString();\n\t\t\t}\n\t\t}\n\t\tthis.message = `${msg}: ${originalMessage}`;\n\n\t\tif (cause instanceof Error) {\n\t\t\tthis.name = cause.name;\n\t\t\tthis.stack = this.stack + '\\n\\n' + cause.stack;\n\t\t}\n\n\t\tthis.code ??= cause?.code;\n\t}\n}\n\nconst ProductionUntrustedSegmentKey = 'untrusted-dummy-key';\nexport const isBuiltFromGHA = process.env.SEGMENT_KEY === ProductionUntrustedSegmentKey;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { inspect } from 'util';\nimport { ILogService } from '../services/logService';\n\nexport class NopeLogger implements ILogService {\n    trace(_message: string, ..._args: any[]): void { }\n    debug(_message: string, ..._args: any[]): void { }\n    info(_message: string, ..._args: any[]): void { }\n    warn(_message: string, ..._args: any[]): void { }\n    error(_error: string | Error, ..._args: any[]): void { }\n    show(): void { }\n}\n\nexport class DebugLogger implements ILogService {\n    private readonly stream?: fs.WriteStream;\n\n    constructor(logFilePath: string) {\n        try {\n            // no need to consider target file for different platform\n            // since we use in only for debug local ssh proxy\n            this.stream = fs.createWriteStream(logFilePath, { flags: 'a' });\n        } catch (_e) { }\n    }\n\n    private parseArgs(...args: any[]) {\n        return args.map(e => inspect(e)).join(' ');\n    }\n\n    trace(message: string, ...args: any[]): void {\n        this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] TRACE: ${message} ${this.parseArgs(...args)}\\n`);\n    }\n\n    debug(message: string, ...args: any[]): void {\n        this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] DEBUG: ${message} ${this.parseArgs(...args)}\\n`);\n    }\n\n    info(message: string, ...args: any[]): void {\n        this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] INFO: ${message} ${this.parseArgs(...args)}\\n`);\n    }\n\n    warn(message: string, ...args: any[]): void {\n        this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] WARN: ${message} ${this.parseArgs(...args)}\\n`);\n    }\n\n    error(error: string | Error, ...args: any[]): void {\n        if (error instanceof Error) {\n            this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] ERROR: ${error.toString()}\\n${error.stack}\\n${this.parseArgs(...args)}\\n`);\n        } else {\n            this.stream?.write(`${new Date().toISOString()} pid[${process.pid}] ERROR: ${error.toString()} ${this.parseArgs(...args)}\\n`);\n        }\n    }\n\n    show(): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { NopeLogger, DebugLogger } from './logger';\nimport { TelemetryService } from './telemetryService';\n\ninterface ClientOptions {\n    host: string;\n    gitpodHost: string;\n    extIpcPort: number;\n    machineID: string;\n    debug: boolean;\n    appRoot: string;\n    extensionsDir: string;\n}\n\nfunction getClientOptions(): ClientOptions {\n    // Since 1.87.0 new electron version does not use this falga anymore, for now filter it\n    // we we should delete the logic and update minimun vscode version of extension\n    const args = process.argv.slice(2).filter(arg => arg !== '--ms-enable-electron-run-as-node');\n    // %h is in the form of <ws_id>.vss.<gitpod_host>'\n    // add `https://` prefix since our gitpodHost is actually a url not host\n    const host = args[0];\n    const extIpcPort = Number.parseInt(args[1], 10);\n    const machineID = args[2] ?? '';\n    const debug = args[3] === 'debug';\n    const appRoot = args[4];\n    const extensionsDir = args[5];\n    const gitpodHost = 'https://' + args[0].split('.').splice(2).join('.');\n    return {\n        host,\n        gitpodHost,\n        extIpcPort,\n        machineID,\n        debug,\n        appRoot,\n        extensionsDir\n    };\n}\n\nconst options = getClientOptions();\nif (!options) {\n    process.exit(1);\n}\n\nimport { SshClient } from '@microsoft/dev-tunnels-ssh-tcp';\nimport { NodeStream, ObjectDisposedError, SshChannelError, SshChannelOpenFailureReason, SshClientCredentials, SshClientSession, SshConnectionError, SshDisconnectReason, SshReconnectError, SshReconnectFailureReason, SshServerSession, SshSessionConfiguration, Stream, TraceLevel, WebSocketStream } from '@microsoft/dev-tunnels-ssh';\nimport { importKey, importKeyBytes } from '@microsoft/dev-tunnels-ssh-keys';\nimport { ExtensionServiceDefinition, GetWorkspaceAuthInfoResponse } from '../proto/typescript/ipc/v1/ipc';\nimport { Client, ClientError, Status, createChannel, createClient } from 'nice-grpc';\nimport { retry, timeout } from '../common/async';\nimport { WrapError } from '../common/utils';\nimport { WebSocket } from 'ws';\nimport * as stream from 'stream';\nimport { ILogService } from '../services/logService';\nimport { ITelemetryService, UserFlowTelemetryProperties } from '../common/telemetry';\nimport { LocalSSHMetricsReporter } from '../services/localSSHMetrics';\n\n// This public key is safe to be public since we only use it to verify local-ssh connections.\nconst HOST_KEY = 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ1QwcXg1eEJUVmc4TUVJbUUKZmN4RXRZN1dmQVVsM0JYQURBK2JYREsyaDZlaFJBTkNBQVJlQXo0RDVVZXpqZ0l1SXVOWXpVL3BCWDdlOXoxeApvZUN6UklqcGdCUHozS0dWRzZLYXV5TU5YUm95a21YSS9BNFpWaW9nd2Vjb0FUUjRUQ2FtWm1ScAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==';\n// const HOST_PUBLIC_FP = 'AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBF4DPgPlR7OOAi4i41jNT+kFft73PXGh4LNEiOmAE/PcoZUbopq7Iw1dGjKSZcj8DhlWKiDB5ygBNHhMJqZmZGk=';\n\nfunction getHostKey(): Buffer {\n    return Buffer.from(HOST_KEY, 'base64');\n}\n\ntype FailedToProxyCode = 'SSH.AuthenticationFailed' | 'TUNNEL.AuthenticateSSHKeyFailed' | 'NoRunningInstance' | 'FailedToGetAuthInfo' | 'GitpodHostMismatch' | 'NoAccessTokenFound';\n\n// IgnoredFailedCodes contains the failreCode that don't need to send error report\nconst IgnoredFailedCodes: (FailedToProxyCode | string)[] = ['NoRunningInstance', 'FailedToGetAuthInfo:UNAVAILABLE', 'FailedToGetAuthInfo:CANCELLED\"'];\n\nclass FailedToProxyError extends Error {\n    constructor(public readonly failureCode: FailedToProxyCode | string, originError?: Error) {\n        const msg = 'Failed to proxy connection: ' + failureCode;\n        super(originError ? (msg + ': ' + originError.toString()) : msg);\n        this.name = 'FailedToProxyError';\n    }\n\n    override toString() {\n        return `${this.name}(${this.failureCode}) ${this.message}`;\n    }\n}\n\n// TODO(local-ssh): Remove me after direct ssh works with @microsft/dev-tunnels-ssh\nconst FORCE_TUNNEL = true;\n\ninterface SSHUserFlowTelemetry extends UserFlowTelemetryProperties {\n    flow: 'local_ssh';\n    gitpodHost: string;\n    workspaceId: string;\n    instanceId?: string;\n    userId?: string;\n    failureCode?: FailedToProxyCode | string;\n}\n\nclass WebSocketSSHProxy {\n    private extensionIpc: Client<ExtensionServiceDefinition>;\n\n    private flow: SSHUserFlowTelemetry;\n\n    constructor(\n        private readonly options: ClientOptions,\n        private readonly telemetryService: ITelemetryService,\n        private readonly metricsReporter: LocalSSHMetricsReporter,\n        private readonly logService: ILogService\n    ) {\n        this.flow = {\n            flow: 'local_ssh',\n            gitpodHost: options.gitpodHost,\n            workspaceId: '',\n            processId: process.pid,\n        };\n\n        telemetryService.sendUserFlowStatus('started', this.flow);\n\n        this.setupNativeHandlers();\n        this.extensionIpc = createClient(ExtensionServiceDefinition, createChannel('127.0.0.1:' + this.options.extIpcPort));\n    }\n\n    private setupNativeHandlers() {\n        // best effort to intercept process exit\n        const beforeExitListener = (exitCode: number) => {\n            process.removeListener('beforeExit', beforeExitListener);\n            return this.sendExited(exitCode, false);\n        };\n        process.addListener('beforeExit', beforeExitListener);\n\n        const exitHandler = (signal?: NodeJS.Signals) => {\n            this.exitProcess(false, signal);\n        };\n        process.on('SIGINT', exitHandler);\n        process.on('SIGTERM', exitHandler);\n\n        process.on('uncaughtException', (err) => {\n            this.logService.error(err, 'uncaught exception');\n        });\n        process.on('unhandledRejection', (err) => {\n            this.logService.error(err as any, 'unhandled rejection');\n        });\n    }\n\n    private sendExited(exitCode: number, forceExit: boolean, exitSignal?: NodeJS.Signals) {\n        return this.telemetryService.sendUserFlowStatus('exited', {\n            ...this.flow,\n            exitCode,\n            forceExit: String(forceExit),\n            signal: exitSignal\n        });\n    }\n\n    private async exitProcess(forceExit: boolean, signal?: NodeJS.Signals) {\n        await this.sendExited(0, forceExit, signal);\n        process.exit(0);\n    }\n\n    async start() {\n        // Create as Duplex from stdin and stdout as passing them separately to NodeStream\n        // will result in an unhandled exception as NodeStream does not properly add\n        // an error handler to the writable stream\n        const sshStream = stream.Duplex.from({ readable: process.stdin, writable: process.stdout });\n        sshStream.on('error', e => {\n            if (!['EPIPE', 'ERR_STREAM_PREMATURE_CLOSE'].includes((e as any).code)) {\n                this.telemetryService.sendTelemetryException(new WrapError('Unexpected sshStream error', e));\n            }\n            // HACK:\n            // Seems there's a bug in the ssh library that could hang forever when the stream gets closed\n            // so the below `await pipePromise` will never return and the node process will never exit.\n            // So let's just force kill here\n            pipeSession?.close(SshDisconnectReason.byApplication);\n            setTimeout(() => {\n                this.exitProcess(true);\n            }, 50);\n        });\n\n        // This is expected to never throw as key is hardcoded\n        const keys = await importKeyBytes(getHostKey());\n        const config = new SshSessionConfiguration();\n        config.maxClientAuthenticationAttempts = 1;\n        const localSession = new SshServerSession(config);\n        localSession.credentials.publicKeys.push(keys);\n        localSession.trace = (_: TraceLevel, eventId: number, msg: string, err?: Error) => {\n            this.logService.trace(`sshsession [local] eventId[${eventId}]`, msg, err);\n        };\n\n        let pipeSession: SshClientSession | undefined;\n        let pipePromise: Promise<void> | undefined;\n        localSession.onAuthenticating(async (e) => {\n            this.flow.workspaceId = e.username ?? '';\n            this.sendUserStatusFlow('connecting');\n            e.authenticationPromise = this.authenticateClient(e.username ?? '', () => {\n                // in case of stale connection ensure to trigger the reconnect asap\n                // try gracefully\n                localSession.close(SshDisconnectReason.connectionLost);\n                // but if not force exit\n                setTimeout(() => {\n                    this.exitProcess(true);\n                }, 50);\n            })\n                .then(async session => {\n                    this.sendUserStatusFlow('connected');\n                    pipeSession = session;\n                    pipePromise = localSession.pipe(pipeSession);\n                    return {};\n                }).catch(async err => {\n                    this.logService.error('failed to authenticate proxy with username: ' + e.username ?? '', err);\n\n                    this.flow.failureCode = getFailureCode(err);\n                    let sendErrorReport = true;\n                    if (err instanceof FailedToProxyError && IgnoredFailedCodes.includes(err.failureCode)) {\n                        sendErrorReport = false;\n                    }\n\n                    this.sendUserStatusFlow('failed');\n                    if (sendErrorReport) {\n                        this.sendErrorReport(this.flow, err, 'failed to authenticate proxy');\n                    }\n\n                    // Await a few seconds to delay showing ssh extension error modal dialog\n                    await timeout(5000);\n\n                    await localSession.close(SshDisconnectReason.byApplication, err.toString(), err instanceof Error ? err : undefined);\n                    return null;\n                });\n        });\n        try {\n            await localSession.connect(new NodeStream(sshStream));\n            await pipePromise;\n        } catch (e) {\n            if (localSession.isClosed) {\n                return;\n            }\n            e = fixSSHErrorName(e);\n            this.logService.error(e, 'failed to connect to client');\n            this.sendErrorReport(this.flow, e, 'failed to connect to client');\n            await localSession.close(SshDisconnectReason.byApplication, e.toString(), e instanceof Error ? e : undefined);\n        }\n    }\n\n    private async authenticateClient(username: string, onStale: () => void) {\n        const workspaceInfo = await this.retryGetWorkspaceInfo(username);\n        this.flow.instanceId = workspaceInfo.instanceId;\n        this.flow.userId = workspaceInfo.userId;\n        if (workspaceInfo.phase && workspaceInfo.phase !== '' && workspaceInfo.phase !== 'running') {\n            throw new FailedToProxyError('NoRunningInstance');\n        }\n\n        if (FORCE_TUNNEL) {\n            return this.getTunnelSSHConfig(workspaceInfo, onStale);\n        }\n        try {\n            return await this.tryDirectSSH(workspaceInfo);\n        } catch (e) {\n            this.sendErrorReport(this.flow, e, 'try direct ssh failed');\n            return this.getTunnelSSHConfig(workspaceInfo, onStale);\n        }\n    }\n\n    private async tryDirectSSH(workspaceInfo: GetWorkspaceAuthInfoResponse): Promise<SshClientSession> {\n        try {\n            const connConfig = {\n                host: `${workspaceInfo.workspaceId}.ssh.${workspaceInfo.workspaceHost}`,\n                port: 22,\n                username: workspaceInfo.workspaceId,\n                password: workspaceInfo.ownerToken,\n            };\n            const config = new SshSessionConfiguration();\n            const client = new SshClient(config);\n            const session = await client.openSession(connConfig.host, connConfig.port);\n            session.onAuthenticating((e) => e.authenticationPromise = Promise.resolve({}));\n            const credentials: SshClientCredentials = { username: connConfig.username, password: connConfig.password };\n            const authenticated = await session.authenticate(credentials);\n            if (!authenticated) {\n                throw new FailedToProxyError('SSH.AuthenticationFailed');\n            }\n            return session;\n        } catch (e) {\n            throw fixSSHErrorName(e);\n        }\n    }\n\n    private async getTunnelSSHConfig(workspaceInfo: GetWorkspaceAuthInfoResponse, onStale: () => void): Promise<SshClientSession> {\n        try {\n            const workspaceWSUrl = `wss://${workspaceInfo.workspaceId}.${workspaceInfo.workspaceHost}`;\n            const socket = new WebSocket(workspaceWSUrl + '/_supervisor/tunnel/ssh', undefined, {\n                headers: {\n                    'x-gitpod-owner-token': workspaceInfo.ownerToken\n                }\n            });\n\n            socket.binaryType = 'arraybuffer';\n\n            const stream = await new Promise<Stream>((resolve, reject) => {\n                socket.onopen = () => {\n                    // see https://github.com/gitpod-io/gitpod/blob/a5b4a66e0f384733145855f82f77332062e9d163/components/gitpod-protocol/go/websocket.go#L31-L40\n                    const pongPeriod = 15 * 1000;\n                    const pingPeriod = pongPeriod * 9 / 10;\n\n                    let pingTimeout: NodeJS.Timeout | undefined;\n                    const heartbeat = () => {\n                        stopHearbeat();\n\n                        // Use `WebSocket#terminate()`, which immediately destroys the connection,\n                        // instead of `WebSocket#close()`, which waits for the close timer.\n                        // Delay should be equal to the interval at which your server\n                        // sends out pings plus a conservative assumption of the latency.\n                        pingTimeout = setTimeout(() => {\n                            this.telemetryService.sendUserFlowStatus('stale', this.flow);\n                            session.close(SshDisconnectReason.byApplication);\n                            onStale();\n                        }, pingPeriod + 1000);\n                    };\n                    const stopHearbeat = () => {\n                        if (pingTimeout !== undefined) {\n                            clearTimeout(pingTimeout);\n                            pingTimeout = undefined;\n                        }\n                    };\n\n                    socket.on('ping', heartbeat);\n                    heartbeat();\n\n                    const websocketStream = new WebSocketStream(socket as any);\n                    const wrappedOnClose = socket.onclose!;\n                    socket.onclose = (e) => {\n                        stopHearbeat();\n                        wrappedOnClose(e);\n                    };\n                    resolve(websocketStream);\n                };\n                socket.onerror = (e) => {\n                    reject(e);\n                };\n            });\n\n            const config = new SshSessionConfiguration();\n            const session = new SshClientSession(config);\n            session.onAuthenticating((e) => e.authenticationPromise = Promise.resolve({}));\n            session.trace = (_: TraceLevel, eventId: number, msg: string, err?: Error) => {\n                this.logService.trace(`sshsession [websocket] eventId[${eventId}]`, msg, err);\n            };\n\n            await session.connect(stream);\n\n            const ok = await session.authenticate({ username: workspaceInfo.username || 'gitpod', publicKeys: [await importKey(workspaceInfo.sshkey)] });\n            if (!ok) {\n                throw new FailedToProxyError('TUNNEL.AuthenticateSSHKeyFailed');\n            }\n            return session;\n        } catch (e) {\n            throw fixSSHErrorName(e);\n        }\n    }\n\n    async retryGetWorkspaceInfo(username: string) {\n        return retry(async () => {\n            return this.extensionIpc.getWorkspaceAuthInfo({ workspaceId: username, gitpodHost: this.options.gitpodHost }).catch(e => {\n                let failureCode = 'FailedToGetAuthInfo';\n                if (e instanceof ClientError) {\n                    if (e.code === Status.FAILED_PRECONDITION && e.message.includes('gitpod host mismatch')) {\n                        throw new FailedToProxyError('GitpodHostMismatch', e);\n                    } else if (e.code === Status.INTERNAL && e.message.includes('no access token found')) {\n                        throw new FailedToProxyError('NoAccessTokenFound', e);\n                    }\n                    failureCode += ':' + Status[e.code];\n                }\n                throw new FailedToProxyError(failureCode, e);\n            });\n        }, 200, 50);\n    }\n\n    sendUserStatusFlow(status: 'connected' | 'connecting' | 'failed') {\n        this.metricsReporter.reportConnectionStatus(this.flow.gitpodHost, status, this.flow.failureCode);\n        this.telemetryService.sendUserFlowStatus(status, this.flow);\n    }\n\n    sendErrorReport(info: UserFlowTelemetryProperties, err: Error | any, message: string) {\n        const properties = {\n            gitpodHost: info.gitpodHost,\n            userId: info.userId,\n            workspaceId: info.workspaceId,\n            instanceId: info.instanceId,\n        };\n        const error = new WrapError(message, err);\n        this.telemetryService.sendTelemetryException(error, properties);\n    }\n}\n\nlet vscodeProductJson: any;\nasync function getVSCodeProductJson(appRoot: string) {\n    if (!vscodeProductJson) {\n        try {\n            const productJsonStr = await fs.promises.readFile(path.join(appRoot, 'product.json'), 'utf8');\n            vscodeProductJson = JSON.parse(productJsonStr);\n        } catch {\n            return {};\n        }\n    }\n\n    return vscodeProductJson;\n}\n\nasync function getExtensionsJson(extensionsDir: string) {\n    try {\n        const extensionJsonStr = await fs.promises.readFile(path.join(extensionsDir, 'extensions.json'), 'utf8');\n        return JSON.parse(extensionJsonStr);\n    } catch {\n        return [];\n    }\n}\n\nasync function main() {\n    const logService = options.debug ? new DebugLogger(path.join(os.tmpdir(), `lssh-${options.host}.log`)) : new NopeLogger();\n    const telemetryService = new TelemetryService(\n        process.env.SEGMENT_KEY!,\n        options.machineID,\n        process.env.EXT_NAME!,\n        process.env.EXT_VERSION!,\n        options.gitpodHost,\n        logService\n    );\n\n    const metricsReporter = new LocalSSHMetricsReporter(logService);\n    const proxy = new WebSocketSSHProxy(options, telemetryService, metricsReporter, logService);\n    const promise = proxy.start().catch(e => {\n        const err = new WrapError('Uncaught exception on start method', e);\n        telemetryService.sendTelemetryException(err, { gitpodHost: options.gitpodHost });\n    });\n\n    Promise.all([getVSCodeProductJson(options.appRoot), getExtensionsJson(options.extensionsDir)])\n        .then(([productJson, extensionsJson]) => {\n            telemetryService.updateCommonProperties(productJson, extensionsJson);\n        });\n\n    await promise;\n}\n\nmain();\n\nfunction fixSSHErrorName(err: any) {\n    if (err instanceof SshConnectionError) {\n        err.name = 'SshConnectionError';\n        err.message = `[${SshDisconnectReason[err.reason ?? SshDisconnectReason.none]}] ${err.message}`;\n    } else if (err instanceof SshReconnectError) {\n        err.name = 'SshReconnectError';\n        err.message = `[${SshReconnectFailureReason[err.reason ?? SshReconnectFailureReason.none]}] ${err.message}`;\n    } else if (err instanceof SshChannelError) {\n        err.name = 'SshChannelError';\n        err.message = `[${SshChannelOpenFailureReason[err.reason ?? SshChannelOpenFailureReason.none]}] ${err.message}`;\n    } else if (err instanceof ObjectDisposedError) {\n        err.name = 'ObjectDisposedError';\n    }\n    return err;\n}\n\nfunction getFailureCode(err: any) {\n    if (err instanceof SshConnectionError) {\n        return `SshConnectionError.${SshDisconnectReason[err.reason ?? SshDisconnectReason.none]}`;\n    } else if (err instanceof SshReconnectError) {\n        return `SshReconnectError.${SshReconnectFailureReason[err.reason ?? SshReconnectFailureReason.none]}`;\n    } else if (err instanceof SshChannelError) {\n        return `SshChannelError.${SshChannelOpenFailureReason[err.reason ?? SshChannelOpenFailureReason.none]}`;\n    } else if (err instanceof ObjectDisposedError) {\n        return 'ObjectDisposedError';\n    } else if (err instanceof FailedToProxyError) {\n        return err.failureCode;\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport { Analytics } from '@segment/analytics-node';\nimport { ILogService } from '../services/logService';\nimport { ITelemetryService, TelemetryEventProperties, UserFlowTelemetryProperties, createSegmentAnalyticsClient, getBaseProperties, commonSendErrorData, commonSendEventData, getCleanupPatterns, TRUSTED_VALUES, cleanData } from '../common/telemetry';\nimport { mixin } from '../common/utils';\n\nconst isTrustedValue = (value: any) => {\n\treturn value instanceof TelemetryTrustedValue || Object.hasOwnProperty.call(value, 'isTrustedTelemetryValue');\n};\n\nexport class TelemetryService implements ITelemetryService {\n\tprivate segmentClient: Analytics | undefined;\n\tprivate cleanupPatterns: RegExp[] = [];\n\tprivate commonProperties: any;\n\n\tconstructor(\n\t\tprivate readonly segmentKey: string,\n\t\treadonly machineId: string,\n\t\treadonly extensionId: string,\n\t\treadonly extensionVersion: string,\n\t\tprivate readonly gitpodHost: string,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.segmentClient = createSegmentAnalyticsClient({ writeKey: this.segmentKey, maxEventsInBatch: 1 }, gitpodHost, this.logService);\n\t\tthis.cleanupPatterns = getCleanupPatterns([path.dirname(__dirname)/* globalStorage folder */]);\n\t\tconst commonProperties = getCommonProperties(machineId, extensionId, extensionVersion);\n\t\tthis.commonProperties = commonProperties;\n\t}\n\n\tasync sendEventData(eventName: string, data?: Record<string, any>): Promise<void> {\n\t\tconst properties = mixin(cleanData(data ?? {}, this.cleanupPatterns, isTrustedValue), this.commonProperties);\n\t\treturn commonSendEventData(this.logService, this.segmentClient, this.machineId, eventName, properties);\n\t}\n\n\tsendErrorData(error: Error, data?: Record<string, any>) {\n\t\tcommonSendErrorData(this.logService, this.gitpodHost, error, data, {\n\t\t\tcleanupPatterns: this.cleanupPatterns,\n\t\t\tcommonProperties: this.commonProperties,\n\t\t\tisTrustedValue\n\t\t});\n\t}\n\n\tflush() {\n\t\t// Noop, we disabled buffering\n\t}\n\n\tsendTelemetryEvent(eventName: string, properties?: TelemetryEventProperties): Promise<void> {\n\t\tconst props = properties ? Object.fromEntries(Object.entries(properties).map(([k, v]) => [k, TRUSTED_VALUES.has(k) ? new TelemetryTrustedValue(v) : v])) : undefined;\n\t\treturn this.sendEventData(eventName, props);\n\t}\n\n\tsendTelemetryException(error: Error, properties?: TelemetryEventProperties): void {\n\t\tconst props = properties ? Object.fromEntries(Object.entries(properties).map(([k, v]) => [k, TRUSTED_VALUES.has(k) ? new TelemetryTrustedValue(v) : v])) : undefined;\n\t\tthis.sendErrorData(error, props);\n\t}\n\n\tsendUserFlowStatus(status: string, flowProperties: UserFlowTelemetryProperties): Promise<void> {\n\t\tconst properties: TelemetryEventProperties = { ...flowProperties, status };\n\t\tdelete properties['flow'];\n\t\treturn this.sendTelemetryEvent('vscode_desktop_' + flowProperties.flow, properties);\n\t}\n\n\tupdateCommonProperties(productJson: any, extensionsJson: any) {\n\t\tlet remotesshextversion: string | undefined;\n\t\tif (Array.isArray(extensionsJson)) {\n\t\t\tconst remoteSshExt = extensionsJson.find(i => i.identifier.id === 'ms-vscode-remote.remote-ssh');\n\t\t\tremotesshextversion = remoteSshExt?.version;\n\t\t}\n\n\t\tthis.commonProperties['common.vscodeversion'] = productJson.version;\n\t\tthis.commonProperties['common.remotesshextversion'] = remotesshextversion;\n\t}\n}\n\nfunction getCommonProperties(machineId: string, extensionId: string, extensionVersion: string) {\n\tconst properties = getBaseProperties();\n\tproperties['common.vscodemachineid'] = machineId;\n\tproperties['common.extname'] = extensionId;\n\tproperties['common.extversion'] = extensionVersion;\n\treturn properties;\n}\n\nclass TelemetryTrustedValue {\n\tconstructor(public value: any, public isTrustedTelemetryValue: boolean = true) { }\n}\n","/* eslint-disable */\nimport type { CallContext, CallOptions } from \"nice-grpc-common\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"ipc.v1\";\n\nexport interface PingRequest {\n}\n\nexport interface PingResponse {\n}\n\nexport interface GetWorkspaceAuthInfoRequest {\n  workspaceId: string;\n  gitpodHost: string;\n}\n\nexport interface GetWorkspaceAuthInfoResponse {\n  workspaceId: string;\n  instanceId: string;\n  workspaceHost: string;\n  ownerToken: string;\n  gitpodHost: string;\n  userId: string;\n  sshkey: string;\n  phase: string;\n  username: string;\n}\n\nfunction createBasePingRequest(): PingRequest {\n  return {};\n}\n\nexport const PingRequest = {\n  encode(_: PingRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PingRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePingRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): PingRequest {\n    return {};\n  },\n\n  toJSON(_: PingRequest): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<PingRequest>): PingRequest {\n    return PingRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial(_: DeepPartial<PingRequest>): PingRequest {\n    const message = createBasePingRequest();\n    return message;\n  },\n};\n\nfunction createBasePingResponse(): PingResponse {\n  return {};\n}\n\nexport const PingResponse = {\n  encode(_: PingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePingResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): PingResponse {\n    return {};\n  },\n\n  toJSON(_: PingResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create(base?: DeepPartial<PingResponse>): PingResponse {\n    return PingResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial(_: DeepPartial<PingResponse>): PingResponse {\n    const message = createBasePingResponse();\n    return message;\n  },\n};\n\nfunction createBaseGetWorkspaceAuthInfoRequest(): GetWorkspaceAuthInfoRequest {\n  return { workspaceId: \"\", gitpodHost: \"\" };\n}\n\nexport const GetWorkspaceAuthInfoRequest = {\n  encode(message: GetWorkspaceAuthInfoRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.workspaceId !== \"\") {\n      writer.uint32(10).string(message.workspaceId);\n    }\n    if (message.gitpodHost !== \"\") {\n      writer.uint32(18).string(message.gitpodHost);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetWorkspaceAuthInfoRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetWorkspaceAuthInfoRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.workspaceId = reader.string();\n          break;\n        case 2:\n          message.gitpodHost = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetWorkspaceAuthInfoRequest {\n    return {\n      workspaceId: isSet(object.workspaceId) ? String(object.workspaceId) : \"\",\n      gitpodHost: isSet(object.gitpodHost) ? String(object.gitpodHost) : \"\",\n    };\n  },\n\n  toJSON(message: GetWorkspaceAuthInfoRequest): unknown {\n    const obj: any = {};\n    message.workspaceId !== undefined && (obj.workspaceId = message.workspaceId);\n    message.gitpodHost !== undefined && (obj.gitpodHost = message.gitpodHost);\n    return obj;\n  },\n\n  create(base?: DeepPartial<GetWorkspaceAuthInfoRequest>): GetWorkspaceAuthInfoRequest {\n    return GetWorkspaceAuthInfoRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial(object: DeepPartial<GetWorkspaceAuthInfoRequest>): GetWorkspaceAuthInfoRequest {\n    const message = createBaseGetWorkspaceAuthInfoRequest();\n    message.workspaceId = object.workspaceId ?? \"\";\n    message.gitpodHost = object.gitpodHost ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetWorkspaceAuthInfoResponse(): GetWorkspaceAuthInfoResponse {\n  return {\n    workspaceId: \"\",\n    instanceId: \"\",\n    workspaceHost: \"\",\n    ownerToken: \"\",\n    gitpodHost: \"\",\n    userId: \"\",\n    sshkey: \"\",\n    phase: \"\",\n    username: \"\",\n  };\n}\n\nexport const GetWorkspaceAuthInfoResponse = {\n  encode(message: GetWorkspaceAuthInfoResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.workspaceId !== \"\") {\n      writer.uint32(10).string(message.workspaceId);\n    }\n    if (message.instanceId !== \"\") {\n      writer.uint32(18).string(message.instanceId);\n    }\n    if (message.workspaceHost !== \"\") {\n      writer.uint32(26).string(message.workspaceHost);\n    }\n    if (message.ownerToken !== \"\") {\n      writer.uint32(34).string(message.ownerToken);\n    }\n    if (message.gitpodHost !== \"\") {\n      writer.uint32(42).string(message.gitpodHost);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(50).string(message.userId);\n    }\n    if (message.sshkey !== \"\") {\n      writer.uint32(58).string(message.sshkey);\n    }\n    if (message.phase !== \"\") {\n      writer.uint32(66).string(message.phase);\n    }\n    if (message.username !== \"\") {\n      writer.uint32(74).string(message.username);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetWorkspaceAuthInfoResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetWorkspaceAuthInfoResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.workspaceId = reader.string();\n          break;\n        case 2:\n          message.instanceId = reader.string();\n          break;\n        case 3:\n          message.workspaceHost = reader.string();\n          break;\n        case 4:\n          message.ownerToken = reader.string();\n          break;\n        case 5:\n          message.gitpodHost = reader.string();\n          break;\n        case 6:\n          message.userId = reader.string();\n          break;\n        case 7:\n          message.sshkey = reader.string();\n          break;\n        case 8:\n          message.phase = reader.string();\n          break;\n        case 9:\n          message.username = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetWorkspaceAuthInfoResponse {\n    return {\n      workspaceId: isSet(object.workspaceId) ? String(object.workspaceId) : \"\",\n      instanceId: isSet(object.instanceId) ? String(object.instanceId) : \"\",\n      workspaceHost: isSet(object.workspaceHost) ? String(object.workspaceHost) : \"\",\n      ownerToken: isSet(object.ownerToken) ? String(object.ownerToken) : \"\",\n      gitpodHost: isSet(object.gitpodHost) ? String(object.gitpodHost) : \"\",\n      userId: isSet(object.userId) ? String(object.userId) : \"\",\n      sshkey: isSet(object.sshkey) ? String(object.sshkey) : \"\",\n      phase: isSet(object.phase) ? String(object.phase) : \"\",\n      username: isSet(object.username) ? String(object.username) : \"\",\n    };\n  },\n\n  toJSON(message: GetWorkspaceAuthInfoResponse): unknown {\n    const obj: any = {};\n    message.workspaceId !== undefined && (obj.workspaceId = message.workspaceId);\n    message.instanceId !== undefined && (obj.instanceId = message.instanceId);\n    message.workspaceHost !== undefined && (obj.workspaceHost = message.workspaceHost);\n    message.ownerToken !== undefined && (obj.ownerToken = message.ownerToken);\n    message.gitpodHost !== undefined && (obj.gitpodHost = message.gitpodHost);\n    message.userId !== undefined && (obj.userId = message.userId);\n    message.sshkey !== undefined && (obj.sshkey = message.sshkey);\n    message.phase !== undefined && (obj.phase = message.phase);\n    message.username !== undefined && (obj.username = message.username);\n    return obj;\n  },\n\n  create(base?: DeepPartial<GetWorkspaceAuthInfoResponse>): GetWorkspaceAuthInfoResponse {\n    return GetWorkspaceAuthInfoResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial(object: DeepPartial<GetWorkspaceAuthInfoResponse>): GetWorkspaceAuthInfoResponse {\n    const message = createBaseGetWorkspaceAuthInfoResponse();\n    message.workspaceId = object.workspaceId ?? \"\";\n    message.instanceId = object.instanceId ?? \"\";\n    message.workspaceHost = object.workspaceHost ?? \"\";\n    message.ownerToken = object.ownerToken ?? \"\";\n    message.gitpodHost = object.gitpodHost ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.sshkey = object.sshkey ?? \"\";\n    message.phase = object.phase ?? \"\";\n    message.username = object.username ?? \"\";\n    return message;\n  },\n};\n\nexport type ExtensionServiceDefinition = typeof ExtensionServiceDefinition;\nexport const ExtensionServiceDefinition = {\n  name: \"ExtensionService\",\n  fullName: \"ipc.v1.ExtensionService\",\n  methods: {\n    getWorkspaceAuthInfo: {\n      name: \"GetWorkspaceAuthInfo\",\n      requestType: GetWorkspaceAuthInfoRequest,\n      requestStream: false,\n      responseType: GetWorkspaceAuthInfoResponse,\n      responseStream: false,\n      options: {},\n    },\n    ping: {\n      name: \"Ping\",\n      requestType: PingRequest,\n      requestStream: false,\n      responseType: PingResponse,\n      responseStream: false,\n      options: {},\n    },\n  },\n} as const;\n\nexport interface ExtensionServiceImplementation<CallContextExt = {}> {\n  getWorkspaceAuthInfo(\n    request: GetWorkspaceAuthInfoRequest,\n    context: CallContext & CallContextExt,\n  ): Promise<DeepPartial<GetWorkspaceAuthInfoResponse>>;\n  ping(request: PingRequest, context: CallContext & CallContextExt): Promise<DeepPartial<PingResponse>>;\n}\n\nexport interface ExtensionServiceClient<CallOptionsExt = {}> {\n  getWorkspaceAuthInfo(\n    request: DeepPartial<GetWorkspaceAuthInfoRequest>,\n    options?: CallOptions & CallOptionsExt,\n  ): Promise<GetWorkspaceAuthInfoResponse>;\n  ping(request: DeepPartial<PingRequest>, options?: CallOptions & CallOptionsExt): Promise<PingResponse>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Gitpod. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addCounter } from '../common/metrics';\nimport { ILogService } from './logService';\n\nexport class LocalSSHMetricsReporter {\n\n    constructor(\n        private readonly logService: ILogService,\n    ) { }\n\n    reportConfigStatus(gitpodHost: string, status: 'success' | 'failure', failureCode?: string) {\n        if (status === 'success') {\n            failureCode = 'None';\n        }\n        addCounter(gitpodHost, 'vscode_desktop_local_ssh_config_total', { status, failure_code: failureCode ?? 'Unknown' }, 1, this.logService)\n            .catch(e => this.logService.error('Error while reporting metrics', e));\n    }\n\n    reportPingExtensionStatus(gitpodHost: string, status: 'success' | 'failure') {\n        addCounter(gitpodHost, 'vscode_desktop_ping_extension_server_total', { status }, 1, this.logService)\n            .catch(e => this.logService.error('Error while reporting metrics', e));\n    }\n\n    reportConnectionStatus(gitpodHost: string, phase: 'connected' | 'connecting' | 'failed', failureCode?: string) {\n        if (phase === 'connecting' || phase === 'connected') {\n            failureCode = 'None';\n        }\n        addCounter(gitpodHost, 'vscode_desktop_local_ssh_total', { phase, failure_code: failureCode ?? 'Unknown' }, 1, this.logService)\n            .catch(e => this.logService.error('Error while reporting metrics', e));\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"bufferutil\");","module.exports = require(\"node-rsa\");","module.exports = require(\"utf-8-validate\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"punycode\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","// GENERATED FILE. DO NOT EDIT.\nvar Long = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  /**\n   * @license\n   * Copyright 2009 The Closure Library Authors\n   * Copyright 2020 Daniel Wirtz / The long.js Authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * SPDX-License-Identifier: Apache-2.0\n   */\n  // WebAssembly optimizations to do native i64 multiplication and divide\n  var wasm = null;\n  \n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch (e) {// no wasm support :(\n  }\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   * @exports Long\n   * @class A Long class for representing a 64 bit two's-complement integer value.\n   * @param {number} low The low (signed) 32 bits of the long\n   * @param {number} high The high (signed) 32 bits of the long\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @constructor\n   */\n  \n  \n  function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n  \n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n  \n    this.unsigned = !!unsigned;\n  } // The internal representation of a long is the two given signed, 32-bit values.\n  // We use 32-bit pieces because these are the size of integers on which\n  // Javascript performs bit-operations.  For operations like addition and\n  // multiplication, we split each number into 16 bit pieces, which can easily be\n  // multiplied within Javascript's floating-point representation without overflow\n  // or change in sign.\n  //\n  // In the algorithms below, we frequently reduce the negative case to the\n  // positive case by negating the input(s) and then post-processing the result.\n  // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n  // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n  // a positive number, it overflows back into a negative).  Not handling this\n  // case would often result in infinite recursion.\n  //\n  // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n  // methods on which they depend.\n  \n  /**\n   * An indicator used to reliably determine if an object is a Long or not.\n   * @type {boolean}\n   * @const\n   * @private\n   */\n  \n  \n  Long.prototype.__isLong__;\n  Object.defineProperty(Long.prototype, \"__isLong__\", {\n    value: true\n  });\n  /**\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   * @inner\n   */\n  \n  function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n  }\n  /**\n   * @function\n   * @param {*} value number\n   * @returns {number}\n   * @inner\n   */\n  \n  \n  function ctz32(value) {\n    var c = Math.clz32(value & -value);\n    return value ? 31 - c : c;\n  }\n  /**\n   * Tests if the specified object is a Long.\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   */\n  \n  \n  Long.isLong = isLong;\n  /**\n   * A cache of the Long representations of small integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var INT_CACHE = {};\n  /**\n   * A cache of the Long representations of small unsigned integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var UINT_CACHE = {};\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n  \n    if (unsigned) {\n      value >>>= 0;\n  \n      if (cache = 0 <= value && value < 256) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n  \n      if (cache = -128 <= value && value < 128) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @function\n   * @param {number} value The 32 bit integer in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromInt = fromInt;\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromNumber(value, unsigned) {\n    if (isNaN(value)) return unsigned ? UZERO : ZERO;\n  \n    if (unsigned) {\n      if (value < 0) return UZERO;\n      if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n    }\n  \n    if (value < 0) return fromNumber(-value, unsigned).neg();\n    return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n  }\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @function\n   * @param {number} value The number in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromNumber = fromNumber;\n  /**\n   * @param {number} lowBits\n   * @param {number} highBits\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n  }\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n   *  assumed to use 32 bits.\n   * @function\n   * @param {number} lowBits The low 32 bits\n   * @param {number} highBits The high 32 bits\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBits = fromBits;\n  /**\n   * @function\n   * @param {number} base\n   * @param {number} exponent\n   * @returns {number}\n   * @inner\n   */\n  \n  var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n  \n  /**\n   * @param {string} str\n   * @param {(boolean|number)=} unsigned\n   * @param {number=} radix\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromString(str, unsigned, radix) {\n    if (str.length === 0) throw Error('empty string');\n  \n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      radix = unsigned;\n      unsigned = false;\n    } else {\n      unsigned = !!unsigned;\n    }\n  \n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return unsigned ? UZERO : ZERO;\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n      return fromString(str.substring(1), unsigned, radix).neg();\n    } // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n  \n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n  \n      if (size < 8) {\n        var power = fromNumber(pow_dbl(radix, size));\n        result = result.mul(power).add(fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(fromNumber(value));\n      }\n    }\n  \n    result.unsigned = unsigned;\n    return result;\n  }\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @function\n   * @param {string} str The textual representation of the Long\n   * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n   * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromString = fromString;\n  /**\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromValue(val, unsigned) {\n    if (typeof val === 'number') return fromNumber(val, unsigned);\n    if (typeof val === 'string') return fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n  \n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n  }\n  /**\n   * Converts the specified value to a Long using the appropriate from* function for its type.\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long}\n   */\n  \n  \n  Long.fromValue = fromValue; // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n  // no runtime penalty for these.\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_16_DBL = 1 << 16;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24_DBL = 1 << 24;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  /**\n   * @type {!Long}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ZERO = fromInt(0);\n  /**\n   * Signed zero.\n   * @type {!Long}\n   */\n  \n  Long.ZERO = ZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UZERO = fromInt(0, true);\n  /**\n   * Unsigned zero.\n   * @type {!Long}\n   */\n  \n  Long.UZERO = UZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ONE = fromInt(1);\n  /**\n   * Signed one.\n   * @type {!Long}\n   */\n  \n  Long.ONE = ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UONE = fromInt(1, true);\n  /**\n   * Unsigned one.\n   * @type {!Long}\n   */\n  \n  Long.UONE = UONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var NEG_ONE = fromInt(-1);\n  /**\n   * Signed negative one.\n   * @type {!Long}\n   */\n  \n  Long.NEG_ONE = NEG_ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n  /**\n   * Maximum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_VALUE = MAX_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n  /**\n   * Maximum unsigned value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n  /**\n   * Minimum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MIN_VALUE = MIN_VALUE;\n  /**\n   * @alias Long.prototype\n   * @inner\n   */\n  \n  var LongPrototype = Long.prototype;\n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  LongPrototype.toInt = function toInt() {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  };\n  /**\n   * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.toNumber = function toNumber() {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  };\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @this {!Long}\n   * @param {number=} radix Radix (2-36), defaults to 10\n   * @returns {string}\n   * @override\n   * @throws {RangeError} If `radix` is out of range\n   */\n  \n  \n  LongPrototype.toString = function toString(radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n  \n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    } // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n  \n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n    var result = '';\n  \n    while (true) {\n      var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) return digits + result;else {\n        while (digits.length < 6) digits = '0' + digits;\n  \n        result = '' + digits + result;\n      }\n    }\n  };\n  /**\n   * Gets the high 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed high bits\n   */\n  \n  \n  LongPrototype.getHighBits = function getHighBits() {\n    return this.high;\n  };\n  /**\n   * Gets the high 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned high bits\n   */\n  \n  \n  LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n    return this.high >>> 0;\n  };\n  /**\n   * Gets the low 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed low bits\n   */\n  \n  \n  LongPrototype.getLowBits = function getLowBits() {\n    return this.low;\n  };\n  /**\n   * Gets the low 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned low bits\n   */\n  \n  \n  LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n    return this.low >>> 0;\n  };\n  /**\n   * Gets the number of bits needed to represent the absolute value of this Long.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n    if (this.isNegative()) // Unsigned Longs are never negative\n      return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    var val = this.high != 0 ? this.high : this.low;\n  \n    for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n  \n    return this.high != 0 ? bit + 33 : bit + 1;\n  };\n  /**\n   * Tests if this Long's value equals zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isZero = function isZero() {\n    return this.high === 0 && this.low === 0;\n  };\n  /**\n   * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eqz = LongPrototype.isZero;\n  /**\n   * Tests if this Long's value is negative.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  LongPrototype.isNegative = function isNegative() {\n    return !this.unsigned && this.high < 0;\n  };\n  /**\n   * Tests if this Long's value is positive or zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isPositive = function isPositive() {\n    return this.unsigned || this.high >= 0;\n  };\n  /**\n   * Tests if this Long's value is odd.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isOdd = function isOdd() {\n    return (this.low & 1) === 1;\n  };\n  /**\n   * Tests if this Long's value is even.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isEven = function isEven() {\n    return (this.low & 1) === 0;\n  };\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.equals = function equals(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  };\n  /**\n   * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eq = LongPrototype.equals;\n  /**\n   * Tests if this Long's value differs from the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.notEquals = function notEquals(other) {\n    return !this.eq(\n    /* validates */\n    other);\n  };\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.neq = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ne = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value is less than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThan = function lessThan(other) {\n    return this.comp(\n    /* validates */\n    other) < 0;\n  };\n  /**\n   * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lt = LongPrototype.lessThan;\n  /**\n   * Tests if this Long's value is less than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) <= 0;\n  };\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lte = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.le = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThan = function greaterThan(other) {\n    return this.comp(\n    /* validates */\n    other) > 0;\n  };\n  /**\n   * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gt = LongPrototype.greaterThan;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) >= 0;\n  };\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n  /**\n   * Compares this Long's value with the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  LongPrototype.compare = function compare(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.eq(other)) return 0;\n    var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n  \n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1; // Both are positive if at least one is unsigned\n  \n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  };\n  /**\n   * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  \n  LongPrototype.comp = LongPrototype.compare;\n  /**\n   * Negates this Long's value.\n   * @this {!Long}\n   * @returns {!Long} Negated Long\n   */\n  \n  LongPrototype.negate = function negate() {\n    if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n    return this.not().add(ONE);\n  };\n  /**\n   * Negates this Long's value. This is an alias of {@link Long#negate}.\n   * @function\n   * @returns {!Long} Negated Long\n   */\n  \n  \n  LongPrototype.neg = LongPrototype.negate;\n  /**\n   * Returns the sum of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} addend Addend\n   * @returns {!Long} Sum\n   */\n  \n  LongPrototype.add = function add(addend) {\n    if (!isLong(addend)) addend = fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the difference of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.subtract = function subtract(subtrahend) {\n    if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  };\n  /**\n   * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n   * @function\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.sub = LongPrototype.subtract;\n  /**\n   * Returns the product of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  LongPrototype.multiply = function multiply(multiplier) {\n    if (this.isZero()) return this;\n    if (!isLong(multiplier)) multiplier = fromValue(multiplier); // use wasm support if present\n  \n    if (wasm) {\n      var low = wasm[\"mul\"](this.low, this.high, multiplier.low, multiplier.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n    if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n    if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n  \n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg(); // If both longs are small, use float multiplication\n  \n  \n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n   * @function\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  \n  LongPrototype.mul = LongPrototype.multiply;\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or\n   *  unsigned if this Long is unsigned.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  LongPrototype.divide = function divide(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero'); // use wasm support if present\n  \n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n  \n      var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n  \n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(MIN_VALUE)) {\n        if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n  \n          if (approx.eq(ZERO)) {\n            return divisor.isNegative() ? ONE : NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n  \n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n  \n      res = ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return UZERO;\n      if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return UONE;\n      res = UZERO;\n    } // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n  \n  \n    rem = this;\n  \n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber())); // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n  \n      var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n  \n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      } // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n  \n  \n      if (approxRes.isZero()) approxRes = ONE;\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n  \n    return res;\n  };\n  /**\n   * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  \n  LongPrototype.div = LongPrototype.divide;\n  /**\n   * Returns this Long modulo the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.modulo = function modulo(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor); // use wasm support if present\n  \n    if (wasm) {\n      var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    return this.sub(this.div(divisor).mul(divisor));\n  };\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  \n  LongPrototype.mod = LongPrototype.modulo;\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.rem = LongPrototype.modulo;\n  /**\n   * Returns the bitwise NOT of this Long.\n   * @this {!Long}\n   * @returns {!Long}\n   */\n  \n  LongPrototype.not = function not() {\n    return fromBits(~this.low, ~this.high, this.unsigned);\n  };\n  /**\n   * Returns count leading zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.countLeadingZeros = function countLeadingZeros() {\n    return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n  };\n  /**\n   * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.clz = LongPrototype.countLeadingZeros;\n  /**\n   * Returns count trailing zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  LongPrototype.countTrailingZeros = function countTrailingZeros() {\n    return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n  };\n  /**\n   * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.ctz = LongPrototype.countTrailingZeros;\n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  LongPrototype.and = function and(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.or = function or(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.xor = function xor(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shiftLeft = function shiftLeft(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shl = LongPrototype.shiftLeft;\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRight = function shiftRight(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shr = LongPrototype.shiftRight;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);\n    if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n    return fromBits(this.high >>> numBits - 32, 0, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits rotated to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotl = LongPrototype.rotateLeft;\n  /**\n   * Returns this Long with bits rotated to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotr = LongPrototype.rotateRight;\n  /**\n   * Converts this Long to signed.\n   * @this {!Long}\n   * @returns {!Long} Signed long\n   */\n  \n  LongPrototype.toSigned = function toSigned() {\n    if (!this.unsigned) return this;\n    return fromBits(this.low, this.high, false);\n  };\n  /**\n   * Converts this Long to unsigned.\n   * @this {!Long}\n   * @returns {!Long} Unsigned long\n   */\n  \n  \n  LongPrototype.toUnsigned = function toUnsigned() {\n    if (this.unsigned) return this;\n    return fromBits(this.low, this.high, true);\n  };\n  /**\n   * Converts this Long to its byte representation.\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @this {!Long}\n   * @returns {!Array.<number>} Byte representation\n   */\n  \n  \n  LongPrototype.toBytes = function toBytes(le) {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  };\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Little endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesLE = function toBytesLE() {\n    var hi = this.high,\n        lo = this.low;\n    return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n  };\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Big endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesBE = function toBytesBE() {\n    var hi = this.high,\n        lo = this.low;\n    return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n  };\n  /**\n   * Creates a Long from its byte representation.\n   * @param {!Array.<number>} bytes Byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  };\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param {!Array.<number>} bytes Little endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n  };\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param {!Array.<number>} bytes Big endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n  };\n  \n  var _default = Long;\n  exports.default = _default;\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return Long; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = Long;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(19090);\n"],"names":["Object","defineProperty","exports","value","addAdminServicesToServer","registerAdminService","registeredAdminServices","getServiceDefinition","getHandlers","push","server","addService","BackoffTimeout","constructor","callback","options","this","initialDelay","multiplier","maxDelay","jitter","running","hasRef","startTime","Date","nextDelay","timerId","setTimeout","clearTimeout","runTimer","delay","_a","_b","unref","call","runOnce","nextBackoff","Math","min","jitterMagnitude","max","random","stop","reset","now","newEndTime","setMilliseconds","getMilliseconds","getTime","isRunning","ref","CallCredentials","metadata_1","static","metadataGenerator","SingleCallCredentials","googleCredentials","createFromMetadataGenerator","getHeaders","client","getRequestHeaders","service_url","Promise","resolve","reject","getRequestMetadata","err","headers","Error","then","metadata","Metadata","key","keys","add","EmptyCallCredentials","ComposedCallCredentials","creds","super","async","base","generated","all","map","cred","generateMetadata","gen","merge","compose","other","concat","_equals","every","index","undefined","InterceptingListenerImpl","isInterceptingListener","listener","onReceiveMetadata","length","nextListener","processingMetadata","hasPendingMessage","processingMessage","pendingStatus","processPendingMessage","onReceiveMessage","pendingMessage","processPendingStatus","onReceiveStatus","message","msg","status","processedStatus","getNextCallNumber","nextCallNumber","ClientDuplexStreamImpl","ClientWritableStreamImpl","ClientReadableStreamImpl","ClientUnaryCallImpl","callErrorFromStatus","events_1","stream_1","constants_1","callerStack","code","Status","details","stack","assign","EventEmitter","cancel","cancelWithStatus","CANCELLED","getPeer","Readable","deserialize","objectMode","_read","_size","startRead","Writable","serialize","_write","chunk","encoding","cb","context","flags","Number","isNaN","sendMessageWithContext","_final","halfClose","Duplex","ChannelCredentials","tls_1","call_credentials_1","tls_helpers_1","verifyIsBufferOrNull","obj","friendlyName","Buffer","TypeError","callCredentials","createEmpty","_getCallCredentials","rootCerts","privateKey","certChain","verifyOptions","secureContext","createSecureContext","ca","getDefaultRootsData","cert","ciphers","CIPHER_SUITES","SecureChannelCredentialsImpl","InsecureChannelCredentialsImpl","_getConnectionOptions","_isSecure","connectionOptions","checkServerIdentity","combinedCallCredentials","ComposedChannelCredentialsImpl","channelCredentials","callCreds","channelOptionsEqual","recognizedOptions","options1","options2","keys1","sort","keys2","i","ChannelImplementation","channel_credentials_1","internal_channel_1","target","credentials","internalChannel","InternalChannel","close","getTarget","getConnectivityState","tryToConnect","watchConnectivityState","currentState","deadline","getChannelzRef","createCall","method","host","parentCall","propagateFlags","setup","getChannelzServiceDefinition","getChannelzHandlers","unregisterChannelzRef","registerChannelzSocket","registerChannelzServer","registerChannelzSubchannel","registerChannelzChannel","ChannelzCallTracker","ChannelzChildrenTracker","ChannelzTrace","net_1","connectivity_state_1","subchannel_address_1","admin_1","make_client_1","channelRefToMessage","channel_id","id","name","subchannelRefToMessage","subchannel_id","socketRefToMessage","socket_id","events","eventsLogged","creationTimestamp","addTrace","severity","description","child","timestamp","childChannel","kind","childSubchannel","TARGET_RETAINED_TRACES","slice","getTraceMessage","creation_timestamp","dateToProtoTimestamp","num_events_logged","event","channel_ref","subchannel_ref","channelChildren","Map","subchannelChildren","socketChildren","refChild","_c","trackedChild","get","count","set","unrefChild","delete","getChildLists","channels","values","subchannels","sockets","callsStarted","callsSucceeded","callsFailed","lastCallStartedTimestamp","addCallStarted","addCallSucceeded","addCallFailed","nextId","getNextId","servers","parseIPv6Chunk","addressChunk","bytePairs","split","section","addressSection","numberValue","parseInt","parseIPv6Section","ipAddressStringToBuffer","ipAddress","isIPv4","from","Uint8Array","segment","isIPv6","leftSection","rightSection","doubleColonIndex","indexOf","substring","leftBuffer","rightBuffer","middleBuffer","alloc","connectivityStateToMessage","state","ConnectivityState","CONNECTING","IDLE","READY","SHUTDOWN","TRANSIENT_FAILURE","date","millisSinceEpoch","seconds","nanos","getChannelMessage","channelEntry","resolvedInfo","getInfo","data","calls_started","callTracker","calls_succeeded","calls_failed","last_call_started_timestamp","trace","children","GetChannel","channelId","request","channel","NOT_FOUND","GetTopChannels","maxResults","max_results","resultList","start_channel_id","end","getServerMessage","serverEntry","server_id","listen_socket","listenerChildren","GetServer","serverId","GetServers","start_server_id","GetSubchannel","subchannelId","subchannelEntry","subchannel","socket_ref","subchannelAddressToAddressMessage","subchannelAddress","isTcpSubchannelAddress","address","tcpip_address","ip_address","port","uds_address","filename","path","GetSocket","_d","_e","socketId","socketEntry","securityMessage","security","model","tls","cipher_suite","cipherSuiteStandardName","standard_name","other_name","cipherSuiteOtherName","local_certificate","localCertificate","remote_certificate","remoteCertificate","socket","local","localAddress","remote","remoteAddress","remote_name","remoteName","keep_alives_sent","keepAlivesSent","streams_started","streamsStarted","streams_succeeded","streamsSucceeded","streams_failed","streamsFailed","last_local_stream_created_timestamp","lastLocalStreamCreatedTimestamp","last_remote_stream_created_timestamp","lastRemoteStreamCreatedTimestamp","messages_received","messagesReceived","messages_sent","messagesSent","last_message_received_timestamp","lastMessageReceivedTimestamp","last_message_sent_timestamp","lastMessageSentTimestamp","local_flow_control_window","localFlowControlWindow","remote_flow_control_window","remoteFlowControlWindow","GetServerSockets","startId","start_socket_id","allSockets","sessionChildren","ref1","ref2","channelzEnabled","loadedChannelzDefinition","loadedProto","loaderLoadSync","keepCase","longs","String","enums","defaults","oneofs","includeDirs","__dirname","channelzGrpcObject","loadPackageDefinition","grpc","channelz","v1","Channelz","service","getInterceptingCall","InterceptingCall","RequesterBuilder","ListenerBuilder","InterceptorConfigurationError","call_interface_1","error_1","captureStackTrace","withOnReceiveMetadata","withOnReceiveMessage","withOnReceiveStatus","build","start","withStart","withSendMessage","sendMessage","withHalfClose","withCancel","defaultListener","next","defaultRequester","nextCall","requester","pendingMessageContext","pendingHalfClose","processPendingHalfClose","interceptingListener","_f","fullInterceptingListener","bind","md","finalInterceptingListener","fullListener","finalMessage","BaseInterceptingCall","methodDefinition","serialized","requestSerialize","e","INTERNAL","getErrorMessage","readError","deserialized","responseDeserialize","BaseUnaryInterceptingCall","receivedMessage","wrapperListener","BaseStreamingInterceptingCall","interceptorArgs","clientInterceptors","clientInterceptorProviders","callInterceptors","callInterceptorProviders","interceptors","provider","filter","interceptor","interceptorOptions","method_definition","reduceRight","nextInterceptor","currentOptions","finalOptions","Infinity","parent","propagate_flags","setCredentials","getCall","responseStream","getBottomInterceptingCall","Client","call_1","channel_1","client_interceptors_1","CHANNEL_SYMBOL","Symbol","INTERCEPTOR_SYMBOL","INTERCEPTOR_PROVIDER_SYMBOL","CALL_INVOCATION_TRANSFORMER_SYMBOL","isFunction","arg","getErrorStackString","error","join","interceptor_providers","callInvocationTransformer","channelOverride","channelFactoryOverride","getChannel","waitForReady","checkState","newState","setImmediate","checkOptionalUnaryResponseArguments","arg1","arg2","arg3","makeUnaryRequest","argument","checkedArguments","requestStream","callProperties","callOptions","emitter","responseMessage","receivedStatus","callerStackError","emit","OK","makeClientStreamRequest","checkMetadataAndOptions","makeServerStreamRequest","stream","makeBidiStreamRequest","CompressionAlgorithms","CompressionFilterFactory","CompressionFilter","zlib","compression_algorithms_1","filter_1","logging","CompressionHandler","compress","messageBuffer","compressMessage","output","allocUnsafe","writeUInt8","writeUInt32BE","copy","compressed","readUInt8","decompressMessage","IdentityHandler","DeflateHandler","deflate","inflate","GzipHandler","gzip","unzip","UnknownHandler","compressionName","getCompressionHandler","BaseFilter","channelOptions","sharedFilterConfig","sendCompression","receiveCompression","currentCompressionAlgorithm","compressionAlgorithmKey","clientSelectedEncoding","serverSupportedEncodings","serverSupportedEncodingHeader","includes","log","LogVerbosity","ERROR","remove","receiveMetadata","receiveEncoding","serverSupportedEncodingsHeader","resolvedMessage","writeMessage","readMessage","createFilter","Propagate","DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH","DEFAULT_MAX_SEND_MESSAGE_LENGTH","restrictControlPlaneStatusCode","INAPPROPRIATE_CONTROL_PLANE_CODES","INVALID_ARGUMENT","ALREADY_EXISTS","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","DATA_LOSS","deadlineToString","getRelativeTimeout","getDeadlineTimeoutString","minDeadline","deadlineList","minValue","deadlineMsecs","units","timeoutMs","unit","factor","amount","ceil","timeout","toISOString","dateDeadline","isDuration","durationToMs","msToDuration","millis","duration","getErrorCode","OutlierDetectionLoadBalancingConfig","BaseSubchannelWrapper","FilterStackFactory","PickResultType","QueuePicker","UnavailablePicker","ChildLoadBalancerHandler","subchannelAddressToString","validateLoadBalancingConfig","getFirstUsableConfig","registerLoadBalancerType","createChildChannelControlHelper","uriToString","createResolver","registerResolver","logging_1","enumerable","resolver_1","uri_parser_1","duration_1","backoff_timeout_1","load_balancer_1","load_balancer_child_handler_1","picker_1","filter_stack_1","subchannel_interface_1","load_balancer_outlier_detection_1","FilterStack","filters","sendMetadata","result","receiveMessage","receiveTrailers","unshift","getFilters","factories","filterFactories","clone","factory","getProxiedConnection","mapProxyName","http","url_1","text","DEBUG","noProxyResult","extraOptions","scheme","proxyInfo","proxyUrl","proxyEnv","envVar","process","env","grpc_proxy","https_proxy","http_proxy","URL","protocol","userCred","username","password","INFO","hostname","getProxyInfo","hostPort","splitHostPort","serverHost","noProxyStr","no_grpc_proxy","no_proxy","getNoProxyHostList","realTarget","parsedTarget","parseUri","Host","socketPath","toString","proxyAddressString","once","res","head","removeAllListeners","statusCode","targetPath","getDefaultAuthority","remoteHost","cts","connect","servername","on","experimental","StatusBuilder","getClientChannel","ServerCredentials","Server","setLogVerbosity","setLogger","load","loadObject","waitForClientReady","closeClient","Channel","makeGenericClientConstructor","makeClientConstructor","compressionAlgorithms","propagate","connectivityState","logVerbosity","client_1","server_1","server_credentials_1","status_builder_1","combineChannelCredentials","reduce","acc","combineCallCredentials","first","additional","createInsecure","createSsl","createFromSecureContext","createFromGoogleCredential","format","logger","verbosity","setLoggerVerbosity","prototype","channelz_1","resolver_dns","resolver_uds","resolver_ip","load_balancer_pick_first","load_balancer_round_robin","load_balancer_outlier_detection","clientVersion","resolving_load_balancer_1","subchannel_pool_1","compression_filter_1","max_message_size_filter_1","http_proxy_1","load_balancing_call_1","deadline_1","resolving_call_1","call_number_1","control_plane_status_1","retrying_call_1","RETRY_THROTTLER_MAP","ChannelSubchannelWrapper","refCount","subchannelStateListener","previousState","keepaliveTime","throttleKeepalive","addConnectivityStateListener","removeConnectivityStateListener","removeWrappedSubchannel","_g","_h","currentPicker","configSelectionQueue","pickQueue","connectivityStateWatchers","configSelector","currentResolutionError","wrappedSubchannels","Set","callCount","idleTimer","childrenTracker","originalTarget","originalTargetUri","defaultSchemeMapResult","mapUriDefaultScheme","callRefTimer","setInterval","channelzTrace","channelzRef","getChannelzInfo","defaultAuthority","proxyMapResult","subchannelPool","getSubchannelPool","retryBufferTracker","MessageBufferTracker","idleTimeoutMs","channelControlHelper","createSubchannel","subchannelArgs","getOrCreateSubchannel","wrappedSubchannel","updateState","picker","queueCopy","callRefTimerUnref","doPick","requestReresolution","addChannelzChild","removeChannelzChild","resolvingLoadBalancer","ResolvingLoadBalancer","serviceConfig","retryThrottling","RetryThrottler","maxTokens","tokenRatio","nextTick","localQueue","getConfig","reportResolverError","filterStackFactory","MaxMessageSizeFilterFactory","JSON","stringify","verbosityOverride","callRefTimerRef","removeConnectivityStateWatcher","watcherObject","watcherIndex","findIndex","splice","watchersCopy","timer","newKeepaliveTime","extraPickInfo","pick","queueCallForPick","exitIdle","type","config","queueCallForConfig","enterIdle","destroy","maybeStartIdleTimer","onCallStart","onCallEnd","createLoadBalancingCall","callConfig","callNumber","LoadBalancingCall","createRetryingCall","RetryingCall","createInnerCall","createResolvingCall","DEFAULTS","ResolvingCall","addStatusWatcher","clearInterval","unrefUnusedSubchannels","deadlineDate","currentChild","pendingChild","latestConfig","ChildPolicyHelper","calledByPendingChild","calledByCurrentChild","latestChild","setChild","newChild","configUpdateRequiresNewPolicyInstance","oldConfig","newConfig","getLoadBalancerName","updateAddressList","addressList","lbConfig","attributes","childToUpdate","newHelper","createLoadBalancer","resetBackoff","getTypeName","OutlierDetectionLoadBalancer","experimental_1","TYPE_NAME","OUTLIER_DETECTION_ENABLED","GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION","defaultSuccessRateEjectionConfig","stdev_factor","enforcement_percentage","minimum_hosts","request_volume","defaultFailurePercentageEjectionConfig","threshold","validateFieldType","fieldName","expectedType","objectName","validatePositiveDuration","fullFieldName","validatePercentage","intervalMs","baseEjectionTimeMs","maxEjectionTimeMs","maxEjectionPercent","successRateEjection","failurePercentageEjection","childPolicy","toJsonObject","interval","base_ejection_time","max_ejection_time","max_ejection_percent","success_rate_ejection","failure_percentage_ejection","child_policy","policy","getIntervalMs","getBaseEjectionTimeMs","getMaxEjectionTimeMs","getMaxEjectionPercent","getSuccessRateEjectionConfig","getFailurePercentageEjectionConfig","getChildPolicy","copyWithChildPolicy","OutlierDetectionSubchannelWrapper","mapEntry","stateListeners","ejected","childSubchannelState","listenerIndex","subchannelWrappers","eject","uneject","getMapEntry","getWrappedSubchannel","CallCounter","activeBucket","success","failure","inactiveBucket","addSuccess","addFailure","switchBuckets","getLastSuccesses","getLastFailures","OutlierDetectionPicker","wrappedPicker","countCalls","pickArgs","wrappedPick","pickResultType","COMPLETE","subchannelWrapper","onCallEnded","counter","addressMap","timerStartTime","childBalancer","originalSubchannel","currentEjectionTimestamp","isCountingEnabled","ejectionTimer","getCurrentEjectionPercent","ejectionCount","size","runSuccessRateCheck","ejectionTimestamp","successRateConfig","targetRequestVolume","addresesWithTargetVolume","successRates","successes","failures","successRateMean","a","b","successRateDeviationSum","rate","deviation","successRateVariance","successRateStdev","sqrt","ejectionThreshold","entries","successRate","randomNumber","runFailurePercentageCheck","failurePercentageConfig","addressesWithTargetVolume","ejectionTimeMultiplier","switchAllBuckets","startTimer","delayMs","runChecks","returnTime","subchannelAddresses","has","remainingDelay","PickFirstLoadBalancer","shuffled","PickFirstLoadBalancingConfig","shuffleAddressList","getShuffleAddressList","PickFirstPicker","onCallStarted","list","j","floor","temp","currentSubchannelIndex","currentPick","onSubchannelStateUpdate","triedAllSubchannels","stickyTransientFailureMode","connectionDelayTimeout","allChildrenHaveReportedTF","hasReportedTransientFailure","calculateAndReportNewState","maybeEnterStickyTransientFailureMode","startConnecting","removeCurrentPick","realSubchannelEquals","pickSubchannel","startNextSubchannelConnecting","startIndex","subchannelState","subchannelIndex","getAddress","resetSubchannelList","newChildrenList","registerDefaultLoadBalancerType","RoundRobinLoadBalancer","RoundRobinLoadBalancingConfig","RoundRobinPicker","subchannelList","nextIndex","pickedSubchannel","peekNextSubchannel","currentReadyPicker","calculateAndUpdateState","countSubchannelsWithState","readySubchannels","isLoadBalancerNameRegistered","overrides","_j","_k","registeredLoadBalancerTypes","defaultLoadBalancerType","typeName","loadBalancerType","loadBalancingConfigType","LoadBalancer","LoadBalancingConfig","configs","fallbackTodefault","createFromJson","http2","methodName","readPending","ended","splitPath","serviceName","serviceUrl","outputStatus","progress","finalStatus","pickResult","pickInformation","subchannelString","credsMetadata","finalMetadata","getRealSubchannel","rstCode","constants","NGHTTP2_REFUSED_STREAM","onCommitted","getCallNumber","UNKNOWN","DROP","getOptions","QUEUE","isTracerEnabled","getLogger","_logger","optionalParams","console","info","debug","_logVerbosity","GRPC_NODE_VERBOSITY","GRPC_VERBOSITY","toUpperCase","NONE","args","logFunction","tracersString","GRPC_NODE_TRACE","GRPC_TRACE","enabledTracers","disabledTracers","tracerName","startsWith","allEnabled","tracer","requesterFuncs","unary","server_stream","client_stream","bidi","isPrototypePolluted","methods","classOptions","ServiceClientImpl","forEach","attrs","methodType","charAt","methodFunc","fn","partial","originalName","packageDef","serviceFqn","hasOwnProperty","nameComponents","some","comp","current","packageName","MaxMessageSizeFilter","maxSendMessageSize","maxReceiveMessageSize","concreteMessage","RESOURCE_EXHAUSTED","LEGAL_KEY_REGEX","LEGAL_NON_BINARY_VALUE_REGEX","isBinaryKey","endsWith","isCustomMetadata","normalizeKey","toLowerCase","validate","test","isLegalKey","isBuffer","isLegalNonBinaryValue","internalRepr","existingValue","getMap","v","newMetadata","newInternalRepr","clonedValue","mergedValue","setOptions","toHttp2Headers","bufToString","toJSON","Array","isArray","trim","val","UNAVAILABLE","loadBalancer","calledExitIdle","dns","util","service_config_1","constants_2","resolveTxtPromise","promisify","resolveTxt","dnsLookupPromise","lookup","DnsResolver","pendingLookupPromise","pendingTxtPromise","latestLookupResult","latestServiceConfig","latestServiceConfigError","continueResolving","isNextResolutionTimerRunning","isServiceConfigEnabled","ipResult","dnsHostname","percentage","defaultResolutionError","backoffOptions","backoff","startResolutionWithBackoff","minTimeBetweenResolutionsMs","nextResolutionTimer","startResolution","onSuccessfulResolution","onError","stopNextResolutionTimer","ip4Addresses","addr","family","ip6Addresses","arrays","apply","array","mergeArrays","allAddressesString","txtRecord","extractAndSelectServiceConfig","startNextResolutionTimer","updateResolution","registerDefaultScheme","IPV4_SCHEME","IPV6_SCHEME","IpResolver","addresses","pathList","UdsResolver","authority","registeredResolvers","defaultScheme","resolverClass","readFilterPending","writeFilterPending","pendingChildStatus","statusWatchers","deadlineTimer","filterStack","CANCELLATION","DEADLINE","getDeadline","runDeadlineTimer","handleDeadline","DEADLINE_EXCEEDED","filteredStatus","watcher","sendMessageOnChild","filteredMessage","configResult","methodConfig","configDeadline","setSeconds","getSeconds","dynamicFilterFactories","filteredMetadata","filteredMesssage","NAME_MATCH_LEVEL_ORDER","hasMatchingName","matchLevel","findMatchingConfig","methodConfigs","onFailedResolution","latestChildState","latestChildPicker","previousServiceConfig","defaultServiceConfig","validateServiceConfig","parse","loadBalancingConfig","childLoadBalancer","backoffTimeout","innerResolver","serviceConfigError","workingServiceConfig","handleResolutionFailure","workingConfigList","finalServiceConfig","splitName","x","matchingConfig","getDefaultConfigSelector","previousRetryThrottler","tokens","canRetryCall","totalLimit","limitPerCall","totalAllocated","allocatedPerCall","allocate","callId","currentPerCall","free","freeAll","PREVIONS_RPC_ATTEMPTS_METADATA_KEY","bufferTracker","retryThrottler","initialMetadata","underlyingCalls","writeBuffer","writeBufferOffset","readStarted","transparentRetryUsed","attempts","hedgingTimer","committedCallIndex","initialRetryBackoffSec","nextRetryBackoffSec","retryPolicy","initialBackoff","hedgingPolicy","reportStatus","statusObject","getBufferEntry","messageIndex","entryType","allocated","getNextBufferIndex","clearSentMessages","earliestNeededMessageIndex","nextMessageToSend","bufferEntry","commitCall","commitCallWithMostMessages","mostMessages","callWithMostMessages","childCall","isStatusCodeInList","getNextRetryBackoffMs","nextBackoffMs","maxBackoffSec","maxBackoff","backoffMultiplier","maybeRetryCall","pushback","maxAttempts","retryDelayMs","startNewAttempt","countActiveCalls","handleProcessedStatus","callIndex","nonFatalStatusCodes","maybeStartHedgingAttempt","retryableStatusCodes","retried","getPushback","mdValue","handleChildStatus","maybeStartHedgingTimer","hedgingDelayString","hedgingDelay","hedgingDelaySec","previousAttempts","receivedMetadata","sendNextChildMessage","handleChildWriteCompleted","childIndex","writeObj","underlyingCall","halfCloseIndex","newCredentials","getMethod","getHost","Http2ServerCallStream","ServerDuplexStreamImpl","ServerWritableStreamImpl","ServerReadableStreamImpl","ServerUnaryCallImpl","util_1","stream_decoder_1","TRACER_NAME","GRPC_MESSAGE_HEADER","GRPC_STATUS_HEADER","GRPC_TIMEOUT_HEADER","DEADLINE_REGEX","deadlineUnitsToMs","H","M","S","m","u","n","defaultCompressionHeaders","defaultResponseHeaders","HTTP2_HEADER_STATUS","HTTP_STATUS_OK","HTTP2_HEADER_CONTENT_TYPE","defaultResponseOptions","waitForTrailers","cancelled","setupSurfaceCall","responseMetadata","getPath","setupReadable","consumeUnpushedMessages","resume","trailingMetadata","sendError","response","serializeMessage","write","sendStatus","handler","statusSent","wantTrailers","metadataSent","canPush","isPushPending","bufferedMessages","messagesToPush","checkCancelled","destroyed","closed","getDecompressedMessage","subarray","UNIMPLEMENTED","customMetadata","custom","respond","fromHttp2Headers","timeoutHeader","match","handleExpiredDeadline","HTTP2_HEADER_ACCEPT_ENCODING","HTTP2_HEADER_TE","receiveUnaryMessage","receivedLength","body","limit","onData","byteLength","removeListener","onEnd","requestBytes","compressedMessageEncoding","decompressedMessage","deserializeMessageWithInternalError","decompressed","buffer","deserializeMessage","bytes","statusObj","headersSent","trailersToSend","encodeURI","sendTrailers","endStream","isInteger","reason","readable","decoder","StreamDecoder","readsDone","pendingMessageProcessing","pushedEnd","maybePushEnd","pushOrBufferMessage","messages","pause","nextMessage","shift","messageBytes","pushMessage","UNAUTHENTICATED","session","remotePort","InsecureServerCredentials","keyCertPairs","checkClientCertificate","pair","private_key","cert_chain","SecureServerCredentials","requestCert","_getSettings","server_call_1","UNLIMITED_CONNECTION_AGE_MS","HTTP2_HEADER_PATH","noop","getUnimplementedStatusResponse","http2ServerList","handlers","sessions","started","serverAddressString","listenerChildrenTracker","sessionChildrenTracker","maxConnectionAgeMs","maxConnectionAgeGraceMs","keepaliveTimeMs","keepaliveTimeoutMs","getChannelzSessionInfoGetter","sessionInfo","sessionSocket","stringToSubchannelAddress","localPort","tlsInfo","encrypted","tlsSocket","cipherInfo","getCipher","certificate","getCertificate","peerCertificate","getPeerCertificate","standardName","raw","streamTracker","localWindowSize","remoteWindowSize","addProtoService","implementation","serviceKeys","impl","implFn","handlerType","unimplementedStatusResponse","getDefaultHandler","register","responseSerialize","requestDeserialize","removeService","unregister","bindAsync","initialPortUri","portUri","serverOptions","maxSendHeaderBlockLength","MAX_SAFE_INTEGER","maxSessionMemory","settings","maxConcurrentStreams","deferredCallback","setupServer","http2Server","secureServerOptions","enableTrace","createSecureServer","createServer","_setupHandlers","bindSpecificPort","portNum","previousCount","listen","boundAddress","boundSubchannelAddress","results","bindWildcardPort","resolverListener","bindResultPromise","bindResult","errorString","forceShutdown","listening","channelzInfo","NGHTTP2_CANCEL","clear","func","tryShutdown","wrappedCallback","pendingChecks","maybeCallback","addHttp2Port","_verifyContentType","contentType","HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE","_retrieveHandler","_respondWithError","channelzSessionInfo","_channelzHandler","_runHandlerForCall","_streamHandler","trailer","sendUnaryMessage","handleUnary","handleClientStreaming","handleServerStreaming","handleBidiStreaming","serverAddress","clientAddress","connectionAgeTimer","connectionAgeGraceTimer","sessionClosedByServer","goaway","NGHTTP2_NO_ERROR","keeapliveTimeTimer","timeoutTImer","ping","payload","validateRetryThrottling","os","DURATION_REGEX","validateName","validateMethodConfig","timeoutParts","maxRequestBytes","maxResponseBytes","validateRetryPolicy","validateHedgingPolicy","toFixed","loadBalancingPolicy","seenMethodNames","seenName","validateCanaryConfig","clientLanguage","lang","clientHostname","allowedFields","field","validateAndSelectCanaryConfig","validatedConfig","hostnameMatched","languageMatched","language","record","recordString","withCode","withDetails","withMetadata","ReadState","readState","NO_DATA","readCompressFlag","readPartialSize","readSizeRemaining","readMessageSize","readPartialMessage","readMessageRemaining","toRead","readHead","READING_SIZE","fill","readUInt32BE","READING_MESSAGE","framedMessageBuffers","framedMessage","subchannelAddressEqual","address1","address2","addressString","isIP","Http2SubchannelCall","http2Stream","callEventTracker","transport","isReadFilterPending","readsClosed","statusOutput","unpushedReadMessages","mappedStatusCode","internalError","headersString","header","PERMISSION_DENIED","NGHTTP2_FLAG_END_STREAM","handleTrailers","endCall","addMessageReceived","tryPush","maybeOutputStatus","NGHTTP2_ENHANCE_YOUR_CALM","NGHTTP2_INADEQUATE_SECURITY","NGHTTP2_INTERNAL_ERROR","errno","num","getSystemErrorName","syscall","onStreamEnd","onDisconnect","destroyHttp2Stream","metadataMap","decodeURI","getStatus","getPeerName","addMessageSent","SubchannelPool","channel_options_1","subchannel_1","transport_1","pool","create","cleanupTimer","allSubchannelsUnrefed","channelTarget","refedSubchannels","unrefIfOneRef","ensureCleanupTask","channelTargetUri","subchannelTarget","channelArguments","subchannelObjArray","subchannelObj","Subchannel","Http2SubchannelConnector","globalSubchannelPool","global","connector","continueConnecting","refcount","handleBackoffTimer","subchannelAddressString","refTrace","transitionToState","startBackoff","stopBackoff","startConnectingInternal","adjustedKeepaliveTime","addDisconnectListener","tooManyPings","oldStates","shutdown","statsTracker","fs","GRPC_SSL_CIPHER_SUITES","DEFAULT_ROOTS_FILE_PATH","GRPC_DEFAULT_SSL_ROOTS_FILE_PATH","defaultRootsData","readFileSync","net","subchannel_call_1","HTTP2_HEADER_AUTHORITY","HTTP2_HEADER_METHOD","HTTP2_HEADER_USER_AGENT","tooManyPingsData","Http2Transport","keepaliveTimerId","pendingSendKeepalivePing","keepaliveTimeoutId","keepaliveWithoutCalls","activeCalls","disconnectListeners","disconnectHandled","keepalivesSent","userAgent","stopKeepalivePings","handleDisconnect","errorCode","lastStreamID","opaqueData","equals","reportDisconnectToOwner","maybeStartKeepalivePingTimer","keepaliveTrace","flowControlTrace","internalsTrace","clearKeepaliveTimer","clearKeepaliveTimeout","canSendPing","maybeSendPing","removeActiveCall","addActiveCall","subchannelCallStatsTracker","eventTracker","isShutdown","createSession","proxyConnectionResult","targetAuthority","addressScheme","sslTargetNameOverride","authorityHostname","createConnection","option","ALPNProtocols","URI_REGEX","uriString","parsedUri","exec","NUMBER_REGEX","hostEnd","portString","uri","camelCase","Protobuf","descriptor","descriptorOptions","json","getAllHandledReflectionObjects","parentName","objName","baseName","Service","Type","Enum","isHandledReflectionObject","Namespace","Root","isNamespaceBase","nested","accumulator","currentValue","createDeserializer","cls","argBuf","toObject","decode","createSerializer","fromObject","encode","finish","createMethodDefinition","fileDescriptors","requestType","resolvedRequestType","responseType","resolvedResponseType","createMessageDefinition","messageDescriptor","toDescriptor","$type","fileDescriptorProtos","createDefinition","def","methodsArray","createServiceDefinition","enumType","enumDescriptor","createEnumDefinition","createPackageDefinition","root","resolveAll","bufferList","file","FileDescriptorProto","loadProtosWithOptionsSync","addCommonProtos","loadProtosWithOptions","addIncludePathResolver","includePaths","originalResolvePath","resolvePath","origin","isAbsolute","directory","fullPath","accessSync","R_OK","emitWarning","loadedRoot","loadSync","apiDescriptor","descriptorDescriptor","sourceContextDescriptor","typeDescriptor","common","google","protobuf","$protobuf","module","fromJSON","Field","MapField","OneOf","Method","Root_toDescriptorRecursive","ns","files","syntax","fullName","replace","nestedArray","_nestedArray","messageType","extension","toDescriptorOptions","FileOptions","fromDescriptor","FileDescriptorSet","fileDescriptor","filePackage","define","opts","fromDescriptorOptions","ks","setOption","unnamedMessageIndex","DescriptorProto","MessageOptions","oneofDecl","oneofsArray","oneofIndex","nestedType","extensionRange","extensions","reservedRange","reservedName","reserved","fieldsArray","fieldDescriptor","_fieldsArray","keyType","toDescriptorType","resolvedKeyType","valueType","resolvedType","valueTypeName","shortname","FieldDescriptorProto","number","label","_oneofsArray","ExtensionRange","ReservedRange","numberRe","fieldType","fieldRule","fromDescriptorType","extendee","FieldOptions","defaultValue","packableDescriptorType","packed","ucFirst","rule","extensionField","extend","partOf","unnamedEnumIndex","EnumDescriptorProto","EnumOptions","EnumValueDescriptorProto","unnamedOneofIndex","OneofDescriptorProto","unnamedServiceIndex","ServiceDescriptorProto","ServiceOptions","_methodsArray","unnamedMethodIndex","group","str","out","valuesById","$0","$1","fields","to","fromPath","toPath","k","MethodDescriptorProto","inputType","outputType","Boolean","clientStreaming","serverStreaming","MethodOptions","timeType","commonRe","Any","type_url","Duration","Timestamp","Empty","Struct","Value","oneof","nullValue","stringValue","boolValue","structValue","listValue","NullValue","NULL_VALUE","ListValue","DoubleValue","FloatValue","Int64Value","UInt64Value","Int32Value","UInt32Value","BoolValue","StringValue","BytesValue","FieldMask","paths","converter","genValuePartial_fromObject","fieldIndex","prop","defaultAlreadyEmitted","typeDefault","repeated","isUnsigned","genValuePartial_toObject","mtype","codegen","safeProp","compareFieldsById","repeatedFields","mapFields","normalFields","long","low","high","unsigned","toNumber","arrayDefault","fromCharCode","hasKs2","types","basic","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","className","comment","comments","valuesOptions","enm","toJSONOptions","keepComments","isString","isReservedId","isReservedName","allow_alias","ruleRe","isObject","Long","declaringField","_packed","getOption","ifNotSet","resolved","lookupTypeOrEnum","proto3_optional","fromNumber","freeze","buf","base64","newBuffer","utf8","emptyObject","emptyArray","ctor","d","fieldId","decorateType","decorateEnum","_configure","Type_","encoder","verifier","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","tokenize","fieldKeyType","fieldValueType","properties","writer","encodeDelimited","reader","decodeDelimited","verify","object","parsedOptions","lookupType","arrayToJSON","clearCache","namespace","addJSON","toArray","nestedJson","names","getEnum","prev","onAdd","onRemove","ptr","part","filterTypes","parentAlreadyChecked","found","lookupEnum","lookupService","Service_","Enum_","defineProperties","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","newValue","setProperty","newOpt","Root_","fieldNames","addFieldsToParent","arguments","oneofName","oneOfGetter","oneOfSetter","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","nameRe","typeRefRe","fqTypeRefRe","source","pkg","imports","weakImports","token","preferTrailingComment","tn","alternateCommentMode","peek","skip","cmnt","isProto3","applyCase","illegal","insideTryCatch","line","readString","readValue","acceptTypeRef","sign","NaN","parseFloat","parseNumber","readRanges","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","parseType","parseEnum","ifBlock","commentText","parseMethod","parseService","reference","parseField","parseExtension","fnIf","fnElse","trailingLine","parseInlineOptions","parseMapField","parseOneOf","lcFirst","parseGroup","dummy","parseEnumValue","isCustom","parseOptionValue","objectResult","lastValue","prevValue","simpleValue","LongBits","indexOutOfRange","writeLength","RangeError","pos","len","create_array","readLongVarint","bits","lo","hi","readFixed32_end","readFixed64","_slice","uint32","int32","sint32","bool","fixed32","sfixed32","float","readFloatLE","double","readDoubleLE","nativeBuffer","string","read","skipType","BufferReader_","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","deferred","SYNC","fetch","self","asPromise","sync","getBundledFileName","idx","lastIndexOf","altname","parsed","queued","weak","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","endedByRPC","off","inherited","rpcService","isReserved","q","s","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","offset","lastCommentLine","stringDelim","subject","setComment","isLeading","c","lineEmpty","leading","commentOffset","lines","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","cursor","re","lastIndex","repeat","curr","isDoc","isLeadingComment","expected","actual","ret","_fieldsById","_ctor","fieldsById","generateConstructor","ctorProperties","wrapper","originalThis","fork","ldelim","bake","o","inquire","safePropBackslashRe","safePropQuoteRe","camelCaseRe","decorateRoot","decorateEnumIndex","dst","setProp","zero","zzEncode","zeroHash","fromString","toLong","charCodeAt","fromHash","hash","toHash","mask","part0","part1","part2","src","newError","CustomError","writable","configurable","versions","node","window","isFinite","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","prefix","Op","State","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeFloatLE","writeDoubleLE","writeBytes","BufferWriter_","writeStringBuffer","writeBytesBuffer","BUFFER","IDX","HEX","v4","DefaultKeyFormatter","importExport_1","export","keyPair","includePrivate","encrypt","keyData","passphrase","keyFormat","keyFormatter","keyFormatters","import","decryptedKeyData","decrypt","importKeyBytes","importKeyFile","importKey","exportPrivateKeyBytes","exportPrivateKeyFile","exportPrivateKey","exportPublicKeyBytes","exportPublicKeyFile","exportPublicKey","buffer_1","dev_tunnels_ssh_1","defaultKeyFormatter_1","publicKeyFormatter_1","pkcs1KeyFormatter_1","sec1KeyFormatter_1","pkcs8KeyFormatter_1","jsonWebKeyFormatter_1","keyData_1","PublicKeyFormatter","Pkcs1KeyFormatter","Sec1KeyFormatter","Pkcs8KeyFormatter","JsonWebKeyFormatter","enableFileIO","keyEncoding","exportKeyBytes","keyBytes","KeyData","tryDecodePemBytes","keyString","parts","trimRight","encodedLengthWithoutPadding","decodedLength","decoded","formatter","hasPrivateKey","ECDsa","KeyPair","Rsa","encodeSshPublicKeyBytes","encodePemBytes","keyFile","keyJson","jwk","kty","parameters","parseRsa","SshAlgorithms","publicKey","rsaWithSha512","createKeyPair","importParameters","parseEC","exportParameters","formatRsa","formatEC","rsa","formatBigInt","p","dp","dq","qi","modulus","exponent","parseBigInt","ec","curve","curves","oid","keySizeInBytes","keySize","crv","y","curveOid","base64UrlEncode","toBytes","BigInt","fromBytes","input","beginMatch","beginRegex","endMatch","endRegex","headerMatch","headerRegex","substr","base64Data","hyphen","inputString","tryDecodePem","encodePem","dataBase64","encodeSshPublicKey","getKeyEncryptionAlgorithm","algorithm","Encryption","keyFormatter_1","DerReader","readInteger","available","privateKeyType","publicKeyType","parseRsaPublic","parseRsaPrivate","hasPublicKey","formatRsaPrivate","formatRsaPublic","decryptPrivate","DerWriter","writeInteger","toBuffer","fromInt32","decryptionInfo","decryptionInfoParts","cipherName","ivHex","iv","encryption","deriveDecryptionKey","keyLength","decipher","createCipher","transform","passphraseBytes","crypto","subtle","nodeCrypto","salt","md5","createHash","update","digest","importers","exporters","importRsaKey","importECKey","keyAlgorithmName","exportRsaKey","ecdsaSha2Nistp256","exportECKey","ecdsaSha2Nistp384","ecdsaSha2Nistp521","importPublic","importPrivate","encryptedPrivateKeyType","exportPrivate","exportPublic","encryptPrivate","oidReader","readSequence","keyAlgorithm","readObjectIdentifier","readBitString","importer","version","toInt32","readOctetString","keyReader","publicKeyBytes","privateKeyBytes","publicKeyReader","tryReadTagged","dataFormat","exporter","oidWriter","writeSequence","writeBitString","writeOctetString","writeObjectIdentifier","writeNull","keyWriter","publicKeyData","publicKeyWriter","writeTagged","innerReader","privateKeyData","kdfReader","algReader","iterations","readNull","algorithmOid","pbkdf2","dispose","getBytes","blockLength","paddingLength","paddedData","cipher","pbeWriter","kdfAndAlgWriter","kdfWriter","kdfParamsWriter","hmacWriter","algWriter","passphraseKey","deriveBits","derivedKey","SshDataReader","setPublicKeyBytes","getPublicKeyBytes","importECPrivate","exportECPrivate","curveWriter","curveReader","curveName","xy","ForwardedPort","isRemote","arrow","ForwardedPortConnectingEventArgs","ForwardedPortChannelEventArgs","ForwardedPortEventArgs","isIncoming","cancellation","ForwardedPortsCollection","vscode_jsonrpc_1","forwardedPortEventArgs_1","portChannelMap","portAddedEmitter","Emitter","onPortAdded","portUpdatedEmitter","onPortUpdated","portRemovedEmitter","onPortRemoved","portChannelAddedEmitter","onPortChannelAdded","portChannelRemovedEmitter","onPortChannelRemoved","iterator","callbackfn","thisArg","getChannels","portAndChannels","predicate","addOrUpdatePort","fire","removePort","addChannel","portChannels","onClosed","tryRemoveChannel","PortForwardChannelOpenMessage","PortForwardSuccessMessage","PortForwardRequestMessage","RemotePortStreamer","RemotePortForwarder","LocalPortForwarder","PortForwardingService","SshServer","SshClient","sshClient_1","sshServer_1","portForwardingService_1","localPortForwarder_1","remotePortForwarder_1","remotePortStreamer_1","portForwardRequestMessage_1","portForwardSuccessMessage_1","portForwardChannelOpenMessage_1","forwardedPort_1","forwardedPortsCollection_1","IPAddressConversions","ChannelOpenMessage","originatorIPAddress","originatorPort","onRead","readUInt32","onWrite","writeString","validateField","writeUInt32","SessionRequestMessage","addressToBind","portForwardRequestType","wantReply","SessionRequestSuccessMessage","DefaultPortForwardMessageFactory","createRequestMessageAsync","createSuccessMessageAsync","createChannelOpenMessageAsync","streamForwarder_1","SshService","pfs","channelType","localIPAddress","listenAddress","tcpListener","tcpListenerFactory","createTcpListener","tcpListener2","TraceLevel","Warning","SshTraceEventIds","portForwardServerListenFailed","acceptConnection","Info","portForwardServerListening","portForwardConnectionAccepted","openChannel","forwardedStream","forwardedPortConnecting","SshStream","forwarder","StreamForwarder","streamForwarders","PortForwardingService_1","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","ipAddressConversions_1","tcpListenerFactory_1","portForwardMessageFactory_1","localForwarders","remoteConnectors","acceptLocalConnectionsForForwardedPorts","forwardConnectionsToLocalPorts","acceptRemoteConnectionsForNonForwardedPorts","localForwardedPorts","remoteForwardedPorts","DefaultTcpListenerFactory","messageFactory","forwardedPortConnectingEmitter","onForwardedPortConnecting","transformPromise","portForwardConnectionFailed","remoteIPAddress","localHostOrCancellation","localHost","forwardedPort","onDisposed","remoteHostOrCancellation","reversePortForwardChannelType","startForwarding","streamer","portForwardChannelType","catch","SshChannelError","waitCompletion","PromiseCompletionSource","cancellationRegistration","portAddedRegistration","sessionClosedRegistration","onCancellationRequested","CancellationError","ObjectDisposedError","promise","cancelPortForwardRequestType","portForwardRequest","convertTo","fromSshAddress","Verbose","portForwardRequestInvalid","isAuthorized","SshRequestEventArgs","principal","onSessionRequest","portResponse","cancelForwarding","responsePromise","SessionRequestFailureMessage","failureReason","SshChannelOpenFailureReason","unknownChannelType","remoteConnector","portForwardMessage","isRemoteRequest","remoteEndPoint","connectFailed","failureDescription","errorMessage","portForwardChannelOpenFailed","administrativelyProhibited","SshChannelOpeningEventArgs","onChannelOpening","openingPromise","none","onPortChannelOpening","forwardChannel","openMessage","portForwardChannelOpened","disposables","disposable","serviceActivation","sessionRequest","RemotePortConnector","forwarding","requestResponse","remotePortConnector_1","autoSelectFamily","autoSelectFamilyAttemptTimeout","connectCompletion","isCancellationRequested","streamForwarder","portForwardConnectionOpened","streamOpenedEmitter","onStreamOpened","localStream","remoteStream","disposed","pipe","abort","Socket","portForwardChannelClosed","unknownError","level","eventId","serverPort","openConnection","SshClientSession","defaultServerPort","NodeStream","reconnect","errorEmitter","sessionOpenedEmitter","onSessionOpened","publicKeys","protocolExtensions","SshProtocolExtensionNames","sessionReconnect","reconnectableSessions","portPrefix","serverListenFailed","addListener","acceptSession","serverListening","setNoDelay","serverClientConnected","SshServerSession","sessionIndex","SshConnectionError","SshDisconnectReason","connectionLost","protocolError","canChangePort","ipv6Only","exclusive","shortName","EncryptionAlgorithm","HmacAlgorithm","algorithmName","digestLength","KeyExchangeAlgorithm","keySizeInBits","hashAlgorithmName","hashDigestLength","parsePem","formatPem","bigInt_1","derData_1","ecdsaCurves_1","keyBase64","oidsWriter","ecPublicKeyOid","oidsReader","keyTypeOid","publicKeyAlgorithm_1","sshData_1","keyFormatters_1","nodeVersionParts","nodeGenerateKeyPairSupport","nodeKeyObjectSupport","NodeECDsaKeyPair","generate","generateNodeKeyPairObjects","generateNodeKeyPairBuffers","generateExternalKeyPair","keyGenParams","namedCurve","generateKeyPair","publicKeyEncoding","privateKeyEncoding","readAlgorithmName","readBinary","derKeyBytes","formatECPublic","createPublicKey","parseECPublic","SshDataWriter","xBytes","yBytes","formatECPrivate","createPrivateKey","parseECPrivate","NodeECDsa","PublicKeyAlgorithm","ecdsaKey","createSigner","NodeECDsaSignerVerifier","convertHashAlgorithmName","createVerifier","getSignatureLength","signer","createSign","signature","signatureReader","signatureWriter","writeBinary","readBigInt","createVerify","encryptionAlgorithm_1","NodeEncryption","cipherMode","blockSizeInBits","getBlockSize","isEncryption","NodeAesCipher","NodeAesGcmCipher","nodeAlgorithm","createCipheriv","createDecipheriv","setAutoPadding","tag","nonce","associatedData","authenticatedEncryption","packetLength","setAAD","setAuthTag","final","getAuthTag","NodeHmac","hmacAlgorithm_1","encryptThenMac","getHashKeyLength","getHashDigestLength","NodeSignerVerifier","getNodeHashAlgorithmName","createSecretKey","createHmac","keyExchangeAlgorithm_1","nodeHmac_1","NodeDiffieHellman","createKeyExchange","NodeDiffieHellmanKex","bitLength","dh","getDiffieHellman","startKeyExchange","exchangeValueKeys","generateKeys","exchangeValue","decryptKeyExchange","computeSecret","sharedSecret","NodeECDiffieHellman","NodeECDiffieHellmanKex","ecdh","createECDH","sharedSecretBytes","randomBytes","NodeRsaKeyPair","NodeRsa","defaultKeySize","modulusLength","exportKey","rsaWithSha256","keyBuffer","writeBigInt","rsaKey","NodeRsaSignerVerifier","readSignatureData","signatureData","createSignatureData","algorithmNames","useWebCrypto","webKeyExchange_1","webRsa_1","webECDsa_1","webEncryption_1","webHmac_1","webRandom_1","DiffieHellman","WebDiffieHellman","ECDiffieHellman","WebECDiffieHellman","WebRsa","WebECDsa","WebEncryption","Hmac","WebHmac","Random","WebRandom","keyExchange","dhGroup14Sha256","dhGroup16Sha512","ecdhNistp256Sha256","ecdhNistp384Sha384","ecdhNistp521Sha512","aes256Ctr","aes256Gcm","hmac","hmacSha256","hmacSha512","hmacSha256Etm","hmacSha512Etm","compression","WebECDsaKeyPair","generateKey","importParams","hashAlgorithm","WebECDsaSignerVerifier","WebCipher","init","aesCtr","aesCbc","aesGcm","decryptBuffer","incrementCount","additionalData","tagLength","inputLength","newLength","WebSignerVerifier","isSigning","diffie_hellman_1","WebDiffieHellmanKex","getWebHashAlgorithmName","hashBuffer","WebECDiffieHellmanKex","otherPublicKey","public","getRandomValues","WebRsaKeyPair","publicExponent","alg","key_ops","privateJwk","publicJwk","WebRsaSignerVerifier","convertKeyHashAlgorithm","SshReconnectError","objectOrMessage","SshAuthenticatingEventArgs","SshAuthenticationType","authenticationType","clientUsername","usernameRequired","passwordRequired","publicKeyRequired","clientHostnameRequired","clientUsernameRequired","valid","clientNone","clientHostBased","clientPassword","clientPublicKeyQuery","clientPublicKey","serverPublicKey","cancellationValue","CancellationToken","None","SshChannelClosedEventArgs","exitStatusOrSignalOrError","exitStatus","exitSignal","connectionMessages_1","SshExtendedDataType","SshExtendedDataEventArgs","dataTypeCode","SshSessionClosedEventArgs","transportMessages_1","formatBuffer","CommandRequestMessage","ChannelRequestType","ChannelRequestMessage","ChannelOpenConfirmationMessage","ChannelOpenFailureMessage","ChannelMessage","SshReconnectFailureReason","DebugMessage","SshMessage","SshRpcMessageStream","WebSocketStream","BaseStream","SshChannel","SshSession","SshVersionInfo","SshSessionConfiguration","SecureStream","MultiChannelStream","SessionContour","ChannelMetrics","SessionMetrics","Queue","Semaphore","CancellationTokenSource","sshSessionConfiguration_1","sshVersionInfo_1","sshSession_1","sshClientSession_1","sshServerSession_1","sshChannel_1","sshStream_1","streams_1","sshRpcMessageStream_1","sshService_1","serviceActivation_1","sshAuthenticatingEventArgs_1","sshRequestEventArgs_1","sshChannelOpeningEventArgs_1","sshSessionClosedEventArgs_1","sshChannelClosedEventArgs_1","sshExtendedDataEventArgs_1","sshMessage_1","sshAlgorithms_1","errors_1","cancellation_1","promiseCompletionSource_1","semaphore_1","queue_1","sessionMetrics_1","channelMetrics_1","sessionContour_1","multiChannelStream_1","secureStream_1","trace_1","highByte","isNegative","bit","highBit","prependZeroCount","skipZeroCount","newBytes","padded","copyTo","dataType","position","readType","readLength","readByte","readBytes","trunc","tagId","lengthBytes","getLength","ensureCapacity","integerBytes","pop","lengthBuffer","capacity","readList","stringList","readBoolean","value0","value1","value2","value3","readUInt64","value4","value5","value6","value7","crcTable","mpintZero","writeList","writeBoolean","writeUInt64","writeRandom","randomBuffer","formatData","table","makeCrcTable","crc","crc32","lineOffset","SshProtocol","kexMessages_1","SequencedMessage","sequence","metrics","sessionSemaphore","inboundPacketSequence","outboundPacketSequence","inboundFlow","outboundFlow","recentSentMessages","sendWriter","receiveWriter","traceChannelData","kexService","algorithms","outgoingMessagesHaveLatencyInfo","incomingMessagesHaveLatencyInfo","outgoingMessagesHaveReconnectInfo","incomingMessagesHaveReconnectInfo","lastIncomingSequence","getSentMessages","startingSequenceNumber","messagesToRetransmit","sequencedMessage","KeyExchangeMessage","DisconnectMessage","lineCount","byteBuffer","carriageReturn","lineFeed","wait","finishKeyExchange","release","bytesRead","isDisposed","streamReadError","streamWriteError","initial","kexMessage","kexGuessMessage","exchanging","keyRotationThreshold","seq","mac","macBuffer","verifyHmac","macError","compressor","messageSigner","blockSize","payloadOffset","packetLengthSize","paddingLengthSize","timeSinceLastReceivedMessage","round","time","lastIncomingTimestamp","packetWithoutLength","computeHmac","ChannelDataMessage","sendingChannelData","sendingMessage","sentTime","enqueue","packet","considerReExchange","messageVerifier","decompressor","isLengthEncrypted","firstBlockSize","firstBlock","maxPacketLength","packetBufferSize","receiveBuffer","packetBuffer","followingBlocks","readAndVerifyHmac","decompress","lastSequenceSeenByRemote","remoteTimeSinceLastReceived","oldestSequenceMessage","roundTripLatency","updateLatency","dequeue","unimplementedMessage","UnimplementedMessage","sequenceNumber","unimplementedMessageType","receivingChannelData","receivingMessage","streamCloseError","AuthenticationSuccessMessage","AuthenticationFailureMessage","PasswordRequestMessage","PublicKeyOKMessage","PublicKeyRequestMessage","AuthenticationRequestMessage","AuthenticationMessage","hasSignature","payloadWithoutSignature","rawBytes","partialSuccess","methodNames","ChannelFailureMessage","ChannelSuccessMessage","ChannelSignalMessage","ChannelCloseMessage","ChannelEofMessage","ChannelExtendedDataMessage","ChannelWindowAdjustMessage","ConnectionMessage","recipientChannel","recipientChannelValue","senderChannel","senderChannelValue","maxWindowSize","maxPacketSize","defaultMaxWindowSize","defaultMaxPacketSize","reasonCode","bytesToAdd","command","signal","signalValue","errorMessageValue","statusValue","NewKeysMessage","KeyExchangeDhReplyMessage","KeyExchangeDhInitMessage","KeyExchangeInitMessage","cookie","keyExchangeAlgorithms","serverHostKeyAlgorithms","encryptionAlgorithmsClientToServer","encryptionAlgorithmsServerToClient","macAlgorithmsClientToServer","macAlgorithmsServerToClient","compressionAlgorithmsClientToServer","compressionAlgorithmsServerToClient","languagesClientToServer","languagesServerToClient","firstKexPacketFollows","noneArray","allowsNone","includesNone","CreateNone","hostKey","f","rewrite","messageClass","otherMessage","SessionReconnectFailureMessage","SessionReconnectResponseMessage","SessionReconnectRequestMessage","SessionChannelRequestMessage","ExtensionInfoMessage","ServiceAcceptMessage","ServiceRequestMessage","IgnoreMessage","alwaysDisplay","extensionInfo","extensionInfoDetails","serverIndicator","clientIndicator","clientReconnectToken","lastReceivedSequenceNumber","serverReconnectToken","bytesSentSum","bytesReceivedSum","bytesSent","bytesReceived","addBytesSent","addBytesReceived","maxIntervals","initialInterval","updateQueue","updateSemaphore","intervalBytesSent","intervalBytesReceived","intervalLatencyMin","intervalLatencyMax","intervalLatencySum","intervalLatencyCount","intervalLatencyAvg","intervalCount","latencyMinMs","latencyMaxMs","latencyAverageMs","onMessageSent","tryRelease","onMessageReceived","onLatencyUpdated","onSessionClosed","sessionMetrics","eventRegistrations","intervalIndex","updateInterval","latency","eventRegistration","expandIntervals","combineLatency","halfMaxIntervals","iA","iB","countSum","getScale","log2","applyReverseScale","scale","pow","timeScale","SessionMetric","latencyMin","latencyMax","latencyAverage","contourBase64","metricsPerInterval","sessionContour","scales","ids","messagesSentCount","messagesReceivedCount","reconnectionsCount","currentLatency","minLatency","maxLatency","latencySum","latencyCount","messageSentEmitter","messageReceivedEmitter","latencyUpdatedEmitter","sessionClosedEmitter","performance","browserTime","hrtime","nodejsTime","reconnections","latencyCurrentMs","addReconnection","latencyMs","metricsError","precision","transportStream","channelMaxWindowSize","closedEmitter","channelOpeningEmitter","noSecurityConfig","onSessionChannelOpening","isClosed","acceptChannel","createStream","sessionChannelType","sessionClosedPromise","unsubscribe","Is","Event","Cancelled","is","candidate","boolean","shortcutEvent","handle","MutableToken","_isCancelled","_emitter","_token","Disposable","_disposable","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","callbacks","contexts","isEmpty","_options","_event","thisArgs","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","elem","Touch","First","Last","LinkedMap","_map","_head","_tail","item","touch","previous","addItemLast","addItemFirst","removeItem","forEachReverse","__export","messages_1","RequestType","RequestType0","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","ResponseError","ErrorCodes","NotificationType","NotificationType0","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","MessageReader","StreamMessageReader","IPCMessageReader","SocketMessageReader","messageWriter_1","MessageWriter","StreamMessageWriter","IPCMessageWriter","SocketMessageWriter","linkedMap_1","CancelNotification","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","ConnectionErrors","ConnectionState","NullLogger","warn","Off","Messages","Text","ConnectionError","setPrototypeOf","_createMessageConnection","messageReader","messageWriter","strategy","notificationSquenceNumber","unknownResponseSquenceNumber","starRequestHandler","starNotificationHandler","requestHandlers","notificationHandlers","messageQueue","responsePromises","requestTokens","traceFormat","New","closeEmitter","unhandledNotificationEmitter","disposeEmitter","createRequestQueueKey","cancelUndispatched","_message","isListening","Listening","Closed","Disposed","closeHandler","triggerMessageQueue","isRequestMessage","requestMessage","reply","resultOrError","jsonrpc","toJson","traceSendingResponse","replyError","params","logLSPMessage","traceReceivedRequest","requestHandler","element","cancellationSource","tokenKey","handlerResult","numberOfParams","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","traceReceivedNotification","handleNotification","isResponseMessage","timerStart","traceReceivedResponse","handleResponse","responseHandler","handleInvalidMessage","processMessageQueue","onClose","toCancel","queue","addMessageToQueue","lspMessage","isLSPMessage","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","connection","sendNotification","messageParams","notificationMessage","traceSendingNotification","onNotification","sendRequest","throwIfNotListening","last","traceSendingRequest","MessageWriteError","onRequest","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","onUnhandledNotification","onDispose","AlreadyListening","throwIfListening","inspect","verbose","ConnectionStrategy","createMessageConnection","isMessageWriter","DefaultSize","CR","LF","MessageBuffer","append","toAppend","bufferLen","newSize","tryReadHeaders","nextStart","tryReadContent","numberOfBytes","onPartialMessage","AbstractMessageReader","partialMessageEmitter","fireError","asError","fireClose","firePartialMessage","_partialMessageTimeout","partialMessageTimeout","nextMessageLength","messageToken","partialMessageTimer","contentLength","setPartialMessageTimer","clearPartialMessageTimer","waitingTime","eventEmitter","ContentLength","CRLF","AbstractMessageWriter","errorCount","sending","doWriteMessage","send","handleError","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","RequestCancelled","MessageReadError","AbstractMessageType","_method","_numberOfParams","_","path_1","os_1","crypto_1","generateRandomPipeName","randomSuffix","platform","tmpdir","createClientPipeTransport","pipeName","connectResolve","connected","_reject","onConnected","createServerPipeTransport","createClientSocketTransport","createServerSocketTransport","PipeExtensions","toSession","endCompletion","forwardSessionRequest","forwardSessionClose","endPromise","toChannel","forwardChannelRequest","onDataReceived","forwardData","onEof","onExtendedDataReceived","forwardExtendedData","forwardChannelClose","endTask","pipeChannel","failureMessage","remoteChannelId","adjustWindow","sendExtendedData","fromChannel","channelClosed","writev","chunks","_writev","clientCredentials","serverCredentials","disconnectedEmitter","onDisconnected","sessionConfig","onSessionDisconnected","onAuthenticating","sessionConnected","clientSession","authenticateServer","hostKeyNotVerifiable","authenticateClient","noMoreAuthMethodsAvailable","disconnectReason","sessionWasConnected","isConnected","AuthenticationService_1","AuthenticationService","authenticationMessages_1","connectionService_1","authenticationFailureCount","disposeCancellationSource","publicKeyAlgorithmName","handleMessage","handleSuccessMessage","handleFailureMessage","handleAuthenticationRequestMessage","sessionAuthenticating","handlePublicKeyRequestMessage","handlePasswordRequestMessage","handleAuthenticating","publicKeyAlg","getPublicKeyAlgorithm","sessionId","signedData","handleAuthenticationFailure","authenticatedPrincipal","raiseAuthenticatingEvent","authenticationError","publicKeyRequest","okMessage","activateService","sessionAuthenticated","handleClientAuthenticated","clientAuthenticationFailed","maxClientAuthenticationAttempts","clientAuthenticationMethods","privateKeyProvider","cancellation2","requestPublicKeyAuthentication","authCancelledByUser","passwordCredentialProvider","passwordProvider","passwordCredentialPromise","passwordCredential","requestPasswordAuthentication","requestUsernameAuthentication","firstAuthMethod","authMessage","ConnectionService","publicKeyAlgorithms","createAuthenticationSignature","onAuthenticationComplete","serviceRequest","ConnectionService_1","channelCounter","channelMap","nonAcceptedChannels","pendingChannels","pendingAcceptChannels","channelCompletions","pc","completionSource","channelCompletion","handleDataMessage","handleExtendedDataMessage","handleAdjustWindowMessage","handleEofMessage","handleOpenMessage","handleCloseMessage","handleOpenConfirmationMessage","handleOpenFailureMessage","handleRequestMessage","canAcceptRequests","channelOpenFailed","openFailureMessage","confirmationMessage","handleChannelOpening","isMaxWindowSizeLocked","openConfirmationMessage","accepted","onChannelOpenCompleted","enableSending","findChannelById","handleClose","pendingChannel","tryGetChannelForMessage","handleDataReceived","handleExtendedDataReceived","adjustRemoteWindow","handleEof","channelOpened","channelMessage","messageString","channelRequestFailed","removeChannel","KeyExchangeService_1","KeyExchangeService","sshSessionAlgorithms_1","ExchangeContext","serverExtensionInfoSignal","clientExtensionInfoSignal","isClientSession","isInitialExchange","exchangeContext","kexInitMessage","createKeyExchangeInitMessage","enableKeyExchangeGuess","createKeyExchangeGuessMessage","clientKexInitPayload","serverKexInitPayload","newAlgorithms","isExtensionInfoRequested","abortKeyExchange","extinfo","getPublicKeyAlgorithms","encryptionAlgorithms","hmacAlgorithms","privateKeyAlgorithms","kexAlgorithm","exchange","guess","handleInitMessage","handleDhInitMessage","handleDhReplyMessage","chooseAlgorithm","algorithmNegotiation","SshSessionAlgorithms","handleNewKeysMessage","clientEncryption","serverEncryption","clientHmac","serverHmac","clientCompression","serverCompression","alreadySentGuess","negotiatedKexAlgorithmIsPreferred","getKeyExchangeAlgorithm","guessResult","discardGuessedInit","serverSession","kexAlg","keyExchangeFailed","getEncryptionAlgorithm","getHmacAlgorithm","clientExchangeValue","serverExchangeValue","hostKeyAndCerts","exchangeHash","computeExchangeHash","clientCipherIV","serverCipherIV","clientCipherKey","serverCipherKey","clientHmacKey","serverHmacKey","computeKeys","getCompressionAlgorithm","exchangeSigner","exchangeVerifier","verified","serverAuthenticationFailed","localAlgorithms","remoteAlgorithms","serverAlgorithms","clientAlgorithms","negotiationDetail","kex","remoteVersion","localVersion","computeKey","writerOffset","letter","keyBufferIndex","currentHashLength","currentHash","findService","activation","activations","serviceConfigs","serviceType","foundActivation","disposedEmitter","raiseSessionRequest","pipeExtensions_1","connectionService","remoteMaxWindowSize","remoteMaxPacketSize","remoteClosed","localClosed","sentEof","openSendingWindowCompletionSource","requestCompletionSource","sendSemaphore","dataReceivedEmitter","extendedDataReceivedEmitter","eofEmitter","requestEmitter","maxWindowSizeValue","windowSize","sendCommon","extendedDataType","packetSize","channelWaitForWindowAdjust","withCancellation","sendEof","exitErrorMessage","services","channelRequest","onChannelRequest","messageLength","windowAdjustMessage","channelWindowAdjustFailed","channelEofReceived","exitStatusOrSignal","disposeInternal","closeWithStatus","closeWithSignal","closeDefault","closeMessage","closedMessage","raiseClosedEvent","signalMessage","closedByRemote","metricsMessage","originMessage","authenticationService_1","serviceRequests","clientAuthCompletion","callbackOrCancellation","authenticateClientWithCompletion","authService","getService","serviceRequestMessage","completion","channelTypeOrOpenMessageOrCancellation","initialRequestOrCancellation","handleDisconnected","reconnecting","clientSessionReconnecting","reconnectInternal","previousSessionId","previousProtocolInstance","previousHostKey","newSessionId","newHostKey","newHostPublicKey","previousHostPublicKey","clientSessionReconnectFailed","differentServerHostKey","reconnectToken","createReconnectToken","reconnectRequest","unknownServerFailure","verifyReconnectToken","invalidServerReconnectToken","messagesToResend","clientDroppedMessages","contentLengthHeaderPrefix","headersSeparator","SshRpcMessageReader","headersLength","headersEnd","totalLength","messageJson","SshRpcMessageWriter","messageData","headerData","clientAuthenticatedEmitter","onClientAuthenticated","reconnectedEmitter","onReconnected","enableReconnect","serviceNotAvailable","acceptMessage","reconnectSession","reconnectableSession","serverSessionReconnectFailed","sessionNotFound","serverDroppedMessages","processMessages","serverSessionReconnecting","sshProtocol_1","keyExchangeService_1","principalValue","activatedServices","blockedMessages","blockedMessagesSemaphore","authenticatingEmitter","serviceActivatedEmitter","onServiceActivated","onConfigurationChanged","serviceTypeOrName","activatedService","connectPromise","doConnect","sessionConnecting","exchangeVersions","versionExchangePromise","writePromise","writeProtocolVersion","readPromise","readProtocolVersion","protocolVersion","remoteVersionInfo","tryParse","protocolVersionNotSupported","sessionEncrypted","receiveMessageFailed","handleMessageFailed","sendMessageFailed","handleKeyExchangeMessage","handleServiceRequestMessage","handleServiceAcceptMessage","handleRequestSuccessMessage","handleRequestFailureMessage","handleExtensionInfoMessage","handleDisconnectMessage","handleUnimplementedMessage","handleDebugMessage","openChannelRequest","sessionChannelRequest","sessionLatency","sessionRequestFailed","handleNewKeys","sendExtensionInfo","blockedMessage","debugMessage","authPromise","authenticationPromise","successType","failureType","channelTypeOrCancellation","acceptPromise","openChannelWithInitialRequest","initialRequest","requestResult","isExtensionSupported","requestPromise","resolveService","extensionName","serverSignatureAlgorithms","proposedExtension","sessionClosing","disconnectMessage","sessionDisconnected","closedError","sessionReconnectInitFailed","enableReconnectMessage","pipeSession","getLocalVersion","useSecurity","traceChannelDataValue","configurationChangedEmitter","messageNumber","getAlgorithm","collection","readPaused","BufferReduce","singleBuffer","singleBufferIndex","packageJson","packageVersion","versionString","secondDashIndex","firstDashIndex","nameAndVersion","spaceIndex","lastUnderscoreBeforeSpace","isVsSsh","isVsSshCS","isVsSshTS","handleCancellation","incomingData","pendingReads","readData","fireOnClose","duplexOrReadStream","writeStream","readStream","websocket","binaryType","onmessage","onclose","wasClean","readyState","DOMException","baseEventId","portForwardChannelInvalid","portForwardConnectionClosed","clientSessionStartReconnecting","race","newArray","iteratorVersion","initialCount","completions","currentCount","releaseCount","timeoutOrCancellation","millisecondsTimeout","promises","cancellationCompletion","completionIndex","ctx","pending","b64","s64","t","invalidEncoding","functionParams","functionName","Codegen","formatStringOrScope","scopeKeys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","functionNameOverride","_listeners","evt","listeners","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","responseText","overrideMimeType","open","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","LN2","readFloat_ieee754","readUint","uint","mantissa","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","mod","eval","normalize","absolute","originPath","includePath","alreadyNormalized","SIZE","MAX","slab","c1","c2","dispatch","getDelay","tslib_1","callback_1","startTimeInEpochMS","timeoutInMS","elapsedTime","__awaiter","dispatched","__generator","dispatchSingle","sent","invokeCallback","flush","pTimeout","timeoutId","sleep","timeoutInMs","stats","increment","isOffline","isOnline","environment_1","isBrowser","navigator","onLine","CoreContext","ContextCancelation","uuid_1","dset_1","logger_1","stats_1","retry","NullStats","CoreLogger","_id","system","isSame","extras","updateEvent","integrationName","integrations","dset","failedDelivery","_failedDelivery","setFailedDelivery","logs","_this","_i","without","EventFactory","__exportStar","pick_1","assertions_1","user","createMessageId","track","globalIntegrations","__assign","baseEvent","page","category","screen","identify","userId","traits","groupId","alias","previousId","anonymousId","eventOverrideKeys","providedOptionsKeys","eventOverrides","integrationBooleans","integrationNames","pickBy","allIntegrations","rest","__rest","messageId","validateEvent","backoff_1","_logs","formatted","logEntry","minTimeout","attempt","maxTimeout","PriorityQueue","ON_REMOVE_FROM_FUTURE","emitter_1","_super","seen","future","__extends","items","operation","updateAttempts","getAttempts","pushWithBackoff","ensure","context_1","plugin","hook","err_1","trys","tryAsync","done","gauge","newContext","CoreEventQueue","group_by_1","priority_queue_1","task_group_1","delivery_1","connection_1","priorityQueue","criticalTasks","createTaskGroup","plugins","failedInitializations","flushing","scheduleFlush","instance","deregister","e_1","unload","willDeliver","subscribeToDelivery","onDeliver","flushed","delivered","deliver","enqueuRetry","flushOne","err_2","isReady","availableExtensions","denyList","alternativeNameMatch","alternativeNames","All","groupBy","before","enrichment","destination","after","destinations","before_1","beforeWare","enrichment_1","enrichmentWare","afterCalls","CoreStats","metric","by","tags","_args","is_thenable_1","taskCompletionPromise","resolvePromise","run","op","returnValue","isThenable","finally","bindAll","proto","getOwnPropertyNames","isServer","grouper","suggestedKey","__spreadArray","ValidationError","helpers_1","isPlainObject","hasUser","isNumber","Analytics","analytics_core_1","settings_1","version_1","segmentio_1","event_factory_1","dispatch_emit_1","event_queue_1","NodeEmitter","_isClosed","_pendingEvents","validateSettings","_eventFactory","NodeEventFactory","_queue","NodeEventQueue","flushInterval","_closeAndFlushDefaultTimeout","publisher","createConfiguredNodePlugin","writeKey","maxRetries","maxEventsInBatch","httpRequestTimeout","_publisher","ready","VERSION","closeAndFlush","flushAfterClose","_dispatch","segmentEvent","dispatchAndEmit","Context","registrations","xt","el","pluginNames","deregistrations","pl","get_message_id_1","NodePriorityQueue","analytics_node_1","analytics_node_2","abortSignalAfterTimeout","env_1","AbortSignal","onabort","aborted","toStringTag","removeEventListener","addEventListener","dispatchEvent","handlerName","AbortController","detectRuntime","ac","globalThis","b64encode","tryCreateFormattedUrl","href","WebSocketPair","EdgeRuntime","WorkerGlobalScope","importScripts","extractPromiseParts","resolver","rejecter","__createBinding","k2","__esModule","__setModuleDefault","__importStar","default","uuid","ContextBatch","maxEventCount","sizeInBytes","tryAdd","eventSize","calculateSize","MAX_EVENT_SIZE_IN_KB","MAX_BATCH_SIZE_IN_KB","getEvents","getContexts","resolveEvents","createNodePlugin","publisher_1","action","runtime","normalizeEvent","isLoaded","props","Publisher","abort_1","create_url_1","extract_promise_parts_1","fetch_1","context_batch_1","base_64_encode_1","resolveFailedBatch","batch","_maxRetries","_maxEventsInBatch","_flushInterval","_auth","_url","_httpRequestTimeout","createBatch","pendingFlushTimeout","_batch","clearBatch","pendingItemsCount","_closeAndFlushPendingItemsCount","ctxPromise","pendingItem","isExpectingNoMoreItems","fallbackBatch","fbAddStatus","currentAttempt","requestInit","Authorization","url","ok","statusText","catchAbortError","rethrowAbortError","throwIfAborted","isAbortError","AbortError","abortable","execute_1","execute","AbortError_1","executor","innerAbortController","abortListener","rejection","settledCount","settled","dueTime","ms","removeAbortListener","finished","callbackResult","forever","delay_1","baseMs","maxDelayMs","abortController","spawn","deferredFunctions","spawnAbortController","spawnSignal","abortSpawn","tasks","abortTasks","task","forkFn","taskAbortController","taskPromise","defer","deferPromise","waitForEvent","eventName","unlisten","sourceObj","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","DiffieHellmanGroup","createDiffieHellmanGroup","createDiffieHellman","l","reAsciiWord","reLatin","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsDigits","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","RegExp","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","freeGlobal","freeSelf","deburrLetter","hasUnicode","objectToString","symbolProto","symbolToString","isObjectLike","isSymbol","baseToString","word","upperFirst","iteratee","initAccum","arrayReduce","pattern","guard","hasUnicodeWord","unicodeWords","asciiWords","words","deburr","strSymbols","unicodeToArray","asciiToArray","stringToArray","chr","trailing","baseSlice","getAll","ClientError","ts_error_1","Status_1","ExtendableError","hasInstance","isPrototypeOf","composeClientMiddleware","middleware1","middleware2","ServerError","composeServerMiddleware","context1","createClient","createClientFactory","grpc_js_1","nice_grpc_common_1","service_definitions_1","createBidiStreamingMethod_1","createClientStreamingMethod_1","createServerStreamingMethod_1","createUnaryMethod_1","createClientFactoryWithMiddleware","middleware","use","newMiddleware","definition","defaultCallOptions","grpcClient","methodEntries","normalizeServiceDefinition","defaultOptions","createBidiStreamingMethod","createClientStreamingMethod","createServerStreamingMethod","createUnaryMethod","waitForChannelReady","createChannel","knownProtocols","knownProtocol","isSecure","abort_controller_x_1","convertMetadata_1","isAsyncIterable_1","patchClientWritableStream_1","readableToAsyncIterable_1","wrapClientError_1","grpcMethodDefinition","toGrpcJsMethodDefinition","methodDescriptor","bidiStreamingMethod","isAsyncIterable","onHeader","onTrailer","pipeAbortController","convertMetadataToGrpcJs","pipeError","patchClientWritableStream","convertMetadataFromGrpcJs","pipeRequest","readableToAsyncIterable","wrapClientError","asyncIterator","throw","return","clientStreamingMethod","serverStreamingMethod","unaryMethod","handleBidiStreamingCall_1","handleClientStreamingCall_1","handleServerStreamingCall_1","handleUnaryCall_1","createServerWithMiddleware","createAddBuilder","with","grpcImplementation","methodImplementation","createBidiStreamingMethodHandler","createClientStreamingMethodHandler","createServerStreamingMethodHandler","createUnaryMethodHandler","toGrpcJsServiceDefinition","createCallContext","headerSent","peer","sendHeader","createErrorStatusObject","createCallContext_1","createErrorStatusObject_1","bidiStreamingMethodHandler","clientStreamingMethodHandler","serverStreamingMethodHandler","unaryMethodHandler","isGrpcJsServiceDefinition","fromGrpcJsServiceDefinition","ts_proto_1","isTsProtoServiceDefinition","fromTsProtoServiceDefinition","requestEncode","requestFromPartial","fromPartial","responseEncode","responseFromPartial","grpcMetadata","http2CallStream","origAttachHttp2Stream","attachHttp2Stream","origWrite","writableEnded","nop","_readableState","errored","errorEmitted","endEmitted","closeEmitted","MessageChannel","port1","ab","ArrayBuffer","postMessage","https","Stream","_interopDefaultLegacy","http__default","https__default","zlib__default","Stream__default","DOMException__default","ReadableStream","Blob","blob","ctrl","arrayBuffer","toIterator","isView","byteOffset","_Blob","blobParts","TextEncoder","endings","TextDecoder","it","relativeStart","relativeEnd","span","added","File","fileBits","fileName","lastModified","h","FormData","FetchBaseError","FetchError","systemError","erroredSysCall","NAME","isURLSearchParameters","isBlob","pipeline","INTERNALS$2","Body","boundary","isAnyArrayBuffer","F","B","padStart","formDataToBlob","disturbed","error_","bodyUsed","consumeBody","ct","formData","URLSearchParams","toFormData","accum","accumBytes","readableEnded","deprecate","highWaterMark","p1","p2","getBoundary","PassThrough","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","validateHeaderValue","Headers","isBoxedPrimitive","Proxy","receiver","for","property","redirectStatus","isRedirect","INTERNALS$1","Response","redirected","location","stripURLForUseAsAReferrer","originOnly","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","hostIPVersion","isOriginPotentiallyTrustworthy","INTERNALS","isRequest","doBadDataWarn","Request","parsedURL","inputBody","referrer","parsedReferrer","redirect","follow","agent","insecureHTTPParser","referrerPolicy","validateReferrerPolicy","stat","fromBlob","BlobDataItem","mtimeMs","fromFile","path$1","basename","createReadStream","supportedSchemas","options_","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","referrerSource","referrerURL","referrerOrigin","currentURL","determineRequestsReferrer","lastOffset","getSearch","getNodeRequestOptions","firstComma","meta","charset","typeFull","dataUriToBuffer","abortAndFinalize","finalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","onSocketClose","compare","prependListener","fixResponseChunkedTransferBadEnding","endedWithEventsCount","_eventsCount","hadError","response_","fromRawHeaders","rawHeaders","locationURL","requestOptions","original","orig","dest","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","parseReferrerPolicyFromHeader","responseOptions","statusMessage","codings","zlibOptions","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","writeToStream","blobFrom","blobFromSync","statSync","fileFrom","fileFromSync","START_BOUNDARY","HEADER_FIELD_START","HEADER_FIELD","HEADER_VALUE_START","HEADER_VALUE","HEADER_VALUE_ALMOST_DONE","HEADERS_ALMOST_DONE","PART_DATA_START","PART_DATA","END","lower","MultipartParser","onHeaderEnd","onHeaderField","onHeadersEnd","onHeaderValue","onPartBegin","onPartData","onPartEnd","boundaryChars","ui8a","lookbehind","length_","previousIndex","boundaryLength","boundaryEnd","bufferLength","cl","mark","callbackSymbol","dataCallback","markSymbol","_lookbehind","parser","headerField","headerValue","entryValue","entryName","entryChunks","appendToFile","appendFileToFormData","appendEntryToFormData","_fileName","_interopDefault","ex","Url","whatwgUrl","TYPE","buffers","slicedBuffer","convert","_ref","_ref$size","_ref$timeout","isURLSearchParams","_this4","resTimeout","_lengthRetrievers","_this2","textConverted","_this3","convertBody","mixIn","invalidTokenRegex","invalidHeaderCharRegex","validateValue","MAP","headerNames","headerName","pairs","_pairs$i","createHeadersIterator","HeadersIteratorPrototype","getPrototypeOf","_INTERNAL","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","STATUS_CODES","parse_url","format_url","parseURL","urlStr","streamDestructionSupported","isAbortSignal","URL$1","PassThrough$1","destroyStream","req","reqTimeout","listenerCount","hasDataListener","createHeadersLenient","requestOpts","response_options","punycode","mappingTable","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","findStatus","mid","regexAstralSymbols","countSymbols","combiningMarksRegex","validateLabel","processing_option","toUnicode","codePointAt","processing","domain_name","useSTD3","hasError","processed","codePoint","fromCodePoint","mapChars","labels","validation","toASCII","verifyDnsLength","total","domain","helpers","objectCreate","uglyErrorPrinting","extendableErrorName","constructorNameMatch","originalConstructor","constructorName","constructorNameIsError","objectSetPrototypeOfIsDefined","objectGetPrototypeOfIsDefined","objectDefinePropertyIsDefined","objectCreateIsDefined","objectHasOwnPropertyIsDefined","ie8ObjectDefinePropertyBug","propertyDescriptor","propertyDescriptors","retries","lastError","stopped","_isOpen","_promise","_completePromise","isOpen","metricsHostMap","getMetricsHost","gitpodHost","metricsHost","logService","isBuiltFromGHA","resp","sum","buckets","cleanData","cleanUpPatterns","isTrustedValue","cloneAndChange","updatedProperty","replaceAll","cleanupPatterns","updatedStack","cleanUpIndexes","regexp","nodeModulesRegex","fileRegex","overlappingRange","anonymizeFilePaths","userDataRegexes","regex","secretRegex","removePropertiesWithPossibleUserInfo","TRUSTED_VALUES","updatedSettings","segmentClient","machineId","piiPaths","homedir","piiPath","escapeRegExpCharacters","defaultGitpodHost","commonProperties","mixin","errorProps","errorMetricsEndpoint","getErrorMetricsEndpoint","workspaceId","instanceId","jsonData","component","errorStack","arch","_isObject","_cloneAndChange","changer","changed","r1","r2","i2","one","itemEquals","overwrite","currentGroup","WrapError","cause","originalMessage","_error","show","logFilePath","createWriteStream","parseArgs","pid","argv","extIpcPort","machineID","appRoot","extensionsDir","getClientOptions","exit","IgnoredFailedCodes","FailedToProxyError","failureCode","originError","WebSocketSSHProxy","telemetryService","metricsReporter","flow","processId","sendUserFlowStatus","setupNativeHandlers","extensionIpc","ExtensionServiceDefinition","beforeExitListener","exitCode","sendExited","exitHandler","exitProcess","forceExit","sshStream","stdin","stdout","sendTelemetryException","byApplication","localSession","pipePromise","sendUserStatusFlow","getFailureCode","sendErrorReport","fixSSHErrorName","onStale","workspaceInfo","retryGetWorkspaceInfo","phase","getTunnelSSHConfig","connConfig","workspaceHost","ownerToken","openSession","authenticate","workspaceWSUrl","WebSocket","onopen","pingTimeout","heartbeat","stopHearbeat","pingPeriod","websocketStream","wrappedOnClose","onerror","sshkey","getWorkspaceAuthInfo","reportConnectionStatus","vscodeProductJson","getVSCodeProductJson","productJsonStr","getExtensionsJson","extensionJsonStr","DebugLogger","NopeLogger","TelemetryService","LocalSSHMetricsReporter","productJson","extensionsJson","updateCommonProperties","main","TelemetryTrustedValue","segmentKey","extensionId","extensionVersion","createSegmentAnalyticsClient","getCleanupPatterns","dirname","getBaseProperties","getCommonProperties","commonSendEventData","sendErrorData","commonSendErrorData","sendTelemetryEvent","fromEntries","sendEventData","flowProperties","remotesshextversion","identifier","isTrustedTelemetryValue","protobufPackage","PingRequest","_m0","PingResponse","GetWorkspaceAuthInfoRequest","GetWorkspaceAuthInfoResponse","reportConfigStatus","addCounter","failure_code","reportPingExtensionStatus","extendStatics","__","getOwnPropertySymbols","propertyIsEnumerable","__param","paramIndex","decorator","__esDecorate","descriptorIn","contextIn","initializers","extraInitializers","accept","access","addInitializer","__runInitializers","useValue","__propKey","__setFunctionName","__metadata","metadataKey","metadataValue","_arguments","P","generator","fulfilled","step","rejected","g","ops","verb","__values","__read","ar","__spread","__spreadArrays","il","jl","pack","__await","__asyncGenerator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importDefault","__classPrivateFieldGet","__classPrivateFieldSet","__classPrivateFieldIn","ProgressNotification","ProgressType","progressHandlers","unhandledProgressEmitter","onProgress","_type","sendProgress","onUnhandledProgress","ContentModified","SymbolPolyfill","globals","typeIsObject","rethrowAssertionErrorRejection","originalPromise","originalPromiseThen","originalPromiseResolve","originalPromiseReject","newPromise","promiseResolvedWith","promiseRejectedWith","PerformPromiseThen","onFulfilled","onRejected","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","queueMicrotask","globalQueueMicrotask","resolvedPromise","reflectCall","V","promiseCall","SimpleQueue","_cursor","_front","_elements","_next","_back","oldBack","newBack","QUEUE_MAX_ARRAY_SIZE","oldFront","newFront","oldCursor","newCursor","elements","front","ReadableStreamReaderGenericInitialize","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseResolve","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","AbortSteps","ErrorSteps","CancelSteps","PullSteps","NumberIsFinite","MathTrunc","assertDictionary","assertFunction","assertObject","assertRequiredArgument","assertRequiredField","convertUnrestrictedDouble","censorNegativeZero","convertUnsignedLongLongWithEnforceRange","upperBound","integerPart","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","defaultReaderBrandCheckException","rejectPromise","ReadableStreamDefaultReaderRead","_errorSteps","releaseLock","_disturbed","_readableStreamController","AsyncIteratorPrototype","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","NumberIsNaN","CreateArrayFromList","CopyDataBlockBytes","destOffset","srcOffset","ArrayBufferSlice","begin","CloneAsUint8Array","O","DequeueValue","container","_queueTotalSize","EnqueueValueWithSize","ResetQueue","ReadableStreamBYOBRequest","view","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","controller","shouldPull","_started","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readIntoRequest","_readIntoRequests","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInternal","firstDescriptor","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transferredBuffer","firstPendingPullInto","ReadableStreamError","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","byobReaderBrandCheckException","ReadableStreamBYOBReaderRead","DataView","BYTES_PER_ELEMENT","emptyView","ReadableByteStreamControllerPullInto","ExtractHighWaterMark","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","convertQueuingStrategySize","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","supportsAbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","convertUnderlyingSink","InitializeWritableStream","sizeAlgorithm","WritableStreamDefaultController","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","wasAlreadyErroring","_resolve","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","defaultWriterReadyPromiseResolve","closeSentinel","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","writeRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseResolve","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","WritableStreamDefaultWriterEnsureClosedPromiseRejected","chunkSize","_strategySizeAlgorithm","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","WritableStreamAddWriteRequest","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","createAbortController","_writeAlgorithm","_closeAlgorithm","WritableStreamMarkCloseRequestInFlight","sinkClosePromise","WritableStreamFinishInFlightClose","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","_readyPromise_resolve","_readyPromise_reject","NativeDOMException","DOMException$1","isDOMExceptionConstructor","createDOMExceptionPolyfill","ReadableStreamPipeTo","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","isOrBecomesErrored","WritableStreamDefaultWriterCloseWithErrorPropagation","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","isError","resolveLoop","rejectLoop","resolveRead","rejectRead","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","SetUpReadableStreamDefaultController","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertReadableStreamReaderMode","mode","convertPipeOptions","assertAbortSignal","rawUnderlyingSource","underlyingSource","pull","convertUnderlyingDefaultOrByteSource","InitializeReadableStream","underlyingByteSource","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","streamBrandCheckException$1","getReader","rawOptions","convertReaderOptions","pipeThrough","rawTransform","convertReadableWritablePair","pipeTo","tee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgainForBranch1","readAgainForBranch2","canceled1","canceled2","cancelPromise","forwardReaderError","thisReader","pullWithDefaultReader","chunk1","chunk2","cloneE","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","clonedChunk","otherCanceled","CreateReadableByteStream","compositeReason","cancelResult","ReadableByteStreamTee","cloneForBranch2","readAgain","CreateReadableStream","ReadableStreamDefaultTee","AcquireReadableStreamAsyncIterator","convertIteratorOptions","convertQueuingStrategyInit","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","readableType","writableType","convertTransformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","startPromise","_writable","CreateWritableStream","_transformStreamController","_backpressureChangePromise","TransformStreamDefaultControllerPerformTransform","TransformStreamDefaultSinkWriteAlgorithm","_readable","flushPromise","_flushAlgorithm","TransformStreamDefaultControllerClearAlgorithms","TransformStreamError","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamSetBackpressure","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise_resolve","InitializeTransformStream","TransformStreamDefaultController","transformAlgorithm","TransformStreamDefaultControllerEnqueue","transformResultE","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","SetUpTransformStreamDefaultController","SetUpTransformStreamDefaultControllerFromTransformer","IsTransformStream","streamBrandCheckException","IsTransformStreamDefaultController","defaultControllerBrandCheckException","terminate","TransformStreamDefaultControllerTerminate","readableController","ReadableStreamDefaultControllerHasBackpressure","conversions","createNumberConversion","typeOpts","lowerBound","moduloVal","moduloBitLength","moduloBound","enforceRange","abs","clamp","evenRound","treatNullAsEmptyString","U","usm","constructorArgs","parsedBase","basicURLParse","baseURL","serializeURL","serializeURLOrigin","stateOverride","cannotHaveAUsernamePasswordPort","setTheUsername","setThePassword","serializeHost","serializeInteger","cannotBeABaseURL","query","fragment","utils","Impl","implSymbol","privateData","wrapperSymbol","interface","expose","Window","Worker","tr46","specialSchemes","ftp","gopher","ws","wss","ucs2","at","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","isWindowsDriveLetterString","isSpecialScheme","isSpecial","percentEncode","hex","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","utf8PercentEncode","parseIPv4Number","R","parseHost","isSpecialArg","pieceIndex","pointer","numbersSeen","ipv4Piece","swaps","parseIPv6","parseOpaqueHost","utf8PercentDecode","asciiDomain","ipv4Host","numbers","ipv4","parseIPv4","serializeIPv4","arr","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","URLStateMachine","encodingOverride","parseError","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","isASCIIAlphanumeric","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","excludeFragment","tuple","serializeOrigin","integer","wrapperForImpl","implForWrapper","createWebSocketStream","Receiver","Sender","WebSocketServer","EMPTY_BUFFER","FastBuffer","species","_mask","_unmask","toArrayBuffer","readOnly","unmask","WS_NO_BUFFER_UTIL","bufferUtil","BINARY_TYPES","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","CloseEvent","ErrorEvent","MessageEvent","EventTarget","isBinary","callListener","_closeFrameReceived","_closeFrameSent","handleEvent","tokenChars","configurations","offers","paramName","mustUnescape","isEscaping","inQuotes","SyntaxError","kDone","kRun","concurrency","jobs","job","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","inflateOnData","_maxPayload","inflateOnError","_inflate","maxPayload","_threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","normalizeParams","acceptAsServer","acceptAsClient","cleanup","fin","_decompress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","zlibInflateOptions","createDeflateRaw","zlibDeflateOptions","PerMessageDeflate","isValidStatusCode","isValidUTF8","ErrorCtor","_binaryType","_extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_loop","startLoop","consume","getPayloadLength16","getPayloadLength64","getMask","getData","haveLength","readUInt16BE","controlMessage","dataMessage","er","fragments","randomFillSync","applyMask","kByteLength","maskBuffer","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_deflating","dataLength","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","sendFrame","frame","pong","perMessageDeflate","cork","uncork","emitClose","duplexOnEnd","_writableState","duplexOnError","terminateOnDestroy","duplex","autoDestroy","writableObjectMode","_destroy","CLOSED","called","isPaused","protocols","isUtf8","_isValidUTF8","WS_NO_UTF_8_VALIDATE","subprotocol","keyRegex","socketOnError","abortHandshake","Connection","abortHandshakeOrEmitwsClientError","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","writeHead","emitConnection","_removeListeners","addListeners","upgrade","handleUpgrade","clients","_shouldEmitClose","shouldHandle","secWebSocketProtocol","secWebSocketExtensions","secure","authorized","completeUpgrade","_protocol","setSocket","kAborted","protocolVersions","readyStates","subprotocolRegex","_closeCode","_closeMessage","_closeTimer","_paused","_readyState","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","bufferedAmount","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","socketOnClose","socketOnData","socketOnEnd","OPEN","CLOSING","_req","sendAfterClose","needDrain","followRedirects","maxRedirects","parsedUrl","isIpcUrl","invalidUrlMessage","emitErrorAndClose","defaultPort","protocolSet","tlsConnect","netConnect","Upgrade","handshakeTimeout","Origin","auth","_originalIpc","_originalSecure","_originalHostOrSocketPath","isSameHost","authorization","serverProt","protError","extensionNames","finishRequest","setHeader","receiverOnFinish","require","wasm","WebAssembly","Instance","Module","isLong","ctz32","clz32","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","radixToPower","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","b00","divide","divisor","approx","toUnsigned","shru","shr","shl","delta","approxRes","approxRem","modulo","countLeadingZeros","clz","countTrailingZeros","ctz","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","rotateLeft","rotl","rotateRight","rotr","toSigned","toBytesLE","toBytesBE","fromBytesLE","fromBytesBE","_default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}